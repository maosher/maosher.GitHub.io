{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home My read notes. from maosher#qq.com, use @ instead #","title":"Home"},{"location":"#home","text":"My read notes. from maosher#qq.com, use @ instead #","title":"Home"},{"location":"about/","text":"about","title":"About"},{"location":"about/#about","text":"","title":"about"},{"location":"git/","text":"Git git branch git checkout -b newbrachname git branch -av git work flow git command","title":"Git"},{"location":"git/#git","text":"","title":"Git"},{"location":"git/#git-branch","text":"git checkout -b newbrachname git branch -av","title":"git branch"},{"location":"git/#git-work-flow","text":"","title":"git work flow"},{"location":"git/#git-command","text":"","title":"git command"},{"location":"links/","text":"Links \u7ad9\u70b9 C++ LeetCode Book \u4ee3\u7801\u968f\u60f3\u5f55 \u884c\u4e3a\u6811 \u6587\u7ae0 KCP \u53ef\u9760UDP\uff0cKCP\u534f\u8bae\u5feb\u5728\u54ea\uff1f Raft\u7b97\u6cd5\u539f\u7406 \u5e38\u89c1\u7684\u5e76\u53d1\u6a21\u5f0f \u5206\u5e93\u5206\u8868\u4f1a\u5e26\u6765\u8bfb\u6269\u6563\u95ee\u9898\uff1f\u600e\u4e48\u89e3\u51b3\uff1f","title":"Links"},{"location":"links/#links","text":"","title":"Links"},{"location":"links/#_1","text":"C++ LeetCode Book \u4ee3\u7801\u968f\u60f3\u5f55 \u884c\u4e3a\u6811","title":"\u7ad9\u70b9"},{"location":"links/#_2","text":"KCP \u53ef\u9760UDP\uff0cKCP\u534f\u8bae\u5feb\u5728\u54ea\uff1f Raft\u7b97\u6cd5\u539f\u7406 \u5e38\u89c1\u7684\u5e76\u53d1\u6a21\u5f0f \u5206\u5e93\u5206\u8868\u4f1a\u5e26\u6765\u8bfb\u6269\u6563\u95ee\u9898\uff1f\u600e\u4e48\u89e3\u51b3\uff1f","title":"\u6587\u7ae0"},{"location":"al/code/","text":"Code \u5c42\u5e8f\u904d\u5386\u4e8c\u53c9\u6811 \u975e\u9012\u5f52\u4e2d\u5e8f\u904d\u5386\u4e8c\u53c9\u6811 \u679a\u4e3e\u5f53\u524d\u8282\u70b9(\u4e0d\u5b58\u50a8\u8f93\u51fa)\u5e76\u7528\u6808\u5b58\u50a8\uff0c\u8282\u70b9\u6307\u5411\u5de6\u8282\u70b9\uff0c\u76f4\u5230\u5de6\u5b69\u5b50\u4e3anull\u3002 \u629b\u51fa\u6808\u9876\u8bbf\u95ee\u3002\u5982\u679c\u6709\u53f3\u8282\u70b9\uff0c\u8bbf\u95ee\u5176\u53f3\u8282\u70b9\u91cd\u590d\u6b65\u9aa41\uff0c\u5982\u6709\u6ca1\u53f3\u8282\u70b9\uff0c\u7ee7\u7eed\u91cd\u590d\u6b65\u9aa42\u629b\u51fa\u3002 void inOrder(Node *node) { std::stack<Node *> st; while (node != nullptr || !st.empty()) { while (node != nullptr) { st.push(node); node = node->left; } node = st.top(); st.pop(); std::cout << node->value << std::endl; node = node->right; } } void inOrderRecursive(Node *node) { if (node->left != nullptr) { inOrderRecursive(node->left); } std::cout << node->value << std::endl; if (node->right != nullptr) { inOrderRecursive(node->right); } } \u4efb\u52a1\u662f\u5426\u53ef\u5b8c\u6210 package main import ( \"fmt\" ) const ( NONE = iota SUCC FAIL PENDING ) func canFinish(index int, result []int, taskData [][]int) int { //\u5df2\u7ecf\u5224\u65ad\u8fc7 if result[index] != NONE { return result[index] } if len(taskData[index]) == 0 { result[index] = SUCC return SUCC } result[index] = PENDING for i := 0; i < len(taskData[index]); i++ { ret := canFinish(taskData[index][i], result, taskData) if ret == PENDING { result[index] = FAIL //loop back return FAIL } //one pretask is fail, then fail if ret == FAIL { result[index] = FAIL return FAIL } } result[index] = SUCC return SUCC } func canTaskFinish(taskCnt int, taskData [][]int) bool { result := make([]int, taskCnt) succCnt := 0 for i := 0; i < taskCnt; i++ { ret := canFinish(i, result, taskData) if ret == SUCC { succCnt++ } } return succCnt == taskCnt } \u52a8\u6001\u89c4\u5212 \u5bfb\u6743\u91cd\u503c\u6700\u5c0f\u7684\u8def\u5f84 func min(x, y int) int { if x < y { return x } return y } func findMinPath(s [][]int, r [][]int) { r[0][0] = s[0][0] for i := 1; i < WIDTH; i++ { r[i][0] = r[i-1][0] + s[i][0] } for i := 1; i < HEIGHT; i++ { r[0][i] = r[0][i-1] + s[0][i-1] } for i := 1; i < WIDTH; i++ { for j := 1; j < HEIGHT; j++ { r[i][j] = min(r[i][j-1], r[i-1][j]) + s[i][j] } } } merge sorted slice func mergeSortedSlice(s1 []int, s2 []int) []int { if s1 == nil { return s2 } if s2 == nil { return s1 } idx_s1 := 0 idx_s2 := 0 res := make([]int, 0, len(s1)+len(s2)) for { if idx_s1 >= len(s1) { res = append(res, s2[idx_s2:]...) break } if idx_s2 >= len(s2) { res = append(res, s1[idx_s1:]...) break } if s1[idx_s1] < s2[idx_s2] { res = append(res, s1[idx_s1]) idx_s1++ } else { res = append(res, s1[idx_s1]) idx_s2++ } } return res } \u53cd\u8f6c\u94fe\u8868 ListNode* reverseList(ListNode *head) { ListNode *cur = head; ListNode *pre = nullptr; while (cur) { ListNode *tmp = cur->next; cur->next = pre; pre = cur; cur = tmp; } return pre; } \u5217\u8868\u5012\u6570\u5230M\u4e2a\u8282\u70b9 func pickFromTail(l *list.List, m int) *list.Element { if m <= 0 { return nil } left := l.Front() right := left.Next() dis := 0 for { if right == nil { break } right = right.Next() if dis == m-1 { left = left.Next() } else { dis++ } } if dis == m-1 { return left } return nil }","title":"Code"},{"location":"al/code/#code","text":"","title":"Code"},{"location":"al/code/#_1","text":"","title":"\u5c42\u5e8f\u904d\u5386\u4e8c\u53c9\u6811"},{"location":"al/code/#_2","text":"\u679a\u4e3e\u5f53\u524d\u8282\u70b9(\u4e0d\u5b58\u50a8\u8f93\u51fa)\u5e76\u7528\u6808\u5b58\u50a8\uff0c\u8282\u70b9\u6307\u5411\u5de6\u8282\u70b9\uff0c\u76f4\u5230\u5de6\u5b69\u5b50\u4e3anull\u3002 \u629b\u51fa\u6808\u9876\u8bbf\u95ee\u3002\u5982\u679c\u6709\u53f3\u8282\u70b9\uff0c\u8bbf\u95ee\u5176\u53f3\u8282\u70b9\u91cd\u590d\u6b65\u9aa41\uff0c\u5982\u6709\u6ca1\u53f3\u8282\u70b9\uff0c\u7ee7\u7eed\u91cd\u590d\u6b65\u9aa42\u629b\u51fa\u3002 void inOrder(Node *node) { std::stack<Node *> st; while (node != nullptr || !st.empty()) { while (node != nullptr) { st.push(node); node = node->left; } node = st.top(); st.pop(); std::cout << node->value << std::endl; node = node->right; } } void inOrderRecursive(Node *node) { if (node->left != nullptr) { inOrderRecursive(node->left); } std::cout << node->value << std::endl; if (node->right != nullptr) { inOrderRecursive(node->right); } }","title":"\u975e\u9012\u5f52\u4e2d\u5e8f\u904d\u5386\u4e8c\u53c9\u6811"},{"location":"al/code/#_3","text":"package main import ( \"fmt\" ) const ( NONE = iota SUCC FAIL PENDING ) func canFinish(index int, result []int, taskData [][]int) int { //\u5df2\u7ecf\u5224\u65ad\u8fc7 if result[index] != NONE { return result[index] } if len(taskData[index]) == 0 { result[index] = SUCC return SUCC } result[index] = PENDING for i := 0; i < len(taskData[index]); i++ { ret := canFinish(taskData[index][i], result, taskData) if ret == PENDING { result[index] = FAIL //loop back return FAIL } //one pretask is fail, then fail if ret == FAIL { result[index] = FAIL return FAIL } } result[index] = SUCC return SUCC } func canTaskFinish(taskCnt int, taskData [][]int) bool { result := make([]int, taskCnt) succCnt := 0 for i := 0; i < taskCnt; i++ { ret := canFinish(i, result, taskData) if ret == SUCC { succCnt++ } } return succCnt == taskCnt }","title":"\u4efb\u52a1\u662f\u5426\u53ef\u5b8c\u6210"},{"location":"al/code/#_4","text":"func min(x, y int) int { if x < y { return x } return y } func findMinPath(s [][]int, r [][]int) { r[0][0] = s[0][0] for i := 1; i < WIDTH; i++ { r[i][0] = r[i-1][0] + s[i][0] } for i := 1; i < HEIGHT; i++ { r[0][i] = r[0][i-1] + s[0][i-1] } for i := 1; i < WIDTH; i++ { for j := 1; j < HEIGHT; j++ { r[i][j] = min(r[i][j-1], r[i-1][j]) + s[i][j] } } }","title":"\u52a8\u6001\u89c4\u5212 \u5bfb\u6743\u91cd\u503c\u6700\u5c0f\u7684\u8def\u5f84"},{"location":"al/code/#merge-sorted-slice","text":"func mergeSortedSlice(s1 []int, s2 []int) []int { if s1 == nil { return s2 } if s2 == nil { return s1 } idx_s1 := 0 idx_s2 := 0 res := make([]int, 0, len(s1)+len(s2)) for { if idx_s1 >= len(s1) { res = append(res, s2[idx_s2:]...) break } if idx_s2 >= len(s2) { res = append(res, s1[idx_s1:]...) break } if s1[idx_s1] < s2[idx_s2] { res = append(res, s1[idx_s1]) idx_s1++ } else { res = append(res, s1[idx_s1]) idx_s2++ } } return res }","title":"merge sorted slice"},{"location":"al/code/#_5","text":"ListNode* reverseList(ListNode *head) { ListNode *cur = head; ListNode *pre = nullptr; while (cur) { ListNode *tmp = cur->next; cur->next = pre; pre = cur; cur = tmp; } return pre; }","title":"\u53cd\u8f6c\u94fe\u8868"},{"location":"al/code/#m","text":"func pickFromTail(l *list.List, m int) *list.Element { if m <= 0 { return nil } left := l.Front() right := left.Next() dis := 0 for { if right == nil { break } right = right.Next() if dis == m-1 { left = left.Next() } else { dis++ } } if dis == m-1 { return left } return nil }","title":"\u5217\u8868\u5012\u6570\u5230M\u4e2a\u8282\u70b9"},{"location":"al/skiplist/","text":"SkipList ## \u63d2\u5165\u5143\u7d20 randomLevel() \u65b9\u6cd5\uff0c\u968f\u673a\u751f\u6210 1~MAX_LEVEL \u4e4b\u95f4\u7684\u6570\uff08MAX_LEVEL\u8868\u793a\u7d22\u5f15\u7684\u6700\u9ad8\u5c42\u6570\uff09\uff0c\u4e14\u6709 1/2\u7684\u6982\u7387\u8fd4\u56de 1\u30011/4\u7684\u6982\u7387\u8fd4\u56de 2\u30011/8\u7684\u6982\u7387\u8fd4\u56de 3 ... randomLevel() \u65b9\u6cd5\u8fd4\u56de 1 \u4e0d\u5efa\u7d22\u5f15\u3001\u8fd4\u56de2\u5efa\u4e00\u7ea7\u7d22\u5f15\u3001\u8fd4\u56de 3 \u5efa\u4e8c\u7ea7\u7d22\u5f15\u3001\u8fd4\u56de 4 \u5efa\u4e09\u7ea7\u7d22\u5f15 ...","title":"SkipList"},{"location":"al/skiplist/#skiplist","text":"## \u63d2\u5165\u5143\u7d20 randomLevel() \u65b9\u6cd5\uff0c\u968f\u673a\u751f\u6210 1~MAX_LEVEL \u4e4b\u95f4\u7684\u6570\uff08MAX_LEVEL\u8868\u793a\u7d22\u5f15\u7684\u6700\u9ad8\u5c42\u6570\uff09\uff0c\u4e14\u6709 1/2\u7684\u6982\u7387\u8fd4\u56de 1\u30011/4\u7684\u6982\u7387\u8fd4\u56de 2\u30011/8\u7684\u6982\u7387\u8fd4\u56de 3 ... randomLevel() \u65b9\u6cd5\u8fd4\u56de 1 \u4e0d\u5efa\u7d22\u5f15\u3001\u8fd4\u56de2\u5efa\u4e00\u7ea7\u7d22\u5f15\u3001\u8fd4\u56de 3 \u5efa\u4e8c\u7ea7\u7d22\u5f15\u3001\u8fd4\u56de 4 \u5efa\u4e09\u7ea7\u7d22\u5f15 ...","title":"SkipList"},{"location":"al/tree/","text":"Tree BTree \u6982\u5ff5 B\u6811\u548c\u5e73\u8861\u4e8c\u53c9\u6811\u7a0d\u6709\u4e0d\u540c\u7684\u662fB\u6811\u5c5e\u4e8e\u591a\u53c9\u6811\u53c8\u540d\u5e73\u8861\u591a\u8def\u67e5\u627e\u6811\uff08\u67e5\u627e\u8def\u5f84\u4e0d\u53ea\u4e24\u4e2a\uff09\uff0c\u6570\u636e\u5e93\u7d22\u5f15\u6280\u672f\u91cc\u5927\u91cf\u4f7f\u7528\u8005B\u6811\u548cB+\u6811\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u4ed6\u6709\u4ec0\u4e48\u7279\u70b9; \uff081\uff09\u6392\u5e8f\u65b9\u5f0f\uff1a\u6240\u6709\u8282\u70b9\u5173\u952e\u5b57\u662f\u6309\u9012\u589e\u6b21\u5e8f\u6392\u5217\uff0c\u5e76\u9075\u5faa\u5de6\u5c0f\u53f3\u5927\u539f\u5219\uff1b \uff082\uff09\u5b50\u8282\u70b9\u6570\uff1a\u975e\u53f6\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6570>1\uff0c\u4e14<=M \uff0c\u4e14M>=2\uff0c\u7a7a\u6811\u9664\u5916\uff08\u6ce8\uff1aM\u9636\u4ee3\u8868\u4e00\u4e2a\u6811\u8282\u70b9\u6700\u591a\u6709\u591a\u5c11\u4e2a\u67e5\u627e\u8def\u5f84\uff0cM=M\u8def,\u5f53M=2\u5219\u662f2\u53c9\u6811,M=3\u5219\u662f3\u53c9\uff09\uff1b \uff083\uff09\u5173\u952e\u5b57\u6570\uff1a\u679d\u8282\u70b9\u7684\u5173\u952e\u5b57\u6570\u91cf\u5927\u4e8e\u7b49\u4e8eceil(m/2)-1\u4e2a\u4e14\u5c0f\u4e8e\u7b49\u4e8eM-1\u4e2a\uff08\u6ce8\uff1aceil()\u662f\u4e2a\u671d\u6b63\u65e0\u7a77\u65b9\u5411\u53d6\u6574\u7684\u51fd\u6570 \u5982ceil(1.1)\u7ed3\u679c\u4e3a2); \uff084\uff09\u6240\u6709\u53f6\u5b50\u8282\u70b9\u5747\u5728\u540c\u4e00\u5c42\u3001\u53f6\u5b50\u8282\u70b9\u9664\u4e86\u5305\u542b\u4e86\u5173\u952e\u5b57\u548c\u5173\u952e\u5b57\u8bb0\u5f55\u7684\u6307\u9488\u5916\u4e5f\u6709\u6307\u5411\u5176\u5b50\u8282\u70b9\u7684\u6307\u9488\u53ea\u4e0d\u8fc7\u5176\u6307\u9488\u5730\u5740\u90fd\u4e3anull\u5bf9\u5e94\u4e0b\u56fe\u6700\u540e\u4e00\u5c42\u8282\u70b9\u7684\u7a7a\u683c\u5b50; B\u6811\u7684\u67e5\u8be2\u6d41\u7a0b\uff1a \u5982\u4e0a\u56fe\u6211\u8981\u4ece\u4e0a\u56fe\u4e2d\u627e\u5230E\u5b57\u6bcd\uff0c\u67e5\u627e\u6d41\u7a0b\u5982\u4e0b \uff081\uff09\u83b7\u53d6\u6839\u8282\u70b9\u7684\u5173\u952e\u5b57\u8fdb\u884c\u6bd4\u8f83\uff0c\u5f53\u524d\u6839\u8282\u70b9\u5173\u952e\u5b57\u4e3aM\uff0cE<M\uff0826\u4e2a\u5b57\u6bcd\u987a\u5e8f\uff09\uff0c\u6240\u4ee5\u5f80\u627e\u5230\u6307\u5411\u5de6\u8fb9\u7684\u5b50\u8282\u70b9\uff08\u4e8c\u5206\u6cd5\u89c4\u5219\uff0c\u5de6\u5c0f\u53f3\u5927\uff0c\u5de6\u8fb9\u653e\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u503c\u7684\u5b50\u8282\u70b9\u3001\u53f3\u8fb9\u653e\u5927\u4e8e\u5f53\u524d\u8282\u70b9\u503c\u7684\u5b50\u8282\u70b9\uff09\uff1b \uff082\uff09\u62ff\u5230\u5173\u952e\u5b57D\u548cG\uff0cD<E<G \u6240\u4ee5\u76f4\u63a5\u627e\u5230D\u548cG\u4e2d\u95f4\u7684\u8282\u70b9\uff1b \uff083\uff09\u62ff\u5230E\u548cF\uff0c\u56e0\u4e3aE=E \u6240\u4ee5\u76f4\u63a5\u8fd4\u56de\u5173\u952e\u5b57\u548c\u6307\u9488\u4fe1\u606f\uff08\u5982\u679c\u6811\u7ed3\u6784\u91cc\u9762\u6ca1\u6709\u5305\u542b\u6240\u8981\u67e5\u627e\u7684\u8282\u70b9\u5219\u8fd4\u56denull\uff09\uff1b B\u6811\u7684\u63d2\u5165\u8282\u70b9\u6d41\u7a0b \u5b9a\u4e49\u4e00\u4e2a5\u9636\u6811\uff08\u5e73\u88615\u8def\u67e5\u627e\u6811;\uff09\uff0c\u73b0\u5728\u6211\u4eec\u8981\u628a3\u30018\u300131\u300111\u300123\u300129\u300150\u300128 \u8fd9\u4e9b\u6570\u5b57\u6784\u5efa\u51fa\u4e00\u4e2a5\u9636\u6811\u51fa\u6765; \u9075\u5faa\u89c4\u5219\uff1a \uff081\uff09\u8282\u70b9\u62c6\u5206\u89c4\u5219\uff1a\u5f53\u524d\u662f\u8981\u7ec4\u6210\u4e00\u4e2a5\u8def\u67e5\u627e\u6811\uff0c\u90a3\u4e48\u6b64\u65f6m=5,\u5173\u952e\u5b57\u6570\u5fc5\u987b<=5-1\uff08\u8fd9\u91cc\u5173\u952e\u5b57\u6570>4\u5c31\u8981\u8fdb\u884c\u8282\u70b9\u62c6\u5206\uff09\uff1b \uff082\uff09\u6392\u5e8f\u89c4\u5219\uff1a\u6ee1\u8db3\u8282\u70b9\u672c\u8eab\u6bd4\u5de6\u8fb9\u8282\u70b9\u5927\uff0c\u6bd4\u53f3\u8fb9\u8282\u70b9\u5c0f\u7684\u6392\u5e8f\u89c4\u5219; \u5148\u63d2\u5165 3\u30018\u300131\u300111 \u518d\u63d2\u516523\u300129 \u518d\u63d2\u516550\u300128 B\u6811\u8282\u70b9\u7684\u5220\u9664 \u89c4\u5219\uff1a \uff081\uff09\u8282\u70b9\u5408\u5e76\u89c4\u5219\uff1a\u5f53\u524d\u662f\u8981\u7ec4\u6210\u4e00\u4e2a5\u8def\u67e5\u627e\u6811\uff0c\u90a3\u4e48\u6b64\u65f6m=5,\u5173\u952e\u5b57\u6570\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8eceil\uff085/2\uff09\uff08\u8fd9\u91cc\u5173\u952e\u5b57\u6570<2\u5c31\u8981\u8fdb\u884c\u8282\u70b9\u5408\u5e76\uff09\uff1b \uff082\uff09\u6ee1\u8db3\u8282\u70b9\u672c\u8eab\u6bd4\u5de6\u8fb9\u8282\u70b9\u5927\uff0c\u6bd4\u53f3\u8fb9\u8282\u70b9\u5c0f\u7684\u6392\u5e8f\u89c4\u5219; \uff083\uff09\u5173\u952e\u5b57\u6570\u5c0f\u4e8e\u4e8c\u65f6\u5148\u4ece\u5b50\u8282\u70b9\u53d6\uff0c\u5b50\u8282\u70b9\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\u65f6\u5c31\u5411\u5411\u7236\u8282\u70b9\u53d6\uff0c\u53d6\u4e2d\u95f4\u503c\u5f80\u7236\u8282\u70b9\u653e\uff1b \u7279\u70b9\uff1a B\u6811\u76f8\u5bf9\u4e8e\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u4e0d\u540c\u662f\uff0c\u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u7684\u5173\u952e\u5b57\u589e\u591a\u4e86\uff0c\u7279\u522b\u662f\u5728B\u6811\u5e94\u7528\u5230\u6570\u636e\u5e93\u4e2d\u7684\u65f6\u5019\uff0c\u6570\u636e\u5e93\u5145\u5206\u5229\u7528\u4e86\u78c1\u76d8\u5757\u7684\u539f\u7406\uff08\u78c1\u76d8\u6570\u636e\u5b58\u50a8\u662f\u91c7\u7528\u5757\u7684\u5f62\u5f0f\u5b58\u50a8\u7684\uff0c\u6bcf\u4e2a\u5757\u7684\u5927\u5c0f\u4e3a4K\uff0c\u6bcf\u6b21IO\u8fdb\u884c\u6570\u636e\u8bfb\u53d6\u65f6\uff0c\u540c\u4e00\u4e2a\u78c1\u76d8\u5757\u7684\u6570\u636e\u53ef\u4ee5\u4e00\u6b21\u6027\u8bfb\u53d6\u51fa\u6765\uff09\u628a\u8282\u70b9\u5927\u5c0f\u9650\u5236\u548c\u5145\u5206\u4f7f\u7528\u5728\u78c1\u76d8\u5feb\u5927\u5c0f\u8303\u56f4\uff1b\u628a\u6811\u7684\u8282\u70b9\u5173\u952e\u5b57\u589e\u591a\u540e\u6811\u7684\u5c42\u7ea7\u6bd4\u539f\u6765\u7684\u4e8c\u53c9\u6811\u5c11\u4e86\uff0c\u51cf\u5c11\u6570\u636e\u67e5\u627e\u7684\u6b21\u6570\u548c\u590d\u6742\u5ea6; B+\u6811 \u6982\u5ff5 B+\u6811\u662fB\u6811\u7684\u4e00\u4e2a\u5347\u7ea7\u7248\uff0c\u76f8\u5bf9\u4e8eB\u6811\u6765\u8bf4B+\u6811\u66f4\u5145\u5206\u7684\u5229\u7528\u4e86\u8282\u70b9\u7684\u7a7a\u95f4\uff0c\u8ba9\u67e5\u8be2\u901f\u5ea6\u66f4\u52a0\u7a33\u5b9a\uff0c\u5176\u901f\u5ea6\u5b8c\u5168\u63a5\u8fd1\u4e8e\u4e8c\u5206\u6cd5\u67e5\u627e\u3002\u4e3a\u4ec0\u4e48\u8bf4B+\u6811\u67e5\u627e\u7684\u6548\u7387\u8981\u6bd4B\u6811\u66f4\u9ad8\u3001\u66f4\u7a33\u5b9a\uff1b\u6211\u4eec\u5148\u770b\u770b\u4e24\u8005\u7684\u533a\u522b \uff081\uff09B+\u8ddfB\u6811\u4e0d\u540cB+\u6811\u7684\u975e\u53f6\u5b50\u8282\u70b9\u4e0d\u4fdd\u5b58\u5173\u952e\u5b57\u8bb0\u5f55\u7684\u6307\u9488\uff0c\u53ea\u8fdb\u884c\u6570\u636e\u7d22\u5f15\uff0c\u8fd9\u6837\u4f7f\u5f97B+\u6811\u6bcf\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u6240\u80fd\u4fdd\u5b58\u7684\u5173\u952e\u5b57\u5927\u5927\u589e\u52a0\uff1b \uff082\uff09B+\u6811\u53f6\u5b50\u8282\u70b9\u4fdd\u5b58\u4e86\u7236\u8282\u70b9\u7684\u6240\u6709\u5173\u952e\u5b57\u8bb0\u5f55\u7684\u6307\u9488\uff0c\u6240\u6709\u6570\u636e\u5730\u5740\u5fc5\u987b\u8981\u5230\u53f6\u5b50\u8282\u70b9\u624d\u80fd\u83b7\u53d6\u5230\u3002\u6240\u4ee5\u6bcf\u6b21\u6570\u636e\u67e5\u8be2\u7684\u6b21\u6570\u90fd\u4e00\u6837\uff1b \uff083\uff09B+\u6811\u53f6\u5b50\u8282\u70b9\u7684\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6709\u5e8f\u6392\u5217\uff0c\u5de6\u8fb9\u7ed3\u5c3e\u6570\u636e\u90fd\u4f1a\u4fdd\u5b58\u53f3\u8fb9\u8282\u70b9\u5f00\u59cb\u6570\u636e\u7684\u6307\u9488\u3002 \uff084\uff09\u975e\u53f6\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6570=\u5173\u952e\u5b57\u6570\uff08\u6765\u6e90\u767e\u5ea6\u767e\u79d1\uff09\uff08\u6839\u636e\u5404\u79cd\u8d44\u6599 \u8fd9\u91cc\u6709\u4e24\u79cd\u7b97\u6cd5\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u53e6\u4e00\u79cd\u4e3a\u975e\u53f6\u8282\u70b9\u7684\u5173\u952e\u5b57\u6570=\u5b50\u8282\u70b9\u6570-1\uff08\u6765\u6e90\u7ef4\u57fa\u767e\u79d1)\uff0c\u867d\u7136\u4ed6\u4eec\u6570\u636e\u6392\u5217\u7ed3\u6784\u4e0d\u4e00\u6837\uff0c\u4f46\u5176\u539f\u7406\u8fd8\u662f\u4e00\u6837\u7684Mysql \u7684B+\u6811\u662f\u7528\u7b2c\u4e00\u79cd\u65b9\u5f0f\u5b9e\u73b0\uff09; \u7279\u70b9 1\u3001B+\u6811\u7684\u5c42\u7ea7\u66f4\u5c11\uff1a\u76f8\u8f83\u4e8eB\u6811B+\u6bcf\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5b58\u50a8\u7684\u5173\u952e\u5b57\u6570\u66f4\u591a\uff0c\u6811\u7684\u5c42\u7ea7\u66f4\u5c11\u6240\u4ee5\u67e5\u8be2\u6570\u636e\u66f4\u5feb\uff1b 2\u3001B+\u6811\u67e5\u8be2\u901f\u5ea6\u66f4\u7a33\u5b9a\uff1aB+\u6240\u6709\u5173\u952e\u5b57\u6570\u636e\u5730\u5740\u90fd\u5b58\u5728\u53f6\u5b50\u8282\u70b9\u4e0a\uff0c\u6240\u4ee5\u6bcf\u6b21\u67e5\u627e\u7684\u6b21\u6570\u90fd\u76f8\u540c\u6240\u4ee5\u67e5\u8be2\u901f\u5ea6\u8981\u6bd4B\u6811\u66f4\u7a33\u5b9a; 3\u3001B+\u6811\u5929\u7136\u5177\u5907\u6392\u5e8f\u529f\u80fd\uff1aB+\u6811\u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\u6570\u636e\u6784\u6210\u4e86\u4e00\u4e2a\u6709\u5e8f\u94fe\u8868\uff0c\u5728\u67e5\u8be2\u5927\u5c0f\u533a\u95f4\u7684\u6570\u636e\u65f6\u5019\u66f4\u65b9\u4fbf\uff0c\u6570\u636e\u7d27\u5bc6\u6027\u5f88\u9ad8\uff0c\u7f13\u5b58\u7684\u547d\u4e2d\u7387\u4e5f\u4f1a\u6bd4B\u6811\u9ad8\u3002 4\u3001B+\u6811\u5168\u8282\u70b9\u904d\u5386\u66f4\u5feb\uff1aB+\u6811\u904d\u5386\u6574\u68f5\u6811\u53ea\u9700\u8981\u904d\u5386\u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\u5373\u53ef\uff0c\uff0c\u800c\u4e0d\u9700\u8981\u50cfB\u6811\u4e00\u6837\u9700\u8981\u5bf9\u6bcf\u4e00\u5c42\u8fdb\u884c\u904d\u5386\uff0c\u8fd9\u6709\u5229\u4e8e\u6570\u636e\u5e93\u505a\u5168\u8868\u626b\u63cf\u3002 B\u6811\u76f8\u5bf9\u4e8eB+\u6811\u7684\u4f18\u70b9\u662f\uff0c\u5982\u679c\u7ecf\u5e38\u8bbf\u95ee\u7684\u6570\u636e\u79bb\u6839\u8282\u70b9\u5f88\u8fd1\uff0c\u800cB\u6811\u7684\u975e\u53f6\u5b50\u8282\u70b9\u672c\u8eab\u5b58\u6709\u5173\u952e\u5b57\u5176\u6570\u636e\u7684\u5730\u5740\uff0c\u6240\u4ee5\u8fd9\u79cd\u6570\u636e\u68c0\u7d22\u7684\u65f6\u5019\u4f1a\u8981\u6bd4B+\u6811\u5feb\u3002 R-B Tree \u6982\u5ff5 \u7279\u6b8a\u7684\u4e8c\u53c9\u67e5\u627e\u6811\u3002\u7ea2\u9ed1\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u4e0a\u90fd\u6709\u5b58\u50a8\u4f4d\u8868\u793a\u8282\u70b9\u7684\u989c\u8272\uff0c\u53ef\u4ee5\u662f\u7ea2(Red)\u6216\u9ed1(Black) \u7ea2\u9ed1\u6811\u7684\u7279\u6027: + \u6bcf\u4e2a\u8282\u70b9\u6216\u8005\u662f\u9ed1\u8272\uff0c\u6216\u8005\u662f\u7ea2\u8272\u3002 + \u6839\u8282\u70b9\u662f\u9ed1\u8272\u3002 + \u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\uff08NIL\uff09\u662f\u9ed1\u8272\u3002 [\u6ce8\u610f\uff1a\u8fd9\u91cc\u53f6\u5b50\u8282\u70b9\uff0c\u662f\u6307\u4e3a\u7a7a(NIL\u6216NULL)\u7684\u53f6\u5b50\u8282\u70b9\uff01] + \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\u7684\uff0c\u5219\u5b83\u7684\u5b50\u8282\u70b9\u5fc5\u987b\u662f\u9ed1\u8272\u7684\u3002 + \u4ece\u4e00\u4e2a\u8282\u70b9\u5230\u8be5\u8282\u70b9\u7684\u5b50\u5b59\u8282\u70b9\u7684\u6240\u6709\u8def\u5f84\u4e0a\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8282\u70b9\u3002 \u4ee5\u4e0a5\u6761\u6027\u8d28\uff0c\u4f7f\u4e00\u68f5n\u4e2a\u7ed3\u70b9\u7684\u7ea2\u9ed1\u6811\u59cb\u7ec8\u4fdd\u6301\u4e86logn\u7684\u9ad8\u5ea6\uff0c\u4ece\u800c\u4e5f\u5c31\u89e3\u91ca\u4e86\u4e0a\u9762\u6240\u8bf4\u7684\u201c\u7ea2\u9ed1\u6811\u7684\u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u574f\u4e3aO(log n) \u67e5\u8be2\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(log2 N)\uff0c2\u4e3a\u5e95N\u7684\u5bf9\u6570\uff0c10\u4ebf\u6570\u636e\u6700\u574f\u60c5\u51b5\u9700\u898130\u6b21 \u5b58\u50a8\u6709\u5e8f\u7684\u6570\u636e\uff0c\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(lgn) C++ STL\u4e2d\u7684set\u3001map\uff0c\u4ee5\u53caLinux\u865a\u62df\u5185\u5b58\u7684\u7ba1\u7406 \u7ea2\u9ed1\u6811\u64cd\u4f5c \u6dfb\u52a0 \u5220\u9664","title":"Tree"},{"location":"al/tree/#tree","text":"","title":"Tree"},{"location":"al/tree/#btree","text":"","title":"BTree"},{"location":"al/tree/#_1","text":"B\u6811\u548c\u5e73\u8861\u4e8c\u53c9\u6811\u7a0d\u6709\u4e0d\u540c\u7684\u662fB\u6811\u5c5e\u4e8e\u591a\u53c9\u6811\u53c8\u540d\u5e73\u8861\u591a\u8def\u67e5\u627e\u6811\uff08\u67e5\u627e\u8def\u5f84\u4e0d\u53ea\u4e24\u4e2a\uff09\uff0c\u6570\u636e\u5e93\u7d22\u5f15\u6280\u672f\u91cc\u5927\u91cf\u4f7f\u7528\u8005B\u6811\u548cB+\u6811\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u4ed6\u6709\u4ec0\u4e48\u7279\u70b9; \uff081\uff09\u6392\u5e8f\u65b9\u5f0f\uff1a\u6240\u6709\u8282\u70b9\u5173\u952e\u5b57\u662f\u6309\u9012\u589e\u6b21\u5e8f\u6392\u5217\uff0c\u5e76\u9075\u5faa\u5de6\u5c0f\u53f3\u5927\u539f\u5219\uff1b \uff082\uff09\u5b50\u8282\u70b9\u6570\uff1a\u975e\u53f6\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6570>1\uff0c\u4e14<=M \uff0c\u4e14M>=2\uff0c\u7a7a\u6811\u9664\u5916\uff08\u6ce8\uff1aM\u9636\u4ee3\u8868\u4e00\u4e2a\u6811\u8282\u70b9\u6700\u591a\u6709\u591a\u5c11\u4e2a\u67e5\u627e\u8def\u5f84\uff0cM=M\u8def,\u5f53M=2\u5219\u662f2\u53c9\u6811,M=3\u5219\u662f3\u53c9\uff09\uff1b \uff083\uff09\u5173\u952e\u5b57\u6570\uff1a\u679d\u8282\u70b9\u7684\u5173\u952e\u5b57\u6570\u91cf\u5927\u4e8e\u7b49\u4e8eceil(m/2)-1\u4e2a\u4e14\u5c0f\u4e8e\u7b49\u4e8eM-1\u4e2a\uff08\u6ce8\uff1aceil()\u662f\u4e2a\u671d\u6b63\u65e0\u7a77\u65b9\u5411\u53d6\u6574\u7684\u51fd\u6570 \u5982ceil(1.1)\u7ed3\u679c\u4e3a2); \uff084\uff09\u6240\u6709\u53f6\u5b50\u8282\u70b9\u5747\u5728\u540c\u4e00\u5c42\u3001\u53f6\u5b50\u8282\u70b9\u9664\u4e86\u5305\u542b\u4e86\u5173\u952e\u5b57\u548c\u5173\u952e\u5b57\u8bb0\u5f55\u7684\u6307\u9488\u5916\u4e5f\u6709\u6307\u5411\u5176\u5b50\u8282\u70b9\u7684\u6307\u9488\u53ea\u4e0d\u8fc7\u5176\u6307\u9488\u5730\u5740\u90fd\u4e3anull\u5bf9\u5e94\u4e0b\u56fe\u6700\u540e\u4e00\u5c42\u8282\u70b9\u7684\u7a7a\u683c\u5b50;","title":"\u6982\u5ff5"},{"location":"al/tree/#b","text":"\u5982\u4e0a\u56fe\u6211\u8981\u4ece\u4e0a\u56fe\u4e2d\u627e\u5230E\u5b57\u6bcd\uff0c\u67e5\u627e\u6d41\u7a0b\u5982\u4e0b \uff081\uff09\u83b7\u53d6\u6839\u8282\u70b9\u7684\u5173\u952e\u5b57\u8fdb\u884c\u6bd4\u8f83\uff0c\u5f53\u524d\u6839\u8282\u70b9\u5173\u952e\u5b57\u4e3aM\uff0cE<M\uff0826\u4e2a\u5b57\u6bcd\u987a\u5e8f\uff09\uff0c\u6240\u4ee5\u5f80\u627e\u5230\u6307\u5411\u5de6\u8fb9\u7684\u5b50\u8282\u70b9\uff08\u4e8c\u5206\u6cd5\u89c4\u5219\uff0c\u5de6\u5c0f\u53f3\u5927\uff0c\u5de6\u8fb9\u653e\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u503c\u7684\u5b50\u8282\u70b9\u3001\u53f3\u8fb9\u653e\u5927\u4e8e\u5f53\u524d\u8282\u70b9\u503c\u7684\u5b50\u8282\u70b9\uff09\uff1b \uff082\uff09\u62ff\u5230\u5173\u952e\u5b57D\u548cG\uff0cD<E<G \u6240\u4ee5\u76f4\u63a5\u627e\u5230D\u548cG\u4e2d\u95f4\u7684\u8282\u70b9\uff1b \uff083\uff09\u62ff\u5230E\u548cF\uff0c\u56e0\u4e3aE=E \u6240\u4ee5\u76f4\u63a5\u8fd4\u56de\u5173\u952e\u5b57\u548c\u6307\u9488\u4fe1\u606f\uff08\u5982\u679c\u6811\u7ed3\u6784\u91cc\u9762\u6ca1\u6709\u5305\u542b\u6240\u8981\u67e5\u627e\u7684\u8282\u70b9\u5219\u8fd4\u56denull\uff09\uff1b","title":"B\u6811\u7684\u67e5\u8be2\u6d41\u7a0b\uff1a"},{"location":"al/tree/#b_1","text":"\u5b9a\u4e49\u4e00\u4e2a5\u9636\u6811\uff08\u5e73\u88615\u8def\u67e5\u627e\u6811;\uff09\uff0c\u73b0\u5728\u6211\u4eec\u8981\u628a3\u30018\u300131\u300111\u300123\u300129\u300150\u300128 \u8fd9\u4e9b\u6570\u5b57\u6784\u5efa\u51fa\u4e00\u4e2a5\u9636\u6811\u51fa\u6765; \u9075\u5faa\u89c4\u5219\uff1a \uff081\uff09\u8282\u70b9\u62c6\u5206\u89c4\u5219\uff1a\u5f53\u524d\u662f\u8981\u7ec4\u6210\u4e00\u4e2a5\u8def\u67e5\u627e\u6811\uff0c\u90a3\u4e48\u6b64\u65f6m=5,\u5173\u952e\u5b57\u6570\u5fc5\u987b<=5-1\uff08\u8fd9\u91cc\u5173\u952e\u5b57\u6570>4\u5c31\u8981\u8fdb\u884c\u8282\u70b9\u62c6\u5206\uff09\uff1b \uff082\uff09\u6392\u5e8f\u89c4\u5219\uff1a\u6ee1\u8db3\u8282\u70b9\u672c\u8eab\u6bd4\u5de6\u8fb9\u8282\u70b9\u5927\uff0c\u6bd4\u53f3\u8fb9\u8282\u70b9\u5c0f\u7684\u6392\u5e8f\u89c4\u5219; \u5148\u63d2\u5165 3\u30018\u300131\u300111 \u518d\u63d2\u516523\u300129 \u518d\u63d2\u516550\u300128","title":"B\u6811\u7684\u63d2\u5165\u8282\u70b9\u6d41\u7a0b"},{"location":"al/tree/#b_2","text":"\u89c4\u5219\uff1a \uff081\uff09\u8282\u70b9\u5408\u5e76\u89c4\u5219\uff1a\u5f53\u524d\u662f\u8981\u7ec4\u6210\u4e00\u4e2a5\u8def\u67e5\u627e\u6811\uff0c\u90a3\u4e48\u6b64\u65f6m=5,\u5173\u952e\u5b57\u6570\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8eceil\uff085/2\uff09\uff08\u8fd9\u91cc\u5173\u952e\u5b57\u6570<2\u5c31\u8981\u8fdb\u884c\u8282\u70b9\u5408\u5e76\uff09\uff1b \uff082\uff09\u6ee1\u8db3\u8282\u70b9\u672c\u8eab\u6bd4\u5de6\u8fb9\u8282\u70b9\u5927\uff0c\u6bd4\u53f3\u8fb9\u8282\u70b9\u5c0f\u7684\u6392\u5e8f\u89c4\u5219; \uff083\uff09\u5173\u952e\u5b57\u6570\u5c0f\u4e8e\u4e8c\u65f6\u5148\u4ece\u5b50\u8282\u70b9\u53d6\uff0c\u5b50\u8282\u70b9\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\u65f6\u5c31\u5411\u5411\u7236\u8282\u70b9\u53d6\uff0c\u53d6\u4e2d\u95f4\u503c\u5f80\u7236\u8282\u70b9\u653e\uff1b \u7279\u70b9\uff1a B\u6811\u76f8\u5bf9\u4e8e\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u4e0d\u540c\u662f\uff0c\u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u7684\u5173\u952e\u5b57\u589e\u591a\u4e86\uff0c\u7279\u522b\u662f\u5728B\u6811\u5e94\u7528\u5230\u6570\u636e\u5e93\u4e2d\u7684\u65f6\u5019\uff0c\u6570\u636e\u5e93\u5145\u5206\u5229\u7528\u4e86\u78c1\u76d8\u5757\u7684\u539f\u7406\uff08\u78c1\u76d8\u6570\u636e\u5b58\u50a8\u662f\u91c7\u7528\u5757\u7684\u5f62\u5f0f\u5b58\u50a8\u7684\uff0c\u6bcf\u4e2a\u5757\u7684\u5927\u5c0f\u4e3a4K\uff0c\u6bcf\u6b21IO\u8fdb\u884c\u6570\u636e\u8bfb\u53d6\u65f6\uff0c\u540c\u4e00\u4e2a\u78c1\u76d8\u5757\u7684\u6570\u636e\u53ef\u4ee5\u4e00\u6b21\u6027\u8bfb\u53d6\u51fa\u6765\uff09\u628a\u8282\u70b9\u5927\u5c0f\u9650\u5236\u548c\u5145\u5206\u4f7f\u7528\u5728\u78c1\u76d8\u5feb\u5927\u5c0f\u8303\u56f4\uff1b\u628a\u6811\u7684\u8282\u70b9\u5173\u952e\u5b57\u589e\u591a\u540e\u6811\u7684\u5c42\u7ea7\u6bd4\u539f\u6765\u7684\u4e8c\u53c9\u6811\u5c11\u4e86\uff0c\u51cf\u5c11\u6570\u636e\u67e5\u627e\u7684\u6b21\u6570\u548c\u590d\u6742\u5ea6;","title":"B\u6811\u8282\u70b9\u7684\u5220\u9664"},{"location":"al/tree/#b_3","text":"","title":"B+\u6811"},{"location":"al/tree/#_2","text":"B+\u6811\u662fB\u6811\u7684\u4e00\u4e2a\u5347\u7ea7\u7248\uff0c\u76f8\u5bf9\u4e8eB\u6811\u6765\u8bf4B+\u6811\u66f4\u5145\u5206\u7684\u5229\u7528\u4e86\u8282\u70b9\u7684\u7a7a\u95f4\uff0c\u8ba9\u67e5\u8be2\u901f\u5ea6\u66f4\u52a0\u7a33\u5b9a\uff0c\u5176\u901f\u5ea6\u5b8c\u5168\u63a5\u8fd1\u4e8e\u4e8c\u5206\u6cd5\u67e5\u627e\u3002\u4e3a\u4ec0\u4e48\u8bf4B+\u6811\u67e5\u627e\u7684\u6548\u7387\u8981\u6bd4B\u6811\u66f4\u9ad8\u3001\u66f4\u7a33\u5b9a\uff1b\u6211\u4eec\u5148\u770b\u770b\u4e24\u8005\u7684\u533a\u522b \uff081\uff09B+\u8ddfB\u6811\u4e0d\u540cB+\u6811\u7684\u975e\u53f6\u5b50\u8282\u70b9\u4e0d\u4fdd\u5b58\u5173\u952e\u5b57\u8bb0\u5f55\u7684\u6307\u9488\uff0c\u53ea\u8fdb\u884c\u6570\u636e\u7d22\u5f15\uff0c\u8fd9\u6837\u4f7f\u5f97B+\u6811\u6bcf\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u6240\u80fd\u4fdd\u5b58\u7684\u5173\u952e\u5b57\u5927\u5927\u589e\u52a0\uff1b \uff082\uff09B+\u6811\u53f6\u5b50\u8282\u70b9\u4fdd\u5b58\u4e86\u7236\u8282\u70b9\u7684\u6240\u6709\u5173\u952e\u5b57\u8bb0\u5f55\u7684\u6307\u9488\uff0c\u6240\u6709\u6570\u636e\u5730\u5740\u5fc5\u987b\u8981\u5230\u53f6\u5b50\u8282\u70b9\u624d\u80fd\u83b7\u53d6\u5230\u3002\u6240\u4ee5\u6bcf\u6b21\u6570\u636e\u67e5\u8be2\u7684\u6b21\u6570\u90fd\u4e00\u6837\uff1b \uff083\uff09B+\u6811\u53f6\u5b50\u8282\u70b9\u7684\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6709\u5e8f\u6392\u5217\uff0c\u5de6\u8fb9\u7ed3\u5c3e\u6570\u636e\u90fd\u4f1a\u4fdd\u5b58\u53f3\u8fb9\u8282\u70b9\u5f00\u59cb\u6570\u636e\u7684\u6307\u9488\u3002 \uff084\uff09\u975e\u53f6\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6570=\u5173\u952e\u5b57\u6570\uff08\u6765\u6e90\u767e\u5ea6\u767e\u79d1\uff09\uff08\u6839\u636e\u5404\u79cd\u8d44\u6599 \u8fd9\u91cc\u6709\u4e24\u79cd\u7b97\u6cd5\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u53e6\u4e00\u79cd\u4e3a\u975e\u53f6\u8282\u70b9\u7684\u5173\u952e\u5b57\u6570=\u5b50\u8282\u70b9\u6570-1\uff08\u6765\u6e90\u7ef4\u57fa\u767e\u79d1)\uff0c\u867d\u7136\u4ed6\u4eec\u6570\u636e\u6392\u5217\u7ed3\u6784\u4e0d\u4e00\u6837\uff0c\u4f46\u5176\u539f\u7406\u8fd8\u662f\u4e00\u6837\u7684Mysql \u7684B+\u6811\u662f\u7528\u7b2c\u4e00\u79cd\u65b9\u5f0f\u5b9e\u73b0\uff09;","title":"\u6982\u5ff5"},{"location":"al/tree/#_3","text":"1\u3001B+\u6811\u7684\u5c42\u7ea7\u66f4\u5c11\uff1a\u76f8\u8f83\u4e8eB\u6811B+\u6bcf\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5b58\u50a8\u7684\u5173\u952e\u5b57\u6570\u66f4\u591a\uff0c\u6811\u7684\u5c42\u7ea7\u66f4\u5c11\u6240\u4ee5\u67e5\u8be2\u6570\u636e\u66f4\u5feb\uff1b 2\u3001B+\u6811\u67e5\u8be2\u901f\u5ea6\u66f4\u7a33\u5b9a\uff1aB+\u6240\u6709\u5173\u952e\u5b57\u6570\u636e\u5730\u5740\u90fd\u5b58\u5728\u53f6\u5b50\u8282\u70b9\u4e0a\uff0c\u6240\u4ee5\u6bcf\u6b21\u67e5\u627e\u7684\u6b21\u6570\u90fd\u76f8\u540c\u6240\u4ee5\u67e5\u8be2\u901f\u5ea6\u8981\u6bd4B\u6811\u66f4\u7a33\u5b9a; 3\u3001B+\u6811\u5929\u7136\u5177\u5907\u6392\u5e8f\u529f\u80fd\uff1aB+\u6811\u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\u6570\u636e\u6784\u6210\u4e86\u4e00\u4e2a\u6709\u5e8f\u94fe\u8868\uff0c\u5728\u67e5\u8be2\u5927\u5c0f\u533a\u95f4\u7684\u6570\u636e\u65f6\u5019\u66f4\u65b9\u4fbf\uff0c\u6570\u636e\u7d27\u5bc6\u6027\u5f88\u9ad8\uff0c\u7f13\u5b58\u7684\u547d\u4e2d\u7387\u4e5f\u4f1a\u6bd4B\u6811\u9ad8\u3002 4\u3001B+\u6811\u5168\u8282\u70b9\u904d\u5386\u66f4\u5feb\uff1aB+\u6811\u904d\u5386\u6574\u68f5\u6811\u53ea\u9700\u8981\u904d\u5386\u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\u5373\u53ef\uff0c\uff0c\u800c\u4e0d\u9700\u8981\u50cfB\u6811\u4e00\u6837\u9700\u8981\u5bf9\u6bcf\u4e00\u5c42\u8fdb\u884c\u904d\u5386\uff0c\u8fd9\u6709\u5229\u4e8e\u6570\u636e\u5e93\u505a\u5168\u8868\u626b\u63cf\u3002 B\u6811\u76f8\u5bf9\u4e8eB+\u6811\u7684\u4f18\u70b9\u662f\uff0c\u5982\u679c\u7ecf\u5e38\u8bbf\u95ee\u7684\u6570\u636e\u79bb\u6839\u8282\u70b9\u5f88\u8fd1\uff0c\u800cB\u6811\u7684\u975e\u53f6\u5b50\u8282\u70b9\u672c\u8eab\u5b58\u6709\u5173\u952e\u5b57\u5176\u6570\u636e\u7684\u5730\u5740\uff0c\u6240\u4ee5\u8fd9\u79cd\u6570\u636e\u68c0\u7d22\u7684\u65f6\u5019\u4f1a\u8981\u6bd4B+\u6811\u5feb\u3002","title":"\u7279\u70b9"},{"location":"al/tree/#r-b-tree","text":"","title":"R-B Tree"},{"location":"al/tree/#_4","text":"\u7279\u6b8a\u7684\u4e8c\u53c9\u67e5\u627e\u6811\u3002\u7ea2\u9ed1\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u4e0a\u90fd\u6709\u5b58\u50a8\u4f4d\u8868\u793a\u8282\u70b9\u7684\u989c\u8272\uff0c\u53ef\u4ee5\u662f\u7ea2(Red)\u6216\u9ed1(Black) \u7ea2\u9ed1\u6811\u7684\u7279\u6027: + \u6bcf\u4e2a\u8282\u70b9\u6216\u8005\u662f\u9ed1\u8272\uff0c\u6216\u8005\u662f\u7ea2\u8272\u3002 + \u6839\u8282\u70b9\u662f\u9ed1\u8272\u3002 + \u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\uff08NIL\uff09\u662f\u9ed1\u8272\u3002 [\u6ce8\u610f\uff1a\u8fd9\u91cc\u53f6\u5b50\u8282\u70b9\uff0c\u662f\u6307\u4e3a\u7a7a(NIL\u6216NULL)\u7684\u53f6\u5b50\u8282\u70b9\uff01] + \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\u7684\uff0c\u5219\u5b83\u7684\u5b50\u8282\u70b9\u5fc5\u987b\u662f\u9ed1\u8272\u7684\u3002 + \u4ece\u4e00\u4e2a\u8282\u70b9\u5230\u8be5\u8282\u70b9\u7684\u5b50\u5b59\u8282\u70b9\u7684\u6240\u6709\u8def\u5f84\u4e0a\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8282\u70b9\u3002 \u4ee5\u4e0a5\u6761\u6027\u8d28\uff0c\u4f7f\u4e00\u68f5n\u4e2a\u7ed3\u70b9\u7684\u7ea2\u9ed1\u6811\u59cb\u7ec8\u4fdd\u6301\u4e86logn\u7684\u9ad8\u5ea6\uff0c\u4ece\u800c\u4e5f\u5c31\u89e3\u91ca\u4e86\u4e0a\u9762\u6240\u8bf4\u7684\u201c\u7ea2\u9ed1\u6811\u7684\u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u574f\u4e3aO(log n) \u67e5\u8be2\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(log2 N)\uff0c2\u4e3a\u5e95N\u7684\u5bf9\u6570\uff0c10\u4ebf\u6570\u636e\u6700\u574f\u60c5\u51b5\u9700\u898130\u6b21 \u5b58\u50a8\u6709\u5e8f\u7684\u6570\u636e\uff0c\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(lgn) C++ STL\u4e2d\u7684set\u3001map\uff0c\u4ee5\u53caLinux\u865a\u62df\u5185\u5b58\u7684\u7ba1\u7406","title":"\u6982\u5ff5"},{"location":"al/tree/#_5","text":"","title":"\u7ea2\u9ed1\u6811\u64cd\u4f5c"},{"location":"al/tree/#_6","text":"","title":"\u6dfb\u52a0"},{"location":"al/tree/#_7","text":"","title":"\u5220\u9664"},{"location":"code/code/","text":"\u4e00\u4e2a\u6e38\u620f\u670d\u52a1\u5668\u8bbe\u8ba1 \u7279\u70b9 \u73a9\u5bb6\u6570\u91cf\u5927\uff0c\u6eda\u670d\uff0c\u9891\u7e41\u5f00\u65b0\u670d \u6218\u6597\uff0c\u5bf9\u5c40\u5f00\u623f\u95f4\u5f0f\u7684 \u6a2a\u5411\u5212\u5206 \u57fa\u4e8e\u670d\u52a1\uff0c\u6bcf\u4e2a\u670d\u52a1\u91cc\u9762\u7684\u4e1a\u52a1\u5904\u7406\u662f\u5355\u7ebf\u7a0b\u7684 \u5982\u679c\u5355\u7ebf\u7a0b\u91cc\u4e0d\u80fd\u6ee1\u8db3\u4e1a\u52a1\u9700\u6c42\uff0c\u90a3\u4e48\u53ef\u4ee5\u91c7\u7528\u591a\u670d\u52a1\u7684\u6a21\u5f0f \u4e0d\u8981\u901a\u8fc7\u5171\u4eab\u5185\u5b58\u6765\u901a\u4fe1\uff0c\u8981\u901a\u8fc7\u901a\u4fe1\u6765\u5171\u4eab\u5185\u5b58 \u670d\u52a1\u7684\u8bbe\u8ba1 func (sc* Service) Init() { go sc.ioLoop() go sc.RunLoop() //\u7b80\u5355\u4ee3\u7801\uff0c \u6ca1\u8003\u8651\u505c\u6b62/\u9000\u51fa\u65f6\u60c5\u51b5 } func (sc* Service) PostMsg(msg interface{}){ //\u7b80\u5355\u4ee3\u7801\uff0c \u6ca1\u8003\u8651\u505c\u6b62/\u9000\u51fa\u65f6\u60c5\u51b5 sc.queue <- msg } func (sc* Service) ioLoop() { } func (sc* Service) runLoop(){ defer sc.exitLoop() for msg := range sc.queue { switch msg.(type){ case *MsgStop: return default: sc.ProcessMsg(msg) } } } func (sc* Service) ProcessMsg(msg){ switch msg.(type) { case *MsgTimer: //msg.TimerFunc(sc, msg.param...) case *MsgNetPacket: // some logic code // processNetMsg(msg) sc.mgr.GetNetService().PostMsg(&NetMsgMsg{ Head:head }) } } \u6d88\u606f\u961f\u5217 \u7f51\u7edc\u670d\u52a1 \u903b\u8f91\u670d\u52a1 Httpd / grpc, http \u670d\u52a1 \u751f\u6001\u65e5\u5fd7 \u7eb5\u5411\u5212\u5206 \u670d\u52a1\u53d1\u73b0 Gateway \u63a5\u5165 \u8d1f\u8d23\u7ef4\u62a4\u8fde\u63a5\uff0c\u6d88\u606f\u5206\u53d1 \u6536\u655b\u7f51\u7edc\u5165\u53e3 \u52a8\u6001\u5207\u6362\u540e\u7aef\u670d\u52a1 \u767b\u5f55 \u4e3b\u903b\u8f91 \u4e3b\u8981\u73a9\u6cd5(\u517b\u6210\uff0c\u4efb\u52a1\uff0c\u6d3b\u52a8...) \u7ed9\u670d\u52a1\u63d0\u4f9b\u57fa\u7840\u6570\u636e \u6218\u6597/\u623f\u95f4 \u670d\u52a1 \u8d1f\u8d23\u6838\u5fc3\u6218\u6597 \u7ef4\u62a4\u623f\u95f4\uff0c\u73a9\u5bb6\u72b6\u6001 \u6570\u636e\u5b58\u50a8 \u89e3\u8026\u4e1a\u52a1\u5c42\u6570\u636e\u7ed3\u6784 \u9002\u5e94\u6570\u636e\u5e93\u6539\u53d8 GM, \u5339\u914d\uff0c\u793e\u4ea4\u5176\u5b83\u670d\u52a1 - \u8f85\u52a9\u6027","title":"\u4e00\u4e2a\u6e38\u620f\u670d\u52a1\u5668\u8bbe\u8ba1"},{"location":"code/code/#_1","text":"","title":"\u4e00\u4e2a\u6e38\u620f\u670d\u52a1\u5668\u8bbe\u8ba1"},{"location":"code/code/#_2","text":"\u73a9\u5bb6\u6570\u91cf\u5927\uff0c\u6eda\u670d\uff0c\u9891\u7e41\u5f00\u65b0\u670d \u6218\u6597\uff0c\u5bf9\u5c40\u5f00\u623f\u95f4\u5f0f\u7684","title":"\u7279\u70b9"},{"location":"code/code/#_3","text":"\u57fa\u4e8e\u670d\u52a1\uff0c\u6bcf\u4e2a\u670d\u52a1\u91cc\u9762\u7684\u4e1a\u52a1\u5904\u7406\u662f\u5355\u7ebf\u7a0b\u7684 \u5982\u679c\u5355\u7ebf\u7a0b\u91cc\u4e0d\u80fd\u6ee1\u8db3\u4e1a\u52a1\u9700\u6c42\uff0c\u90a3\u4e48\u53ef\u4ee5\u91c7\u7528\u591a\u670d\u52a1\u7684\u6a21\u5f0f \u4e0d\u8981\u901a\u8fc7\u5171\u4eab\u5185\u5b58\u6765\u901a\u4fe1\uff0c\u8981\u901a\u8fc7\u901a\u4fe1\u6765\u5171\u4eab\u5185\u5b58 \u670d\u52a1\u7684\u8bbe\u8ba1 func (sc* Service) Init() { go sc.ioLoop() go sc.RunLoop() //\u7b80\u5355\u4ee3\u7801\uff0c \u6ca1\u8003\u8651\u505c\u6b62/\u9000\u51fa\u65f6\u60c5\u51b5 } func (sc* Service) PostMsg(msg interface{}){ //\u7b80\u5355\u4ee3\u7801\uff0c \u6ca1\u8003\u8651\u505c\u6b62/\u9000\u51fa\u65f6\u60c5\u51b5 sc.queue <- msg } func (sc* Service) ioLoop() { } func (sc* Service) runLoop(){ defer sc.exitLoop() for msg := range sc.queue { switch msg.(type){ case *MsgStop: return default: sc.ProcessMsg(msg) } } } func (sc* Service) ProcessMsg(msg){ switch msg.(type) { case *MsgTimer: //msg.TimerFunc(sc, msg.param...) case *MsgNetPacket: // some logic code // processNetMsg(msg) sc.mgr.GetNetService().PostMsg(&NetMsgMsg{ Head:head }) } }","title":"\u6a2a\u5411\u5212\u5206"},{"location":"code/code/#_4","text":"","title":"\u6d88\u606f\u961f\u5217"},{"location":"code/code/#_5","text":"","title":"\u7f51\u7edc\u670d\u52a1"},{"location":"code/code/#_6","text":"","title":"\u903b\u8f91\u670d\u52a1"},{"location":"code/code/#httpd-grpc-http","text":"","title":"Httpd / grpc, http \u670d\u52a1"},{"location":"code/code/#_7","text":"","title":"\u751f\u6001\u65e5\u5fd7"},{"location":"code/code/#_8","text":"","title":""},{"location":"code/code/#_9","text":"","title":"\u7eb5\u5411\u5212\u5206"},{"location":"code/code/#_10","text":"","title":"\u670d\u52a1\u53d1\u73b0"},{"location":"code/code/#gateway","text":"\u8d1f\u8d23\u7ef4\u62a4\u8fde\u63a5\uff0c\u6d88\u606f\u5206\u53d1 \u6536\u655b\u7f51\u7edc\u5165\u53e3 \u52a8\u6001\u5207\u6362\u540e\u7aef\u670d\u52a1","title":"Gateway \u63a5\u5165"},{"location":"code/code/#_11","text":"","title":"\u767b\u5f55"},{"location":"code/code/#_12","text":"\u4e3b\u8981\u73a9\u6cd5(\u517b\u6210\uff0c\u4efb\u52a1\uff0c\u6d3b\u52a8...) \u7ed9\u670d\u52a1\u63d0\u4f9b\u57fa\u7840\u6570\u636e","title":"\u4e3b\u903b\u8f91"},{"location":"code/code/#_13","text":"\u8d1f\u8d23\u6838\u5fc3\u6218\u6597 \u7ef4\u62a4\u623f\u95f4\uff0c\u73a9\u5bb6\u72b6\u6001","title":"\u6218\u6597/\u623f\u95f4 \u670d\u52a1"},{"location":"code/code/#_14","text":"\u89e3\u8026\u4e1a\u52a1\u5c42\u6570\u636e\u7ed3\u6784 \u9002\u5e94\u6570\u636e\u5e93\u6539\u53d8","title":"\u6570\u636e\u5b58\u50a8"},{"location":"code/code/#gm","text":"","title":"GM, \u5339\u914d\uff0c\u793e\u4ea4\u5176\u5b83\u670d\u52a1"},{"location":"code/code/#-","text":"","title":"- \u8f85\u52a9\u6027"},{"location":"cpp/cpp11/","text":"C++11 shared_ptr & weak_ptr & unique_ptr unique_ptr unique_ptr\u5bf9\u8c61\u59cb\u7ec8\u662f\u5173\u8054\u7684\u539f\u59cb\u6307\u9488\u7684\u552f\u4e00\u6240\u6709\u8005\u3002\u6211\u4eec\u65e0\u6cd5\u590d\u5236unique_ptr\u5bf9\u8c61\uff0c\u5b83\u53ea\u80fd\u79fb\u52a8\u3002 reset() \u91cd\u7f6eunique_ptr\u4e3a\u7a7a\uff0cdelete\u5176\u5173\u8054\u7684\u6307\u9488\u3002 release() \u4e0ddelete\u5173\u8054\u6307\u9488\uff0c\u5e76\u8fd4\u56de\u5173\u8054\u6307\u9488\u3002\u91ca\u653e\u5173\u8054\u6307\u9488\u7684\u6240\u6709\u6743\uff0cunique_ptr\u4e3a\u7a7a\u3002 get() \u4ec5\u4ec5\u8fd4\u56de\u5173\u8054\u6307\u9488 std::unique_ptr v1 = std::make_unique () (c++14) \u6784\u9020\u4e00\u4e2a shared_ptr \u7ba1\u7406\u5bf9\u8c61 class Test{} std::shared_ptr ps = std::make_shared (); //\u6307\u5b9a default_delete \u4f5c\u4e3a\u91ca\u653e\u89c4\u5219 std::shared_ptr p6(new int[10], std::default_delete ()); //\u521d\u59cb\u5316\u667a\u80fd\u6307\u9488\uff0c\u5e76\u81ea\u5b9a\u4e49\u91ca\u653e\u89c4\u5219 std::shared_ptr p7(new int[10], deleteInt); std::enable_shared_from_this \u5f53\u7c7bA\u88abshare_ptr\u7ba1\u7406\uff0c\u4e14\u5728\u7c7bA\u7684\u6210\u5458\u51fd\u6570\u91cc\u9700\u8981\u628a\u5f53\u524d\u7c7b\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9\u5176\u4ed6\u51fd\u6570\u65f6\uff0c\u5c31\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u6307\u5411\u81ea\u8eab\u7684share_ptr\u3002 \u5982\u679c\u76f4\u63a5\u4f20\u9012share_ptr \u4f1a\u9020\u62102\u4e2a\u975e\u5171\u4eab\u7684share_ptr\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u672a\u589e\u52a0\u5f15\u7528\u8ba1\u6570\u5bfc\u5bf9\u8c61\u88ab\u6790\u6784\u4e24\u6b21\u3002 std::move \u5de6\u503c\u4e0e\u53f3\u503c\u8fd9\u4e24\u4e2a\u6982\u5ff5\u662f\u4ece C \u4e2d\u4f20\u627f\u800c\u6765\u7684\uff0c\u5de6\u503c\u6307\u65e2\u80fd\u591f\u51fa\u73b0\u5728\u7b49\u53f7\u5de6\u8fb9\uff0c\u4e5f\u80fd\u51fa\u73b0\u5728\u7b49\u53f7\u53f3\u8fb9\u7684\u53d8\u91cf\uff1b\u53f3\u503c\u5219\u662f\u53ea\u80fd\u51fa\u73b0\u5728\u7b49\u53f7\u53f3\u8fb9\u7684\u53d8\u91cf\u3002 int a; // a \u4e3a\u5de6\u503c a = 3; // 3 \u4e3a\u53f3\u503c int&& i = 123; int&& j = std::move(i); int&& k = i;//\u7f16\u8bd1\u4e0d\u8fc7\uff0c\u8fd9\u91cci\u662f\u4e00\u4e2a\u5de6\u503c\uff0c\u53f3\u503c\u5f15\u7528\u53ea\u80fd\u5f15\u7528\u53f3\u503c \u5de6\u503c\u662f\u53ef\u5bfb\u5740\u7684\u53d8\u91cf\uff0c\u6709\u6301\u4e45\u6027\uff1b \u53f3\u503c\u4e00\u822c\u662f\u4e0d\u53ef\u5bfb\u5740\u7684\u5e38\u91cf\uff0c\u6216\u5728\u8868\u8fbe\u5f0f\u6c42\u503c\u8fc7\u7a0b\u4e2d\u521b\u5efa\u7684\u65e0\u540d\u4e34\u65f6\u5bf9\u8c61\uff0c\u77ed\u6682\u6027\u7684\u3002 \u5de6\u503c\u548c\u53f3\u503c\u4e3b\u8981\u7684\u533a\u522b\u4e4b\u4e00\u662f\u5de6\u503c\u53ef\u4ee5\u88ab\u4fee\u6539\uff0c\u800c\u53f3\u503c\u4e0d\u80fd \u8981\u5b9e\u73b0\u8f6c\u79fb\u8bed\u4e49\uff0c\u9700\u8981\u5b9a\u4e49\u8f6c\u79fb\u6784\u9020\u51fd\u6570\uff0c\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u8f6c\u79fb\u8d4b\u503c\u64cd\u4f5c\u7b26\u3002\u5bf9\u4e8e\u53f3\u503c\u7684\u62f7\u8d1d\u548c\u8d4b\u503c\u4f1a\u8c03\u7528\u8f6c\u79fb\u6784\u9020\u51fd\u6570\u548c\u8f6c\u79fb\u8d4b\u503c\u64cd\u4f5c\u7b26\u3002\u5982\u679c\u8f6c\u79fb\u6784\u9020\u51fd\u6570\u548c\u8f6c\u79fb\u62f7\u8d1d\u64cd\u4f5c\u7b26\u6ca1\u6709\u5b9a\u4e49\uff0c\u90a3\u4e48\u5c31\u9075\u5faa\u73b0\u6709\u7684\u673a\u5236\uff0c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u64cd\u4f5c\u7b26\u4f1a\u88ab\u8c03\u7528\u3002 std::forward std::bind & std::function std::function \u662f\u4e00\u4e2a\u53ef\u8c03\u7528\u5bf9\u8c61\u5305\u88c5\u5668\uff0c\u662f\u4e00\u4e2a\u7c7b\u6a21\u677f\uff0c\u53ef\u4ee5\u5bb9\u7eb3\u9664\u4e86\u7c7b\u6210\u5458\u51fd\u6570\u6307\u9488\u4e4b\u5916\u7684\u6240\u6709\u53ef\u8c03\u7528\u5bf9\u8c61\uff0c\u5b83\u53ef\u4ee5\u7528\u7edf\u4e00\u7684\u65b9\u5f0f\u5904\u7406\u51fd\u6570\u3001\u51fd\u6570\u5bf9\u8c61\u3001\u51fd\u6570\u6307\u9488\uff0c\u5e76\u5141\u8bb8\u4fdd\u5b58\u548c\u5ef6\u8fdf\u5b83\u4eec\u7684\u6267\u884c\u3002 \u5b9a\u4e49\u683c\u5f0f\uff1astd::function<\u51fd\u6570\u7c7b\u578b>\u3002 std::function\u53ef\u4ee5\u53d6\u4ee3\u51fd\u6570\u6307\u9488\u7684\u4f5c\u7528\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5ef6\u8fdf\u51fd\u6570\u7684\u6267\u884c\uff0c\u7279\u522b\u9002\u5408\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\u4f7f\u7528\u3002 std::bind\u51fd\u6570\u770b\u4f5c\u4e00\u4e2a\u901a\u7528\u7684\u51fd\u6570\u9002\u914d\u5668\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u53ef\u8c03\u7528\u5bf9\u8c61\uff0c\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u53ef\u8c03\u7528\u5bf9\u8c61\u6765\u201c\u9002\u5e94\u201d\u539f\u5bf9\u8c61\u7684\u53c2\u6570\u5217\u8868\u3002 std::bind\u5c06\u53ef\u8c03\u7528\u5bf9\u8c61\u4e0e\u5176\u53c2\u6570\u4e00\u8d77\u8fdb\u884c\u7ed1\u5b9a\uff0c\u7ed1\u5b9a\u540e\u7684\u7ed3\u679c\u53ef\u4ee5\u4f7f\u7528std::function\u4fdd\u5b58\u3002std::bind\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u4e2a\u4f5c\u7528\uff1a \u5c06\u53ef\u8c03\u7528\u5bf9\u8c61\u548c\u5176\u53c2\u6570\u7ed1\u5b9a\u6210\u4e00\u4e2a\u4eff\u51fd\u6570\uff1b \u53ea\u7ed1\u5b9a\u90e8\u5206\u53c2\u6570\uff0c\u51cf\u5c11\u53ef\u8c03\u7528\u5bf9\u8c61\u4f20\u5165\u7684\u53c2\u6570 std::placeholders lambda \u6355\u6349\u5217\u8868 mutable\u2014>\u8fd4\u56de\u503c\u7c7b\u578b{ \u51fd\u6570\u4f53 } [\u6355\u6349\u5217\u8868]\uff1a\u8be5\u5217\u8868\u603b\u662f\u51fa\u73b0\u5728lambda\u8868\u8fbe\u5f0f\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u7f16\u8bd1\u5668\u6839\u636e[]\u6765\u5224\u65ad\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u662f\u5426\u4e3alambda\u8868\u8fbe\u5f0f\uff0c\u6355\u6349\u5217\u8868\u80fd\u591f\u6355\u6349\u5f53\u524d\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\uff0c\u4f9blambda\u51fd\u6570\u4f7f\u7528\u3002 [val]\uff1a\u8868\u793a\u4ee5\u4f20\u503c\u65b9\u5f0f\u6355\u6349\u53d8\u91cfval [=]\uff1a\u8868\u793a\u4ee5\u4f20\u503c\u65b9\u5f0f\u6355\u6349\u5f53\u524d\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\uff0c\u5305\u62ecthis\u6307\u9488\u3002 [&val]\uff1a\u8868\u793a\u4ee5\u5f15\u7528\u65b9\u5f0f\u4f20\u9012\u6355\u6349\u53d8\u91cfval\u3002 [&]\uff1a\u8868\u793a\u4ee5\u5f15\u7528\u65b9\u5f0f\u4f20\u9012\u6355\u6349\u5f53\u524d\u4f5c\u7528\u57df\u4e2d\u7684\u6240\u6709\u53d8\u91cf\uff0c\u5305\u62ecthis\u6307\u9488\u3002 [this]\uff1a\u8868\u793a\u4ee5\u4f20\u503c\u65b9\u5f0f\u6355\u6349\u5f53\u524d\u7684this\u6307\u9488\u3002 (\u53c2\u6570)\uff1a\u53c2\u6570\u5217\u8868\u3002\u4e0e\u666e\u901a\u51fd\u6570\u53c2\u6570\u5217\u8868\u4f7f\u7528\u76f8\u540c\u3002\u5982\u679c\u4e0d\u9700\u8981\u4f20\u9012\u53c2\u6570\uff0c\u53ef\u4ee5\u8fde\u540c\"()\"\u4e00\u8d77\u7701\u7565\u3002 mutable\uff1a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0clambda\u51fd\u6570\u603b\u662f\u4e00\u4e2aconst\u51fd\u6570\uff0c\u6355\u6349\u7684\u4f20\u503c\u53c2\u6570\u5177\u6709\u5e38\u6027\uff0cmutable\u53ef\u4ee5\u53d6\u6d88\u5e38\u6027\u3002\u4f7f\u7528mutable\u4fee\u9970\u7b26\u65f6\uff0c\u53c2\u6570\u5217\u8868\u4e0d\u80fd\u7701\u7565\uff0c\u5373\u4f7f\u53c2\u6570\u4e3a\u7a7a\u3002 \u2014>\u8fd4\u56de\u503c\u7c7b\u578b\uff1a\u8fd4\u56de\u503c\u7c7b\u578b\u3002\u4f7f\u7528\u8ffd\u8e2a\u8fd4\u56de\u7c7b\u578b\u5f62\u5f0f\u58f0\u660e\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u6ca1\u6709\u8fd4\u56de\u503c\u6b64\u90e8\u5206\u53ef\u7701\u7565\u3002\u8fd4\u56de\u503c\u7c7b\u578b\u660e\u786e\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ef\u7701\u7565\uff0c\u7531\u7f16\u8bd1\u5668\u63a8\u5bfc\u3002 {\u51fd\u6570\u4f53}\uff1a\u5728\u51fd\u6570\u4f53\u5185\u9664\u4e86\u53ef\u4ee5\u4f7f\u7528\u53c2\u6570\u5916\uff0c\u8fd8\u80fd\u4f7f\u7528\u6355\u6349\u7684\u53d8\u91cf\u3002","title":"C++11"},{"location":"cpp/cpp11/#c11","text":"","title":"C++11"},{"location":"cpp/cpp11/#shared_ptr-weak_ptr-unique_ptr","text":"","title":"shared_ptr &amp; weak_ptr &amp; unique_ptr"},{"location":"cpp/cpp11/#unique_ptr","text":"unique_ptr\u5bf9\u8c61\u59cb\u7ec8\u662f\u5173\u8054\u7684\u539f\u59cb\u6307\u9488\u7684\u552f\u4e00\u6240\u6709\u8005\u3002\u6211\u4eec\u65e0\u6cd5\u590d\u5236unique_ptr\u5bf9\u8c61\uff0c\u5b83\u53ea\u80fd\u79fb\u52a8\u3002 reset() \u91cd\u7f6eunique_ptr\u4e3a\u7a7a\uff0cdelete\u5176\u5173\u8054\u7684\u6307\u9488\u3002 release() \u4e0ddelete\u5173\u8054\u6307\u9488\uff0c\u5e76\u8fd4\u56de\u5173\u8054\u6307\u9488\u3002\u91ca\u653e\u5173\u8054\u6307\u9488\u7684\u6240\u6709\u6743\uff0cunique_ptr\u4e3a\u7a7a\u3002 get() \u4ec5\u4ec5\u8fd4\u56de\u5173\u8054\u6307\u9488 std::unique_ptr v1 = std::make_unique () (c++14)","title":"unique_ptr"},{"location":"cpp/cpp11/#shared_ptr","text":"class Test{} std::shared_ptr ps = std::make_shared (); //\u6307\u5b9a default_delete \u4f5c\u4e3a\u91ca\u653e\u89c4\u5219 std::shared_ptr p6(new int[10], std::default_delete ()); //\u521d\u59cb\u5316\u667a\u80fd\u6307\u9488\uff0c\u5e76\u81ea\u5b9a\u4e49\u91ca\u653e\u89c4\u5219 std::shared_ptr p7(new int[10], deleteInt);","title":"\u6784\u9020\u4e00\u4e2a shared_ptr \u7ba1\u7406\u5bf9\u8c61"},{"location":"cpp/cpp11/#stdenable_shared_from_this","text":"\u5f53\u7c7bA\u88abshare_ptr\u7ba1\u7406\uff0c\u4e14\u5728\u7c7bA\u7684\u6210\u5458\u51fd\u6570\u91cc\u9700\u8981\u628a\u5f53\u524d\u7c7b\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9\u5176\u4ed6\u51fd\u6570\u65f6\uff0c\u5c31\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u6307\u5411\u81ea\u8eab\u7684share_ptr\u3002 \u5982\u679c\u76f4\u63a5\u4f20\u9012share_ptr \u4f1a\u9020\u62102\u4e2a\u975e\u5171\u4eab\u7684share_ptr\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u672a\u589e\u52a0\u5f15\u7528\u8ba1\u6570\u5bfc\u5bf9\u8c61\u88ab\u6790\u6784\u4e24\u6b21\u3002","title":"std::enable_shared_from_this"},{"location":"cpp/cpp11/#stdmove","text":"\u5de6\u503c\u4e0e\u53f3\u503c\u8fd9\u4e24\u4e2a\u6982\u5ff5\u662f\u4ece C \u4e2d\u4f20\u627f\u800c\u6765\u7684\uff0c\u5de6\u503c\u6307\u65e2\u80fd\u591f\u51fa\u73b0\u5728\u7b49\u53f7\u5de6\u8fb9\uff0c\u4e5f\u80fd\u51fa\u73b0\u5728\u7b49\u53f7\u53f3\u8fb9\u7684\u53d8\u91cf\uff1b\u53f3\u503c\u5219\u662f\u53ea\u80fd\u51fa\u73b0\u5728\u7b49\u53f7\u53f3\u8fb9\u7684\u53d8\u91cf\u3002 int a; // a \u4e3a\u5de6\u503c a = 3; // 3 \u4e3a\u53f3\u503c int&& i = 123; int&& j = std::move(i); int&& k = i;//\u7f16\u8bd1\u4e0d\u8fc7\uff0c\u8fd9\u91cci\u662f\u4e00\u4e2a\u5de6\u503c\uff0c\u53f3\u503c\u5f15\u7528\u53ea\u80fd\u5f15\u7528\u53f3\u503c \u5de6\u503c\u662f\u53ef\u5bfb\u5740\u7684\u53d8\u91cf\uff0c\u6709\u6301\u4e45\u6027\uff1b \u53f3\u503c\u4e00\u822c\u662f\u4e0d\u53ef\u5bfb\u5740\u7684\u5e38\u91cf\uff0c\u6216\u5728\u8868\u8fbe\u5f0f\u6c42\u503c\u8fc7\u7a0b\u4e2d\u521b\u5efa\u7684\u65e0\u540d\u4e34\u65f6\u5bf9\u8c61\uff0c\u77ed\u6682\u6027\u7684\u3002 \u5de6\u503c\u548c\u53f3\u503c\u4e3b\u8981\u7684\u533a\u522b\u4e4b\u4e00\u662f\u5de6\u503c\u53ef\u4ee5\u88ab\u4fee\u6539\uff0c\u800c\u53f3\u503c\u4e0d\u80fd \u8981\u5b9e\u73b0\u8f6c\u79fb\u8bed\u4e49\uff0c\u9700\u8981\u5b9a\u4e49\u8f6c\u79fb\u6784\u9020\u51fd\u6570\uff0c\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u8f6c\u79fb\u8d4b\u503c\u64cd\u4f5c\u7b26\u3002\u5bf9\u4e8e\u53f3\u503c\u7684\u62f7\u8d1d\u548c\u8d4b\u503c\u4f1a\u8c03\u7528\u8f6c\u79fb\u6784\u9020\u51fd\u6570\u548c\u8f6c\u79fb\u8d4b\u503c\u64cd\u4f5c\u7b26\u3002\u5982\u679c\u8f6c\u79fb\u6784\u9020\u51fd\u6570\u548c\u8f6c\u79fb\u62f7\u8d1d\u64cd\u4f5c\u7b26\u6ca1\u6709\u5b9a\u4e49\uff0c\u90a3\u4e48\u5c31\u9075\u5faa\u73b0\u6709\u7684\u673a\u5236\uff0c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u64cd\u4f5c\u7b26\u4f1a\u88ab\u8c03\u7528\u3002","title":"std::move"},{"location":"cpp/cpp11/#stdforward","text":"","title":"std::forward"},{"location":"cpp/cpp11/#stdbind-stdfunction","text":"std::function \u662f\u4e00\u4e2a\u53ef\u8c03\u7528\u5bf9\u8c61\u5305\u88c5\u5668\uff0c\u662f\u4e00\u4e2a\u7c7b\u6a21\u677f\uff0c\u53ef\u4ee5\u5bb9\u7eb3\u9664\u4e86\u7c7b\u6210\u5458\u51fd\u6570\u6307\u9488\u4e4b\u5916\u7684\u6240\u6709\u53ef\u8c03\u7528\u5bf9\u8c61\uff0c\u5b83\u53ef\u4ee5\u7528\u7edf\u4e00\u7684\u65b9\u5f0f\u5904\u7406\u51fd\u6570\u3001\u51fd\u6570\u5bf9\u8c61\u3001\u51fd\u6570\u6307\u9488\uff0c\u5e76\u5141\u8bb8\u4fdd\u5b58\u548c\u5ef6\u8fdf\u5b83\u4eec\u7684\u6267\u884c\u3002 \u5b9a\u4e49\u683c\u5f0f\uff1astd::function<\u51fd\u6570\u7c7b\u578b>\u3002 std::function\u53ef\u4ee5\u53d6\u4ee3\u51fd\u6570\u6307\u9488\u7684\u4f5c\u7528\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5ef6\u8fdf\u51fd\u6570\u7684\u6267\u884c\uff0c\u7279\u522b\u9002\u5408\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\u4f7f\u7528\u3002 std::bind\u51fd\u6570\u770b\u4f5c\u4e00\u4e2a\u901a\u7528\u7684\u51fd\u6570\u9002\u914d\u5668\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u53ef\u8c03\u7528\u5bf9\u8c61\uff0c\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u53ef\u8c03\u7528\u5bf9\u8c61\u6765\u201c\u9002\u5e94\u201d\u539f\u5bf9\u8c61\u7684\u53c2\u6570\u5217\u8868\u3002 std::bind\u5c06\u53ef\u8c03\u7528\u5bf9\u8c61\u4e0e\u5176\u53c2\u6570\u4e00\u8d77\u8fdb\u884c\u7ed1\u5b9a\uff0c\u7ed1\u5b9a\u540e\u7684\u7ed3\u679c\u53ef\u4ee5\u4f7f\u7528std::function\u4fdd\u5b58\u3002std::bind\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u4e2a\u4f5c\u7528\uff1a \u5c06\u53ef\u8c03\u7528\u5bf9\u8c61\u548c\u5176\u53c2\u6570\u7ed1\u5b9a\u6210\u4e00\u4e2a\u4eff\u51fd\u6570\uff1b \u53ea\u7ed1\u5b9a\u90e8\u5206\u53c2\u6570\uff0c\u51cf\u5c11\u53ef\u8c03\u7528\u5bf9\u8c61\u4f20\u5165\u7684\u53c2\u6570 std::placeholders","title":"std::bind &amp; std::function"},{"location":"cpp/cpp11/#lambda","text":"\u6355\u6349\u5217\u8868 mutable\u2014>\u8fd4\u56de\u503c\u7c7b\u578b{ \u51fd\u6570\u4f53 } [\u6355\u6349\u5217\u8868]\uff1a\u8be5\u5217\u8868\u603b\u662f\u51fa\u73b0\u5728lambda\u8868\u8fbe\u5f0f\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u7f16\u8bd1\u5668\u6839\u636e[]\u6765\u5224\u65ad\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u662f\u5426\u4e3alambda\u8868\u8fbe\u5f0f\uff0c\u6355\u6349\u5217\u8868\u80fd\u591f\u6355\u6349\u5f53\u524d\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\uff0c\u4f9blambda\u51fd\u6570\u4f7f\u7528\u3002 [val]\uff1a\u8868\u793a\u4ee5\u4f20\u503c\u65b9\u5f0f\u6355\u6349\u53d8\u91cfval [=]\uff1a\u8868\u793a\u4ee5\u4f20\u503c\u65b9\u5f0f\u6355\u6349\u5f53\u524d\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\uff0c\u5305\u62ecthis\u6307\u9488\u3002 [&val]\uff1a\u8868\u793a\u4ee5\u5f15\u7528\u65b9\u5f0f\u4f20\u9012\u6355\u6349\u53d8\u91cfval\u3002 [&]\uff1a\u8868\u793a\u4ee5\u5f15\u7528\u65b9\u5f0f\u4f20\u9012\u6355\u6349\u5f53\u524d\u4f5c\u7528\u57df\u4e2d\u7684\u6240\u6709\u53d8\u91cf\uff0c\u5305\u62ecthis\u6307\u9488\u3002 [this]\uff1a\u8868\u793a\u4ee5\u4f20\u503c\u65b9\u5f0f\u6355\u6349\u5f53\u524d\u7684this\u6307\u9488\u3002 (\u53c2\u6570)\uff1a\u53c2\u6570\u5217\u8868\u3002\u4e0e\u666e\u901a\u51fd\u6570\u53c2\u6570\u5217\u8868\u4f7f\u7528\u76f8\u540c\u3002\u5982\u679c\u4e0d\u9700\u8981\u4f20\u9012\u53c2\u6570\uff0c\u53ef\u4ee5\u8fde\u540c\"()\"\u4e00\u8d77\u7701\u7565\u3002 mutable\uff1a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0clambda\u51fd\u6570\u603b\u662f\u4e00\u4e2aconst\u51fd\u6570\uff0c\u6355\u6349\u7684\u4f20\u503c\u53c2\u6570\u5177\u6709\u5e38\u6027\uff0cmutable\u53ef\u4ee5\u53d6\u6d88\u5e38\u6027\u3002\u4f7f\u7528mutable\u4fee\u9970\u7b26\u65f6\uff0c\u53c2\u6570\u5217\u8868\u4e0d\u80fd\u7701\u7565\uff0c\u5373\u4f7f\u53c2\u6570\u4e3a\u7a7a\u3002 \u2014>\u8fd4\u56de\u503c\u7c7b\u578b\uff1a\u8fd4\u56de\u503c\u7c7b\u578b\u3002\u4f7f\u7528\u8ffd\u8e2a\u8fd4\u56de\u7c7b\u578b\u5f62\u5f0f\u58f0\u660e\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u6ca1\u6709\u8fd4\u56de\u503c\u6b64\u90e8\u5206\u53ef\u7701\u7565\u3002\u8fd4\u56de\u503c\u7c7b\u578b\u660e\u786e\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ef\u7701\u7565\uff0c\u7531\u7f16\u8bd1\u5668\u63a8\u5bfc\u3002 {\u51fd\u6570\u4f53}\uff1a\u5728\u51fd\u6570\u4f53\u5185\u9664\u4e86\u53ef\u4ee5\u4f7f\u7528\u53c2\u6570\u5916\uff0c\u8fd8\u80fd\u4f7f\u7528\u6355\u6349\u7684\u53d8\u91cf\u3002","title":"lambda"},{"location":"cpp/knowledge/","text":"violatile violatile\u5173\u952e\u5b57\u901a\u5e38\u7528\u6765\u4fee\u9970\u591a\u7ebf\u7a0b\u5171\u4eab\u7684\u5168\u5c40\u53d8\u91cf\u548cIO\u5185\u5b58\u3002\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u4e0d\u8981\u628a\u6b64\u7c7b\u53d8\u91cf\u4f18\u5316\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u6bcf\u6b21\u90fd\u8981\u8001\u8001\u5b9e\u5b9e\u7684\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6 define\u548cinline\u51fd\u6570\u6709\u4ec0\u4e48\u5dee\u522b define\u4e0d\u662f\u51fd\u6570\uff0c\u53ea\u662f\u5728\u7f16\u8bd1\u524d\uff08\u7f16\u8bd1\u9884\u5904\u7406\u9636\u6bb5\uff09\u505a\u7b80\u5355\u7684\u5b57\u7b26\u66ff\u6362\uff0c\u4e14\u4e0d\u505a\u7c7b\u578b\u68c0\u67e5\u3002 inline\u51fd\u6570\u662f\u51fd\u6570\uff0c\u4f46\u5728\u7f16\u8bd1\u65f6\u4e0d\u5355\u72ec\u4ea7\u751f\u4ee3\u7801\uff0c\u800c\u662f\u5c06\u4ee3\u7801\u76f4\u63a5\u9576\u5d4c\u5230\u8c03\u7528\u5904\uff0c\u51cf\u5c11\u4e86\u666e\u901a\u51fd\u6570\u8c03\u7528\u65f6\u7684\u8d44\u6e90\u6d88\u8017\uff0c\u4e14inline\u51fd\u6570\u56e0\u4e3a\u662f\u51fd\u6570\u6240\u4ee5\u8981\u505a\u53c2\u6570\u7c7b\u578b\u68c0\u67e5\u3002\u4e00\u822c\u7684\uff0c\u5f53\u4e00\u4e2a\u7b80\u5355\u51fd\u6570\uff08\u51fd\u6570\u5185\u4e0d\u5305\u542bfor\u3001while\u3001switch\u8bed\u53e5\uff09\u88ab\u591a\u6b21\u8c03\u7528\u65f6\uff0c\u5c31\u5e94\u8be5\u8003\u8651\u7528inline\u3002 \u7ed3\u6784\u4f53\u4e2d\u4f4d\u57df\u7684\u5bf9\u9f50\uff1a 1\uff09 \u5982\u679c\u76f8\u90bb\u4f4d\u57df\u5b57\u6bb5\u7684\u7c7b\u578b\u76f8\u540c\uff0c\u4e14\u5176\u4f4d\u5bbd\u4e4b\u548c\u5c0f\u4e8e\u7c7b\u578b\u7684 sizeof \u5927\u5c0f\uff0c\u5219\u540e\u9762\u7684\u5b57\u6bb5\u5c06\u7d27\u90bb\u524d\u4e00\u4e2a\u5b57\u6bb5\u5b58\u50a8\uff0c\u76f4\u5230\u4e0d\u80fd\u5bb9\u7eb3\u4e3a\u6b62\uff1b 2\uff09 \u5982\u679c\u76f8\u90bb\u4f4d\u57df\u5b57\u6bb5\u7684\u7c7b\u578b\u76f8\u540c\uff0c\u4f46\u5176\u4f4d\u5bbd\u4e4b\u548c\u5927\u4e8e\u7c7b\u578b\u7684 sizeof \u5927\u5c0f\uff0c\u5219\u540e\u9762\u7684\u5b57\u6bb5\u5c06\u4ece\u65b0\u7684\u5b58\u50a8\u5355\u5143\u5f00\u59cb\uff0c\u5176\u504f\u79fb\u91cf\u4e3a\u5176\u7c7b\u578b\u5927\u5c0f\u7684\u6574\u6570\u500d\uff1b 3\uff09 \u5982\u679c\u76f8\u90bb\u7684\u4f4d\u57df\u5b57\u6bb5\u7684\u7c7b\u578b\u4e0d\u540c\uff0c\u5219\u5404\u7f16\u8bd1\u5668\u7684\u5177\u4f53\u5b9e\u73b0\u6709\u5dee\u5f02\uff0c VC6 \u91c7\u53d6\u4e0d\u538b\u7f29\u65b9\u5f0f\uff08\u4e0d\u540c\u4f4d\u57df\u5b57\u6bb5\u5b58\u653e\u5728\u4e0d\u540c\u7684\u4f4d\u57df\u7c7b\u578b\u5b57\u8282\u4e2d\uff09\uff0c Dev-C++ \u548c GCC \u90fd\u91c7\u53d6\u538b\u7f29\u65b9\u5f0f\uff1b 4\uff09 \u5982\u679c\u4f4d\u57df\u5b57\u6bb5\u4e4b\u95f4\u7a7f\u63d2\u7740\u975e\u4f4d\u57df\u5b57\u6bb5\uff0c\u5219\u4e0d\u8fdb\u884c\u538b\u7f29\u3002 \u5185\u5b58\u6cc4\u9732 htop top \u67e5\u770b\u5185\u5b58\u589e\u957f \u91cd\u8f7d\u5185\u5b58\u5206\u914d\u91ca\u653e malloc/free new/delete hook \u65b9\u5f0fdlsym addr2line \u7f16\u8bd1\u5668\u9009\u9879 ASAN ## \u4e09\u65b9\u5de5\u5177 Valgrind \u624b\u52a8\u68c0\u6d4b","title":"Knowledge Point"},{"location":"cpp/knowledge/#violatile","text":"violatile\u5173\u952e\u5b57\u901a\u5e38\u7528\u6765\u4fee\u9970\u591a\u7ebf\u7a0b\u5171\u4eab\u7684\u5168\u5c40\u53d8\u91cf\u548cIO\u5185\u5b58\u3002\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u4e0d\u8981\u628a\u6b64\u7c7b\u53d8\u91cf\u4f18\u5316\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u6bcf\u6b21\u90fd\u8981\u8001\u8001\u5b9e\u5b9e\u7684\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6","title":"violatile"},{"location":"cpp/knowledge/#defineinline","text":"define\u4e0d\u662f\u51fd\u6570\uff0c\u53ea\u662f\u5728\u7f16\u8bd1\u524d\uff08\u7f16\u8bd1\u9884\u5904\u7406\u9636\u6bb5\uff09\u505a\u7b80\u5355\u7684\u5b57\u7b26\u66ff\u6362\uff0c\u4e14\u4e0d\u505a\u7c7b\u578b\u68c0\u67e5\u3002 inline\u51fd\u6570\u662f\u51fd\u6570\uff0c\u4f46\u5728\u7f16\u8bd1\u65f6\u4e0d\u5355\u72ec\u4ea7\u751f\u4ee3\u7801\uff0c\u800c\u662f\u5c06\u4ee3\u7801\u76f4\u63a5\u9576\u5d4c\u5230\u8c03\u7528\u5904\uff0c\u51cf\u5c11\u4e86\u666e\u901a\u51fd\u6570\u8c03\u7528\u65f6\u7684\u8d44\u6e90\u6d88\u8017\uff0c\u4e14inline\u51fd\u6570\u56e0\u4e3a\u662f\u51fd\u6570\u6240\u4ee5\u8981\u505a\u53c2\u6570\u7c7b\u578b\u68c0\u67e5\u3002\u4e00\u822c\u7684\uff0c\u5f53\u4e00\u4e2a\u7b80\u5355\u51fd\u6570\uff08\u51fd\u6570\u5185\u4e0d\u5305\u542bfor\u3001while\u3001switch\u8bed\u53e5\uff09\u88ab\u591a\u6b21\u8c03\u7528\u65f6\uff0c\u5c31\u5e94\u8be5\u8003\u8651\u7528inline\u3002","title":"define\u548cinline\u51fd\u6570\u6709\u4ec0\u4e48\u5dee\u522b"},{"location":"cpp/knowledge/#_1","text":"1\uff09 \u5982\u679c\u76f8\u90bb\u4f4d\u57df\u5b57\u6bb5\u7684\u7c7b\u578b\u76f8\u540c\uff0c\u4e14\u5176\u4f4d\u5bbd\u4e4b\u548c\u5c0f\u4e8e\u7c7b\u578b\u7684 sizeof \u5927\u5c0f\uff0c\u5219\u540e\u9762\u7684\u5b57\u6bb5\u5c06\u7d27\u90bb\u524d\u4e00\u4e2a\u5b57\u6bb5\u5b58\u50a8\uff0c\u76f4\u5230\u4e0d\u80fd\u5bb9\u7eb3\u4e3a\u6b62\uff1b 2\uff09 \u5982\u679c\u76f8\u90bb\u4f4d\u57df\u5b57\u6bb5\u7684\u7c7b\u578b\u76f8\u540c\uff0c\u4f46\u5176\u4f4d\u5bbd\u4e4b\u548c\u5927\u4e8e\u7c7b\u578b\u7684 sizeof \u5927\u5c0f\uff0c\u5219\u540e\u9762\u7684\u5b57\u6bb5\u5c06\u4ece\u65b0\u7684\u5b58\u50a8\u5355\u5143\u5f00\u59cb\uff0c\u5176\u504f\u79fb\u91cf\u4e3a\u5176\u7c7b\u578b\u5927\u5c0f\u7684\u6574\u6570\u500d\uff1b 3\uff09 \u5982\u679c\u76f8\u90bb\u7684\u4f4d\u57df\u5b57\u6bb5\u7684\u7c7b\u578b\u4e0d\u540c\uff0c\u5219\u5404\u7f16\u8bd1\u5668\u7684\u5177\u4f53\u5b9e\u73b0\u6709\u5dee\u5f02\uff0c VC6 \u91c7\u53d6\u4e0d\u538b\u7f29\u65b9\u5f0f\uff08\u4e0d\u540c\u4f4d\u57df\u5b57\u6bb5\u5b58\u653e\u5728\u4e0d\u540c\u7684\u4f4d\u57df\u7c7b\u578b\u5b57\u8282\u4e2d\uff09\uff0c Dev-C++ \u548c GCC \u90fd\u91c7\u53d6\u538b\u7f29\u65b9\u5f0f\uff1b 4\uff09 \u5982\u679c\u4f4d\u57df\u5b57\u6bb5\u4e4b\u95f4\u7a7f\u63d2\u7740\u975e\u4f4d\u57df\u5b57\u6bb5\uff0c\u5219\u4e0d\u8fdb\u884c\u538b\u7f29\u3002","title":"\u7ed3\u6784\u4f53\u4e2d\u4f4d\u57df\u7684\u5bf9\u9f50\uff1a"},{"location":"cpp/knowledge/#_2","text":"htop top \u67e5\u770b\u5185\u5b58\u589e\u957f \u91cd\u8f7d\u5185\u5b58\u5206\u914d\u91ca\u653e malloc/free new/delete hook \u65b9\u5f0fdlsym addr2line","title":"\u5185\u5b58\u6cc4\u9732"},{"location":"cpp/knowledge/#_3","text":"ASAN ## \u4e09\u65b9\u5de5\u5177 Valgrind","title":"\u7f16\u8bd1\u5668\u9009\u9879"},{"location":"cpp/knowledge/#_4","text":"","title":"\u624b\u52a8\u68c0\u6d4b"},{"location":"cpp/thread_lock/","text":"Lock std::lock_guard \u4f5c\u7528\u57df\u5757\u671f\u95f4\u5360\u6709\u4e92\u65a5\u63d0\u4f9b\u4fbf\u5229 RAII \u98ce\u683c\u673a\u5236\u3002 std::unique_lock \u5141\u8bb8\u5ef6\u8fdf\u9501\u5b9a\u3001\u9501\u5b9a\u7684\u6709\u65f6\u9650\u5c1d\u8bd5\u3001\u9012\u5f52\u9501\u5b9a\u3001\u6240\u6709\u6743\u8f6c\u79fb\u548c\u4e0e\u6761\u4ef6\u53d8\u91cf\u4e00\u540c\u4f7f\u7528\u3002 \u53ef\u4ee5\u624b\u52a8\u89e3\u9501\u3002","title":"Lock"},{"location":"cpp/thread_lock/#lock","text":"","title":"Lock"},{"location":"cpp/thread_lock/#stdlock_guard","text":"\u4f5c\u7528\u57df\u5757\u671f\u95f4\u5360\u6709\u4e92\u65a5\u63d0\u4f9b\u4fbf\u5229 RAII \u98ce\u683c\u673a\u5236\u3002","title":"std::lock_guard"},{"location":"cpp/thread_lock/#stdunique_lock","text":"\u5141\u8bb8\u5ef6\u8fdf\u9501\u5b9a\u3001\u9501\u5b9a\u7684\u6709\u65f6\u9650\u5c1d\u8bd5\u3001\u9012\u5f52\u9501\u5b9a\u3001\u6240\u6709\u6743\u8f6c\u79fb\u548c\u4e0e\u6761\u4ef6\u53d8\u91cf\u4e00\u540c\u4f7f\u7528\u3002 \u53ef\u4ee5\u624b\u52a8\u89e3\u9501\u3002","title":"std::unique_lock"},{"location":"db/db/","text":"Database MongoDB","title":"Database"},{"location":"db/db/#database","text":"","title":"Database"},{"location":"db/db/#mongodb","text":"","title":"MongoDB"},{"location":"db/kv/","text":"Redis scan \u5b57\u7b26\u4e32\u7c7b\u578b\uff1a\u5b83\u7684big\u4f53\u73b0\u5728\u5355\u4e2avalue\u503c\u5f88\u5927\uff0c\u4e00\u822c\u8ba4\u4e3a\u8d85\u8fc710KB\u5c31\u662fbigkey\u3002 \u975e\u5b57\u7b26\u4e32\u7c7b\u578b\uff1a\u54c8\u5e0c\u3001\u5217\u8868\u3001\u96c6\u5408\u3001\u6709\u5e8f\u96c6\u5408\uff0c\u5b83\u4eec\u7684big\u4f53\u73b0\u5728\u5143\u7d20\u4e2a\u6570\u592a\u591a\u3002\u4e00\u6b21\u6027\u53d6\u51fa\u65f6 redis-cli --bigkeys \u6709\u98ce\u9669! \u5728slave \u672c\u673a\u6267\u884c\uff0c\u907f\u514d\u7f51\u7edc\u5f00\u9500 \u53ef\u4ee5\u4f7f\u7528 --i 0.1 \u4ee3\u8868100\u6beb\u79d2\u6267\u884c\u4e00\u6b21 debug object ${key}\u547d\u4ee4\u83b7\u53d6\u952e\u503c\u7684\u76f8\u5173\u4fe1\u606f \u6570\u636e\u7c7b\u578b\u548c\u5e95\u5c42\u6570\u636e\u7ed3\u6784 + \u5b57\u7b26\u4e32String + int \u7f16\u7801\uff1a\u4fdd\u5b58\u7684\u662f\u53ef\u4ee5\u7528 long \u7c7b\u578b\u8868\u793a\u7684\u6574\u6570\u503c\u3002 + embstr \u7f16\u7801\uff1a\u4fdd\u5b58\u957f\u5ea6\u5c0f\u4e8e44\u5b57\u8282\u7684\u5b57\u7b26\u4e32\uff08before redis3.2 39\u5b57\u8282\uff09\u3002 + raw \u7f16\u7801\uff1a\u4fdd\u5b58\u957f\u5ea6\u5927\u4e8e44\u5b57\u8282\u7684\u5b57\u7b26\u4e32\uff08before redis3.2 39\u5b57\u8282\uff09\u3002 + \u96c6\u5408Set + \u54c8\u5e0cHash + \u5217\u8868List + \u6709\u5e8f\u96c6SortedSet + \u4f7f\u7528ziplist \u7f16\u7801\uff1a\u4fdd\u5b58\u7684\u5143\u7d20\u6570\u91cf\u5c0f\u4e8e128\uff1b \u4fdd\u5b58\u7684\u6240\u6709\u5143\u7d20\u957f\u5ea6\u90fd\u5c0f\u4e8e64\u5b57\u8282 + \u5176\u5b9e\u6709\u5e8f\u96c6\u5408\u5355\u72ec\u4f7f\u7528\u5b57\u5178\u6216\u8df3\u8dc3\u8868\u5176\u4e2d\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u90fd\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4f46\u662f\u8fd9\u91cc\u4f7f\u7528\u4e24\u79cd\u6570\u636e\u7ed3\u6784\u7ec4\u5408\u8d77\u6765\uff0c\u539f\u56e0\u662f\u5047\u5982\u6211\u4eec\u5355\u72ec\u4f7f\u7528 \u5b57\u5178\uff0c\u867d\u7136\u80fd \u4ee5 O(1) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u67e5\u627e\u6210\u5458\u7684\u5206\u503c\uff0c\u4f46\u662f\u56e0\u4e3a\u5b57\u5178\u662f\u4ee5\u65e0\u5e8f\u7684\u65b9\u5f0f\u6765\u4fdd\u5b58\u96c6\u5408\u5143\u7d20\uff0c\u6240\u4ee5\u6bcf\u6b21\u8fdb\u884c\u8303\u56f4\u64cd\u4f5c\u7684\u65f6\u5019\u90fd\u8981\u8fdb\u884c\u6392\u5e8f\uff1b\u5047\u5982\u6211\u4eec\u5355\u72ec\u4f7f\u7528\u8df3\u8dc3\u8868\u6765\u5b9e\u73b0\uff0c\u867d\u7136\u80fd\u6267\u884c\u8303\u56f4\u64cd\u4f5c\uff0c\u4f46\u662f\u67e5\u627e\u64cd\u4f5c\u6709 O(1)\u7684\u590d\u6742\u5ea6\u53d8\u4e3a\u4e86O(logN) \u7b80\u5355\u52a8\u6001\u5b57\u7b26\u4e32\uff08SDS\uff09 \u5b57\u5178 \u94fe\u8868 \u8df3\u8dc3\u8868 \u6709\u5f88\u591a\u5c42\u7ec4\u6210\uff0c\u7531\u4e0a\u5230\u4e0b\u8282\u70b9\u6570\u9010\u6e10\u5bc6\u96c6\uff0c\u6700\u4e0a\u5c42\u7684\u8282\u70b9\u6700\u7a00\u758f\uff0c\u8de8\u5ea6\u4e5f\u6700\u5927\u3002 \u6bcf\u4e00\u5c42\u90fd\u662f\u4e00\u4e2a\u6709\u5e8f\u94fe\u8868\uff0c\u53ea\u626b\u5305\u542b\u4e24\u4e2a\u8282\u70b9\uff0c\u5934\u8282\u70b9\u548c\u5c3e\u8282\u70b9\u3002 \u6bcf\u4e00\u5c42\u7684\u6bcf\u4e00\u4e2a\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u542b\u6709\u6307\u5411\u540c\u4e00\u5c42\u4e0b\u4e00\u4e2a\u8282\u70b9\u548c\u4e0b\u4e00\u5c42\u540c\u4e00\u4e2a\u4f4d\u7f6e\u8282\u70b9\u7684\u6307\u9488\u3002 \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u5728\u67d0\u4e00\u5c42\u51fa\u73b0\uff0c\u90a3\u4e48\u8be5\u4ee5\u4e0b\u7684\u6240\u6709\u94fe\u8868\u540c\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u4f1a\u51fa\u73b0\u8be5\u8282\u70b9\u3002 \u6574\u6570\u96c6\u5408 \u538b\u7f29\u5217\u8868 Redis\u505a\u5f02\u6b65\u961f\u5217\u4e48 \u4f7f\u7528list\u7ed3\u6784\u4f5c\u4e3a\u961f\u5217\uff0crpush\u751f\u4ea7\u6d88\u606f\uff0clpop\u6d88\u8d39\u6d88\u606f\u3002\u5f53lpop\u6ca1\u6709\u6d88\u606f\u7684\u65f6\u5019\uff0c\u8981\u9002\u5f53sleep\u4e00\u4f1a\u518d\u91cd\u8bd5\u3002 \u53ef\u4e0d\u53ef\u4ee5\u4e0d\u7528sleep\u5462\uff1flist\u8fd8\u6709\u4e2a\u6307\u4ee4\u53ebblpop\uff0c\u5728\u6ca1\u6709\u6d88\u606f\u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u963b\u585e\u4f4f\u76f4\u5230\u6d88\u606f\u5230\u6765\u3002 \u80fd\u4e0d\u80fd\u751f\u4ea7\u4e00\u6b21\u6d88\u8d39\u591a\u6b21\u5462\uff1f\u4f7f\u7528pub/sub\u4e3b\u9898\u8ba2\u9605\u8005\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5b9e\u73b01:N\u7684\u6d88\u606f\u961f\u5217\u3002 pub/sub\u6709\u4ec0\u4e48\u7f3a\u70b9\uff1f\u5728\u6d88\u8d39\u8005\u4e0b\u7ebf\u7684\u60c5\u51b5\u4e0b\uff0c\u751f\u4ea7\u7684\u6d88\u606f\u4f1a\u4e22\u5931\uff0c\u5f97\u4f7f\u7528\u4e13\u4e1a\u7684\u6d88\u606f\u961f\u5217\u5982rabbitmq\u7b49\u3002 redis\u5982\u4f55\u5b9e\u73b0\u5ef6\u65f6\u961f\u5217 \u4f7f\u7528sortedset\uff0c\u62ff\u65f6\u95f4\u6233\u4f5c\u4e3ascore\uff0c\u6d88\u606f\u5185\u5bb9\u4f5c\u4e3akey\u8c03\u7528zadd\u6765\u751f\u4ea7\u6d88\u606f\uff0c\u6d88\u8d39\u8005\u7528zrangebyscore\u6307\u4ee4\u83b7\u53d6N\u79d2\u4e4b\u524d\u7684\u6570\u636e\u8f6e\u8be2\u8fdb\u884c\u5904\u7406\u3002 LevelDB -> RocksDb -> TiDB LevelDB \u8fd9\u4e0d\u662f\u4e00\u4e2a SQL \u6570\u636e\u5e93\uff0c\u5b83\u6ca1\u6709\u5173\u7cfb\u6570\u636e\u6a21\u578b\uff0c\u4e0d\u652f\u6301 SQL \u67e5\u8be2\uff0c\u4e5f\u4e0d\u652f\u6301\u7d22\u5f15\u3002 \u540c\u65f6\u53ea\u80fd\u6709\u4e00\u4e2a\u8fdb\u7a0b\u8bbf\u95ee\u4e00\u4e2a\u7279\u5b9a\u7684\u6570\u636e\u5e93\u3002 \u6ca1\u6709\u5185\u7f6e\u7684 client-server \u652f\u6301\u3002 \u76f8\u5bf9\u4e8eRedis \uff0c \u5b83\u53ea\u652f\u6301Key-Value \uff0c\u6570\u636e\u7c7b\u578b\u5c11\u3002","title":"KV"},{"location":"db/kv/#redis","text":"scan \u5b57\u7b26\u4e32\u7c7b\u578b\uff1a\u5b83\u7684big\u4f53\u73b0\u5728\u5355\u4e2avalue\u503c\u5f88\u5927\uff0c\u4e00\u822c\u8ba4\u4e3a\u8d85\u8fc710KB\u5c31\u662fbigkey\u3002 \u975e\u5b57\u7b26\u4e32\u7c7b\u578b\uff1a\u54c8\u5e0c\u3001\u5217\u8868\u3001\u96c6\u5408\u3001\u6709\u5e8f\u96c6\u5408\uff0c\u5b83\u4eec\u7684big\u4f53\u73b0\u5728\u5143\u7d20\u4e2a\u6570\u592a\u591a\u3002\u4e00\u6b21\u6027\u53d6\u51fa\u65f6 redis-cli --bigkeys \u6709\u98ce\u9669! \u5728slave \u672c\u673a\u6267\u884c\uff0c\u907f\u514d\u7f51\u7edc\u5f00\u9500 \u53ef\u4ee5\u4f7f\u7528 --i 0.1 \u4ee3\u8868100\u6beb\u79d2\u6267\u884c\u4e00\u6b21 debug object ${key}\u547d\u4ee4\u83b7\u53d6\u952e\u503c\u7684\u76f8\u5173\u4fe1\u606f","title":"Redis"},{"location":"db/kv/#_1","text":"+ \u5b57\u7b26\u4e32String + int \u7f16\u7801\uff1a\u4fdd\u5b58\u7684\u662f\u53ef\u4ee5\u7528 long \u7c7b\u578b\u8868\u793a\u7684\u6574\u6570\u503c\u3002 + embstr \u7f16\u7801\uff1a\u4fdd\u5b58\u957f\u5ea6\u5c0f\u4e8e44\u5b57\u8282\u7684\u5b57\u7b26\u4e32\uff08before redis3.2 39\u5b57\u8282\uff09\u3002 + raw \u7f16\u7801\uff1a\u4fdd\u5b58\u957f\u5ea6\u5927\u4e8e44\u5b57\u8282\u7684\u5b57\u7b26\u4e32\uff08before redis3.2 39\u5b57\u8282\uff09\u3002 + \u96c6\u5408Set + \u54c8\u5e0cHash + \u5217\u8868List + \u6709\u5e8f\u96c6SortedSet + \u4f7f\u7528ziplist \u7f16\u7801\uff1a\u4fdd\u5b58\u7684\u5143\u7d20\u6570\u91cf\u5c0f\u4e8e128\uff1b \u4fdd\u5b58\u7684\u6240\u6709\u5143\u7d20\u957f\u5ea6\u90fd\u5c0f\u4e8e64\u5b57\u8282 + \u5176\u5b9e\u6709\u5e8f\u96c6\u5408\u5355\u72ec\u4f7f\u7528\u5b57\u5178\u6216\u8df3\u8dc3\u8868\u5176\u4e2d\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u90fd\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4f46\u662f\u8fd9\u91cc\u4f7f\u7528\u4e24\u79cd\u6570\u636e\u7ed3\u6784\u7ec4\u5408\u8d77\u6765\uff0c\u539f\u56e0\u662f\u5047\u5982\u6211\u4eec\u5355\u72ec\u4f7f\u7528 \u5b57\u5178\uff0c\u867d\u7136\u80fd \u4ee5 O(1) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u67e5\u627e\u6210\u5458\u7684\u5206\u503c\uff0c\u4f46\u662f\u56e0\u4e3a\u5b57\u5178\u662f\u4ee5\u65e0\u5e8f\u7684\u65b9\u5f0f\u6765\u4fdd\u5b58\u96c6\u5408\u5143\u7d20\uff0c\u6240\u4ee5\u6bcf\u6b21\u8fdb\u884c\u8303\u56f4\u64cd\u4f5c\u7684\u65f6\u5019\u90fd\u8981\u8fdb\u884c\u6392\u5e8f\uff1b\u5047\u5982\u6211\u4eec\u5355\u72ec\u4f7f\u7528\u8df3\u8dc3\u8868\u6765\u5b9e\u73b0\uff0c\u867d\u7136\u80fd\u6267\u884c\u8303\u56f4\u64cd\u4f5c\uff0c\u4f46\u662f\u67e5\u627e\u64cd\u4f5c\u6709 O(1)\u7684\u590d\u6742\u5ea6\u53d8\u4e3a\u4e86O(logN) \u7b80\u5355\u52a8\u6001\u5b57\u7b26\u4e32\uff08SDS\uff09 \u5b57\u5178 \u94fe\u8868 \u8df3\u8dc3\u8868 \u6709\u5f88\u591a\u5c42\u7ec4\u6210\uff0c\u7531\u4e0a\u5230\u4e0b\u8282\u70b9\u6570\u9010\u6e10\u5bc6\u96c6\uff0c\u6700\u4e0a\u5c42\u7684\u8282\u70b9\u6700\u7a00\u758f\uff0c\u8de8\u5ea6\u4e5f\u6700\u5927\u3002 \u6bcf\u4e00\u5c42\u90fd\u662f\u4e00\u4e2a\u6709\u5e8f\u94fe\u8868\uff0c\u53ea\u626b\u5305\u542b\u4e24\u4e2a\u8282\u70b9\uff0c\u5934\u8282\u70b9\u548c\u5c3e\u8282\u70b9\u3002 \u6bcf\u4e00\u5c42\u7684\u6bcf\u4e00\u4e2a\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u542b\u6709\u6307\u5411\u540c\u4e00\u5c42\u4e0b\u4e00\u4e2a\u8282\u70b9\u548c\u4e0b\u4e00\u5c42\u540c\u4e00\u4e2a\u4f4d\u7f6e\u8282\u70b9\u7684\u6307\u9488\u3002 \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u5728\u67d0\u4e00\u5c42\u51fa\u73b0\uff0c\u90a3\u4e48\u8be5\u4ee5\u4e0b\u7684\u6240\u6709\u94fe\u8868\u540c\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u4f1a\u51fa\u73b0\u8be5\u8282\u70b9\u3002 \u6574\u6570\u96c6\u5408 \u538b\u7f29\u5217\u8868","title":"\u6570\u636e\u7c7b\u578b\u548c\u5e95\u5c42\u6570\u636e\u7ed3\u6784"},{"location":"db/kv/#redis_1","text":"\u4f7f\u7528list\u7ed3\u6784\u4f5c\u4e3a\u961f\u5217\uff0crpush\u751f\u4ea7\u6d88\u606f\uff0clpop\u6d88\u8d39\u6d88\u606f\u3002\u5f53lpop\u6ca1\u6709\u6d88\u606f\u7684\u65f6\u5019\uff0c\u8981\u9002\u5f53sleep\u4e00\u4f1a\u518d\u91cd\u8bd5\u3002 \u53ef\u4e0d\u53ef\u4ee5\u4e0d\u7528sleep\u5462\uff1flist\u8fd8\u6709\u4e2a\u6307\u4ee4\u53ebblpop\uff0c\u5728\u6ca1\u6709\u6d88\u606f\u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u963b\u585e\u4f4f\u76f4\u5230\u6d88\u606f\u5230\u6765\u3002 \u80fd\u4e0d\u80fd\u751f\u4ea7\u4e00\u6b21\u6d88\u8d39\u591a\u6b21\u5462\uff1f\u4f7f\u7528pub/sub\u4e3b\u9898\u8ba2\u9605\u8005\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5b9e\u73b01:N\u7684\u6d88\u606f\u961f\u5217\u3002 pub/sub\u6709\u4ec0\u4e48\u7f3a\u70b9\uff1f\u5728\u6d88\u8d39\u8005\u4e0b\u7ebf\u7684\u60c5\u51b5\u4e0b\uff0c\u751f\u4ea7\u7684\u6d88\u606f\u4f1a\u4e22\u5931\uff0c\u5f97\u4f7f\u7528\u4e13\u4e1a\u7684\u6d88\u606f\u961f\u5217\u5982rabbitmq\u7b49\u3002","title":"Redis\u505a\u5f02\u6b65\u961f\u5217\u4e48"},{"location":"db/kv/#redis_2","text":"\u4f7f\u7528sortedset\uff0c\u62ff\u65f6\u95f4\u6233\u4f5c\u4e3ascore\uff0c\u6d88\u606f\u5185\u5bb9\u4f5c\u4e3akey\u8c03\u7528zadd\u6765\u751f\u4ea7\u6d88\u606f\uff0c\u6d88\u8d39\u8005\u7528zrangebyscore\u6307\u4ee4\u83b7\u53d6N\u79d2\u4e4b\u524d\u7684\u6570\u636e\u8f6e\u8be2\u8fdb\u884c\u5904\u7406\u3002","title":"redis\u5982\u4f55\u5b9e\u73b0\u5ef6\u65f6\u961f\u5217"},{"location":"db/kv/#leveldb-rocksdb-tidb","text":"","title":"LevelDB -&gt; RocksDb -&gt; TiDB"},{"location":"db/kv/#leveldb","text":"\u8fd9\u4e0d\u662f\u4e00\u4e2a SQL \u6570\u636e\u5e93\uff0c\u5b83\u6ca1\u6709\u5173\u7cfb\u6570\u636e\u6a21\u578b\uff0c\u4e0d\u652f\u6301 SQL \u67e5\u8be2\uff0c\u4e5f\u4e0d\u652f\u6301\u7d22\u5f15\u3002 \u540c\u65f6\u53ea\u80fd\u6709\u4e00\u4e2a\u8fdb\u7a0b\u8bbf\u95ee\u4e00\u4e2a\u7279\u5b9a\u7684\u6570\u636e\u5e93\u3002 \u6ca1\u6709\u5185\u7f6e\u7684 client-server \u652f\u6301\u3002 \u76f8\u5bf9\u4e8eRedis \uff0c \u5b83\u53ea\u652f\u6301Key-Value \uff0c\u6570\u636e\u7c7b\u578b\u5c11\u3002","title":"LevelDB"},{"location":"db/mongodb/","text":"MongoDB \u65e0\u5907\u4efd\u5230\u7cbe\u786e\u65f6\u95f4\u70b9 \u5355\u6587\u6863\u63a7\u5236\u5728100kb \u4ee5\u5185","title":"MongoDb"},{"location":"db/mongodb/#mongodb","text":"\u65e0\u5907\u4efd\u5230\u7cbe\u786e\u65f6\u95f4\u70b9 \u5355\u6587\u6863\u63a7\u5236\u5728100kb \u4ee5\u5185","title":"MongoDB"},{"location":"db/mysql/","text":"Mysql InnoDB\u4e2d\u4e3b\u952e\u7d22\u5f15B+\u6811\u662f\u5982\u4f55\u7ec4\u7ec7\u6570\u636e\u3001\u67e5\u8be2\u6570\u636e\u7684\uff0c\u6211\u4eec\u603b\u7ed3\u4e00\u4e0b\uff1a InnoDB\u5b58\u50a8\u5f15\u64ce\u7684\u6700\u5c0f\u5b58\u50a8\u5355\u5143\u662f\u9875\uff0c\u9875\u53ef\u4ee5\u7528\u4e8e\u5b58\u653e\u6570\u636e\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5b58\u653e\u952e\u503c+\u6307\u9488\uff0c\u5728B+\u6811\u4e2d\u53f6\u5b50\u8282\u70b9\u5b58\u653e\u6570\u636e\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u5b58\u653e\u952e\u503c+\u6307\u9488\u3002 \u7d22\u5f15\u7ec4\u7ec7\u8868\u901a\u8fc7\u975e\u53f6\u5b50\u8282\u70b9\u7684\u4e8c\u5206\u67e5\u627e\u6cd5\u4ee5\u53ca\u6307\u9488\u786e\u5b9a\u6570\u636e\u5728\u54ea\u4e2a\u9875\u4e2d\uff0c\u8fdb\u800c\u5728\u53bb\u6570\u636e\u9875\u4e2d\u67e5\u627e\u5230\u9700\u8981\u7684\u6570\u636e\uff1b Mysql \u4e8b\u52a1\u9694\u79bb\u7ea7\u522b \u9694\u79bb\u7ea7\u522b\u6bd4\u8f83\u548c\u6027\u80fd\uff1a\u53ef\u4e32\u884c\u5316>\u53ef\u91cd\u590d\u8bfb>\u8bfb\u5df2\u63d0\u4ea4>\u8bfb\u672a\u63d0\u4ea4 1.\u8bfb\u672a\u63d0\u4ea4 \u4e8b\u52a1A\u53ef\u4ee5\u8bfb\u53d6\u5230\u4e8b\u52a1B\u4fee\u6539\u8fc7\u4f46\u672a\u63d0\u4ea4\u7684\u6570\u636e\u3002 \u53ef\u80fd\u53d1\u751f\u810f\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u95ee\u9898\uff0c\u4e00\u822c\u5f88\u5c11\u4f7f\u7528\u6b64\u9694\u79bb\u7ea7\u522b\u3002 2.\u8bfb\u5df2\u63d0\u4ea4 \u5728\u8bfb\u5df2\u63d0\u4ea4\u9694\u79bb\u7ea7\u522b\u4e0b\uff0c\u4e8b\u52a1B\u53ea\u80fd\u5728\u4e8b\u52a1A\u4fee\u6539\u8fc7\u5e76\u4e14\u5df2\u63d0\u4ea4\u540e\u624d\u80fd\u8bfb\u53d6\u5230\u4e8b\u52a1B\u4fee\u6539\u7684\u6570\u636e\u3002 \u8bfb\u5df2\u63d0\u4ea4\u9694\u79bb\u7ea7\u522b\u89e3\u51b3\u4e86\u810f\u8bfb\u7684\u95ee\u9898\uff0c\u4f46\u53ef\u80fd\u53d1\u751f\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u95ee\u9898\uff0c\u4e00\u822c\u5f88\u5c11\u4f7f\u7528\u6b64\u9694\u79bb\u7ea7\u522b\u3002 3.\u53ef\u91cd\u590d\u8bfb \uff08\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b) \u5728\u53ef\u91cd\u590d\u8bfb\u9694\u79bb\u7ea7\u522b\u4e0b\uff0c\u4e8b\u52a1B\u53ea\u80fd\u5728\u4e8b\u52a1A\u4fee\u6539\u8fc7\u6570\u636e\u5e76\u63d0\u4ea4\u540e\uff0c\u81ea\u5df1\u4e5f\u63d0\u4ea4\u4e8b\u52a1\u540e\uff0c\u624d\u80fd\u8bfb\u53d6\u5230\u4e8b\u52a1B\u4fee\u6539\u7684\u6570\u636e\u3002 \u53ef\u91cd\u590d\u8bfb\u9694\u79bb\u7ea7\u522b\u89e3\u51b3\u4e86\u810f\u8bfb\u548c\u4e0d\u53ef\u91cd\u590d\u8bfb\u7684\u95ee\u9898\uff0c\u4f46\u53ef\u80fd\u53d1\u751f\u5e7b\u8bfb\u95ee\u9898\u3002 4.\u53ef\u4e32\u884c\u5316 , \u6709\u5e8f\u7684 \u5982\u679c\u4e8c\u4e2a\u4e8b\u52a1\u90fd\u662f\u8bfb\u64cd\u4f5c\uff0c \u4e0d\u4f1a\u963b\u585e\uff0c \u5426\u5219\u963b\u585e \u5404\u79cd\u95ee\u9898\uff08\u810f\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u3001\u5e7b\u8bfb\uff09\u90fd\u4e0d\u4f1a\u53d1\u751f\uff0c\u901a\u8fc7\u52a0\u9501\u5b9e\u73b0\uff08\u8bfb\u9501\u548c\u5199\u9501\uff09\u3002 \u4e8b\u52a1\u5e76\u53d1\u53ef\u80fd\u51fa\u9519\u7684\u60c5\u51b5 \u810f\u8bfb \u4e00\u4e2a\u4e8b\u52a1\u8bfb\u5230\u4e86\u53e6\u4e00\u4e2a\u672a\u63d0\u4ea4\u4e8b\u52a1\u4fee\u6539\u8fc7\u7684\u6570\u636e 1 \u4e0d\u53ef\u91cd\u590d\u8bfb \u4e00\u4e2a\u4e8b\u52a1\u53ea\u80fd\u8bfb\u5230\u53e6\u4e00\u4e2a\u5df2\u63d0\u4ea4\u4e8b\u52a1\u4fee\u6539\u8fc7\u7684\u6570\u636e\uff0c \u5e76\u4e14\u5176\u5b83\u4e8b\u52a1\u6bcf\u4fee\u6539\u4e00\u6b21\uff0c \u8be5\u4e8b\u52a1\u90fd\u80fd\u8bfb\u5230 1,2 \u5e7b\u8bfb A\u4e8b\u52a1\u6839\u636e\u67d0\u6761\u4ef6\u67e5\u8be2\u51fa\u4e00\u4e9b\u8bb0\u5f55\uff0c \u4e4b\u540eB\u4e8b\u52a1\u63d2\u5165\u7b26\u5408\u6761\u4ef6\u7684\u8bb0\u5f55\uff0c \u4e4b\u540eA\u4e8b\u52a1\u518d\u6309\u539f\u6761\u4ef6\u67e5\u8be2\u65f6\uff0c\u80fd\u628aB\u4e8b\u52a1\u63d2\u5165\u7684\u8bb0\u5f55\u4e5f\u8bfb\u51fa\u6765 1\uff0c2\uff0c3 \u7d22\u5f15\u5931\u6548\u573a\u666f \u67e5\u8be2\u6761\u4ef6\u4e0a\u6709 or \u5b57\u6bb5\u7c7b\u578b\u662fstring \uff0c\u6ca1\u6709\u7528\u5f15\u53f7\u62ec\u76f4\u6765 like \u7b26\uff0c != <> not in , is null, is not null \u8fd9\u4e9b\u8303\u56f4\u9650\u5b9a\u7b26 \u5728\u7d22\u5f15\u5217\u4e0a\u4f7f\u7528 \u5217\u8fd0\u7b97\uff08+,-,*,/) \u6216\u8005\u5185\u7f6e\u51fd\u6570(sum...) \u8054\u5408\u7d22\u5f15\uff0c\u67e5\u8be2\u65f6\u6761\u4ef6\u5217\u548c\u8054\u5408\u7d22\u5f15\u6b21\u5e8f\u4e0d\u5339\u914d \u8fde\u63a5\u67e5\u8be2\u5173\u8054\u5b57\u6bb5\u7f16\u7801\u4e0d\u4e00 \u805a\u7c07\u7d22\u5f15\u4e0e\u975e\u805a\u7c07\u7d22\u5f15\uff08\u4e5f\u53eb\u4e8c\u7ea7\u7d22\u5f15\uff09 \u805a\u7c07\u7d22\u5f15\uff1a\u5c06\u6570\u636e\u5b58\u50a8\u4e0e\u7d22\u5f15\u653e\u5230\u4e86\u4e00\u5757\uff0c\u627e\u5230\u7d22\u5f15\u4e5f\u5c31\u627e\u5230\u4e86\u6570\u636e \u975e\u805a\u7c07\u7d22\u5f15\uff1a\u5c06\u6570\u636e\u5b58\u50a8\u4e8e\u7d22\u5f15\u5206\u5f00\u7ed3\u6784\uff0c\u7d22\u5f15\u7ed3\u6784\u7684\u53f6\u5b50\u8282\u70b9\u6307\u5411\u4e86\u6570\u636e\u7684\u5bf9\u5e94\u884c\uff0cmyisam\u901a\u8fc7key_buffer\u628a\u7d22\u5f15\u5148\u7f13\u5b58\u5230\u5185\u5b58\u4e2d\uff0c\u5f53\u9700\u8981\u8bbf\u95ee\u6570\u636e\u65f6\uff08\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\u6570\u636e\uff09\uff0c\u5728\u5185\u5b58\u4e2d\u76f4\u63a5\u641c\u7d22\u7d22\u5f15\uff0c\u7136\u540e\u901a\u8fc7\u7d22\u5f15\u627e\u5230\u78c1\u76d8\u76f8\u5e94\u6570\u636e\uff0c\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u7d22\u5f15\u4e0d\u5728key buffer\u547d\u4e2d\u65f6\uff0c\u901f\u5ea6\u6162\u7684\u539f\u56e0 \u6f84\u6e05\u4e00\u4e2a\u6982\u5ff5\uff1ainnodb\u4e2d\uff0c\u5728\u805a\u7c07\u7d22\u5f15\u4e4b\u4e0a\u521b\u5efa\u7684\u7d22\u5f15\u79f0\u4e4b\u4e3a\u8f85\u52a9\u7d22\u5f15\uff0c\u8f85\u52a9\u7d22\u5f15\u8bbf\u95ee\u6570\u636e\u603b\u662f\u9700\u8981\u4e8c\u6b21\u67e5\u627e\uff0c\u975e\u805a\u7c07\u7d22\u5f15\u90fd\u662f\u8f85\u52a9\u7d22\u5f15\uff0c\u50cf\u590d\u5408\u7d22\u5f15\u3001\u524d\u7f00\u7d22\u5f15\u3001\u552f\u4e00\u7d22\u5f15\uff0c\u8f85\u52a9\u7d22\u5f15\u53f6\u5b50\u8282\u70b9\u5b58\u50a8\u7684\u4e0d\u518d\u662f\u884c\u7684\u7269\u7406\u4f4d\u7f6e\uff0c\u800c\u662f\u4e3b\u952e\u503c\u3002 \u4f55\u65f6\u4f7f\u7528\u805a\u7c07\u7d22\u5f15\u4e0e\u975e\u805a\u7c07\u7d22\u5f15 \u805a\u7c07\u7d22\u5f15\u5177\u6709\u552f\u4e00\u6027 \u7531\u4e8e\u805a\u7c07\u7d22\u5f15\u662f\u5c06\u6570\u636e\u8ddf\u7d22\u5f15\u7ed3\u6784\u653e\u5230\u4e00\u5757\uff0c\u56e0\u6b64\u4e00\u4e2a\u8868\u4ec5\u6709\u4e00\u4e2a\u805a\u7c07\u7d22\u5f15 \u4e00\u4e2a\u8bef\u533a\uff1a\u628a\u4e3b\u952e\u81ea\u52a8\u8bbe\u4e3a\u805a\u7c07\u7d22\u5f15 \u805a\u7c07\u7d22\u5f15\u9ed8\u8ba4\u662f\u4e3b\u952e\uff0c\u5982\u679c\u8868\u4e2d\u6ca1\u6709\u5b9a\u4e49\u4e3b\u952e\uff0cInnoDB \u4f1a\u9009\u62e9\u4e00\u4e2a\u552f\u4e00\u7684\u975e\u7a7a\u7d22\u5f15\u4ee3\u66ff\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u6837\u7684\u7d22\u5f15\uff0cInnoDB \u4f1a\u9690\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u4e3b\u952e\u6765\u4f5c\u4e3a\u805a\u7c07\u7d22\u5f15\u3002InnoDB \u53ea\u805a\u96c6\u5728\u540c\u4e00\u4e2a\u9875\u9762\u4e2d\u7684\u8bb0\u5f55\u3002\u5305\u542b\u76f8\u90bb\u952e\u503c\u7684\u9875\u9762\u53ef\u80fd\u76f8\u8ddd\u751a\u8fdc\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u8bbe\u7f6e\u4e86\u4e3b\u952e\u4e3a\u805a\u7c07\u7d22\u5f15\uff0c\u5fc5\u987b\u5148\u5220\u9664\u4e3b\u952e\uff0c\u7136\u540e\u6dfb\u52a0\u6211\u4eec\u60f3\u8981\u7684\u805a\u7c07\u7d22\u5f15\uff0c\u6700\u540e\u6062\u590d\u8bbe\u7f6e\u4e3b\u952e\u5373\u53ef\u3002 \u6b64\u65f6\u5176\u4ed6\u7d22\u5f15\u53ea\u80fd\u88ab\u5b9a\u4e49\u4e3a\u975e\u805a\u7c07\u7d22\u5f15\u3002\u8fd9\u4e2a\u662f\u6700\u5927\u7684\u8bef\u533a\u3002\u6709\u7684\u4e3b\u952e\u8fd8\u662f\u65e0\u610f\u4e49\u7684\u81ea\u52a8\u589e\u91cf\u5b57\u6bb5\uff0c\u90a3\u6837\u7684\u8bddClustered index\u5bf9\u6548\u7387\u7684\u5e2e\u52a9\uff0c\u5b8c\u5168\u88ab\u6d6a\u8d39\u4e86\u3002 \u805a\u7c07\u7d22\u5f15\u6027\u80fd\u6700\u597d\u800c\u4e14\u5177\u6709\u552f\u4e00\u6027\uff0c\u6240\u4ee5\u975e\u5e38\u73cd\u8d35\uff0c\u5fc5\u987b\u614e\u91cd\u8bbe\u7f6e\u3002\u4e00\u822c\u8981\u6839\u636e\u8fd9\u4e2a\u8868\u6700\u5e38\u7528\u7684SQL\u67e5\u8be2\u65b9\u5f0f\u6765\u8fdb\u884c\u9009\u62e9\uff0c\u67d0\u4e2a\u5b57\u6bb5\u4f5c\u4e3a\u805a\u7c07\u7d22\u5f15\uff0c\u6216\u7ec4\u5408\u805a\u7c07\u7d22\u5f15\uff0c\u8fd9\u4e2a\u8981\u770b\u5b9e\u9645\u60c5\u51b5\u3002 \u8bb0\u4f4f\u6211\u4eec\u7684\u6700\u7ec8\u76ee\u7684\u5c31\u662f\u5728\u76f8\u540c\u7ed3\u679c\u96c6\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u51cf\u5c11\u903b\u8f91IO\u3002 InnoDB\u4f7f\u7528\u7684\u662f\u805a\u7c07\u7d22\u5f15\uff0c\u5c06\u4e3b\u952e\u7ec4\u7ec7\u5230\u4e00\u68f5B+\u6811\u4e2d\uff0c\u800c\u884c\u6570\u636e\u5c31\u50a8\u5b58\u5728\u53f6\u5b50\u8282\u70b9\u4e0a\uff0c\u82e5\u4f7f\u7528\"where id = 14\"\u8fd9\u6837\u7684\u6761\u4ef6\u67e5\u627e\u4e3b\u952e\uff0c\u5219\u6309\u7167B+\u6811\u7684\u68c0\u7d22\u7b97\u6cd5\u5373\u53ef\u67e5\u627e\u5230\u5bf9\u5e94\u7684\u53f6\u8282\u70b9\uff0c\u4e4b\u540e\u83b7\u5f97\u884c\u6570\u636e\u3002 \u82e5\u5bf9Name\u5217\u8fdb\u884c\u6761\u4ef6\u641c\u7d22\uff0c\u5219\u9700\u8981\u4e24\u4e2a\u6b65\u9aa4\uff1a\u7b2c\u4e00\u6b65\u5728\u8f85\u52a9\u7d22\u5f15B+\u6811\u4e2d\u68c0\u7d22Name\uff0c\u5230\u8fbe\u5176\u53f6\u5b50\u8282\u70b9\u83b7\u53d6\u5bf9\u5e94\u7684\u4e3b\u952e\u3002\u7b2c\u4e8c\u6b65\u4f7f\u7528\u4e3b\u952e\u5728\u4e3b\u7d22\u5f15B+\u6811\u79cd\u518d\u6267\u884c\u4e00\u6b21B+\u6811\u68c0\u7d22\u64cd\u4f5c\uff0c\u6700\u7ec8\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u5373\u53ef\u83b7\u53d6\u6574\u884c\u6570\u636e\u3002\uff08\u91cd\u70b9\u5728\u4e8e\u901a\u8fc7\u5176\u4ed6\u952e\u9700\u8981\u5efa\u7acb\u8f85\u52a9\u7d22\u5f15\uff09 MyISM\u4f7f\u7528\u7684\u662f\u975e\u805a\u7c07\u7d22\u5f15\uff0c\u975e\u805a\u7c07\u7d22\u5f15\u7684\u4e24\u68f5B+\u6811\u770b\u4e0a\u53bb\u6ca1\u4ec0\u4e48\u4e0d\u540c\uff0c\u8282\u70b9\u7684\u7ed3\u6784\u5b8c\u5168\u4e00\u81f4\u53ea\u662f\u5b58\u50a8\u7684\u5185\u5bb9\u4e0d\u540c\u800c\u5df2\uff0c\u4e3b\u952e\u7d22\u5f15B+\u6811\u7684\u8282\u70b9\u5b58\u50a8\u4e86\u4e3b\u952e\uff0c\u8f85\u52a9\u952e\u7d22\u5f15B+\u6811\u5b58\u50a8\u4e86\u8f85\u52a9\u952e\u3002\u8868\u6570\u636e\u5b58\u50a8\u5728\u72ec\u7acb\u7684\u5730\u65b9\uff0c\u8fd9\u4e24\u9897B+\u6811\u7684\u53f6\u5b50\u8282\u70b9\u90fd\u4f7f\u7528\u4e00\u4e2a\u5730\u5740\u6307\u5411\u771f\u6b63\u7684\u8868\u6570\u636e\uff0c\u5bf9\u4e8e\u8868\u6570\u636e\u6765\u8bf4\uff0c\u8fd9\u4e24\u4e2a\u952e\u6ca1\u6709\u4efb\u4f55\u5dee\u522b\u3002\u7531\u4e8e\u7d22\u5f15\u6811\u662f\u72ec\u7acb\u7684\uff0c\u901a\u8fc7\u8f85\u52a9\u952e\u68c0\u7d22\u65e0\u9700\u8bbf\u95ee\u4e3b\u952e\u7684\u7d22\u5f15\u6811\u3002 \u805a\u7c07\u7d22\u5f15\u7684\u4f18\u52bf \u770b\u4e0a\u53bb\u805a\u7c07\u7d22\u5f15\u7684\u6548\u7387\u660e\u663e\u8981\u4f4e\u4e8e\u975e\u805a\u7c07\u7d22\u5f15\uff0c\u56e0\u4e3a\u6bcf\u6b21\u4f7f\u7528\u8f85\u52a9\u7d22\u5f15\u68c0\u7d22\u90fd\u8981\u7ecf\u8fc7\u4e24\u6b21B+\u6811\u67e5\u627e\uff0c\u8fd9\u4e0d\u662f\u591a\u6b64\u4e00\u4e3e\u5417\uff1f\u805a\u7c07\u7d22\u5f15\u7684\u4f18\u52bf\u5728\u54ea\uff1f \u7531\u4e8e\u884c\u6570\u636e\u548c\u53f6\u5b50\u8282\u70b9\u5b58\u50a8\u5728\u4e00\u8d77\uff0c\u540c\u4e00\u9875\u4e2d\u4f1a\u6709\u591a\u6761\u884c\u6570\u636e\uff0c\u8bbf\u95ee\u540c\u4e00\u6570\u636e\u9875\u4e0d\u540c\u884c\u8bb0\u5f55\u65f6\uff0c\u5df2\u7ecf\u628a\u9875\u52a0\u8f7d\u5230\u4e86Buffer\u4e2d\uff0c\u518d\u6b21\u8bbf\u95ee\u7684\u65f6\u5019\uff0c\u4f1a\u5728\u5185\u5b58\u4e2d\u5b8c\u6210\u8bbf\u95ee\uff0c\u4e0d\u5fc5\u8bbf\u95ee\u78c1\u76d8\u3002\u8fd9\u6837\u4e3b\u952e\u548c\u884c\u6570\u636e\u662f\u4e00\u8d77\u88ab\u8f7d\u5165\u5185\u5b58\u7684\uff0c\u627e\u5230\u53f6\u5b50\u8282\u70b9\u5c31\u53ef\u4ee5\u7acb\u523b\u5c06\u884c\u6570\u636e\u8fd4\u56de\u4e86\uff0c\u5982\u679c\u6309\u7167\u4e3b\u952eId\u6765\u7ec4\u7ec7\u6570\u636e\uff0c\u83b7\u5f97\u6570\u636e\u66f4\u5feb\u3002 \u8f85\u52a9\u7d22\u5f15\u4f7f\u7528\u4e3b\u952e\u4f5c\u4e3a\"\u6307\u9488\"\u800c\u4e0d\u662f\u4f7f\u7528\u5730\u5740\u503c\u4f5c\u4e3a\u6307\u9488\u7684\u597d\u5904\u662f\uff0c\u51cf\u5c11\u4e86\u5f53\u51fa\u73b0\u884c\u79fb\u52a8\u6216\u8005\u6570\u636e\u9875\u5206\u88c2\u65f6\u8f85\u52a9\u7d22\u5f15\u7684\u7ef4\u62a4\u5de5\u4f5c\uff0c\u4f7f\u7528\u4e3b\u952e\u503c\u5f53\u4f5c\u6307\u9488\u4f1a\u8ba9\u8f85\u52a9\u7d22\u5f15\u5360\u7528\u66f4\u591a\u7684\u7a7a\u95f4\uff0c\u6362\u6765\u7684\u597d\u5904\u662fInnoDB\u5728\u79fb\u52a8\u884c\u65f6\u65e0\u987b\u66f4\u65b0\u8f85\u52a9\u7d22\u5f15\u4e2d\u7684\u8fd9\u4e2a\"\u6307\u9488\"\u3002\u4e5f\u5c31\u662f\u8bf4\u884c\u7684\u4f4d\u7f6e\uff08\u5b9e\u73b0\u4e2d\u901a\u8fc716K\u7684Page\u6765\u5b9a\u4f4d\uff09\u4f1a\u968f\u7740\u6570\u636e\u5e93\u91cc\u6570\u636e\u7684\u4fee\u6539\u800c\u53d1\u751f\u53d8\u5316\uff08\u524d\u9762\u7684B+\u6811\u8282\u70b9\u5206\u88c2\u4ee5\u53caPage\u7684\u5206\u88c2\uff09\uff0c\u4f7f\u7528\u805a\u7c07\u7d22\u5f15\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4e0d\u7ba1\u8fd9\u4e2a\u4e3b\u952eB+\u6811\u7684\u8282\u70b9\u5982\u4f55\u53d8\u5316\uff0c\u8f85\u52a9\u7d22\u5f15\u6811\u90fd\u4e0d\u53d7\u5f71\u54cd\u3002 \u805a\u7c07\u7d22\u5f15\u9002\u5408\u7528\u5728\u6392\u5e8f\u7684\u573a\u5408\uff0c\u975e\u805a\u7c07\u7d22\u5f15\u4e0d\u9002\u5408 \u53d6\u51fa\u4e00\u5b9a\u8303\u56f4\u6570\u636e\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u7528\u805a\u7c07\u7d22\u5f15 \u4e8c\u7ea7\u7d22\u5f15\u9700\u8981\u4e24\u6b21\u7d22\u5f15\u67e5\u627e\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u624d\u80fd\u53d6\u5230\u6570\u636e\uff0c\u56e0\u4e3a\u5b58\u50a8\u5f15\u64ce\u7b2c\u4e00\u6b21\u9700\u8981\u901a\u8fc7\u4e8c\u7ea7\u7d22\u5f15\u627e\u5230\u7d22\u5f15\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u4ece\u800c\u627e\u5230\u6570\u636e\u7684\u4e3b\u952e\uff0c\u7136\u540e\u5728\u805a\u7c07\u7d22\u5f15\u4e2d\u7528\u4e3b\u952e\u518d\u6b21\u67e5\u627e\u7d22\u5f15\uff0c\u518d\u627e\u5230\u6570\u636e \u53ef\u4ee5\u628a\u76f8\u5173\u6570\u636e\u4fdd\u5b58\u5728\u4e00\u8d77\u3002\u4f8b\u5982\u5b9e\u73b0\u7535\u5b50\u90ae\u7bb1\u65f6\uff0c\u53ef\u4ee5\u6839\u636e\u7528\u6237 ID \u6765\u805a\u96c6\u6570\u636e\uff0c\u8fd9\u6837\u53ea\u9700\u8981\u4ece\u78c1\u76d8\u8bfb\u53d6\u5c11\u6570\u7684\u6570\u636e\u9875\u5c31\u80fd\u83b7\u53d6\u67d0\u4e2a\u7528\u6237\u7684\u5168\u90e8\u90ae\u4ef6\u3002\u5982\u679c\u6ca1\u6709\u4f7f\u7528\u805a\u7c07\u7d22\u5f15\uff0c\u5219\u6bcf\u5c01\u90ae\u4ef6\u90fd\u53ef\u80fd\u5bfc\u81f4\u4e00\u6b21\u78c1\u76d8 I/O\u3002 \u805a\u7c07\u7d22\u5f15\u7684\u52a3\u52bf \u7ef4\u62a4\u7d22\u5f15\u5f88\u6602\u8d35\uff0c\u7279\u522b\u662f\u63d2\u5165\u65b0\u884c\u6216\u8005\u4e3b\u952e\u88ab\u66f4\u65b0\u5bfc\u81f3\u8981\u5206\u9875(page split)\u7684\u65f6\u5019\u3002\u5efa\u8bae\u5728\u5927\u91cf\u63d2\u5165\u65b0\u884c\u540e\uff0c\u9009\u5728\u8d1f\u8f7d\u8f83\u4f4e\u7684\u65f6\u95f4\u6bb5\uff0c\u901a\u8fc7OPTIMIZE TABLE\u4f18\u5316\u8868\uff0c\u56e0\u4e3a\u5fc5\u987b\u88ab\u79fb\u52a8\u7684\u884c\u6570\u636e\u53ef\u80fd\u9020\u6210\u788e\u7247\u3002\u4f7f\u7528\u72ec\u4eab\u8868\u7a7a\u95f4\u53ef\u4ee5\u5f31\u5316\u788e\u7247 \u8868\u56e0\u4e3a\u4f7f\u7528UUId\uff08\u968f\u673aID\uff09\u4f5c\u4e3a\u4e3b\u952e\uff0c\u4f7f\u6570\u636e\u5b58\u50a8\u7a00\u758f\uff0c\u8fd9\u5c31\u4f1a\u51fa\u73b0\u805a\u7c07\u7d22\u5f15\u6709\u53ef\u80fd\u6709\u6bd4\u5168\u8868\u626b\u9762\u66f4\u6162\uff0c \u6240\u4ee5\u5efa\u8bae\u4f7f\u7528int\u7684auto_increment\u4f5c\u4e3a\u4e3b\u952e \u4e3b\u952e\u7684\u503c\u662f\u987a\u5e8f\u7684\uff0c\u6240\u4ee5 InnoDB \u628a\u6bcf\u4e00\u6761\u8bb0\u5f55\u90fd\u5b58\u50a8\u5728\u4e0a\u4e00\u6761\u8bb0\u5f55\u7684\u540e\u9762\u3002\u5f53\u8fbe\u5230\u9875\u7684\u6700\u5927\u586b\u5145\u56e0\u5b50\u65f6\uff08InnoDB \u9ed8\u8ba4\u7684\u6700\u5927\u586b\u5145\u56e0\u5b50\u662f\u9875\u5927\u5c0f\u7684 15/16\uff0c\u7559\u51fa\u90e8\u5206\u7a7a\u95f4\u7528\u4e8e\u4ee5\u540e\u4fee\u6539\uff09\uff0c\u4e0b\u4e00\u6761\u8bb0\u5f55\u5c31\u4f1a\u5199\u5165\u65b0\u7684\u9875\u4e2d\u3002\u4e00\u65e6\u6570\u636e\u6309\u7167\u8fd9\u79cd\u987a\u5e8f\u7684\u65b9\u5f0f\u52a0\u8f7d\uff0c\u4e3b\u952e\u9875\u5c31\u4f1a\u8fd1\u4f3c\u4e8e\u88ab\u987a\u5e8f\u7684\u8bb0\u5f55\u586b\u6ee1\uff08\u4e8c\u7ea7\u7d22\u5f15\u9875\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684\uff09 \u5982\u679c\u4e3b\u952e\u6bd4\u8f83\u5927\u7684\u8bdd\uff0c\u90a3\u8f85\u52a9\u7d22\u5f15\u5c06\u4f1a\u53d8\u7684\u66f4\u5927\uff0c\u56e0\u4e3a\u8f85\u52a9\u7d22\u5f15\u7684\u53f6\u5b50\u5b58\u50a8\u7684\u662f\u4e3b\u952e\u503c\uff1b\u8fc7\u957f\u7684\u4e3b\u952e\u503c\uff0c\u4f1a\u5bfc\u81f4\u975e\u53f6\u5b50\u8282\u70b9\u5360\u7528\u5360\u7528\u66f4\u591a\u7684\u7269\u7406\u7a7a\u95f4 \u4e3a\u4ec0\u4e48\u4e3b\u952e\u901a\u5e38\u5efa\u8bae\u4f7f\u7528\u81ea\u589eid \u805a\u7c07\u7d22\u5f15\u7684\u6570\u636e\u7684\u7269\u7406\u5b58\u653e\u987a\u5e8f\u4e0e\u7d22\u5f15\u987a\u5e8f\u662f\u4e00\u81f4\u7684\uff0c\u5373\uff1a\u53ea\u8981\u7d22\u5f15\u662f\u76f8\u90bb\u7684\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u6570\u636e\u4e00\u5b9a\u4e5f\u662f\u76f8\u90bb\u5730\u5b58\u653e\u5728\u78c1\u76d8\u4e0a\u7684\u3002\u5982\u679c\u4e3b\u952e\u4e0d\u662f\u81ea\u589eid\uff0c\u90a3\u4e48\u53ef\u4ee5\u60f3 \u8c61\uff0c\u5b83\u4f1a\u5e72\u4e9b\u4ec0\u4e48\uff0c\u4e0d\u65ad\u5730\u8c03\u6574\u6570\u636e\u7684\u7269\u7406\u5730\u5740\u3001\u5206\u9875\uff0c\u5f53\u7136\u4e5f\u6709\u5176\u4ed6\u4e00\u4e9b\u63aa\u65bd\u6765\u51cf\u5c11\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u4f46\u5374\u65e0\u6cd5\u5f7b\u5e95\u907f\u514d\u3002\u4f46\uff0c\u5982\u679c\u662f\u81ea\u589e\u7684\uff0c\u90a3\u5c31\u7b80\u5355\u4e86\uff0c\u5b83\u53ea\u9700\u8981\u4e00 \u9875\u4e00\u9875\u5730\u5199\uff0c\u7d22\u5f15\u7ed3\u6784\u76f8\u5bf9\u7d27\u51d1\uff0c\u78c1\u76d8\u788e\u7247\u5c11\uff0c\u6548\u7387\u4e5f\u9ad8\u3002 \u56e0\u4e3aMyISAM\u7684\u4e3b\u7d22\u5f15\u5e76\u975e\u805a\u7c07\u7d22\u5f15\uff0c\u90a3\u4e48\u4ed6\u7684\u6570\u636e\u7684\u7269\u7406\u5730\u5740\u5fc5\u7136\u662f\u51cc\u4e71\u7684\uff0c\u62ff\u5230\u8fd9\u4e9b\u7269\u7406\u5730\u5740\uff0c\u6309\u7167\u5408\u9002\u7684\u7b97\u6cd5\u8fdb\u884cI/O\u8bfb\u53d6\uff0c\u4e8e\u662f\u5f00\u59cb\u4e0d\u505c\u7684\u5bfb\u9053\u4e0d\u505c\u7684\u65cb\u8f6c\u3002\u805a\u7c07\u7d22\u5f15\u5219\u53ea\u9700\u4e00\u6b21I/O\u3002\uff08\u5f3a\u70c8\u7684\u5bf9\u6bd4\uff09 \u4e0d\u8fc7\uff0c\u5982\u679c\u6d89\u53ca\u5230\u5927\u6570\u636e\u91cf\u7684\u6392\u5e8f\u3001\u5168\u8868\u626b\u63cf\u3001count\u4e4b\u7c7b\u7684\u64cd\u4f5c\u7684\u8bdd\uff0c\u8fd8\u662fMyISAM\u5360\u4f18\u52bf\u4e9b\uff0c\u56e0\u4e3a\u7d22\u5f15\u6240\u5360\u7a7a\u95f4\u5c0f\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u662f\u9700\u8981\u5728\u5185\u5b58\u4e2d\u5b8c\u6210\u7684\u3002 mysql\u4e2d\u805a\u7c07\u7d22\u5f15\u7684\u8bbe\u5b9a \u805a\u7c07\u7d22\u5f15\u9ed8\u8ba4\u662f\u4e3b\u952e\uff0c\u5982\u679c\u8868\u4e2d\u6ca1\u6709\u5b9a\u4e49\u4e3b\u952e\uff0cInnoDB \u4f1a\u9009\u62e9\u4e00\u4e2a\u552f\u4e00\u7684\u975e\u7a7a\u7d22\u5f15\u4ee3\u66ff\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u6837\u7684\u7d22\u5f15\uff0cInnoDB \u4f1a\u9690\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u4e3b\u952e\u6765\u4f5c\u4e3a\u805a\u7c07\u7d22\u5f15\u3002InnoDB \u53ea\u805a\u96c6\u5728\u540c\u4e00\u4e2a\u9875\u9762\u4e2d\u7684\u8bb0\u5f55\u3002\u5305\u542b\u76f8\u90bb\u5065\u503c\u7684\u9875\u9762\u53ef\u80fd\u76f8\u8ddd\u751a\u8fdc\u3002","title":"Mysql"},{"location":"db/mysql/#mysql","text":"InnoDB\u4e2d\u4e3b\u952e\u7d22\u5f15B+\u6811\u662f\u5982\u4f55\u7ec4\u7ec7\u6570\u636e\u3001\u67e5\u8be2\u6570\u636e\u7684\uff0c\u6211\u4eec\u603b\u7ed3\u4e00\u4e0b\uff1a InnoDB\u5b58\u50a8\u5f15\u64ce\u7684\u6700\u5c0f\u5b58\u50a8\u5355\u5143\u662f\u9875\uff0c\u9875\u53ef\u4ee5\u7528\u4e8e\u5b58\u653e\u6570\u636e\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5b58\u653e\u952e\u503c+\u6307\u9488\uff0c\u5728B+\u6811\u4e2d\u53f6\u5b50\u8282\u70b9\u5b58\u653e\u6570\u636e\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u5b58\u653e\u952e\u503c+\u6307\u9488\u3002 \u7d22\u5f15\u7ec4\u7ec7\u8868\u901a\u8fc7\u975e\u53f6\u5b50\u8282\u70b9\u7684\u4e8c\u5206\u67e5\u627e\u6cd5\u4ee5\u53ca\u6307\u9488\u786e\u5b9a\u6570\u636e\u5728\u54ea\u4e2a\u9875\u4e2d\uff0c\u8fdb\u800c\u5728\u53bb\u6570\u636e\u9875\u4e2d\u67e5\u627e\u5230\u9700\u8981\u7684\u6570\u636e\uff1b","title":"Mysql"},{"location":"db/mysql/#mysql_1","text":"\u9694\u79bb\u7ea7\u522b\u6bd4\u8f83\u548c\u6027\u80fd\uff1a\u53ef\u4e32\u884c\u5316>\u53ef\u91cd\u590d\u8bfb>\u8bfb\u5df2\u63d0\u4ea4>\u8bfb\u672a\u63d0\u4ea4 1.\u8bfb\u672a\u63d0\u4ea4 \u4e8b\u52a1A\u53ef\u4ee5\u8bfb\u53d6\u5230\u4e8b\u52a1B\u4fee\u6539\u8fc7\u4f46\u672a\u63d0\u4ea4\u7684\u6570\u636e\u3002 \u53ef\u80fd\u53d1\u751f\u810f\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u95ee\u9898\uff0c\u4e00\u822c\u5f88\u5c11\u4f7f\u7528\u6b64\u9694\u79bb\u7ea7\u522b\u3002 2.\u8bfb\u5df2\u63d0\u4ea4 \u5728\u8bfb\u5df2\u63d0\u4ea4\u9694\u79bb\u7ea7\u522b\u4e0b\uff0c\u4e8b\u52a1B\u53ea\u80fd\u5728\u4e8b\u52a1A\u4fee\u6539\u8fc7\u5e76\u4e14\u5df2\u63d0\u4ea4\u540e\u624d\u80fd\u8bfb\u53d6\u5230\u4e8b\u52a1B\u4fee\u6539\u7684\u6570\u636e\u3002 \u8bfb\u5df2\u63d0\u4ea4\u9694\u79bb\u7ea7\u522b\u89e3\u51b3\u4e86\u810f\u8bfb\u7684\u95ee\u9898\uff0c\u4f46\u53ef\u80fd\u53d1\u751f\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u95ee\u9898\uff0c\u4e00\u822c\u5f88\u5c11\u4f7f\u7528\u6b64\u9694\u79bb\u7ea7\u522b\u3002 3.\u53ef\u91cd\u590d\u8bfb \uff08\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b) \u5728\u53ef\u91cd\u590d\u8bfb\u9694\u79bb\u7ea7\u522b\u4e0b\uff0c\u4e8b\u52a1B\u53ea\u80fd\u5728\u4e8b\u52a1A\u4fee\u6539\u8fc7\u6570\u636e\u5e76\u63d0\u4ea4\u540e\uff0c\u81ea\u5df1\u4e5f\u63d0\u4ea4\u4e8b\u52a1\u540e\uff0c\u624d\u80fd\u8bfb\u53d6\u5230\u4e8b\u52a1B\u4fee\u6539\u7684\u6570\u636e\u3002 \u53ef\u91cd\u590d\u8bfb\u9694\u79bb\u7ea7\u522b\u89e3\u51b3\u4e86\u810f\u8bfb\u548c\u4e0d\u53ef\u91cd\u590d\u8bfb\u7684\u95ee\u9898\uff0c\u4f46\u53ef\u80fd\u53d1\u751f\u5e7b\u8bfb\u95ee\u9898\u3002 4.\u53ef\u4e32\u884c\u5316 , \u6709\u5e8f\u7684 \u5982\u679c\u4e8c\u4e2a\u4e8b\u52a1\u90fd\u662f\u8bfb\u64cd\u4f5c\uff0c \u4e0d\u4f1a\u963b\u585e\uff0c \u5426\u5219\u963b\u585e \u5404\u79cd\u95ee\u9898\uff08\u810f\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u3001\u5e7b\u8bfb\uff09\u90fd\u4e0d\u4f1a\u53d1\u751f\uff0c\u901a\u8fc7\u52a0\u9501\u5b9e\u73b0\uff08\u8bfb\u9501\u548c\u5199\u9501\uff09\u3002 \u4e8b\u52a1\u5e76\u53d1\u53ef\u80fd\u51fa\u9519\u7684\u60c5\u51b5 \u810f\u8bfb \u4e00\u4e2a\u4e8b\u52a1\u8bfb\u5230\u4e86\u53e6\u4e00\u4e2a\u672a\u63d0\u4ea4\u4e8b\u52a1\u4fee\u6539\u8fc7\u7684\u6570\u636e 1 \u4e0d\u53ef\u91cd\u590d\u8bfb \u4e00\u4e2a\u4e8b\u52a1\u53ea\u80fd\u8bfb\u5230\u53e6\u4e00\u4e2a\u5df2\u63d0\u4ea4\u4e8b\u52a1\u4fee\u6539\u8fc7\u7684\u6570\u636e\uff0c \u5e76\u4e14\u5176\u5b83\u4e8b\u52a1\u6bcf\u4fee\u6539\u4e00\u6b21\uff0c \u8be5\u4e8b\u52a1\u90fd\u80fd\u8bfb\u5230 1,2 \u5e7b\u8bfb A\u4e8b\u52a1\u6839\u636e\u67d0\u6761\u4ef6\u67e5\u8be2\u51fa\u4e00\u4e9b\u8bb0\u5f55\uff0c \u4e4b\u540eB\u4e8b\u52a1\u63d2\u5165\u7b26\u5408\u6761\u4ef6\u7684\u8bb0\u5f55\uff0c \u4e4b\u540eA\u4e8b\u52a1\u518d\u6309\u539f\u6761\u4ef6\u67e5\u8be2\u65f6\uff0c\u80fd\u628aB\u4e8b\u52a1\u63d2\u5165\u7684\u8bb0\u5f55\u4e5f\u8bfb\u51fa\u6765 1\uff0c2\uff0c3","title":"Mysql \u4e8b\u52a1\u9694\u79bb\u7ea7\u522b"},{"location":"db/mysql/#_1","text":"\u67e5\u8be2\u6761\u4ef6\u4e0a\u6709 or \u5b57\u6bb5\u7c7b\u578b\u662fstring \uff0c\u6ca1\u6709\u7528\u5f15\u53f7\u62ec\u76f4\u6765 like \u7b26\uff0c != <> not in , is null, is not null \u8fd9\u4e9b\u8303\u56f4\u9650\u5b9a\u7b26 \u5728\u7d22\u5f15\u5217\u4e0a\u4f7f\u7528 \u5217\u8fd0\u7b97\uff08+,-,*,/) \u6216\u8005\u5185\u7f6e\u51fd\u6570(sum...) \u8054\u5408\u7d22\u5f15\uff0c\u67e5\u8be2\u65f6\u6761\u4ef6\u5217\u548c\u8054\u5408\u7d22\u5f15\u6b21\u5e8f\u4e0d\u5339\u914d \u8fde\u63a5\u67e5\u8be2\u5173\u8054\u5b57\u6bb5\u7f16\u7801\u4e0d\u4e00","title":"\u7d22\u5f15\u5931\u6548\u573a\u666f"},{"location":"db/mysql/#_2","text":"\u805a\u7c07\u7d22\u5f15\uff1a\u5c06\u6570\u636e\u5b58\u50a8\u4e0e\u7d22\u5f15\u653e\u5230\u4e86\u4e00\u5757\uff0c\u627e\u5230\u7d22\u5f15\u4e5f\u5c31\u627e\u5230\u4e86\u6570\u636e \u975e\u805a\u7c07\u7d22\u5f15\uff1a\u5c06\u6570\u636e\u5b58\u50a8\u4e8e\u7d22\u5f15\u5206\u5f00\u7ed3\u6784\uff0c\u7d22\u5f15\u7ed3\u6784\u7684\u53f6\u5b50\u8282\u70b9\u6307\u5411\u4e86\u6570\u636e\u7684\u5bf9\u5e94\u884c\uff0cmyisam\u901a\u8fc7key_buffer\u628a\u7d22\u5f15\u5148\u7f13\u5b58\u5230\u5185\u5b58\u4e2d\uff0c\u5f53\u9700\u8981\u8bbf\u95ee\u6570\u636e\u65f6\uff08\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\u6570\u636e\uff09\uff0c\u5728\u5185\u5b58\u4e2d\u76f4\u63a5\u641c\u7d22\u7d22\u5f15\uff0c\u7136\u540e\u901a\u8fc7\u7d22\u5f15\u627e\u5230\u78c1\u76d8\u76f8\u5e94\u6570\u636e\uff0c\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u7d22\u5f15\u4e0d\u5728key buffer\u547d\u4e2d\u65f6\uff0c\u901f\u5ea6\u6162\u7684\u539f\u56e0 \u6f84\u6e05\u4e00\u4e2a\u6982\u5ff5\uff1ainnodb\u4e2d\uff0c\u5728\u805a\u7c07\u7d22\u5f15\u4e4b\u4e0a\u521b\u5efa\u7684\u7d22\u5f15\u79f0\u4e4b\u4e3a\u8f85\u52a9\u7d22\u5f15\uff0c\u8f85\u52a9\u7d22\u5f15\u8bbf\u95ee\u6570\u636e\u603b\u662f\u9700\u8981\u4e8c\u6b21\u67e5\u627e\uff0c\u975e\u805a\u7c07\u7d22\u5f15\u90fd\u662f\u8f85\u52a9\u7d22\u5f15\uff0c\u50cf\u590d\u5408\u7d22\u5f15\u3001\u524d\u7f00\u7d22\u5f15\u3001\u552f\u4e00\u7d22\u5f15\uff0c\u8f85\u52a9\u7d22\u5f15\u53f6\u5b50\u8282\u70b9\u5b58\u50a8\u7684\u4e0d\u518d\u662f\u884c\u7684\u7269\u7406\u4f4d\u7f6e\uff0c\u800c\u662f\u4e3b\u952e\u503c\u3002 \u4f55\u65f6\u4f7f\u7528\u805a\u7c07\u7d22\u5f15\u4e0e\u975e\u805a\u7c07\u7d22\u5f15 \u805a\u7c07\u7d22\u5f15\u5177\u6709\u552f\u4e00\u6027 \u7531\u4e8e\u805a\u7c07\u7d22\u5f15\u662f\u5c06\u6570\u636e\u8ddf\u7d22\u5f15\u7ed3\u6784\u653e\u5230\u4e00\u5757\uff0c\u56e0\u6b64\u4e00\u4e2a\u8868\u4ec5\u6709\u4e00\u4e2a\u805a\u7c07\u7d22\u5f15 \u4e00\u4e2a\u8bef\u533a\uff1a\u628a\u4e3b\u952e\u81ea\u52a8\u8bbe\u4e3a\u805a\u7c07\u7d22\u5f15 \u805a\u7c07\u7d22\u5f15\u9ed8\u8ba4\u662f\u4e3b\u952e\uff0c\u5982\u679c\u8868\u4e2d\u6ca1\u6709\u5b9a\u4e49\u4e3b\u952e\uff0cInnoDB \u4f1a\u9009\u62e9\u4e00\u4e2a\u552f\u4e00\u7684\u975e\u7a7a\u7d22\u5f15\u4ee3\u66ff\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u6837\u7684\u7d22\u5f15\uff0cInnoDB \u4f1a\u9690\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u4e3b\u952e\u6765\u4f5c\u4e3a\u805a\u7c07\u7d22\u5f15\u3002InnoDB \u53ea\u805a\u96c6\u5728\u540c\u4e00\u4e2a\u9875\u9762\u4e2d\u7684\u8bb0\u5f55\u3002\u5305\u542b\u76f8\u90bb\u952e\u503c\u7684\u9875\u9762\u53ef\u80fd\u76f8\u8ddd\u751a\u8fdc\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u8bbe\u7f6e\u4e86\u4e3b\u952e\u4e3a\u805a\u7c07\u7d22\u5f15\uff0c\u5fc5\u987b\u5148\u5220\u9664\u4e3b\u952e\uff0c\u7136\u540e\u6dfb\u52a0\u6211\u4eec\u60f3\u8981\u7684\u805a\u7c07\u7d22\u5f15\uff0c\u6700\u540e\u6062\u590d\u8bbe\u7f6e\u4e3b\u952e\u5373\u53ef\u3002 \u6b64\u65f6\u5176\u4ed6\u7d22\u5f15\u53ea\u80fd\u88ab\u5b9a\u4e49\u4e3a\u975e\u805a\u7c07\u7d22\u5f15\u3002\u8fd9\u4e2a\u662f\u6700\u5927\u7684\u8bef\u533a\u3002\u6709\u7684\u4e3b\u952e\u8fd8\u662f\u65e0\u610f\u4e49\u7684\u81ea\u52a8\u589e\u91cf\u5b57\u6bb5\uff0c\u90a3\u6837\u7684\u8bddClustered index\u5bf9\u6548\u7387\u7684\u5e2e\u52a9\uff0c\u5b8c\u5168\u88ab\u6d6a\u8d39\u4e86\u3002 \u805a\u7c07\u7d22\u5f15\u6027\u80fd\u6700\u597d\u800c\u4e14\u5177\u6709\u552f\u4e00\u6027\uff0c\u6240\u4ee5\u975e\u5e38\u73cd\u8d35\uff0c\u5fc5\u987b\u614e\u91cd\u8bbe\u7f6e\u3002\u4e00\u822c\u8981\u6839\u636e\u8fd9\u4e2a\u8868\u6700\u5e38\u7528\u7684SQL\u67e5\u8be2\u65b9\u5f0f\u6765\u8fdb\u884c\u9009\u62e9\uff0c\u67d0\u4e2a\u5b57\u6bb5\u4f5c\u4e3a\u805a\u7c07\u7d22\u5f15\uff0c\u6216\u7ec4\u5408\u805a\u7c07\u7d22\u5f15\uff0c\u8fd9\u4e2a\u8981\u770b\u5b9e\u9645\u60c5\u51b5\u3002 \u8bb0\u4f4f\u6211\u4eec\u7684\u6700\u7ec8\u76ee\u7684\u5c31\u662f\u5728\u76f8\u540c\u7ed3\u679c\u96c6\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u51cf\u5c11\u903b\u8f91IO\u3002 InnoDB\u4f7f\u7528\u7684\u662f\u805a\u7c07\u7d22\u5f15\uff0c\u5c06\u4e3b\u952e\u7ec4\u7ec7\u5230\u4e00\u68f5B+\u6811\u4e2d\uff0c\u800c\u884c\u6570\u636e\u5c31\u50a8\u5b58\u5728\u53f6\u5b50\u8282\u70b9\u4e0a\uff0c\u82e5\u4f7f\u7528\"where id = 14\"\u8fd9\u6837\u7684\u6761\u4ef6\u67e5\u627e\u4e3b\u952e\uff0c\u5219\u6309\u7167B+\u6811\u7684\u68c0\u7d22\u7b97\u6cd5\u5373\u53ef\u67e5\u627e\u5230\u5bf9\u5e94\u7684\u53f6\u8282\u70b9\uff0c\u4e4b\u540e\u83b7\u5f97\u884c\u6570\u636e\u3002 \u82e5\u5bf9Name\u5217\u8fdb\u884c\u6761\u4ef6\u641c\u7d22\uff0c\u5219\u9700\u8981\u4e24\u4e2a\u6b65\u9aa4\uff1a\u7b2c\u4e00\u6b65\u5728\u8f85\u52a9\u7d22\u5f15B+\u6811\u4e2d\u68c0\u7d22Name\uff0c\u5230\u8fbe\u5176\u53f6\u5b50\u8282\u70b9\u83b7\u53d6\u5bf9\u5e94\u7684\u4e3b\u952e\u3002\u7b2c\u4e8c\u6b65\u4f7f\u7528\u4e3b\u952e\u5728\u4e3b\u7d22\u5f15B+\u6811\u79cd\u518d\u6267\u884c\u4e00\u6b21B+\u6811\u68c0\u7d22\u64cd\u4f5c\uff0c\u6700\u7ec8\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u5373\u53ef\u83b7\u53d6\u6574\u884c\u6570\u636e\u3002\uff08\u91cd\u70b9\u5728\u4e8e\u901a\u8fc7\u5176\u4ed6\u952e\u9700\u8981\u5efa\u7acb\u8f85\u52a9\u7d22\u5f15\uff09 MyISM\u4f7f\u7528\u7684\u662f\u975e\u805a\u7c07\u7d22\u5f15\uff0c\u975e\u805a\u7c07\u7d22\u5f15\u7684\u4e24\u68f5B+\u6811\u770b\u4e0a\u53bb\u6ca1\u4ec0\u4e48\u4e0d\u540c\uff0c\u8282\u70b9\u7684\u7ed3\u6784\u5b8c\u5168\u4e00\u81f4\u53ea\u662f\u5b58\u50a8\u7684\u5185\u5bb9\u4e0d\u540c\u800c\u5df2\uff0c\u4e3b\u952e\u7d22\u5f15B+\u6811\u7684\u8282\u70b9\u5b58\u50a8\u4e86\u4e3b\u952e\uff0c\u8f85\u52a9\u952e\u7d22\u5f15B+\u6811\u5b58\u50a8\u4e86\u8f85\u52a9\u952e\u3002\u8868\u6570\u636e\u5b58\u50a8\u5728\u72ec\u7acb\u7684\u5730\u65b9\uff0c\u8fd9\u4e24\u9897B+\u6811\u7684\u53f6\u5b50\u8282\u70b9\u90fd\u4f7f\u7528\u4e00\u4e2a\u5730\u5740\u6307\u5411\u771f\u6b63\u7684\u8868\u6570\u636e\uff0c\u5bf9\u4e8e\u8868\u6570\u636e\u6765\u8bf4\uff0c\u8fd9\u4e24\u4e2a\u952e\u6ca1\u6709\u4efb\u4f55\u5dee\u522b\u3002\u7531\u4e8e\u7d22\u5f15\u6811\u662f\u72ec\u7acb\u7684\uff0c\u901a\u8fc7\u8f85\u52a9\u952e\u68c0\u7d22\u65e0\u9700\u8bbf\u95ee\u4e3b\u952e\u7684\u7d22\u5f15\u6811\u3002 \u805a\u7c07\u7d22\u5f15\u7684\u4f18\u52bf \u770b\u4e0a\u53bb\u805a\u7c07\u7d22\u5f15\u7684\u6548\u7387\u660e\u663e\u8981\u4f4e\u4e8e\u975e\u805a\u7c07\u7d22\u5f15\uff0c\u56e0\u4e3a\u6bcf\u6b21\u4f7f\u7528\u8f85\u52a9\u7d22\u5f15\u68c0\u7d22\u90fd\u8981\u7ecf\u8fc7\u4e24\u6b21B+\u6811\u67e5\u627e\uff0c\u8fd9\u4e0d\u662f\u591a\u6b64\u4e00\u4e3e\u5417\uff1f\u805a\u7c07\u7d22\u5f15\u7684\u4f18\u52bf\u5728\u54ea\uff1f \u7531\u4e8e\u884c\u6570\u636e\u548c\u53f6\u5b50\u8282\u70b9\u5b58\u50a8\u5728\u4e00\u8d77\uff0c\u540c\u4e00\u9875\u4e2d\u4f1a\u6709\u591a\u6761\u884c\u6570\u636e\uff0c\u8bbf\u95ee\u540c\u4e00\u6570\u636e\u9875\u4e0d\u540c\u884c\u8bb0\u5f55\u65f6\uff0c\u5df2\u7ecf\u628a\u9875\u52a0\u8f7d\u5230\u4e86Buffer\u4e2d\uff0c\u518d\u6b21\u8bbf\u95ee\u7684\u65f6\u5019\uff0c\u4f1a\u5728\u5185\u5b58\u4e2d\u5b8c\u6210\u8bbf\u95ee\uff0c\u4e0d\u5fc5\u8bbf\u95ee\u78c1\u76d8\u3002\u8fd9\u6837\u4e3b\u952e\u548c\u884c\u6570\u636e\u662f\u4e00\u8d77\u88ab\u8f7d\u5165\u5185\u5b58\u7684\uff0c\u627e\u5230\u53f6\u5b50\u8282\u70b9\u5c31\u53ef\u4ee5\u7acb\u523b\u5c06\u884c\u6570\u636e\u8fd4\u56de\u4e86\uff0c\u5982\u679c\u6309\u7167\u4e3b\u952eId\u6765\u7ec4\u7ec7\u6570\u636e\uff0c\u83b7\u5f97\u6570\u636e\u66f4\u5feb\u3002 \u8f85\u52a9\u7d22\u5f15\u4f7f\u7528\u4e3b\u952e\u4f5c\u4e3a\"\u6307\u9488\"\u800c\u4e0d\u662f\u4f7f\u7528\u5730\u5740\u503c\u4f5c\u4e3a\u6307\u9488\u7684\u597d\u5904\u662f\uff0c\u51cf\u5c11\u4e86\u5f53\u51fa\u73b0\u884c\u79fb\u52a8\u6216\u8005\u6570\u636e\u9875\u5206\u88c2\u65f6\u8f85\u52a9\u7d22\u5f15\u7684\u7ef4\u62a4\u5de5\u4f5c\uff0c\u4f7f\u7528\u4e3b\u952e\u503c\u5f53\u4f5c\u6307\u9488\u4f1a\u8ba9\u8f85\u52a9\u7d22\u5f15\u5360\u7528\u66f4\u591a\u7684\u7a7a\u95f4\uff0c\u6362\u6765\u7684\u597d\u5904\u662fInnoDB\u5728\u79fb\u52a8\u884c\u65f6\u65e0\u987b\u66f4\u65b0\u8f85\u52a9\u7d22\u5f15\u4e2d\u7684\u8fd9\u4e2a\"\u6307\u9488\"\u3002\u4e5f\u5c31\u662f\u8bf4\u884c\u7684\u4f4d\u7f6e\uff08\u5b9e\u73b0\u4e2d\u901a\u8fc716K\u7684Page\u6765\u5b9a\u4f4d\uff09\u4f1a\u968f\u7740\u6570\u636e\u5e93\u91cc\u6570\u636e\u7684\u4fee\u6539\u800c\u53d1\u751f\u53d8\u5316\uff08\u524d\u9762\u7684B+\u6811\u8282\u70b9\u5206\u88c2\u4ee5\u53caPage\u7684\u5206\u88c2\uff09\uff0c\u4f7f\u7528\u805a\u7c07\u7d22\u5f15\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4e0d\u7ba1\u8fd9\u4e2a\u4e3b\u952eB+\u6811\u7684\u8282\u70b9\u5982\u4f55\u53d8\u5316\uff0c\u8f85\u52a9\u7d22\u5f15\u6811\u90fd\u4e0d\u53d7\u5f71\u54cd\u3002 \u805a\u7c07\u7d22\u5f15\u9002\u5408\u7528\u5728\u6392\u5e8f\u7684\u573a\u5408\uff0c\u975e\u805a\u7c07\u7d22\u5f15\u4e0d\u9002\u5408 \u53d6\u51fa\u4e00\u5b9a\u8303\u56f4\u6570\u636e\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u7528\u805a\u7c07\u7d22\u5f15 \u4e8c\u7ea7\u7d22\u5f15\u9700\u8981\u4e24\u6b21\u7d22\u5f15\u67e5\u627e\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u624d\u80fd\u53d6\u5230\u6570\u636e\uff0c\u56e0\u4e3a\u5b58\u50a8\u5f15\u64ce\u7b2c\u4e00\u6b21\u9700\u8981\u901a\u8fc7\u4e8c\u7ea7\u7d22\u5f15\u627e\u5230\u7d22\u5f15\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u4ece\u800c\u627e\u5230\u6570\u636e\u7684\u4e3b\u952e\uff0c\u7136\u540e\u5728\u805a\u7c07\u7d22\u5f15\u4e2d\u7528\u4e3b\u952e\u518d\u6b21\u67e5\u627e\u7d22\u5f15\uff0c\u518d\u627e\u5230\u6570\u636e \u53ef\u4ee5\u628a\u76f8\u5173\u6570\u636e\u4fdd\u5b58\u5728\u4e00\u8d77\u3002\u4f8b\u5982\u5b9e\u73b0\u7535\u5b50\u90ae\u7bb1\u65f6\uff0c\u53ef\u4ee5\u6839\u636e\u7528\u6237 ID \u6765\u805a\u96c6\u6570\u636e\uff0c\u8fd9\u6837\u53ea\u9700\u8981\u4ece\u78c1\u76d8\u8bfb\u53d6\u5c11\u6570\u7684\u6570\u636e\u9875\u5c31\u80fd\u83b7\u53d6\u67d0\u4e2a\u7528\u6237\u7684\u5168\u90e8\u90ae\u4ef6\u3002\u5982\u679c\u6ca1\u6709\u4f7f\u7528\u805a\u7c07\u7d22\u5f15\uff0c\u5219\u6bcf\u5c01\u90ae\u4ef6\u90fd\u53ef\u80fd\u5bfc\u81f4\u4e00\u6b21\u78c1\u76d8 I/O\u3002 \u805a\u7c07\u7d22\u5f15\u7684\u52a3\u52bf \u7ef4\u62a4\u7d22\u5f15\u5f88\u6602\u8d35\uff0c\u7279\u522b\u662f\u63d2\u5165\u65b0\u884c\u6216\u8005\u4e3b\u952e\u88ab\u66f4\u65b0\u5bfc\u81f3\u8981\u5206\u9875(page split)\u7684\u65f6\u5019\u3002\u5efa\u8bae\u5728\u5927\u91cf\u63d2\u5165\u65b0\u884c\u540e\uff0c\u9009\u5728\u8d1f\u8f7d\u8f83\u4f4e\u7684\u65f6\u95f4\u6bb5\uff0c\u901a\u8fc7OPTIMIZE TABLE\u4f18\u5316\u8868\uff0c\u56e0\u4e3a\u5fc5\u987b\u88ab\u79fb\u52a8\u7684\u884c\u6570\u636e\u53ef\u80fd\u9020\u6210\u788e\u7247\u3002\u4f7f\u7528\u72ec\u4eab\u8868\u7a7a\u95f4\u53ef\u4ee5\u5f31\u5316\u788e\u7247 \u8868\u56e0\u4e3a\u4f7f\u7528UUId\uff08\u968f\u673aID\uff09\u4f5c\u4e3a\u4e3b\u952e\uff0c\u4f7f\u6570\u636e\u5b58\u50a8\u7a00\u758f\uff0c\u8fd9\u5c31\u4f1a\u51fa\u73b0\u805a\u7c07\u7d22\u5f15\u6709\u53ef\u80fd\u6709\u6bd4\u5168\u8868\u626b\u9762\u66f4\u6162\uff0c \u6240\u4ee5\u5efa\u8bae\u4f7f\u7528int\u7684auto_increment\u4f5c\u4e3a\u4e3b\u952e \u4e3b\u952e\u7684\u503c\u662f\u987a\u5e8f\u7684\uff0c\u6240\u4ee5 InnoDB \u628a\u6bcf\u4e00\u6761\u8bb0\u5f55\u90fd\u5b58\u50a8\u5728\u4e0a\u4e00\u6761\u8bb0\u5f55\u7684\u540e\u9762\u3002\u5f53\u8fbe\u5230\u9875\u7684\u6700\u5927\u586b\u5145\u56e0\u5b50\u65f6\uff08InnoDB \u9ed8\u8ba4\u7684\u6700\u5927\u586b\u5145\u56e0\u5b50\u662f\u9875\u5927\u5c0f\u7684 15/16\uff0c\u7559\u51fa\u90e8\u5206\u7a7a\u95f4\u7528\u4e8e\u4ee5\u540e\u4fee\u6539\uff09\uff0c\u4e0b\u4e00\u6761\u8bb0\u5f55\u5c31\u4f1a\u5199\u5165\u65b0\u7684\u9875\u4e2d\u3002\u4e00\u65e6\u6570\u636e\u6309\u7167\u8fd9\u79cd\u987a\u5e8f\u7684\u65b9\u5f0f\u52a0\u8f7d\uff0c\u4e3b\u952e\u9875\u5c31\u4f1a\u8fd1\u4f3c\u4e8e\u88ab\u987a\u5e8f\u7684\u8bb0\u5f55\u586b\u6ee1\uff08\u4e8c\u7ea7\u7d22\u5f15\u9875\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684\uff09 \u5982\u679c\u4e3b\u952e\u6bd4\u8f83\u5927\u7684\u8bdd\uff0c\u90a3\u8f85\u52a9\u7d22\u5f15\u5c06\u4f1a\u53d8\u7684\u66f4\u5927\uff0c\u56e0\u4e3a\u8f85\u52a9\u7d22\u5f15\u7684\u53f6\u5b50\u5b58\u50a8\u7684\u662f\u4e3b\u952e\u503c\uff1b\u8fc7\u957f\u7684\u4e3b\u952e\u503c\uff0c\u4f1a\u5bfc\u81f4\u975e\u53f6\u5b50\u8282\u70b9\u5360\u7528\u5360\u7528\u66f4\u591a\u7684\u7269\u7406\u7a7a\u95f4 \u4e3a\u4ec0\u4e48\u4e3b\u952e\u901a\u5e38\u5efa\u8bae\u4f7f\u7528\u81ea\u589eid \u805a\u7c07\u7d22\u5f15\u7684\u6570\u636e\u7684\u7269\u7406\u5b58\u653e\u987a\u5e8f\u4e0e\u7d22\u5f15\u987a\u5e8f\u662f\u4e00\u81f4\u7684\uff0c\u5373\uff1a\u53ea\u8981\u7d22\u5f15\u662f\u76f8\u90bb\u7684\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u6570\u636e\u4e00\u5b9a\u4e5f\u662f\u76f8\u90bb\u5730\u5b58\u653e\u5728\u78c1\u76d8\u4e0a\u7684\u3002\u5982\u679c\u4e3b\u952e\u4e0d\u662f\u81ea\u589eid\uff0c\u90a3\u4e48\u53ef\u4ee5\u60f3 \u8c61\uff0c\u5b83\u4f1a\u5e72\u4e9b\u4ec0\u4e48\uff0c\u4e0d\u65ad\u5730\u8c03\u6574\u6570\u636e\u7684\u7269\u7406\u5730\u5740\u3001\u5206\u9875\uff0c\u5f53\u7136\u4e5f\u6709\u5176\u4ed6\u4e00\u4e9b\u63aa\u65bd\u6765\u51cf\u5c11\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u4f46\u5374\u65e0\u6cd5\u5f7b\u5e95\u907f\u514d\u3002\u4f46\uff0c\u5982\u679c\u662f\u81ea\u589e\u7684\uff0c\u90a3\u5c31\u7b80\u5355\u4e86\uff0c\u5b83\u53ea\u9700\u8981\u4e00 \u9875\u4e00\u9875\u5730\u5199\uff0c\u7d22\u5f15\u7ed3\u6784\u76f8\u5bf9\u7d27\u51d1\uff0c\u78c1\u76d8\u788e\u7247\u5c11\uff0c\u6548\u7387\u4e5f\u9ad8\u3002 \u56e0\u4e3aMyISAM\u7684\u4e3b\u7d22\u5f15\u5e76\u975e\u805a\u7c07\u7d22\u5f15\uff0c\u90a3\u4e48\u4ed6\u7684\u6570\u636e\u7684\u7269\u7406\u5730\u5740\u5fc5\u7136\u662f\u51cc\u4e71\u7684\uff0c\u62ff\u5230\u8fd9\u4e9b\u7269\u7406\u5730\u5740\uff0c\u6309\u7167\u5408\u9002\u7684\u7b97\u6cd5\u8fdb\u884cI/O\u8bfb\u53d6\uff0c\u4e8e\u662f\u5f00\u59cb\u4e0d\u505c\u7684\u5bfb\u9053\u4e0d\u505c\u7684\u65cb\u8f6c\u3002\u805a\u7c07\u7d22\u5f15\u5219\u53ea\u9700\u4e00\u6b21I/O\u3002\uff08\u5f3a\u70c8\u7684\u5bf9\u6bd4\uff09 \u4e0d\u8fc7\uff0c\u5982\u679c\u6d89\u53ca\u5230\u5927\u6570\u636e\u91cf\u7684\u6392\u5e8f\u3001\u5168\u8868\u626b\u63cf\u3001count\u4e4b\u7c7b\u7684\u64cd\u4f5c\u7684\u8bdd\uff0c\u8fd8\u662fMyISAM\u5360\u4f18\u52bf\u4e9b\uff0c\u56e0\u4e3a\u7d22\u5f15\u6240\u5360\u7a7a\u95f4\u5c0f\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u662f\u9700\u8981\u5728\u5185\u5b58\u4e2d\u5b8c\u6210\u7684\u3002 mysql\u4e2d\u805a\u7c07\u7d22\u5f15\u7684\u8bbe\u5b9a \u805a\u7c07\u7d22\u5f15\u9ed8\u8ba4\u662f\u4e3b\u952e\uff0c\u5982\u679c\u8868\u4e2d\u6ca1\u6709\u5b9a\u4e49\u4e3b\u952e\uff0cInnoDB \u4f1a\u9009\u62e9\u4e00\u4e2a\u552f\u4e00\u7684\u975e\u7a7a\u7d22\u5f15\u4ee3\u66ff\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u6837\u7684\u7d22\u5f15\uff0cInnoDB \u4f1a\u9690\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u4e3b\u952e\u6765\u4f5c\u4e3a\u805a\u7c07\u7d22\u5f15\u3002InnoDB \u53ea\u805a\u96c6\u5728\u540c\u4e00\u4e2a\u9875\u9762\u4e2d\u7684\u8bb0\u5f55\u3002\u5305\u542b\u76f8\u90bb\u5065\u503c\u7684\u9875\u9762\u53ef\u80fd\u76f8\u8ddd\u751a\u8fdc\u3002","title":"\u805a\u7c07\u7d22\u5f15\u4e0e\u975e\u805a\u7c07\u7d22\u5f15\uff08\u4e5f\u53eb\u4e8c\u7ea7\u7d22\u5f15\uff09"},{"location":"devops/docker/","text":"Docker \u9898\u8bb0 \u8fd9\u4e8c\u5929\u95f2\u7684\u65e0\u4e8b\uff0c\u6298\u817e\u4e00\u4e0b\u6211\u7684\u7b14\u8bb0\u672c\uff0c\u672c\u6765\u5148\u6253\u7b97\u88c5\u4e2alinux \u73af\u5883\u3002 \u7814\u7a76\u4e86vagrant , virtualbox, WSL \uff0c\u6700\u540e\u51b3\u5b9a\u7814\u7a76\u4e0bdocker\u3002 \u7136\u540e\u53d1\u73b0\u6709\u4e2aDocker Destop, \u5148\u628a\u5b83\u88c5\u4e86\u518d\u8bf4\u3002 \u5b89\u88c5\u65f6\u67e5\u770b\u4e86\u4e0b\u7cfb\u7edf\u9700\u6c42\uff0c \u597d\u9669\uff0c\u6211\u7684\u7cfb\u7edf\u7248\u672c\u521a\u597d\u8fbe\u5230\u3002 \u9700\u8981\u5347\u7ea7WSL \u8fd0\u884cdocker Desktop \u6210\u529f\u4e86 \u8bfe\u7a0b\u7b14\u8bb0 \u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898 \u5f00\u53d1\u548c\u8fd0\u884c\u73af\u5883\u4e0d\u4e00\u81f4 \u4ed3\u5e93\u540d\uff0cTAG \u90fd\u662f \u7684\u955c\u50cf\uff0c \u53eb\u4f5c\u865a\u60ac\u955c\u50cf \u57fa\u672c\u6982\u5ff5 Image \u955c\u50cf Container \u5bb9\u5668 Repository \u4ed3\u5e93 hub.docker.com client - server \u67b6\u6784 client \u53d1\u547d\u4ee4\u7ed9server \uff0c server\u5b88\u62a4\u8fdb\u7a0b\u6267\u884c\u547d\u4ee4 \u547d\u4ee4 docker images docker search docker pull docker ps -a docker run -it ubuntu /bin/bash docker run -d ubuntu ctrl + p + q docker start | stop | restart docker attach docker exec -it docker container prune \u79fb\u9664\u6240\u6709\u672a\u8fd0\u884c\u5bb9\u5668 docker build docker top docker inspect","title":"Docker"},{"location":"devops/docker/#docker","text":"","title":"Docker"},{"location":"devops/docker/#_1","text":"\u8fd9\u4e8c\u5929\u95f2\u7684\u65e0\u4e8b\uff0c\u6298\u817e\u4e00\u4e0b\u6211\u7684\u7b14\u8bb0\u672c\uff0c\u672c\u6765\u5148\u6253\u7b97\u88c5\u4e2alinux \u73af\u5883\u3002 \u7814\u7a76\u4e86vagrant , virtualbox, WSL \uff0c\u6700\u540e\u51b3\u5b9a\u7814\u7a76\u4e0bdocker\u3002 \u7136\u540e\u53d1\u73b0\u6709\u4e2aDocker Destop, \u5148\u628a\u5b83\u88c5\u4e86\u518d\u8bf4\u3002 \u5b89\u88c5\u65f6\u67e5\u770b\u4e86\u4e0b\u7cfb\u7edf\u9700\u6c42\uff0c \u597d\u9669\uff0c\u6211\u7684\u7cfb\u7edf\u7248\u672c\u521a\u597d\u8fbe\u5230\u3002 \u9700\u8981\u5347\u7ea7WSL \u8fd0\u884cdocker Desktop \u6210\u529f\u4e86","title":"\u9898\u8bb0"},{"location":"devops/docker/#_2","text":"\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898 \u5f00\u53d1\u548c\u8fd0\u884c\u73af\u5883\u4e0d\u4e00\u81f4 \u4ed3\u5e93\u540d\uff0cTAG \u90fd\u662f \u7684\u955c\u50cf\uff0c \u53eb\u4f5c\u865a\u60ac\u955c\u50cf","title":"\u8bfe\u7a0b\u7b14\u8bb0"},{"location":"devops/docker/#_3","text":"Image \u955c\u50cf Container \u5bb9\u5668 Repository \u4ed3\u5e93 hub.docker.com client - server \u67b6\u6784 client \u53d1\u547d\u4ee4\u7ed9server \uff0c server\u5b88\u62a4\u8fdb\u7a0b\u6267\u884c\u547d\u4ee4","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"devops/docker/#_4","text":"docker images docker search docker pull docker ps -a docker run -it ubuntu /bin/bash docker run -d ubuntu ctrl + p + q docker start | stop | restart docker attach docker exec -it docker container prune \u79fb\u9664\u6240\u6709\u672a\u8fd0\u884c\u5bb9\u5668 docker build docker top docker inspect","title":"\u547d\u4ee4"},{"location":"game/battle/","text":"room unit skill buff effect","title":"Battle"},{"location":"game/framework/","text":"","title":"Framework"},{"location":"game/map/","text":"","title":"Map"},{"location":"golang/about/","text":"\u601d\u8003 golang \u5e26\u6765\u4e86\u4ec0\u4e48\uff1f \u6216\u8005\u548cc++\u4e0d\u540c\u4e4b\u5904 \u53ef\u4ee5\u7528\u201c\u9ad8\u4ea7\u201d\u4e8c\u5b57\u6765\u6982\u62ec \u591a\u6838\u7684\u5229\u7528\u4f18\u52bf? \u5176\u5b83\u8bed\u8a00\u4e5f\u53ef\u4ee5\u5b9e\u73b0 \u7f16\u8bd1\u4f18\u52bf\uff0c\u4f18\u79c0\u7684\u5305\u7ba1\u7406 \u5783\u573e\u56de\u6536\u662f\u4e2a\u95ee\u9898\u5417\uff1f Go\u53ef\u4ee5\u8ba9\u4f60\u6df1\u5165\u5230\u5185\u5b58\u5e03\u5c40\uff0c\u4f60\u53ef\u4ee5\u5206\u914d\u81ea\u5df1\u7684\u7a7a\u95f4\uff0c\u5982\u679c\u4f60\u60f3\u7684\u8bdd\u53ef\u4ee5\u81ea\u5df1\u505a\u5185\u5b58\u7ba1\u7406\u3002\u867d\u7136\u6ca1\u6709alloc\u548cfree\u65b9\u6cd5\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u7f13\u5b58\u628a\u4e1c\u897f\u653e\u8fdb\u53bb\uff0c\u8fd9\u4e2a\u6280\u5de7\u53ef\u7528\u6765\u907f\u514d\u4ea7\u751f\u4e0d\u5fc5\u8981\u7684\u5783\u573e\u3002\u5c31\u50cf\u5728C\u8bed\u8a00\u4e00\u6837\uff0c\u5728C\u91cc\uff0c\u5982\u679c\u4f60\u8001\u662fmalloc\u548cfree\uff0c\u4ee3\u4ef7\u5f88\u5927\u3002\u56e0\u6b64\uff0c\u4f60\u5206\u914d\u4e00\u4e2a\u5bf9\u8c61\u6570\u7ec4\u5e76\u628a\u5b83\u4eec\u94fe\u63a5\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u4e2a\u94fe\u8868\uff0c\u7ba1\u7406\u4f60\u81ea\u5df1\u7684\u7a7a\u95f4\uff0c\u800c\u4e14\u8fd8\u4e0d\u7528malloc\u548cfree\uff0c\u90a3\u4e48\u901f\u5ea6\u4f1a\u5f88\u5feb\u3002\u4f60\u53ef\u4ee5\u505a\u4e0eGo\u6240\u505a\u76f8\u540c\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3aGo\u8d4b\u4e88\u4f60\u4e0e\u5e95\u5c42\u4e8b\u7269\u5b89\u5168\u6253\u4ea4\u9053\u7684\u80fd\u529b\uff0c\u56e0\u6b64\u4e0d\u7528\u6b3a\u9a97\u7c7b\u578b\u7cfb\u7edf\u6765\u8fbe\u5230\u76ee\u7684\uff0c\u4f60\u5b9e\u9645\u4e0a\u53ef\u4ee5\u81ea\u5df1\u6765\u505a\u3002 \u524d\u9762\u6211\u8868\u8fbe\u4e86\u8fd9\u6837\u7684\u89c2\u70b9\uff0c\u5728Java\u91cc\uff0c\u65e0\u8bba\u4f55\u65f6\u4f60\u5728\u7ed3\u6784\u91cc\u5d4c\u5165\u5176\u5b83\u4e1c\u897f\uff0c\u90fd\u662f\u901a\u8fc7\u6307\u9488\u6765\u5b9e\u73b0\u7684\uff0c\u4f46\u5728Go\u91cc\u4f60\u53ef\u4ee5\u628a\u5b83\u653e\u5728\u4e00\u4e2a\u5355\u4e00\u7ed3\u6784\u4e2d\u3002\u56e0\u6b64\u5982\u679c\u4f60\u6709\u4e00\u4e9b\u9700\u8981\u82e5\u5e72\u7f13\u5b58\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f60\u53ef\u4ee5\u628a\u7f13\u5b58\u653e\u5728\u7ed3\u6784\u7684\u5185\u5b58\u91cc\uff0c\u8fd9\u4e0d\u4ec5\u610f\u5473\u7740\u9ad8\u6548\uff08\u56e0\u4e3a\u4f60\u4e0d\u7528\u95f4\u63a5\u5f97\u5230\u7f13\u5b58\uff09\uff0c\u800c\u4e14\u8fd8\u610f\u5473\u7740\u5355\u4e00\u7ed3\u6784\u53ef\u4ee5\u5728\u4e00\u6b65\u4e4b\u5185\u8fdb\u884c\u5185\u5b58\u5206\u914d\u4e0e\u5783\u573e\u56de\u6536\u3002\u8fd9\u6837\u5f00\u9500\u5c31\u4f1a\u51cf\u5c11\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u8003\u8651\u4e00\u4e0b\u5783\u573e\u56de\u6536\u7684\u5b9e\u9645\u60c5\u51b5\uff0c\u5f53\u4f60\u6b63\u5728\u8bbe\u8ba1\u6027\u80fd\u8981\u6c42\u4e0d\u9ad8\u7684\u4e1c\u897f\u65f6\uff0c\u4f60\u4e0d\u5e94\u8be5\u603b\u662f\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\u3002\u4f46\u5982\u679c\u662f\u9ad8\u6027\u80fd\u8981\u6c42\u7684\uff0c\u8003\u8651\u5230\u5185\u5b58\u5e03\u5c40\uff0c\u5c3d\u7ba1Go\u662f\u5177\u6709\u771f\u6b63\u5783\u573e\u56de\u6536\u7279\u6027\u7684\u8bed\u8a00\uff0c\u5b83\u8fd8\u662f\u7ed9\u4e86\u4f60\u5de5\u5177\uff0c\u8ba9\u4f60\u81ea\u5df1\u6765\u63a7\u5236\u6709\u591a\u5c11\u5185\u5b58\u548c\u4ea7\u751f\u4e86\u7684\u5783\u573e\u3002\u6211\u60f3\u8fd9\u662f\u5f88\u591a\u4eba\u5bb9\u6613\u5ffd\u7565\u7684\u3002","title":"Think About"},{"location":"golang/about/#_1","text":"","title":"\u601d\u8003"},{"location":"golang/about/#golang-c","text":"\u53ef\u4ee5\u7528\u201c\u9ad8\u4ea7\u201d\u4e8c\u5b57\u6765\u6982\u62ec \u591a\u6838\u7684\u5229\u7528\u4f18\u52bf? \u5176\u5b83\u8bed\u8a00\u4e5f\u53ef\u4ee5\u5b9e\u73b0 \u7f16\u8bd1\u4f18\u52bf\uff0c\u4f18\u79c0\u7684\u5305\u7ba1\u7406","title":"golang \u5e26\u6765\u4e86\u4ec0\u4e48\uff1f \u6216\u8005\u548cc++\u4e0d\u540c\u4e4b\u5904"},{"location":"golang/about/#_2","text":"Go\u53ef\u4ee5\u8ba9\u4f60\u6df1\u5165\u5230\u5185\u5b58\u5e03\u5c40\uff0c\u4f60\u53ef\u4ee5\u5206\u914d\u81ea\u5df1\u7684\u7a7a\u95f4\uff0c\u5982\u679c\u4f60\u60f3\u7684\u8bdd\u53ef\u4ee5\u81ea\u5df1\u505a\u5185\u5b58\u7ba1\u7406\u3002\u867d\u7136\u6ca1\u6709alloc\u548cfree\u65b9\u6cd5\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u7f13\u5b58\u628a\u4e1c\u897f\u653e\u8fdb\u53bb\uff0c\u8fd9\u4e2a\u6280\u5de7\u53ef\u7528\u6765\u907f\u514d\u4ea7\u751f\u4e0d\u5fc5\u8981\u7684\u5783\u573e\u3002\u5c31\u50cf\u5728C\u8bed\u8a00\u4e00\u6837\uff0c\u5728C\u91cc\uff0c\u5982\u679c\u4f60\u8001\u662fmalloc\u548cfree\uff0c\u4ee3\u4ef7\u5f88\u5927\u3002\u56e0\u6b64\uff0c\u4f60\u5206\u914d\u4e00\u4e2a\u5bf9\u8c61\u6570\u7ec4\u5e76\u628a\u5b83\u4eec\u94fe\u63a5\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u4e2a\u94fe\u8868\uff0c\u7ba1\u7406\u4f60\u81ea\u5df1\u7684\u7a7a\u95f4\uff0c\u800c\u4e14\u8fd8\u4e0d\u7528malloc\u548cfree\uff0c\u90a3\u4e48\u901f\u5ea6\u4f1a\u5f88\u5feb\u3002\u4f60\u53ef\u4ee5\u505a\u4e0eGo\u6240\u505a\u76f8\u540c\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3aGo\u8d4b\u4e88\u4f60\u4e0e\u5e95\u5c42\u4e8b\u7269\u5b89\u5168\u6253\u4ea4\u9053\u7684\u80fd\u529b\uff0c\u56e0\u6b64\u4e0d\u7528\u6b3a\u9a97\u7c7b\u578b\u7cfb\u7edf\u6765\u8fbe\u5230\u76ee\u7684\uff0c\u4f60\u5b9e\u9645\u4e0a\u53ef\u4ee5\u81ea\u5df1\u6765\u505a\u3002 \u524d\u9762\u6211\u8868\u8fbe\u4e86\u8fd9\u6837\u7684\u89c2\u70b9\uff0c\u5728Java\u91cc\uff0c\u65e0\u8bba\u4f55\u65f6\u4f60\u5728\u7ed3\u6784\u91cc\u5d4c\u5165\u5176\u5b83\u4e1c\u897f\uff0c\u90fd\u662f\u901a\u8fc7\u6307\u9488\u6765\u5b9e\u73b0\u7684\uff0c\u4f46\u5728Go\u91cc\u4f60\u53ef\u4ee5\u628a\u5b83\u653e\u5728\u4e00\u4e2a\u5355\u4e00\u7ed3\u6784\u4e2d\u3002\u56e0\u6b64\u5982\u679c\u4f60\u6709\u4e00\u4e9b\u9700\u8981\u82e5\u5e72\u7f13\u5b58\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f60\u53ef\u4ee5\u628a\u7f13\u5b58\u653e\u5728\u7ed3\u6784\u7684\u5185\u5b58\u91cc\uff0c\u8fd9\u4e0d\u4ec5\u610f\u5473\u7740\u9ad8\u6548\uff08\u56e0\u4e3a\u4f60\u4e0d\u7528\u95f4\u63a5\u5f97\u5230\u7f13\u5b58\uff09\uff0c\u800c\u4e14\u8fd8\u610f\u5473\u7740\u5355\u4e00\u7ed3\u6784\u53ef\u4ee5\u5728\u4e00\u6b65\u4e4b\u5185\u8fdb\u884c\u5185\u5b58\u5206\u914d\u4e0e\u5783\u573e\u56de\u6536\u3002\u8fd9\u6837\u5f00\u9500\u5c31\u4f1a\u51cf\u5c11\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u8003\u8651\u4e00\u4e0b\u5783\u573e\u56de\u6536\u7684\u5b9e\u9645\u60c5\u51b5\uff0c\u5f53\u4f60\u6b63\u5728\u8bbe\u8ba1\u6027\u80fd\u8981\u6c42\u4e0d\u9ad8\u7684\u4e1c\u897f\u65f6\uff0c\u4f60\u4e0d\u5e94\u8be5\u603b\u662f\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\u3002\u4f46\u5982\u679c\u662f\u9ad8\u6027\u80fd\u8981\u6c42\u7684\uff0c\u8003\u8651\u5230\u5185\u5b58\u5e03\u5c40\uff0c\u5c3d\u7ba1Go\u662f\u5177\u6709\u771f\u6b63\u5783\u573e\u56de\u6536\u7279\u6027\u7684\u8bed\u8a00\uff0c\u5b83\u8fd8\u662f\u7ed9\u4e86\u4f60\u5de5\u5177\uff0c\u8ba9\u4f60\u81ea\u5df1\u6765\u63a7\u5236\u6709\u591a\u5c11\u5185\u5b58\u548c\u4ea7\u751f\u4e86\u7684\u5783\u573e\u3002\u6211\u60f3\u8fd9\u662f\u5f88\u591a\u4eba\u5bb9\u6613\u5ffd\u7565\u7684\u3002","title":"\u5783\u573e\u56de\u6536\u662f\u4e2a\u95ee\u9898\u5417\uff1f"},{"location":"golang/cgo/","text":"cgo use lua in cgo /* #cgo LDFLAGS: -L/usr/local/lib -llua -ldl -lm #include <string.h> #include <stdlib.h> #include \"lua.h\" #include \"lualib.h\" #include \"luaxlib.h\" */ import \"C\"","title":"cgo"},{"location":"golang/cgo/#cgo","text":"","title":"cgo"},{"location":"golang/cgo/#_1","text":"","title":""},{"location":"golang/cgo/#use-lua-in-cgo","text":"/* #cgo LDFLAGS: -L/usr/local/lib -llua -ldl -lm #include <string.h> #include <stdlib.h> #include \"lua.h\" #include \"lualib.h\" #include \"luaxlib.h\" */ import \"C\"","title":"use lua in cgo"},{"location":"golang/common_mistake/","text":"\u66f4\u65b0\u5b57\u7b26\u4e32 x := \"text\" xBytes := []byte(x) xBytes[0] = 'T' // \u6ce8\u610f\u6b64\u65f6\u7684 T \u662f rune \u7c7b\u578b x = string(xBytes) fmt.Println(x) x := \"text\" xRunes := []rune(x) xRunes[0] = '\u6211' x = string(xRunes) fmt.Println(x) // \u6211ext \u65b0\u65e7slice s1 := []int{1, 2, 3} fmt.Println(len(s1), cap(s1), s1) // 3 3 [1 2 3 ] s2 := s1[1:] fmt.Println(len(s2), cap(s2), s2) // 2 2 [2 3] for i := range s2 { s2[i] += 20 } // \u6b64\u65f6\u7684 s1 \u4e0e s2 \u662f\u6307\u5411\u540c\u4e00\u4e2a\u5e95\u5c42\u6570\u7ec4\u7684 fmt.Println(s1) // [1 22 23] fmt.Println(s2) // [22 23] s2 = append(s2, 4) // \u5411\u5bb9\u91cf\u4e3a 2 \u7684 s2 \u4e2d\u518d\u8ffd\u52a0\u5143\u7d20\uff0c\u6b64\u65f6\u5c06\u5206\u914d\u65b0\u6570\u7ec4\u6765\u5b58 for i := range s2 { s2[i] += 10 } fmt.Println(s1) // [1 22 23] // \u6b64\u65f6\u7684 s1 \u4e0d\u518d\u66f4\u65b0\uff0c\u4e3a\u65e7\u6570\u636e fmt.Println(s2) // [32 33 14]","title":"\u5e38\u89c1\u9519\u8bef"},{"location":"golang/common_mistake/#_1","text":"x := \"text\" xBytes := []byte(x) xBytes[0] = 'T' // \u6ce8\u610f\u6b64\u65f6\u7684 T \u662f rune \u7c7b\u578b x = string(xBytes) fmt.Println(x) x := \"text\" xRunes := []rune(x) xRunes[0] = '\u6211' x = string(xRunes) fmt.Println(x) // \u6211ext","title":"\u66f4\u65b0\u5b57\u7b26\u4e32"},{"location":"golang/common_mistake/#slice","text":"s1 := []int{1, 2, 3} fmt.Println(len(s1), cap(s1), s1) // 3 3 [1 2 3 ] s2 := s1[1:] fmt.Println(len(s2), cap(s2), s2) // 2 2 [2 3] for i := range s2 { s2[i] += 20 } // \u6b64\u65f6\u7684 s1 \u4e0e s2 \u662f\u6307\u5411\u540c\u4e00\u4e2a\u5e95\u5c42\u6570\u7ec4\u7684 fmt.Println(s1) // [1 22 23] fmt.Println(s2) // [22 23] s2 = append(s2, 4) // \u5411\u5bb9\u91cf\u4e3a 2 \u7684 s2 \u4e2d\u518d\u8ffd\u52a0\u5143\u7d20\uff0c\u6b64\u65f6\u5c06\u5206\u914d\u65b0\u6570\u7ec4\u6765\u5b58 for i := range s2 { s2[i] += 10 } fmt.Println(s1) // [1 22 23] // \u6b64\u65f6\u7684 s1 \u4e0d\u518d\u66f4\u65b0\uff0c\u4e3a\u65e7\u6570\u636e fmt.Println(s2) // [32 33 14]","title":"\u65b0\u65e7slice"},{"location":"golang/defer/","text":"defer \u548c panic defer defer \u6267\u884c\u665a\u4e8ereturn , \u53ef\u4ee5\u64cd\u4f5c\u547d\u540d\u8fd4\u56de\u503c defer\u6267\u884c\u6309\u5012\u5e8f defer \u5728 1.4.2 \u7248\u672c\u4e4b\u524d\u4f1a\u6709\u6548\u7387\u95ee\u9898 defer \u6267\u884c\u987a\u5e8f\u4e0e\u58f0\u660e\u987a\u5e8f\u76f8\u53cd func f(n int) (r int) { defer func() { r += n recover() }() var f func() defer f() f = func() { r += 2 } return n + 1 } func main() { fmt.Println(f(3)) } panic panic \u53d1\u751f\u65f6, \u4e2d\u65ad\u540e\u7eed\u6267\u884c\uff0c\u8f6c\u800c\u6267\u884cdefer \u51fd\u6570 \u6240\u4ee5recover\u51fd\u6570\u53ea\u6709\u5728defer\u4ee3\u7801\u5757\u4e2d\u624d\u4f1a\u6709\u6548\u679c recover \u6709\u65e0\u6cd5\u6355\u83b7panic \u7684\u98ce\u9669\uff0c \u6bd4\u5982\u4e8c\u4e2agoroutine \u5e76\u53d1\u5199\u540c\u4e00\u4e2amap func foo() { defer func() { if e := recover(); e != nil { fmt.Println(\"recover!\", e) } }() m := make(map[int]int) go func() { for { m[0] = 0 } }() for { fmt.Println(\"Panic:\", m[0]) } } func main() { foo() }","title":"Defer"},{"location":"golang/defer/#defer-panic","text":"","title":"defer \u548c panic"},{"location":"golang/defer/#defer","text":"defer \u6267\u884c\u665a\u4e8ereturn , \u53ef\u4ee5\u64cd\u4f5c\u547d\u540d\u8fd4\u56de\u503c defer\u6267\u884c\u6309\u5012\u5e8f defer \u5728 1.4.2 \u7248\u672c\u4e4b\u524d\u4f1a\u6709\u6548\u7387\u95ee\u9898 defer \u6267\u884c\u987a\u5e8f\u4e0e\u58f0\u660e\u987a\u5e8f\u76f8\u53cd func f(n int) (r int) { defer func() { r += n recover() }() var f func() defer f() f = func() { r += 2 } return n + 1 } func main() { fmt.Println(f(3)) }","title":"defer"},{"location":"golang/defer/#panic","text":"panic \u53d1\u751f\u65f6, \u4e2d\u65ad\u540e\u7eed\u6267\u884c\uff0c\u8f6c\u800c\u6267\u884cdefer \u51fd\u6570 \u6240\u4ee5recover\u51fd\u6570\u53ea\u6709\u5728defer\u4ee3\u7801\u5757\u4e2d\u624d\u4f1a\u6709\u6548\u679c","title":"panic"},{"location":"golang/defer/#recover-panic-goroutine-map","text":"func foo() { defer func() { if e := recover(); e != nil { fmt.Println(\"recover!\", e) } }() m := make(map[int]int) go func() { for { m[0] = 0 } }() for { fmt.Println(\"Panic:\", m[0]) } } func main() { foo() }","title":"recover \u6709\u65e0\u6cd5\u6355\u83b7panic \u7684\u98ce\u9669\uff0c \u6bd4\u5982\u4e8c\u4e2agoroutine \u5e76\u53d1\u5199\u540c\u4e00\u4e2amap"},{"location":"golang/docs/","text":"\u4e00\u4e9b\u6587\u7ae0 etcd\u7684\u4f7f\u7528 Go \u7a0b\u5e8f\u662f\u600e\u6837\u8dd1\u8d77\u6765\u7684 Golang Heap \u6e90\u7801\u5256\u6790 Golang\u4e4bsync.Pool\u5bf9\u8c61\u6c60\u5bf9\u8c61\u91cd\u7528\u673a\u5236\u603b\u7ed3 Golang\u7684GC\u548c\u5185\u5b58\u9003\u9038 Go\u5185\u5b58\u5206\u914d\u90a3\u4e9b\u4e8b\uff0c\u5c31\u8fd9\u4e48\u7b80\u5355\uff01 go\u5185\u5b58\u7ba1\u7406\u4e00\uff1a\u7cfb\u7edf\u5185\u5b58\u7ba1\u7406 go\u5185\u5b58\u7ba1\u7406\u4e8c\uff1ago\u5185\u5b58\u7ba1\u7406 Go\u5e38\u7528\u547d\u4ee4 Go\u8bed\u8a00TCP Socket\u7f16\u7a0b Go\u8bed\u8a00\u4e4bgoroutine\u534f\u7a0b\u8be6\u89e3 GO\u8bed\u8a00\u4e4b\u5783\u573e\u56de\u6536\u673a\u5236 Protobuf\u5165\u95e8 \u4ece\u6e90\u7801\u89d2\u5ea6\u770b Golang \u7684\u8c03\u5ea6 \u56fe\u89e3Go\u5185\u5b58\u5206\u914d\u5668 \u5f53\u7ea2\u5f00\u53d1\u8bed\u8a00Go\uff0c\u771f\u7684\u662f\u672a\u6765\u7684\u6280\u672f\u4e3b\u6d41\u5417\uff1f \u6df1\u5165\u7406\u89e3 Go Map \u7528go\u5b9e\u73b0\u5e38\u89c1\u7684\u6570\u636e\u7ed3\u6784","title":"\u4e00\u4e9b\u6587\u7ae0"},{"location":"golang/docs/#_1","text":"etcd\u7684\u4f7f\u7528 Go \u7a0b\u5e8f\u662f\u600e\u6837\u8dd1\u8d77\u6765\u7684 Golang Heap \u6e90\u7801\u5256\u6790 Golang\u4e4bsync.Pool\u5bf9\u8c61\u6c60\u5bf9\u8c61\u91cd\u7528\u673a\u5236\u603b\u7ed3 Golang\u7684GC\u548c\u5185\u5b58\u9003\u9038 Go\u5185\u5b58\u5206\u914d\u90a3\u4e9b\u4e8b\uff0c\u5c31\u8fd9\u4e48\u7b80\u5355\uff01 go\u5185\u5b58\u7ba1\u7406\u4e00\uff1a\u7cfb\u7edf\u5185\u5b58\u7ba1\u7406 go\u5185\u5b58\u7ba1\u7406\u4e8c\uff1ago\u5185\u5b58\u7ba1\u7406 Go\u5e38\u7528\u547d\u4ee4 Go\u8bed\u8a00TCP Socket\u7f16\u7a0b Go\u8bed\u8a00\u4e4bgoroutine\u534f\u7a0b\u8be6\u89e3 GO\u8bed\u8a00\u4e4b\u5783\u573e\u56de\u6536\u673a\u5236 Protobuf\u5165\u95e8 \u4ece\u6e90\u7801\u89d2\u5ea6\u770b Golang \u7684\u8c03\u5ea6 \u56fe\u89e3Go\u5185\u5b58\u5206\u914d\u5668 \u5f53\u7ea2\u5f00\u53d1\u8bed\u8a00Go\uff0c\u771f\u7684\u662f\u672a\u6765\u7684\u6280\u672f\u4e3b\u6d41\u5417\uff1f \u6df1\u5165\u7406\u89e3 Go Map \u7528go\u5b9e\u73b0\u5e38\u89c1\u7684\u6570\u636e\u7ed3\u6784","title":"\u4e00\u4e9b\u6587\u7ae0"},{"location":"golang/experience/","text":"Some Experience \u5982\u4f55\u83b7\u53d6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\u6570\uff1a utf8.RuneCountInString(str) \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u662f UTF8 \u6587\u672c\uff0c\u53ef\u4f7f\u7528 \"unicode/utf8\" \u5305\u4e2d\u7684 ValidString() \u51fd\u6570 Golang with Lua GopherLua CGo \u6027\u80fd\u4f18\u5316 \u7ed3\u6784\u4f53\u5d4c\u5957 golang \u5927\u91cf\u7ed3\u6784\u4f53\u5185\u5d4c\u4f1a\u4f7f\u7f16\u8bd1\u901f\u5ea6\u6162 \u5b57\u7b26\u4e32\u62fc\u63a5 \u4f7f\u7528[]byte \u66ff\u4ee3 string + bytes.Buffer \u6548\u7387\u5927\u4e8e string+ strconvFormat, strings.Builder \u6548\u7387\u5927\u4e8e fmt.Sprintf \u53cd\u5c04\u6027\u80fd\u95ee\u9898 \u8fd4\u56de\u521b\u5efa\u5bf9\u8c61\u8017\u65f6\u7ea6\u4e3anew \u76841.5\u500d \u666e\u901a\u76f4\u63a5\u7ed9\u5b57\u6bb5\uff0c\u548c\u901a\u8fc7\u53cd\u5c04 \u4e0b\u6807\uff0c\u540d\u79f0\u627e\u5230\u5bf9\u5e94\u5b57\u6bb5\u8d4b\u503c \u6027\u80fd\u5dee\u5f02\u5de8\u5927 1:100:1000, \u53ef\u4ee5\u5c06\u540d\u79f0\u548c\u5bf9\u5e94\u4e0b\u6807\u7f13\u51b2\u8d77\u6765\uff0c\u4f18\u5316\u8fd1\u4f3c\u4e0b\u6807\u7684\u6548\u7387 sync.Pool \u5bf9\u8c61\u6c60 \u9003\u9038\u6027\u80fd\u95ee\u9898 \u6307\u9488\u9003\u9038 interface{} \u52a8\u6001\u7c7b\u578b\u9003\u9038 \u5185\u5b58\u8d85\u8fc7\u4e00\u5b9a\u5927\u5c0f\uff08\u6808\u5927\u5c0f\u5f71\u54cd)\uff0c\u53d1\u751f\u9003\u9038\uff0c make([]int, 8191) \u4e0d\u9003\u9038\uff0c make([]int, 8192) \uff0c make([]int n)\u9003\u9038 for range \u5982\u679c\u662f\u590d\u6742\u7c7b\u578b\uff0c range \u62f7\u8d1d\u6709\u6027\u80fd\u95ee\u9898 for k, v := range kvs { // v is copy } \u5229\u7528sync.Once sync.Once \u5728\u4f7f\u7528\u65f6\u624d\u89e6\u53d1\uff0c \u90e8\u5206\u573a\u666f\u4e0b\u53ef\u4ee5\u4ee3\u66ff init function\u4e2d\u4e00\u4e9b\u521d\u59cb\u5316\uff0c \u5982\u679c\u672a\u4f7f\u7528\u5230\uff0c\u53ef\u4ee5\u63d0\u5347\u4e00\u4e9b\u6548\u7387 go1.8\u52a8\u6001\u5e93 plugin go build -buildmode=plugin pdll, err := plugin.Open(\"test.so\") if err != nil { //... return } //\u83b7\u53d6\u52a8\u6001\u5e93\u65b9\u6cd5 fun, err := pdll.Lookup(\"TestFunc\") if err != nil { //... return } \u4f7f\u7528chan \u6765\u9650\u5236\u5e76\u53d1\u6570 var sem = make(chan int, 1000) func handle(r *Request) { //do something , will cost lot time <-sem } func Server(queue chan *Request) { for { sem <- 1 request := <-queue go handle(request) } } func main() { queue := make(chan *Request) go Server(queue) } json decode \u6570\u5b57\u7c7b\u578b\u9ed8\u8ba4\u4e3afloat64 \u53ef\u4ee5\u4f7f\u7528 struct \u5c06\u6570\u503c\u7c7b\u578b\u6620\u5c04\u4e3a json.RawMessage \u539f\u751f\u6570\u636e\u7c7b\u578b \u9002\u7528\u4e8e\u5982\u679c JSON \u6570\u636e\u4e0d\u7740\u6025 decode \u6216 JSON \u67d0\u4e2a\u5b57\u6bb5\u7684\u503c\u7c7b\u578b\u4e0d\u56fa\u5b9a\u7b49\u60c5\u51b5\uff1a var result struct { Status json.RawMessage `json:\"status\"` Tag string `json:\"tag\"` } var name string err = json.Unmarshal(result.Status, &name) if err == nil { //name } var code uint64 err = json.Unmarshal(result.Status, &code) if err == nil { //code } \u4f7f\u7528 Decoder \u7c7b\u578b\u6765 decode JSON \u6570\u636e\uff0c\u660e\u786e\u8868\u793a\u5b57\u6bb5\u7684\u503c\u7c7b\u578b var data = []byte(`{\"status\": 200}`) var result map[string]interface{} var decoder = json.NewDecoder(bytes.NewReader(data)) decoder.UseNumber() if err := decoder.Decode(&result); err != nil { log.Fatalln(err) } var status, _ = result[\"status\"].(json.Number).Int64()","title":"Project Experience"},{"location":"golang/experience/#some-experience","text":"","title":"Some Experience"},{"location":"golang/experience/#_1","text":"utf8.RuneCountInString(str)","title":"\u5982\u4f55\u83b7\u53d6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\u6570\uff1a"},{"location":"golang/experience/#utf8-unicodeutf8-validstring","text":"","title":"\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u662f UTF8 \u6587\u672c\uff0c\u53ef\u4f7f\u7528 \"unicode/utf8\" \u5305\u4e2d\u7684 ValidString() \u51fd\u6570"},{"location":"golang/experience/#golang-with-lua","text":"GopherLua CGo","title":"Golang with Lua"},{"location":"golang/experience/#_2","text":"","title":"\u6027\u80fd\u4f18\u5316"},{"location":"golang/experience/#_3","text":"golang \u5927\u91cf\u7ed3\u6784\u4f53\u5185\u5d4c\u4f1a\u4f7f\u7f16\u8bd1\u901f\u5ea6\u6162","title":"\u7ed3\u6784\u4f53\u5d4c\u5957"},{"location":"golang/experience/#_4","text":"\u4f7f\u7528[]byte \u66ff\u4ee3 string + bytes.Buffer \u6548\u7387\u5927\u4e8e string+ strconvFormat, strings.Builder \u6548\u7387\u5927\u4e8e fmt.Sprintf","title":"\u5b57\u7b26\u4e32\u62fc\u63a5"},{"location":"golang/experience/#_5","text":"\u8fd4\u56de\u521b\u5efa\u5bf9\u8c61\u8017\u65f6\u7ea6\u4e3anew \u76841.5\u500d \u666e\u901a\u76f4\u63a5\u7ed9\u5b57\u6bb5\uff0c\u548c\u901a\u8fc7\u53cd\u5c04 \u4e0b\u6807\uff0c\u540d\u79f0\u627e\u5230\u5bf9\u5e94\u5b57\u6bb5\u8d4b\u503c \u6027\u80fd\u5dee\u5f02\u5de8\u5927 1:100:1000, \u53ef\u4ee5\u5c06\u540d\u79f0\u548c\u5bf9\u5e94\u4e0b\u6807\u7f13\u51b2\u8d77\u6765\uff0c\u4f18\u5316\u8fd1\u4f3c\u4e0b\u6807\u7684\u6548\u7387","title":"\u53cd\u5c04\u6027\u80fd\u95ee\u9898"},{"location":"golang/experience/#syncpool","text":"","title":"sync.Pool \u5bf9\u8c61\u6c60"},{"location":"golang/experience/#_6","text":"\u6307\u9488\u9003\u9038 interface{} \u52a8\u6001\u7c7b\u578b\u9003\u9038 \u5185\u5b58\u8d85\u8fc7\u4e00\u5b9a\u5927\u5c0f\uff08\u6808\u5927\u5c0f\u5f71\u54cd)\uff0c\u53d1\u751f\u9003\u9038\uff0c make([]int, 8191) \u4e0d\u9003\u9038\uff0c make([]int, 8192) \uff0c make([]int n)\u9003\u9038","title":"\u9003\u9038\u6027\u80fd\u95ee\u9898"},{"location":"golang/experience/#for-range","text":"\u5982\u679c\u662f\u590d\u6742\u7c7b\u578b\uff0c range \u62f7\u8d1d\u6709\u6027\u80fd\u95ee\u9898 for k, v := range kvs { // v is copy }","title":"for range"},{"location":"golang/experience/#synconce","text":"sync.Once \u5728\u4f7f\u7528\u65f6\u624d\u89e6\u53d1\uff0c \u90e8\u5206\u573a\u666f\u4e0b\u53ef\u4ee5\u4ee3\u66ff init function\u4e2d\u4e00\u4e9b\u521d\u59cb\u5316\uff0c \u5982\u679c\u672a\u4f7f\u7528\u5230\uff0c\u53ef\u4ee5\u63d0\u5347\u4e00\u4e9b\u6548\u7387","title":"\u5229\u7528sync.Once"},{"location":"golang/experience/#go18-plugin","text":"go build -buildmode=plugin pdll, err := plugin.Open(\"test.so\") if err != nil { //... return } //\u83b7\u53d6\u52a8\u6001\u5e93\u65b9\u6cd5 fun, err := pdll.Lookup(\"TestFunc\") if err != nil { //... return }","title":"go1.8\u52a8\u6001\u5e93 plugin"},{"location":"golang/experience/#chan","text":"var sem = make(chan int, 1000) func handle(r *Request) { //do something , will cost lot time <-sem } func Server(queue chan *Request) { for { sem <- 1 request := <-queue go handle(request) } } func main() { queue := make(chan *Request) go Server(queue) }","title":"\u4f7f\u7528chan \u6765\u9650\u5236\u5e76\u53d1\u6570"},{"location":"golang/experience/#json-decode-float64","text":"\u53ef\u4ee5\u4f7f\u7528 struct \u5c06\u6570\u503c\u7c7b\u578b\u6620\u5c04\u4e3a json.RawMessage \u539f\u751f\u6570\u636e\u7c7b\u578b \u9002\u7528\u4e8e\u5982\u679c JSON \u6570\u636e\u4e0d\u7740\u6025 decode \u6216 JSON \u67d0\u4e2a\u5b57\u6bb5\u7684\u503c\u7c7b\u578b\u4e0d\u56fa\u5b9a\u7b49\u60c5\u51b5\uff1a var result struct { Status json.RawMessage `json:\"status\"` Tag string `json:\"tag\"` } var name string err = json.Unmarshal(result.Status, &name) if err == nil { //name } var code uint64 err = json.Unmarshal(result.Status, &code) if err == nil { //code } \u4f7f\u7528 Decoder \u7c7b\u578b\u6765 decode JSON \u6570\u636e\uff0c\u660e\u786e\u8868\u793a\u5b57\u6bb5\u7684\u503c\u7c7b\u578b var data = []byte(`{\"status\": 200}`) var result map[string]interface{} var decoder = json.NewDecoder(bytes.NewReader(data)) decoder.UseNumber() if err := decoder.Decode(&result); err != nil { log.Fatalln(err) } var status, _ = result[\"status\"].(json.Number).Int64()","title":"json decode \u6570\u5b57\u7c7b\u578b\u9ed8\u8ba4\u4e3afloat64"},{"location":"golang/feature/","text":"\u4f20\u5f15\u7528\u8fd8\u662f\u4f20\u503c \u4e25\u683c\u8bf4\uff0c golang \u91cc\u9762\u5168\u662f\u4f20\u503c\u7c7b\u578b, \u8981\u533a\u522b \u5f15\u7528\u7c7b\u578b \u548c \u4f20\u5f15\u7528 \u7684\u533a\u522b map \u548c slice \u7684\u884c\u4e3a\u7c7b\u4f3c\u4e8e\u6307\u9488\uff0c\u5b83\u4eec\u662f\u5305\u542b\u6307\u5411\u5e95\u5c42 map \u6216 slice \u6570\u636e\u7684\u6307\u9488\u7684\u63cf\u8ff0\u7b26 \u770b\u6e90\u7801\u5c31\u660e\u767d\u662f\u600e\u4e48\u4f1a\u4e8b\u4e86 + chan func makechan(t *chantype, size int64) *hchan { } map //src/runtime/hashmap.go func makemap(t *maptype, hint int64, h *hmap, bucket unsafe.Pointer) *hmap { } \u6761\u4ef6\u7f16\u8bd1 \u7f16\u8bd1\u6807\u7b7e\u7531\u7a7a\u683c\u5206\u9694\u7684\u7f16\u8bd1\u9009\u9879(options)\u4ee5\"\u6216\"\u7684\u903b\u8f91\u5173\u7cfb\u7ec4\u6210 \u6bcf\u4e2a\u7f16\u8bd1\u9009\u9879\u7531\u9017\u53f7\u5206\u9694\u7684\u6761\u4ef6\u9879\u4ee5\u903b\u8f91\"\u4e0e\"\u7684\u5173\u7cfb\u7ec4\u6210 \u6bcf\u4e2a\u6761\u4ef6\u9879\u7684\u540d\u5b57\u7528\u5b57\u6bcd+\u6570\u5b57\u8868\u793a\uff0c\u5728\u524d\u9762\u52a0!\u8868\u793a\u5426\u5b9a\u7684\u610f\u601d \u6761\u4ef6\u7f16\u8bd1\u8bf4\u660e\u548cpackage \u4e2d\u7684\u7a7a\u884c (go vet \u53ef\u4ee5\u68c0\u6d4b\u51fa\u6765\u8fd9\u4e2a\u9519\u8bef) \u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u6587\u4ef6\u540d\u4f1a\u88abgo \u7f16\u8bd1\u5ffd\u7565 _noused.go // debug.go // +build debug package main const debug = true //relase.go // +build !debug package main const debug = false go build -tags debug Golang \u7a0b\u5e8f\u542f\u52a8\u521d\u5316\u6267\u884c\u987a\u5e8f main func\u6267\u884c\u524d, \u6240\u6709\u4ee3\u7801\u90fd\u8fd0\u884c\u5728\u4e00\u4e2a goroutine, \u5982\u679cinit \u5f00\u542f\u4e86goroutine, \u53ea\u6709\u5728\u8fdb\u5165\u4e86main.main \u4e4b\u540e\u624d\u5f00\u59cb\u6267\u884c \u5e38\u89c1\u5751 \u53ef\u53d8\u53c2\u6570\u662f\u7a7a\u63a5\u53e3\u7c7b\u578b \u4f20\u5165\u7a7a\u63a5\u53e3\u7684\u5207\u7247\u65f6\u9700\u8981\u6ce8\u610f\u53c2\u6570\u5c55\u5f00\u7684\u95ee\u9898 var a = []interface{}{1, 2, 3} fmt.Println(a) //[1 2 3] fmt.Println(a...) //1 2 3","title":"Feature"},{"location":"golang/feature/#_1","text":"\u4e25\u683c\u8bf4\uff0c golang \u91cc\u9762\u5168\u662f\u4f20\u503c\u7c7b\u578b, \u8981\u533a\u522b \u5f15\u7528\u7c7b\u578b \u548c \u4f20\u5f15\u7528 \u7684\u533a\u522b map \u548c slice \u7684\u884c\u4e3a\u7c7b\u4f3c\u4e8e\u6307\u9488\uff0c\u5b83\u4eec\u662f\u5305\u542b\u6307\u5411\u5e95\u5c42 map \u6216 slice \u6570\u636e\u7684\u6307\u9488\u7684\u63cf\u8ff0\u7b26 \u770b\u6e90\u7801\u5c31\u660e\u767d\u662f\u600e\u4e48\u4f1a\u4e8b\u4e86 + chan func makechan(t *chantype, size int64) *hchan { } map //src/runtime/hashmap.go func makemap(t *maptype, hint int64, h *hmap, bucket unsafe.Pointer) *hmap { }","title":"\u4f20\u5f15\u7528\u8fd8\u662f\u4f20\u503c"},{"location":"golang/feature/#_2","text":"\u7f16\u8bd1\u6807\u7b7e\u7531\u7a7a\u683c\u5206\u9694\u7684\u7f16\u8bd1\u9009\u9879(options)\u4ee5\"\u6216\"\u7684\u903b\u8f91\u5173\u7cfb\u7ec4\u6210 \u6bcf\u4e2a\u7f16\u8bd1\u9009\u9879\u7531\u9017\u53f7\u5206\u9694\u7684\u6761\u4ef6\u9879\u4ee5\u903b\u8f91\"\u4e0e\"\u7684\u5173\u7cfb\u7ec4\u6210 \u6bcf\u4e2a\u6761\u4ef6\u9879\u7684\u540d\u5b57\u7528\u5b57\u6bcd+\u6570\u5b57\u8868\u793a\uff0c\u5728\u524d\u9762\u52a0!\u8868\u793a\u5426\u5b9a\u7684\u610f\u601d \u6761\u4ef6\u7f16\u8bd1\u8bf4\u660e\u548cpackage \u4e2d\u7684\u7a7a\u884c (go vet \u53ef\u4ee5\u68c0\u6d4b\u51fa\u6765\u8fd9\u4e2a\u9519\u8bef) \u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u6587\u4ef6\u540d\u4f1a\u88abgo \u7f16\u8bd1\u5ffd\u7565 _noused.go // debug.go // +build debug package main const debug = true //relase.go // +build !debug package main const debug = false go build -tags debug","title":"\u6761\u4ef6\u7f16\u8bd1"},{"location":"golang/feature/#golang","text":"main func\u6267\u884c\u524d, \u6240\u6709\u4ee3\u7801\u90fd\u8fd0\u884c\u5728\u4e00\u4e2a goroutine, \u5982\u679cinit \u5f00\u542f\u4e86goroutine, \u53ea\u6709\u5728\u8fdb\u5165\u4e86main.main \u4e4b\u540e\u624d\u5f00\u59cb\u6267\u884c","title":"Golang \u7a0b\u5e8f\u542f\u52a8\u521d\u5316\u6267\u884c\u987a\u5e8f"},{"location":"golang/feature/#_3","text":"","title":"\u5e38\u89c1\u5751"},{"location":"golang/feature/#_4","text":"\u4f20\u5165\u7a7a\u63a5\u53e3\u7684\u5207\u7247\u65f6\u9700\u8981\u6ce8\u610f\u53c2\u6570\u5c55\u5f00\u7684\u95ee\u9898 var a = []interface{}{1, 2, 3} fmt.Println(a) //[1 2 3] fmt.Println(a...) //1 2 3","title":"\u53ef\u53d8\u53c2\u6570\u662f\u7a7a\u63a5\u53e3\u7c7b\u578b"},{"location":"golang/gc/","text":"GC \u53d8\u66f4\u5386\u53f2 v1.0 \u2014 \u5b8c\u5168\u4e32\u884c\u7684\u6807\u8bb0\u548c\u6e05\u9664\u8fc7\u7a0b\uff0c\u9700\u8981\u6682\u505c\u6574\u4e2a\u7a0b\u5e8f\uff1b v1.1 \u2014 \u5728\u591a\u6838\u4e3b\u673a\u5e76\u884c\u6267\u884c\u5783\u573e\u6536\u96c6\u7684\u6807\u8bb0\u548c\u6e05\u9664\u9636\u6bb5\uff1b v1.3 \u2014 \u8fd0\u884c\u65f6\u57fa\u4e8e\u53ea\u6709\u6307\u9488\u7c7b\u578b\u7684\u503c\u5305\u542b\u6307\u9488\u7684\u5047\u8bbe\u589e\u52a0\u4e86\u5bf9\u6808\u5185\u5b58\u7684\u7cbe\u786e\u626b\u63cf\u652f\u6301\uff0c\u5b9e\u73b0\u4e86\u771f\u6b63\u7cbe\u786e\u7684\u5783\u573e\u6536\u96c6\uff1b\u5c06 unsafe.Pointer \u7c7b\u578b\u8f6c\u6362\u6210\u6574\u6570\u7c7b\u578b\u7684\u503c\u8ba4\u5b9a\u4e3a\u4e0d\u5408\u6cd5\u7684\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u60ac\u6302\u6307\u9488\u7b49\u4e25\u91cd\u95ee\u9898\uff1b v1.5 \u2014 \u5b9e\u73b0\u4e86\u57fa\u4e8e\u4e09\u8272\u6807\u8bb0\u6e05\u626b\u7684\u5e76\u53d1\u5783\u573e\u6536\u96c6\u5668\uff1b\u5927\u5e45\u5ea6\u964d\u4f4e\u5783\u573e\u6536\u96c6\u7684\u5ef6\u8fdf\u4ece\u51e0\u767e ms \u964d\u4f4e\u81f3 10ms \u4ee5\u4e0b\uff1b\u8ba1\u7b97\u5783\u573e\u6536\u96c6\u542f\u52a8\u7684\u5408\u9002\u65f6\u95f4\u5e76\u901a\u8fc7\u5e76\u53d1\u52a0\u901f\u5783\u573e\u6536\u96c6\u7684\u8fc7\u7a0b\uff1b v1.6 \u2014 \u5b9e\u73b0\u4e86\u53bb\u4e2d\u5fc3\u5316\u7684\u5783\u573e\u6536\u96c6\u534f\u8c03\u5668\uff1b\u57fa\u4e8e\u663e\u5f0f\u7684\u72b6\u6001\u673a\u4f7f\u5f97\u4efb\u610f Goroutine \u90fd\u80fd\u89e6\u53d1\u5783\u573e\u6536\u96c6\u7684\u72b6\u6001\u8fc1\u79fb\uff1b\u4f7f\u7528\u5bc6\u96c6\u7684\u4f4d\u56fe\u66ff\u4ee3\u7a7a\u95f2\u94fe\u8868\u8868\u793a\u7684\u5806\u5185\u5b58\uff0c\u964d\u4f4e\u6e05\u9664\u9636\u6bb5\u7684 CPU \u5360\u7528\uff1b v1.7 \u2014 \u901a\u8fc7\u5e76\u884c\u6808\u6536\u7f29\u5c06\u5783\u573e\u6536\u96c6\u7684\u65f6\u95f4\u7f29\u77ed\u81f3 2ms \u4ee5\u5185\uff1b v1.8 \u2014 \u4f7f\u7528\u6df7\u5408\u5199\u5c4f\u969c\u5c06\u5783\u573e\u6536\u96c6\u7684\u65f6\u95f4\u7f29\u77ed\u81f3 0.5ms \u4ee5\u5185 \u6700\u65b0\u7248\u672c Mark: \u5305\u542b\u4e24\u90e8\u5206: a. Mark Prepare: \u521d\u59cb\u5316GC\u4efb\u52a1\uff0c\u5305\u62ec\u5f00\u542f\u5199\u5c4f\u969c(write barrier)\u548c\u8f85\u52a9GC(mutator assist)\uff0c\u7edf\u8ba1root\u5bf9\u8c61\u7684\u4efb\u52a1\u6570\u91cf\u7b49\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981STW b. GC Drains: \u626b\u63cf\u6240\u6709root\u5bf9\u8c61\uff0c\u5305\u62ec\u5168\u5c40\u6307\u9488\u548cgoroutine(G)\u6808\u4e0a\u7684\u6307\u9488\uff08\u626b\u63cf\u5bf9\u5e94G\u6808\u65f6\u9700\u505c\u6b62\u8be5G)\uff0c\u5c06\u5176\u52a0\u5165\u6807\u8bb0\u961f\u5217(\u7070\u8272\u961f\u5217)\uff0c\u5e76\u5faa\u73af\u5904\u7406\u7070\u8272\u961f\u5217\u7684\u5bf9\u8c61\uff0c\u76f4\u5230\u7070\u8272\u961f\u5217\u4e3a\u7a7a\u3002\u8be5\u8fc7\u7a0b\u540e\u53f0\u5e76\u884c\u6267\u884c Mark Termination: \u5b8c\u6210\u6807\u8bb0\u5de5\u4f5c\uff0c\u91cd\u65b0\u626b\u63cf(re-scan)\u5168\u5c40\u6307\u9488\u548c\u6808\u3002\u56e0\u4e3aMark\u548c\u7528\u6237\u7a0b\u5e8f\u662f\u5e76\u884c\u7684\uff0c\u6240\u4ee5\u5728Mark\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u6709\u65b0\u7684\u5bf9\u8c61\u5206\u914d\u548c\u6307\u9488\u8d4b\u503c\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u901a\u8fc7\u5199\u5c4f\u969c\uff08write barrier\uff09\u8bb0\u5f55\u4e0b\u6765\uff0cre-scan \u518d\u68c0\u67e5\u4e00\u4e0b\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u662f\u4f1aSTW\u7684\u3002 Sweep: \u6309\u7167\u6807\u8bb0\u7ed3\u679c\u56de\u6536\u6240\u6709\u7684\u767d\u8272\u5bf9\u8c61\uff0c\u8be5\u8fc7\u7a0b\u540e\u53f0\u5e76\u884c\u6267\u884c Sweep Termination: \u5bf9\u672a\u6e05\u626b\u7684span\u8fdb\u884c\u6e05\u626b, \u53ea\u6709\u4e0a\u4e00\u8f6e\u7684GC\u7684\u6e05\u626b\u5de5\u4f5c\u5b8c\u6210\u624d\u53ef\u4ee5\u5f00\u59cb\u65b0\u4e00\u8f6e\u7684GC\u3002 \u6e05\u7406\u7ec8\u6b62\u9636\u6bb5 \u6682\u505c\u7a0b\u5e8f\uff0c\u6240\u6709\u7684\u5904\u7406\u5668\u5728\u8fd9\u65f6\u4f1a\u8fdb\u5165\u5b89\u5168\u70b9\uff08Safe point\uff09\uff1b \u5982\u679c\u5f53\u524d\u5783\u573e\u6536\u96c6\u5faa\u73af\u662f\u5f3a\u5236\u89e6\u53d1\u7684\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5904\u7406\u8fd8\u672a\u88ab\u6e05\u7406\u7684\u5185\u5b58\u7ba1\u7406\u5355\u5143\uff1b \u6807\u8bb0\u9636\u6bb5 \u5c06\u72b6\u6001\u5207\u6362\u81f3 _GCmark\u3001\u5f00\u542f\u5199\u5c4f\u969c\u3001\u7528\u6237\u7a0b\u5e8f\u534f\u52a9\uff08Mutator Assists\uff09\u5e76\u5c06\u6839\u5bf9\u8c61\u5165\u961f\uff1b \u6062\u590d\u6267\u884c\u7a0b\u5e8f\uff0c\u6807\u8bb0\u8fdb\u7a0b\u548c\u7528\u4e8e\u534f\u52a9\u7684\u7528\u6237\u7a0b\u5e8f\u4f1a\u5f00\u59cb\u5e76\u53d1\u6807\u8bb0\u5185\u5b58\u4e2d\u7684\u5bf9\u8c61\uff0c\u5199\u5c4f\u969c\u4f1a\u5c06\u88ab\u8986\u76d6\u7684\u6307\u9488\u548c\u65b0\u6307\u9488\u90fd\u6807\u8bb0\u6210\u7070\u8272\uff0c\u800c\u6240\u6709\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u90fd\u4f1a\u88ab\u76f4\u63a5\u6807\u8bb0\u6210\u9ed1\u8272\uff1b \u5f00\u59cb\u626b\u63cf\u6839\u5bf9\u8c61\uff0c\u5305\u62ec\u6240\u6709 Goroutine \u7684\u6808\u3001\u5168\u5c40\u5bf9\u8c61\u4ee5\u53ca\u4e0d\u5728\u5806\u4e2d\u7684\u8fd0\u884c\u65f6\u6570\u636e\u7ed3\u6784\uff0c\u626b\u63cf Goroutine \u6808\u671f\u95f4\u4f1a\u6682\u505c\u5f53\u524d\u5904\u7406\u5668\uff1b \u4f9d\u6b21\u5904\u7406\u7070\u8272\u961f\u5217\u4e2d\u7684\u5bf9\u8c61\uff0c\u5c06\u5bf9\u8c61\u6807\u8bb0\u6210\u9ed1\u8272\u5e76\u5c06\u5b83\u4eec\u6307\u5411\u7684\u5bf9\u8c61\u6807\u8bb0\u6210\u7070\u8272\uff1b \u4f7f\u7528\u5206\u5e03\u5f0f\u7684\u7ec8\u6b62\u7b97\u6cd5\u68c0\u67e5\u5269\u4f59\u7684\u5de5\u4f5c\uff0c\u53d1\u73b0\u6807\u8bb0\u9636\u6bb5\u5b8c\u6210\u540e\u8fdb\u5165\u6807\u8bb0\u7ec8\u6b62\u9636\u6bb5\uff1b \u6807\u8bb0\u7ec8\u6b62\u9636\u6bb5 \u6682\u505c\u7a0b\u5e8f\u3001\u5c06\u72b6\u6001\u5207\u6362\u81f3 _GCmarktermination \u5e76\u5173\u95ed\u8f85\u52a9\u6807\u8bb0\u7684\u7528\u6237\u7a0b\u5e8f\uff1b \u6e05\u7406\u5904\u7406\u5668\u4e0a\u7684\u7ebf\u7a0b\u7f13\u5b58\uff1b \u6e05\u7406\u9636\u6bb5 \u5c06\u72b6\u6001\u5207\u6362\u81f3 _GCoff \u5f00\u59cb\u6e05\u7406\u9636\u6bb5\uff0c\u521d\u59cb\u5316\u6e05\u7406\u72b6\u6001\u5e76\u5173\u95ed\u5199\u5c4f\u969c\uff1b \u6062\u590d\u7528\u6237\u7a0b\u5e8f\uff0c\u6240\u6709\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u4f1a\u6807\u8bb0\u6210\u767d\u8272\uff1b \u540e\u53f0\u5e76\u53d1\u6e05\u7406\u6240\u6709\u7684\u5185\u5b58\u7ba1\u7406\u5355\u5143\uff0c\u5f53 Goroutine \u7533\u8bf7\u65b0\u7684\u5185\u5b58\u7ba1\u7406\u5355\u5143\u65f6\u5c31\u4f1a\u89e6\u53d1\u6e05\u7406\uff1b \u4f18\u5316 MADV_FREE 1.16\u524d\u7248\u672c\uff0c \u7cfb\u7edf\u6309\u9700\u6c42\u51b3\u5b9a\u662f\u5426\u56de\u6536 \u5b57\u7b26\u4e32\u62fc\u63a5","title":"GC"},{"location":"golang/gc/#gc","text":"","title":"GC"},{"location":"golang/gc/#_1","text":"v1.0 \u2014 \u5b8c\u5168\u4e32\u884c\u7684\u6807\u8bb0\u548c\u6e05\u9664\u8fc7\u7a0b\uff0c\u9700\u8981\u6682\u505c\u6574\u4e2a\u7a0b\u5e8f\uff1b v1.1 \u2014 \u5728\u591a\u6838\u4e3b\u673a\u5e76\u884c\u6267\u884c\u5783\u573e\u6536\u96c6\u7684\u6807\u8bb0\u548c\u6e05\u9664\u9636\u6bb5\uff1b v1.3 \u2014 \u8fd0\u884c\u65f6\u57fa\u4e8e\u53ea\u6709\u6307\u9488\u7c7b\u578b\u7684\u503c\u5305\u542b\u6307\u9488\u7684\u5047\u8bbe\u589e\u52a0\u4e86\u5bf9\u6808\u5185\u5b58\u7684\u7cbe\u786e\u626b\u63cf\u652f\u6301\uff0c\u5b9e\u73b0\u4e86\u771f\u6b63\u7cbe\u786e\u7684\u5783\u573e\u6536\u96c6\uff1b\u5c06 unsafe.Pointer \u7c7b\u578b\u8f6c\u6362\u6210\u6574\u6570\u7c7b\u578b\u7684\u503c\u8ba4\u5b9a\u4e3a\u4e0d\u5408\u6cd5\u7684\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u60ac\u6302\u6307\u9488\u7b49\u4e25\u91cd\u95ee\u9898\uff1b v1.5 \u2014 \u5b9e\u73b0\u4e86\u57fa\u4e8e\u4e09\u8272\u6807\u8bb0\u6e05\u626b\u7684\u5e76\u53d1\u5783\u573e\u6536\u96c6\u5668\uff1b\u5927\u5e45\u5ea6\u964d\u4f4e\u5783\u573e\u6536\u96c6\u7684\u5ef6\u8fdf\u4ece\u51e0\u767e ms \u964d\u4f4e\u81f3 10ms \u4ee5\u4e0b\uff1b\u8ba1\u7b97\u5783\u573e\u6536\u96c6\u542f\u52a8\u7684\u5408\u9002\u65f6\u95f4\u5e76\u901a\u8fc7\u5e76\u53d1\u52a0\u901f\u5783\u573e\u6536\u96c6\u7684\u8fc7\u7a0b\uff1b v1.6 \u2014 \u5b9e\u73b0\u4e86\u53bb\u4e2d\u5fc3\u5316\u7684\u5783\u573e\u6536\u96c6\u534f\u8c03\u5668\uff1b\u57fa\u4e8e\u663e\u5f0f\u7684\u72b6\u6001\u673a\u4f7f\u5f97\u4efb\u610f Goroutine \u90fd\u80fd\u89e6\u53d1\u5783\u573e\u6536\u96c6\u7684\u72b6\u6001\u8fc1\u79fb\uff1b\u4f7f\u7528\u5bc6\u96c6\u7684\u4f4d\u56fe\u66ff\u4ee3\u7a7a\u95f2\u94fe\u8868\u8868\u793a\u7684\u5806\u5185\u5b58\uff0c\u964d\u4f4e\u6e05\u9664\u9636\u6bb5\u7684 CPU \u5360\u7528\uff1b v1.7 \u2014 \u901a\u8fc7\u5e76\u884c\u6808\u6536\u7f29\u5c06\u5783\u573e\u6536\u96c6\u7684\u65f6\u95f4\u7f29\u77ed\u81f3 2ms \u4ee5\u5185\uff1b v1.8 \u2014 \u4f7f\u7528\u6df7\u5408\u5199\u5c4f\u969c\u5c06\u5783\u573e\u6536\u96c6\u7684\u65f6\u95f4\u7f29\u77ed\u81f3 0.5ms \u4ee5\u5185","title":"\u53d8\u66f4\u5386\u53f2"},{"location":"golang/gc/#_2","text":"Mark: \u5305\u542b\u4e24\u90e8\u5206: a. Mark Prepare: \u521d\u59cb\u5316GC\u4efb\u52a1\uff0c\u5305\u62ec\u5f00\u542f\u5199\u5c4f\u969c(write barrier)\u548c\u8f85\u52a9GC(mutator assist)\uff0c\u7edf\u8ba1root\u5bf9\u8c61\u7684\u4efb\u52a1\u6570\u91cf\u7b49\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981STW b. GC Drains: \u626b\u63cf\u6240\u6709root\u5bf9\u8c61\uff0c\u5305\u62ec\u5168\u5c40\u6307\u9488\u548cgoroutine(G)\u6808\u4e0a\u7684\u6307\u9488\uff08\u626b\u63cf\u5bf9\u5e94G\u6808\u65f6\u9700\u505c\u6b62\u8be5G)\uff0c\u5c06\u5176\u52a0\u5165\u6807\u8bb0\u961f\u5217(\u7070\u8272\u961f\u5217)\uff0c\u5e76\u5faa\u73af\u5904\u7406\u7070\u8272\u961f\u5217\u7684\u5bf9\u8c61\uff0c\u76f4\u5230\u7070\u8272\u961f\u5217\u4e3a\u7a7a\u3002\u8be5\u8fc7\u7a0b\u540e\u53f0\u5e76\u884c\u6267\u884c Mark Termination: \u5b8c\u6210\u6807\u8bb0\u5de5\u4f5c\uff0c\u91cd\u65b0\u626b\u63cf(re-scan)\u5168\u5c40\u6307\u9488\u548c\u6808\u3002\u56e0\u4e3aMark\u548c\u7528\u6237\u7a0b\u5e8f\u662f\u5e76\u884c\u7684\uff0c\u6240\u4ee5\u5728Mark\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u6709\u65b0\u7684\u5bf9\u8c61\u5206\u914d\u548c\u6307\u9488\u8d4b\u503c\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u901a\u8fc7\u5199\u5c4f\u969c\uff08write barrier\uff09\u8bb0\u5f55\u4e0b\u6765\uff0cre-scan \u518d\u68c0\u67e5\u4e00\u4e0b\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u662f\u4f1aSTW\u7684\u3002 Sweep: \u6309\u7167\u6807\u8bb0\u7ed3\u679c\u56de\u6536\u6240\u6709\u7684\u767d\u8272\u5bf9\u8c61\uff0c\u8be5\u8fc7\u7a0b\u540e\u53f0\u5e76\u884c\u6267\u884c Sweep Termination: \u5bf9\u672a\u6e05\u626b\u7684span\u8fdb\u884c\u6e05\u626b, \u53ea\u6709\u4e0a\u4e00\u8f6e\u7684GC\u7684\u6e05\u626b\u5de5\u4f5c\u5b8c\u6210\u624d\u53ef\u4ee5\u5f00\u59cb\u65b0\u4e00\u8f6e\u7684GC\u3002","title":"\u6700\u65b0\u7248\u672c"},{"location":"golang/gc/#_3","text":"\u6682\u505c\u7a0b\u5e8f\uff0c\u6240\u6709\u7684\u5904\u7406\u5668\u5728\u8fd9\u65f6\u4f1a\u8fdb\u5165\u5b89\u5168\u70b9\uff08Safe point\uff09\uff1b \u5982\u679c\u5f53\u524d\u5783\u573e\u6536\u96c6\u5faa\u73af\u662f\u5f3a\u5236\u89e6\u53d1\u7684\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5904\u7406\u8fd8\u672a\u88ab\u6e05\u7406\u7684\u5185\u5b58\u7ba1\u7406\u5355\u5143\uff1b","title":"\u6e05\u7406\u7ec8\u6b62\u9636\u6bb5"},{"location":"golang/gc/#_4","text":"\u5c06\u72b6\u6001\u5207\u6362\u81f3 _GCmark\u3001\u5f00\u542f\u5199\u5c4f\u969c\u3001\u7528\u6237\u7a0b\u5e8f\u534f\u52a9\uff08Mutator Assists\uff09\u5e76\u5c06\u6839\u5bf9\u8c61\u5165\u961f\uff1b \u6062\u590d\u6267\u884c\u7a0b\u5e8f\uff0c\u6807\u8bb0\u8fdb\u7a0b\u548c\u7528\u4e8e\u534f\u52a9\u7684\u7528\u6237\u7a0b\u5e8f\u4f1a\u5f00\u59cb\u5e76\u53d1\u6807\u8bb0\u5185\u5b58\u4e2d\u7684\u5bf9\u8c61\uff0c\u5199\u5c4f\u969c\u4f1a\u5c06\u88ab\u8986\u76d6\u7684\u6307\u9488\u548c\u65b0\u6307\u9488\u90fd\u6807\u8bb0\u6210\u7070\u8272\uff0c\u800c\u6240\u6709\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u90fd\u4f1a\u88ab\u76f4\u63a5\u6807\u8bb0\u6210\u9ed1\u8272\uff1b \u5f00\u59cb\u626b\u63cf\u6839\u5bf9\u8c61\uff0c\u5305\u62ec\u6240\u6709 Goroutine \u7684\u6808\u3001\u5168\u5c40\u5bf9\u8c61\u4ee5\u53ca\u4e0d\u5728\u5806\u4e2d\u7684\u8fd0\u884c\u65f6\u6570\u636e\u7ed3\u6784\uff0c\u626b\u63cf Goroutine \u6808\u671f\u95f4\u4f1a\u6682\u505c\u5f53\u524d\u5904\u7406\u5668\uff1b \u4f9d\u6b21\u5904\u7406\u7070\u8272\u961f\u5217\u4e2d\u7684\u5bf9\u8c61\uff0c\u5c06\u5bf9\u8c61\u6807\u8bb0\u6210\u9ed1\u8272\u5e76\u5c06\u5b83\u4eec\u6307\u5411\u7684\u5bf9\u8c61\u6807\u8bb0\u6210\u7070\u8272\uff1b \u4f7f\u7528\u5206\u5e03\u5f0f\u7684\u7ec8\u6b62\u7b97\u6cd5\u68c0\u67e5\u5269\u4f59\u7684\u5de5\u4f5c\uff0c\u53d1\u73b0\u6807\u8bb0\u9636\u6bb5\u5b8c\u6210\u540e\u8fdb\u5165\u6807\u8bb0\u7ec8\u6b62\u9636\u6bb5\uff1b","title":"\u6807\u8bb0\u9636\u6bb5"},{"location":"golang/gc/#_5","text":"\u6682\u505c\u7a0b\u5e8f\u3001\u5c06\u72b6\u6001\u5207\u6362\u81f3 _GCmarktermination \u5e76\u5173\u95ed\u8f85\u52a9\u6807\u8bb0\u7684\u7528\u6237\u7a0b\u5e8f\uff1b \u6e05\u7406\u5904\u7406\u5668\u4e0a\u7684\u7ebf\u7a0b\u7f13\u5b58\uff1b","title":"\u6807\u8bb0\u7ec8\u6b62\u9636\u6bb5"},{"location":"golang/gc/#_6","text":"\u5c06\u72b6\u6001\u5207\u6362\u81f3 _GCoff \u5f00\u59cb\u6e05\u7406\u9636\u6bb5\uff0c\u521d\u59cb\u5316\u6e05\u7406\u72b6\u6001\u5e76\u5173\u95ed\u5199\u5c4f\u969c\uff1b \u6062\u590d\u7528\u6237\u7a0b\u5e8f\uff0c\u6240\u6709\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u4f1a\u6807\u8bb0\u6210\u767d\u8272\uff1b \u540e\u53f0\u5e76\u53d1\u6e05\u7406\u6240\u6709\u7684\u5185\u5b58\u7ba1\u7406\u5355\u5143\uff0c\u5f53 Goroutine \u7533\u8bf7\u65b0\u7684\u5185\u5b58\u7ba1\u7406\u5355\u5143\u65f6\u5c31\u4f1a\u89e6\u53d1\u6e05\u7406\uff1b","title":"\u6e05\u7406\u9636\u6bb5"},{"location":"golang/gc/#_7","text":"MADV_FREE 1.16\u524d\u7248\u672c\uff0c \u7cfb\u7edf\u6309\u9700\u6c42\u51b3\u5b9a\u662f\u5426\u56de\u6536 \u5b57\u7b26\u4e32\u62fc\u63a5","title":"\u4f18\u5316"},{"location":"golang/goroutine/","text":"GMP G\uff1agoroutine\uff0c\u2f00\u4e2a\u8ba1\u7b97\u4efb\u52a1\u3002\u7531\u9700\u8981\u6267\u2f8f\u7684\u4ee3\u7801\u548c\u5176\u4e0a\u4e0b\u2f42\u7ec4\u6210\uff0c\u4e0a\u4e0b\u2f42 \u5305\u62ec\uff1a\u5f53\u524d\u4ee3\u7801\u4f4d\u7f6e\uff0c\u6808\u9876\u3001\u6808\u5e95\u5730\u5740\uff0c\u72b6\u6001\u7b49\u3002 M\uff1amachine\uff0c\u7cfb\u7edf\u7ebf\u7a0b\uff0c\u6267\u2f8f\u5b9e\u4f53\uff0c\u60f3\u8981\u5728 CPU \u4e0a\u6267\u2f8f\u4ee3\u7801\uff0c\u5fc5\u987b\u6709\u7ebf \u7a0b\uff0c\u4e0e C \u8bed\u2f94\u4e2d\u7684\u7ebf\u7a0b\u76f8\u540c\uff0c\u901a\u8fc7\u7cfb\u7edf\u8c03\u2f64 clone \u6765\u521b\u5efa\u3002 P\uff1aprocessor\uff0c\u865a\u62df\u5904\u7406\u5668\uff0cM \u5fc5\u987b\u83b7\u5f97 P \u624d\u80fd\u6267\u2f8f\u4ee3\u7801\uff0c\u5426\u5219\u5fc5\u987b\u9677\u2f0a\u4f11 \u7720(\u540e\u53f0\u76d1\u63a7\u7ebf\u7a0b\u9664\u5916)\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5c06\u5176\u7406\u89e3\u4e3a\u2f00\u79cd token\uff0c\u6709\u8fd9\u4e2a token\uff0c\u624d \u6709\u5728\u7269\u7406 CPU \u6838\u2f3c\u4e0a\u6267\u2f8f\u7684\u6743\u2f12\u3002 G:\u8868\u793agoroutine\uff0c\u6bcf\u4e2agoroutine\u90fd\u6709\u81ea\u5df1\u7684\u6808\u7a7a\u95f4\uff0c\u5b9a\u65f6\u5668\uff0c\u521d\u59cb\u5316\u7684\u6808\u7a7a\u95f4\u57282k\u5de6\u53f3\uff0c\u7a7a\u95f4\u4f1a\u968f\u7740\u9700\u6c42\u589e\u957f\u3002 M:\u62bd\u8c61\u5316\u4ee3\u8868\u5185\u6838\u7ebf\u7a0b\uff0c\u8bb0\u5f55\u5185\u6838\u7ebf\u7a0b\u6808\u4fe1\u606f\uff0c\u5f53goroutine\u8c03\u5ea6\u5230\u7ebf\u7a0b\u65f6\uff0c\u4f7f\u7528\u8be5goroutine\u81ea\u5df1\u7684\u6808\u4fe1\u606f\u3002 P:\u4ee3\u8868\u8c03\u5ea6\u5668\uff0c\u8d1f\u8d23\u8c03\u5ea6goroutine\uff0c\u7ef4\u62a4\u4e00\u4e2a\u672c\u5730goroutine\u961f\u5217\uff0cM\u4eceP\u4e0a\u83b7\u5f97goroutine\u5e76\u6267\u884c\uff0c\u540c\u65f6\u8fd8\u8d1f\u8d23\u90e8\u5206\u5185\u5b58\u7684\u7ba1\u7406\u3002 * \u5168\u5c40\u961f\u5217\uff08Global Queue\uff09\uff1a\u5b58\u653e\u7b49\u5f85\u8fd0\u884c\u7684 G\u3002 P \u7684\u672c\u5730\u961f\u5217\uff1a\u540c\u5168\u5c40\u961f\u5217\u7c7b\u4f3c\uff0c\u5b58\u653e\u7684\u4e5f\u662f\u7b49\u5f85\u8fd0\u884c\u7684 G\uff0c\u5b58\u7684\u6570\u91cf\u6709\u9650\uff0c\u4e0d\u8d85\u8fc7 256 \u4e2a\u3002\u65b0\u5efa G\u2019\u65f6\uff0cG\u2019\u4f18\u5148\u52a0\u5165\u5230 P \u7684\u672c\u5730\u961f\u5217\uff0c\u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u5219\u4f1a\u628a\u672c\u5730\u961f \u5217\u4e2d\u4e00\u534a\u7684 G \u79fb\u52a8\u5230\u5168\u5c40\u961f\u5217\u3002 P \u5217\u8868\uff1a\u6240\u6709\u7684 P \u90fd\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u521b\u5efa\uff0c\u5e76\u4fdd\u5b58\u5728\u6570\u7ec4\u4e2d\uff0c\u6700\u591a\u6709 GOMAXPROCS(\u53ef\u914d\u7f6e) \u4e2a\u3002 M\uff1a\u7ebf\u7a0b\u60f3\u8fd0\u884c\u4efb\u52a1\u5c31\u5f97\u83b7\u53d6 P\uff0c\u4ece P \u7684\u672c\u5730\u961f\u5217\u83b7\u53d6 G\uff0cP \u961f\u5217\u4e3a\u7a7a\u65f6\uff0cM \u4e5f\u4f1a\u5c1d\u8bd5\u4ece\u5168\u5c40\u961f\u5217\u62ff\u4e00\u6279 G \u653e\u5230 P \u7684\u672c\u5730\u961f\u5217\uff0c\u6216\u4ece\u5176\u4ed6 P \u7684\u672c\u5730\u961f\u5217\u5077\u4e00\u534a\u653e\u5230\u81ea\u5df1 P \u7684\u672c\u5730\u961f\u5217\u3002M \u8fd0\u884c G\uff0cG \u6267\u884c\u4e4b\u540e\uff0cM \u4f1a\u4ece P \u83b7\u53d6\u4e0b\u4e00\u4e2a G\uff0c\u4e0d\u65ad\u91cd\u590d\u4e0b\u53bb\u3002 M \u4e0e P \u662f 1\uff1a1 \u7684\u5173\u7cfb go func \u8c03\u5ea6\u8fc7\u7a0b \u5de5\u5177 go tool trace chan \u5f02\u5e38 \u5982\u679c\u7ed9\u4e00\u4e2a nil \u7684 channel \u53d1\u9001\u6570\u636e\uff0c\u4f1a\u9020\u6210\u6c38\u8fdc\u963b\u585e\u3002 \u5982\u679c\u4ece\u4e00\u4e2a nil \u7684 channel \u4e2d\u63a5\u6536\u6570\u636e\uff0c\u4e5f\u4f1a\u9020\u6210\u6c38\u4e45\u963b\u585e\u3002 \u7ed9\u4e00\u4e2a\u5df2\u7ecf\u5173\u95ed\u7684 channel \u53d1\u9001\u6570\u636e\uff0c \u4f1a\u5f15\u8d77 panic \u4ece\u4e00\u4e2a\u5df2\u7ecf\u5173\u95ed\u7684 channel \u63a5\u6536\u6570\u636e\uff0c \u5982\u679c\u7f13\u51b2\u533a\u4e2d\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u96f6 \u503c\u3002 \u5e95\u5c42\u7ed3\u6784 \u4f7f\u7528\u4e86 ring buffer\uff08\u73af\u5f62\u7f13\u51b2\u533a) \u6765\u7f13\u5b58\u5199\u5165\u7684\u6570\u636e\u3002 \u7ec8\u6b62\u4e00\u4e2a\u534f\u7a0b runtime.Goexit()","title":"Goroutine"},{"location":"golang/goroutine/#gmp","text":"G\uff1agoroutine\uff0c\u2f00\u4e2a\u8ba1\u7b97\u4efb\u52a1\u3002\u7531\u9700\u8981\u6267\u2f8f\u7684\u4ee3\u7801\u548c\u5176\u4e0a\u4e0b\u2f42\u7ec4\u6210\uff0c\u4e0a\u4e0b\u2f42 \u5305\u62ec\uff1a\u5f53\u524d\u4ee3\u7801\u4f4d\u7f6e\uff0c\u6808\u9876\u3001\u6808\u5e95\u5730\u5740\uff0c\u72b6\u6001\u7b49\u3002 M\uff1amachine\uff0c\u7cfb\u7edf\u7ebf\u7a0b\uff0c\u6267\u2f8f\u5b9e\u4f53\uff0c\u60f3\u8981\u5728 CPU \u4e0a\u6267\u2f8f\u4ee3\u7801\uff0c\u5fc5\u987b\u6709\u7ebf \u7a0b\uff0c\u4e0e C \u8bed\u2f94\u4e2d\u7684\u7ebf\u7a0b\u76f8\u540c\uff0c\u901a\u8fc7\u7cfb\u7edf\u8c03\u2f64 clone \u6765\u521b\u5efa\u3002 P\uff1aprocessor\uff0c\u865a\u62df\u5904\u7406\u5668\uff0cM \u5fc5\u987b\u83b7\u5f97 P \u624d\u80fd\u6267\u2f8f\u4ee3\u7801\uff0c\u5426\u5219\u5fc5\u987b\u9677\u2f0a\u4f11 \u7720(\u540e\u53f0\u76d1\u63a7\u7ebf\u7a0b\u9664\u5916)\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5c06\u5176\u7406\u89e3\u4e3a\u2f00\u79cd token\uff0c\u6709\u8fd9\u4e2a token\uff0c\u624d \u6709\u5728\u7269\u7406 CPU \u6838\u2f3c\u4e0a\u6267\u2f8f\u7684\u6743\u2f12\u3002 G:\u8868\u793agoroutine\uff0c\u6bcf\u4e2agoroutine\u90fd\u6709\u81ea\u5df1\u7684\u6808\u7a7a\u95f4\uff0c\u5b9a\u65f6\u5668\uff0c\u521d\u59cb\u5316\u7684\u6808\u7a7a\u95f4\u57282k\u5de6\u53f3\uff0c\u7a7a\u95f4\u4f1a\u968f\u7740\u9700\u6c42\u589e\u957f\u3002 M:\u62bd\u8c61\u5316\u4ee3\u8868\u5185\u6838\u7ebf\u7a0b\uff0c\u8bb0\u5f55\u5185\u6838\u7ebf\u7a0b\u6808\u4fe1\u606f\uff0c\u5f53goroutine\u8c03\u5ea6\u5230\u7ebf\u7a0b\u65f6\uff0c\u4f7f\u7528\u8be5goroutine\u81ea\u5df1\u7684\u6808\u4fe1\u606f\u3002 P:\u4ee3\u8868\u8c03\u5ea6\u5668\uff0c\u8d1f\u8d23\u8c03\u5ea6goroutine\uff0c\u7ef4\u62a4\u4e00\u4e2a\u672c\u5730goroutine\u961f\u5217\uff0cM\u4eceP\u4e0a\u83b7\u5f97goroutine\u5e76\u6267\u884c\uff0c\u540c\u65f6\u8fd8\u8d1f\u8d23\u90e8\u5206\u5185\u5b58\u7684\u7ba1\u7406\u3002 * \u5168\u5c40\u961f\u5217\uff08Global Queue\uff09\uff1a\u5b58\u653e\u7b49\u5f85\u8fd0\u884c\u7684 G\u3002 P \u7684\u672c\u5730\u961f\u5217\uff1a\u540c\u5168\u5c40\u961f\u5217\u7c7b\u4f3c\uff0c\u5b58\u653e\u7684\u4e5f\u662f\u7b49\u5f85\u8fd0\u884c\u7684 G\uff0c\u5b58\u7684\u6570\u91cf\u6709\u9650\uff0c\u4e0d\u8d85\u8fc7 256 \u4e2a\u3002\u65b0\u5efa G\u2019\u65f6\uff0cG\u2019\u4f18\u5148\u52a0\u5165\u5230 P \u7684\u672c\u5730\u961f\u5217\uff0c\u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u5219\u4f1a\u628a\u672c\u5730\u961f \u5217\u4e2d\u4e00\u534a\u7684 G \u79fb\u52a8\u5230\u5168\u5c40\u961f\u5217\u3002 P \u5217\u8868\uff1a\u6240\u6709\u7684 P \u90fd\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u521b\u5efa\uff0c\u5e76\u4fdd\u5b58\u5728\u6570\u7ec4\u4e2d\uff0c\u6700\u591a\u6709 GOMAXPROCS(\u53ef\u914d\u7f6e) \u4e2a\u3002 M\uff1a\u7ebf\u7a0b\u60f3\u8fd0\u884c\u4efb\u52a1\u5c31\u5f97\u83b7\u53d6 P\uff0c\u4ece P \u7684\u672c\u5730\u961f\u5217\u83b7\u53d6 G\uff0cP \u961f\u5217\u4e3a\u7a7a\u65f6\uff0cM \u4e5f\u4f1a\u5c1d\u8bd5\u4ece\u5168\u5c40\u961f\u5217\u62ff\u4e00\u6279 G \u653e\u5230 P \u7684\u672c\u5730\u961f\u5217\uff0c\u6216\u4ece\u5176\u4ed6 P \u7684\u672c\u5730\u961f\u5217\u5077\u4e00\u534a\u653e\u5230\u81ea\u5df1 P \u7684\u672c\u5730\u961f\u5217\u3002M \u8fd0\u884c G\uff0cG \u6267\u884c\u4e4b\u540e\uff0cM \u4f1a\u4ece P \u83b7\u53d6\u4e0b\u4e00\u4e2a G\uff0c\u4e0d\u65ad\u91cd\u590d\u4e0b\u53bb\u3002 M \u4e0e P \u662f 1\uff1a1 \u7684\u5173\u7cfb","title":"GMP"},{"location":"golang/goroutine/#go-func","text":"","title":"go func \u8c03\u5ea6\u8fc7\u7a0b"},{"location":"golang/goroutine/#_1","text":"go tool trace","title":"\u5de5\u5177"},{"location":"golang/goroutine/#chan","text":"","title":"chan"},{"location":"golang/goroutine/#_2","text":"\u5982\u679c\u7ed9\u4e00\u4e2a nil \u7684 channel \u53d1\u9001\u6570\u636e\uff0c\u4f1a\u9020\u6210\u6c38\u8fdc\u963b\u585e\u3002 \u5982\u679c\u4ece\u4e00\u4e2a nil \u7684 channel \u4e2d\u63a5\u6536\u6570\u636e\uff0c\u4e5f\u4f1a\u9020\u6210\u6c38\u4e45\u963b\u585e\u3002 \u7ed9\u4e00\u4e2a\u5df2\u7ecf\u5173\u95ed\u7684 channel \u53d1\u9001\u6570\u636e\uff0c \u4f1a\u5f15\u8d77 panic \u4ece\u4e00\u4e2a\u5df2\u7ecf\u5173\u95ed\u7684 channel \u63a5\u6536\u6570\u636e\uff0c \u5982\u679c\u7f13\u51b2\u533a\u4e2d\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u96f6 \u503c\u3002","title":"\u5f02\u5e38"},{"location":"golang/goroutine/#_3","text":"\u4f7f\u7528\u4e86 ring buffer\uff08\u73af\u5f62\u7f13\u51b2\u533a) \u6765\u7f13\u5b58\u5199\u5165\u7684\u6570\u636e\u3002","title":"\u5e95\u5c42\u7ed3\u6784"},{"location":"golang/goroutine/#_4","text":"runtime.Goexit()","title":"\u7ec8\u6b62\u4e00\u4e2a\u534f\u7a0b"},{"location":"golang/slice/","text":"slice array \u6570\u7ec4\u662f\u503c\u7c7b\u578b\uff0c \u4f20\u9012\u65f6\u53d1\u751f\u62f7\u8d1d \u4e0d\u540c\u957f\u5ea6\u6570\u636e\uff0c\u662f\u4e0d\u540c\u7c7b\u578b slice\u5e95\u5c42\u7ed3\u6784 \u5207\u7247\u672c\u8eab\u5e76\u4e0d\u662f\u52a8\u6001\u6570\u7ec4\u6216\u8005\u6570\u7ec4\u6307\u9488\u3002\u5b83\u5185\u90e8\u5b9e\u73b0\u7684\u6570\u636e\u7ed3\u6784\u901a\u8fc7\u6307\u9488\u5f15\u7528 \u5e95\u5c42\u6570\u7ec4\uff0c\u8bbe\u5b9a\u76f8\u5173\u5c5e\u6027\u5c06\u6570\u636e\u8bfb\u5199\u64cd\u4f5c\u9650\u5b9a\u5728\u6307\u5b9a\u7684\u533a\u57df\u5185\u3002\u5207\u7247\u672c\u8eab\u662f\u4e00 \u4e2a\u53ea\u8bfb\u5bf9\u8c61\uff0c\u5176\u5de5\u4f5c\u673a\u5236\u7c7b\u4f3c\u6570\u7ec4\u6307\u9488\u7684\u4e00\u79cd\u5c01\u88c5\u3002 \u5207\u7247\u5bf9\u8c61\u975e\u5e38\u5c0f\uff0c\u662f\u56e0\u4e3a\u5b83\u662f\u53ea\u6709 3 \u4e2a\u5b57\u6bb5\u7684\u6570\u636e\u7ed3\u6784\uff1a \u6307\u5411\u5e95\u5c42\u6570\u7ec4\u7684\u6307\u9488 \u5207\u7247\u7684\u957f\u5ea6 \u5207\u7247\u7684\u5bb9\u91cf slice\u6269\u5bb9 \u9996\u5148\u5224\u65ad\uff0c\u5982\u679c\u65b0\u7533\u8bf7\u5bb9\u91cf\u5927\u4e8e 2 \u500d\u7684\u65e7\u5bb9\u91cf\uff0c\u6700\u7ec8\u5bb9\u91cf\u5c31\u662f\u65b0\u7533\u8bf7\u7684\u5bb9 \u91cf \u5426\u5219\u5224\u65ad\uff0c\u5982\u679c\u65e7\u5207\u7247\u7684\u957f\u5ea6\u5c0f\u4e8e 1024\uff0c\u5219\u6700\u7ec8\u5bb9\u91cf\u5c31\u662f\u65e7\u5bb9\u91cf\u7684\u4e24\u500d \u5426\u5219\u5224\u65ad\uff0c\u5982\u679c\u65e7\u5207\u7247\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e 1024\uff0c\u5219\u6700\u7ec8\u5bb9\u91cf\u4ece\u65e7\u5bb9\u91cf\u5f00\u59cb\u5faa\u73af\u589e\u52a0\u539f\u6765\u7684 1/4, \u76f4\u5230\u6700\u7ec8\u5bb9\u91cf\u5927\u4e8e\u7b49\u4e8e\u65b0\u7533\u8bf7\u7684\u5bb9\u91cf \u5982\u679c\u6700\u7ec8\u5bb9\u91cf\u8ba1\u7b97\u503c\u6ea2\u51fa\uff0c\u5219\u6700\u7ec8\u5bb9\u91cf\u5c31\u662f\u65b0\u7533\u8bf7\u5bb9\u91cf 1.17 \u6269\u5bb9\u4e4b\u540e\uff0c\u8fd8\u6709\u4e2a\u5185\u5b58 1.18 \u6269\u5bb9\u4f18\u5316\uff0c \u4e0d\u518d\u662f1024, \u6570\u636e\u8d8a\u5927\u8d8a\u5e73\u6ed1\uff0c\u7cfb\u6570\u5c06\u4f1a\u53d8\u62101.25 newcap += (newcap + 3*threshold) / 4 slice \u64cd\u4f5c \u5728 \u9891\u7e41\u53d8\u66f4\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u64cd\u4f5c \u4e2d\u7528\u9884\u7f6e\u957f\u5ea6\u7684[]byte \u4ee3\u66ffstring \uff0c\u6bd4\u5982 \u5b57\u7b26\u4e32\u62fc\u63a5 \u5c3d\u91cf\u5bf9\u6709\u5bb9\u91cf\u7684slice \u6267\u884cappend \u9884\u5206\u5ea6\u957f\u5ea6\u540e\uff0c append\u7a0d\u5f3a\u4e8ecopy \u5207\u7247\u5783\u573e\u56de\u6536\u9677\u9631 s = s[:len(s)-1] \u5220\u6389\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u6ca1\u6709gc, s = ss[2:4] s\u5f15\u7528ss\u4e2d\u4e00\u90e8\u5206\u6570\u636e\uff0c ss\u5176\u5b83\u6570\u636e\u4e0d\u4f1agc slice \u64cd\u4f5c\u9677\u9631 slice \u4f20\u9012\u4e3a\u53c2\u6570\u65f6\uff0c\u5982\u679c\u53d1\u751f\u6269\u5bb9\uff0c\u90a3\u4e48\u5e95\u5c42\u4f1a\u751f\u6210\u65b0\u6570\u7ec4\uff0c \u5bfc\u81f4\u4e0d\u4fee\u6539\u4f20\u5165slice","title":"Slice & Array"},{"location":"golang/slice/#slice","text":"","title":"slice"},{"location":"golang/slice/#array","text":"\u6570\u7ec4\u662f\u503c\u7c7b\u578b\uff0c \u4f20\u9012\u65f6\u53d1\u751f\u62f7\u8d1d \u4e0d\u540c\u957f\u5ea6\u6570\u636e\uff0c\u662f\u4e0d\u540c\u7c7b\u578b","title":"array"},{"location":"golang/slice/#slice_1","text":"\u5207\u7247\u672c\u8eab\u5e76\u4e0d\u662f\u52a8\u6001\u6570\u7ec4\u6216\u8005\u6570\u7ec4\u6307\u9488\u3002\u5b83\u5185\u90e8\u5b9e\u73b0\u7684\u6570\u636e\u7ed3\u6784\u901a\u8fc7\u6307\u9488\u5f15\u7528 \u5e95\u5c42\u6570\u7ec4\uff0c\u8bbe\u5b9a\u76f8\u5173\u5c5e\u6027\u5c06\u6570\u636e\u8bfb\u5199\u64cd\u4f5c\u9650\u5b9a\u5728\u6307\u5b9a\u7684\u533a\u57df\u5185\u3002\u5207\u7247\u672c\u8eab\u662f\u4e00 \u4e2a\u53ea\u8bfb\u5bf9\u8c61\uff0c\u5176\u5de5\u4f5c\u673a\u5236\u7c7b\u4f3c\u6570\u7ec4\u6307\u9488\u7684\u4e00\u79cd\u5c01\u88c5\u3002 \u5207\u7247\u5bf9\u8c61\u975e\u5e38\u5c0f\uff0c\u662f\u56e0\u4e3a\u5b83\u662f\u53ea\u6709 3 \u4e2a\u5b57\u6bb5\u7684\u6570\u636e\u7ed3\u6784\uff1a \u6307\u5411\u5e95\u5c42\u6570\u7ec4\u7684\u6307\u9488 \u5207\u7247\u7684\u957f\u5ea6 \u5207\u7247\u7684\u5bb9\u91cf","title":"slice\u5e95\u5c42\u7ed3\u6784"},{"location":"golang/slice/#slice_2","text":"\u9996\u5148\u5224\u65ad\uff0c\u5982\u679c\u65b0\u7533\u8bf7\u5bb9\u91cf\u5927\u4e8e 2 \u500d\u7684\u65e7\u5bb9\u91cf\uff0c\u6700\u7ec8\u5bb9\u91cf\u5c31\u662f\u65b0\u7533\u8bf7\u7684\u5bb9 \u91cf \u5426\u5219\u5224\u65ad\uff0c\u5982\u679c\u65e7\u5207\u7247\u7684\u957f\u5ea6\u5c0f\u4e8e 1024\uff0c\u5219\u6700\u7ec8\u5bb9\u91cf\u5c31\u662f\u65e7\u5bb9\u91cf\u7684\u4e24\u500d \u5426\u5219\u5224\u65ad\uff0c\u5982\u679c\u65e7\u5207\u7247\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e 1024\uff0c\u5219\u6700\u7ec8\u5bb9\u91cf\u4ece\u65e7\u5bb9\u91cf\u5f00\u59cb\u5faa\u73af\u589e\u52a0\u539f\u6765\u7684 1/4, \u76f4\u5230\u6700\u7ec8\u5bb9\u91cf\u5927\u4e8e\u7b49\u4e8e\u65b0\u7533\u8bf7\u7684\u5bb9\u91cf \u5982\u679c\u6700\u7ec8\u5bb9\u91cf\u8ba1\u7b97\u503c\u6ea2\u51fa\uff0c\u5219\u6700\u7ec8\u5bb9\u91cf\u5c31\u662f\u65b0\u7533\u8bf7\u5bb9\u91cf 1.17 \u6269\u5bb9\u4e4b\u540e\uff0c\u8fd8\u6709\u4e2a\u5185\u5b58 1.18 \u6269\u5bb9\u4f18\u5316\uff0c \u4e0d\u518d\u662f1024, \u6570\u636e\u8d8a\u5927\u8d8a\u5e73\u6ed1\uff0c\u7cfb\u6570\u5c06\u4f1a\u53d8\u62101.25 newcap += (newcap + 3*threshold) / 4","title":"slice\u6269\u5bb9"},{"location":"golang/slice/#slice_3","text":"\u5728 \u9891\u7e41\u53d8\u66f4\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u64cd\u4f5c \u4e2d\u7528\u9884\u7f6e\u957f\u5ea6\u7684[]byte \u4ee3\u66ffstring \uff0c\u6bd4\u5982 \u5b57\u7b26\u4e32\u62fc\u63a5 \u5c3d\u91cf\u5bf9\u6709\u5bb9\u91cf\u7684slice \u6267\u884cappend \u9884\u5206\u5ea6\u957f\u5ea6\u540e\uff0c append\u7a0d\u5f3a\u4e8ecopy \u5207\u7247\u5783\u573e\u56de\u6536\u9677\u9631 s = s[:len(s)-1] \u5220\u6389\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u6ca1\u6709gc, s = ss[2:4] s\u5f15\u7528ss\u4e2d\u4e00\u90e8\u5206\u6570\u636e\uff0c ss\u5176\u5b83\u6570\u636e\u4e0d\u4f1agc","title":"slice \u64cd\u4f5c"},{"location":"golang/slice/#slice_4","text":"slice \u4f20\u9012\u4e3a\u53c2\u6570\u65f6\uff0c\u5982\u679c\u53d1\u751f\u6269\u5bb9\uff0c\u90a3\u4e48\u5e95\u5c42\u4f1a\u751f\u6210\u65b0\u6570\u7ec4\uff0c \u5bfc\u81f4\u4e0d\u4fee\u6539\u4f20\u5165slice","title":"slice \u64cd\u4f5c\u9677\u9631"},{"location":"golang/docs/GO%E8%AF%AD%E8%A8%80%E4%B9%8B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/","text":"\u4eca\u5929\u6211\u4eec\u6765\u804a\u804agolang\u662f\u5982\u4f55\u8fdb\u884c\u5783\u573e\u56de\u6536\u7684\u3002\u6211\u4eec\u77e5\u9053\uff0c\u76ee\u524d\u5404\u8bed\u8a00\u8fdb\u884c\u5783\u573e\u56de\u6536\u7684\u65b9\u6cd5\u6709\u5f88\u591a\uff0c\u5982\u5f15\u7528\u8ba1\u6570\u3001\u6807\u8bb0\u6e05\u9664\u3001\u5206\u4ee3\u56de\u6536\u3001\u4e09\u8272\u6807\u8bb0\u7b49\uff0c\u5404\u79cd\u65b9\u5f0f\u90fd\u6709\u5176\u7279\u70b9\uff0cGO\u8bed\u8a00\u5728\u53d1\u5c55\u8fc7\u7a0b\u4e2d\uff0c \u5176GC\u7b97\u6cd5\u4e5f\u662f\u4e0d\u65ad\u6539\u8fdb\u7684\u3002 GO\u7684GC\u91cc\u7a0b\u7891 v1.3\u4ee5\u524d\uff1aSTW golang\u7684\u5783\u573e\u56de\u6536\u7b97\u6cd5\u90fd\u975e\u5e38\u7b80\u964b\uff0c\u5176\u6027\u80fd\u4e5f\u5e7f\u88ab\u8bdf\u75c5\uff1ago runtime\u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b\uff08\u5185\u5b58\u8d85\u8fc7\u9608\u503c\u6216\u5b9a\u671f\u59822min\uff09\uff0c\u6682\u505c\u6240\u6709\u4efb\u52a1\u7684\u6267\u884c\uff0c\u8fdb\u884cmark&sweep\u64cd\u4f5c\uff0c\u64cd\u4f5c\u5b8c\u6210\u540e\u542f\u52a8\u6240\u6709\u4efb\u52a1\u7684\u6267\u884c\u3002\u5728\u5185\u5b58\u4f7f\u7528\u8f83\u591a\u7684\u573a\u666f\u4e0b\uff0cgo\u7a0b\u5e8f\u5728\u8fdb\u884c\u5783\u573e\u56de\u6536\u65f6\u4f1a\u53d1\u751f\u975e\u5e38\u660e\u663e\u7684\u5361\u987f\u73b0\u8c61\uff08Stop The World\uff09\u3002\u5728\u5bf9\u54cd\u5e94\u901f\u5ea6\u8981\u6c42\u8f83\u9ad8\u7684\u540e\u53f0\u670d\u52a1\u8fdb\u7a0b\u4e2d\uff0c\u8fd9\u79cd\u5ef6\u8fdf\u7b80\u76f4\u662f\u4e0d\u80fd\u5fcd\u53d7\u7684\uff01\u8fd9\u4e2a\u65f6\u671f\u56fd\u5185\u5916\u5f88\u591a\u5728\u751f\u4ea7\u73af\u5883\u5b9e\u8df5go\u8bed\u8a00\u7684\u56e2\u961f\u90fd\u6216\u591a\u6216\u5c11\u8e29\u8fc7gc\u7684\u5751\u3002\u5f53\u65f6\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6bd4\u8f83\u5e38\u7528\u7684\u65b9\u6cd5\u662f\u5c3d\u5feb\u63a7\u5236\u81ea\u52a8\u5206\u914d\u5185\u5b58\u7684\u5185\u5b58\u6570\u91cf\u4ee5\u51cf\u5c11gc\u8d1f\u8377\uff0c\u540c\u65f6\u91c7\u7528\u624b\u52a8\u7ba1\u7406\u5185\u5b58\u7684\u65b9\u6cd5\u5904\u7406\u9700\u8981\u5927\u91cf\u53ca\u9ad8\u9891\u5206\u914d\u5185\u5b58\u7684\u573a\u666f\u3002 v1.3\uff1aMark STW & Sweep 1.3\u7248\u672c\u4e2d\uff0cgo runtime\u5206\u79bb\u4e86mark\u548csweep\u64cd\u4f5c\uff0c\u548c\u4ee5\u524d\u4e00\u6837\uff0c\u4e5f\u662f\u5148\u6682\u505c\u6240\u6709\u4efb\u52a1\u6267\u884c\u5e76\u542f\u52a8mark\uff0cmark\u5b8c\u6210\u540e\u9a6c\u4e0a\u5c31\u91cd\u65b0\u542f\u52a8\u88ab\u6682\u505c\u7684\u4efb\u52a1\u4e86\uff0c\u800c\u662f\u8ba9sweep\u4efb\u52a1\u548c\u666e\u901a\u534f\u7a0b\u4efb\u52a1\u4e00\u6837\u5e76\u884c\u7684\u548c\u5176\u4ed6\u4efb\u52a1\u4e00\u8d77\u6267\u884c\u3002\u5982\u679c\u8fd0\u884c\u5728\u591a\u6838\u5904\u7406\u5668\u4e0a\uff0cgo\u4f1a\u8bd5\u56fe\u5c06gc\u4efb\u52a1\u653e\u5230\u5355\u72ec\u7684\u6838\u5fc3\u4e0a\u8fd0\u884c\u800c\u5c3d\u91cf\u4e0d\u5f71\u54cd\u4e1a\u52a1\u4ee3\u7801\u7684\u6267\u884c\u3002go team\u81ea\u5df1\u7684\u8bf4\u6cd5\u662f\u51cf\u5c11\u4e8650%-70%\u7684\u6682\u505c\u65f6\u95f4\u3002 v1.5\uff1a\u4e09\u8272\u6807\u8bb0 go 1.5\u6b63\u5728\u5b9e\u73b0\u7684\u5783\u573e\u56de\u6536\u5668\u201c\u975e\u5206\u4ee3\u7684\u3001\u975e\u79fb\u52a8\u7684\u3001\u5e76\u53d1\u7684\u3001\u4e09\u8272\u7684\u6807\u8bb0\u6e05\u9664\u5783\u573e\u6536\u96c6\u5668\u201d\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684mark\u64cd\u4f5c\u662f\u53ef\u4ee5\u6e10\u8fdb\u6267\u884c\u7684\u800c\u4e0d\u9700\u6bcf\u6b21\u90fd\u626b\u63cf\u6574\u4e2a\u5185\u5b58\u7a7a\u95f4\uff0c\u53ef\u4ee5\u51cf\u5c11stop the world\u7684\u65f6\u95f4\u3002 \u7531\u6b64\u53ef\u4ee5\u770b\u5230\uff0c\u4e00\u8def\u8d70\u6765\u76f4\u52301.5\u7248\u672c\uff0cgo\u7684\u5783\u573e\u56de\u6536\u6027\u80fd\u4e5f\u662f\u4e00\u76f4\u5728\u63d0\u5347\u3002 v1.8\uff1a\u6df7\u5408\u5199\u5c4f\u969c\uff08hybrid write barrier\uff09 \u7531\u4e8e\u6807\u8bb0\u64cd\u4f5c\u548c\u7528\u6237\u903b\u8f91\u662f\u5e76\u53d1\u6267\u884c\u7684\uff0c\u7528\u6237\u903b\u8f91\u4f1a\u65f6\u5e38\u751f\u6210\u5bf9\u8c61\u6216\u8005\u6539\u53d8\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u4f8b\u5982\u628a\u2f00\u4e2a\u5bf9\u8c61\u6807\u8bb0\u4e3a\u767d\u8272\u51c6\u5907\u56de\u6536\u65f6\uff0c\u7528\u6237\u903b\u8f91\u7a81\u7136\u5f15\u7528\u4e86\u5b83\uff0c\u6216\u8005\u53c8\u521b\u5efa\u4e86\u65b0\u7684\u5bf9\u8c61\u3002\u7531\u4e8e\u5bf9\u8c61\u521d\u59cb\u65f6\u90fd\u770b\u4e3a\u767d\u8272\uff0c\u4f1a\u88ab GC \u56de\u6536\u6389\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f15\u5165\u4e86\u5199\u5c4f\u969c\u673a\u5236\u3002 GC \u5bf9\u626b\u63cf\u8fc7\u540e\u7684\u5bf9\u8c61\u4f7f\u2f64\u64cd\u4f5c\u7cfb\u7edf\u5199\u5c4f\u969c\u529f\u80fd\u6765\u76d1\u63a7\u8fd9\u6bb5\u5185\u5b58\u3002\u5982\u679c\u8fd9\u6bb5\u5185\u5b58\u53d1\u2f63\u5f15\u2f64\u6539\u53d8\uff0c\u5199\u5c4f\u969c\u4f1a\u7ed9\u5783\u573e\u56de\u6536\u671f\u53d1\u9001\u2f00\u4e2a\u4fe1\u53f7\uff0c\u5783\u573e\u56de\u6536\u5668\u6355\u83b7\u5230\u4fe1\u53f7\u540e\u5c31\u77e5\u9053\u8fd9\u4e2a\u5bf9\u8c61\u53d1\u2f63\u6539\u53d8\uff0c\u7136\u540e\u91cd\u65b0\u626b\u63cf\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u770b\u770b\u5b83\u7684\u5f15\u2f64\u6216\u8005\u88ab\u5f15\u2f64\u662f\u5426\u6539\u53d8\u3002\u5229\u2f64\u72b6\u6001\u7684\u91cd\u7f6e\u5b9e\u73b0\u5f53\u5bf9\u8c61\u72b6\u6001\u53d1\u2f63\u6539\u53d8\u7684\u65f6\u5019\uff0c\u4f9d\u7136\u53ef\u4ee5\u518d\u6b21\u5176\u5f15\u7528\u7684\u5bf9\u8c61\u3002 GO\u7684GC \u4e09\u8272\u6807\u8bb0 \u4f20\u7edf\u7684\u6807\u8bb0\u6e05\u9664\u7b97\u6cd5\u4e2d\uff0c\u5783\u573e\u6536\u96c6\u5668\u4ece\u5783\u573e\u6536\u96c6\u7684\u6839\u5bf9\u8c61\u51fa\u53d1\uff0c\u9012\u5f52\u904d\u5386\u8fd9\u4e9b\u5bf9\u8c61\u6307\u5411\u7684\u5b50\u5bf9\u8c61\u5e76\u5c06\u6240\u6709\u53ef\u8fbe\u7684\u5bf9\u8c61\u6807\u8bb0\u6210\u5b58\u6d3b\uff1b\u6807\u8bb0\u9636\u6bb5\u7ed3\u675f\u540e\uff0c\u5783\u573e\u6536\u96c6\u5668\u4f1a\u4f9d\u6b21\u904d\u5386\u5806\u4e2d\u7684\u5bf9\u8c61\u5e76\u6e05\u9664\u5176\u4e2d\u7684\u5783\u573e\uff0c\u6574\u4e2a\u8fc7\u7a0b\u9700\u8981\u6807\u8bb0\u5bf9\u8c61\u7684\u5b58\u6d3b\u72b6\u6001\uff0c\u7528\u6237\u7a0b\u5e8f\u5728\u5783\u573e\u6536\u96c6\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u4e0d\u80fd\u6267\u884c\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u66f4\u590d\u6742\u7684\u673a\u5236\u6765\u89e3\u51b3 STW \u7684\u95ee\u9898\uff0c\u8fd9\u5c31\u51fa\u73b0\u4e86\u4e09\u8272\u6807\u8bb0\u6cd5\u3002 \u4e09\u8272\u6807\u8bb0\u7b97\u6cd5\u5c06\u7a0b\u5e8f\u4e2d\u7684\u5bf9\u8c61\u5206\u6210\u767d\u8272\u3001\u9ed1\u8272\u548c\u7070\u8272\u4e09\u7c7b\uff1a \u767d\u8272\u5bf9\u8c61\uff1a\u6f5c\u5728\u7684\u5783\u573e\uff0c\u5176\u5185\u5b58\u53ef\u80fd\u4f1a\u88ab\u5783\u573e\u6536\u96c6\u5668\u56de\u6536\uff1b \u9ed1\u8272\u5bf9\u8c61\uff1a\u6d3b\u8dc3\u7684\u5bf9\u8c61\uff0c\u5305\u62ec\u4e0d\u5b58\u5728\u4efb\u4f55\u5f15\u7528\u5916\u90e8\u6307\u9488\u7684\u5bf9\u8c61\u4ee5\u53ca\u4ece\u6839\u5bf9\u8c61\u53ef\u8fbe\u7684\u5bf9\u8c61\uff1b \u7070\u8272\u5bf9\u8c61\uff1a\u6d3b\u8dc3\u7684\u5bf9\u8c61\uff0c\u56e0\u4e3a\u5b58\u5728\u6307\u5411\u767d\u8272\u5bf9\u8c61\u7684\u5916\u90e8\u6307\u9488\uff0c\u5783\u573e\u6536\u96c6\u5668\u4f1a\u626b\u63cf\u8fd9\u4e9b\u5bf9\u8c61\u7684\u5b50\u5bf9\u8c61\uff1b \u5728\u5783\u573e\u6536\u96c6\u5668\u5f00\u59cb\u5de5\u4f5c\u65f6\uff0c\u7a0b\u5e8f\u4e2d\u4e0d\u5b58\u5728\u4efb\u4f55\u7684\u9ed1\u8272\u5bf9\u8c61\uff0c\u5783\u573e\u6536\u96c6\u7684\u6839\u5bf9\u8c61\u4f1a\u88ab\u6807\u8bb0\u6210\u7070\u8272\uff0c\u5783\u573e\u6536\u96c6\u5668\u53ea\u4f1a\u4ece\u7070\u8272\u5bf9\u8c61\u96c6\u5408\u4e2d\u53d6\u51fa\u5bf9\u8c61\u5f00\u59cb\u626b\u63cf\uff0c\u5f53\u7070\u8272\u96c6\u5408\u4e2d\u4e0d\u5b58\u5728\u4efb\u4f55\u5bf9\u8c61\u65f6\uff0c\u6807\u8bb0\u9636\u6bb5\u5c31\u4f1a\u7ed3\u675f\u3002 \u4e09\u8272\u6807\u8bb0\u5783\u573e\u6536\u96c6\u5668\u7684\u5de5\u4f5c\u539f\u7406\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5f52\u7eb3\u6210\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a \u4ece\u7070\u8272\u5bf9\u8c61\u7684\u96c6\u5408\u4e2d\u9009\u62e9\u4e00\u4e2a\u7070\u8272\u5bf9\u8c61\u5e76\u5c06\u5176\u6807\u8bb0\u6210\u9ed1\u8272\uff1b \u5c06\u9ed1\u8272\u5bf9\u8c61\u6307\u5411\u7684\u6240\u6709\u5bf9\u8c61\u90fd\u6807\u8bb0\u6210\u7070\u8272\uff0c\u4fdd\u8bc1\u8be5\u5bf9\u8c61\u548c\u88ab\u8be5\u5bf9\u8c61\u5f15\u7528\u7684\u5bf9\u8c61\u90fd\u4e0d\u4f1a\u88ab\u56de\u6536\uff1b \u91cd\u590d\u4e0a\u8ff0\u4e24\u4e2a\u6b65\u9aa4\u76f4\u5230\u5bf9\u8c61\u56fe\u4e2d\u4e0d\u5b58\u5728\u7070\u8272\u5bf9\u8c61\u3002 \u5f53\u4e09\u8272\u7684\u6807\u8bb0\u6e05\u9664\u7684\u6807\u8bb0\u9636\u6bb5\u7ed3\u675f\u4e4b\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u7684\u5806\u4e2d\u5c31\u4e0d\u5b58\u5728\u4efb\u4f55\u7684\u7070\u8272\u5bf9\u8c61\uff0c\u6211\u4eec\u53ea\u80fd\u770b\u5230\u9ed1\u8272\u7684\u5b58\u6d3b\u5bf9\u8c61\u4ee5\u53ca\u767d\u8272\u7684\u5783\u573e\u5bf9\u8c61\uff0c\u5783\u573e\u6536\u96c6\u5668\u53ef\u4ee5\u56de\u6536\u8fd9\u4e9b\u767d\u8272\u7684\u5783\u573e\uff0c\u4e0b\u9762\u662f\u4f7f\u7528\u4e09\u8272\u6807\u8bb0\u5783\u573e\u6536\u96c6\u5668\u6267\u884c\u6807\u8bb0\u540e\u7684\u5806\u5185\u5b58\uff0c\u5806\u4e2d\u53ea\u6709\u5bf9\u8c61 D \u4e3a\u5f85\u56de\u6536\u7684\u5783\u573e\uff1a \u56e0\u4e3a\u7528\u6237\u7a0b\u5e8f\u53ef\u80fd\u5728\u6807\u8bb0\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\u4fee\u6539\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u6240\u4ee5\u4e09\u8272\u6807\u8bb0\u6e05\u9664\u7b97\u6cd5\u672c\u8eab\u662f\u4e0d\u53ef\u4ee5\u5e76\u53d1\u6216\u8005\u589e\u91cf\u6267\u884c\u7684\uff0c\u5b83\u4ecd\u7136\u9700\u8981 STW\uff0c\u5728\u5982\u4e0b\u6240\u793a\u7684\u4e09\u8272\u6807\u8bb0\u8fc7\u7a0b\u4e2d\uff0c\u7528\u6237\u7a0b\u5e8f\u5efa\u7acb\u4e86\u4ece A \u5bf9\u8c61\u5230 D \u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4f46\u662f\u56e0\u4e3a\u7a0b\u5e8f\u4e2d\u5df2\u7ecf\u4e0d\u5b58\u5728\u7070\u8272\u5bf9\u8c61\u4e86\uff0c\u6240\u4ee5 D \u5bf9\u8c61\u4f1a\u88ab\u5783\u573e\u6536\u96c6\u5668\u9519\u8bef\u5730\u56de\u6536\u3002 \u672c\u6765\u4e0d\u5e94\u8be5\u88ab\u56de\u6536\u7684\u5bf9\u8c61\u5374\u88ab\u56de\u6536\u4e86\uff0c\u8fd9\u5728\u5185\u5b58\u7ba1\u7406\u4e2d\u662f\u975e\u5e38\u4e25\u91cd\u7684\u9519\u8bef\uff0c\u6211\u4eec\u5c06\u8fd9\u79cd\u9519\u8bef\u79f0\u4e3a\u60ac\u6302\u6307\u9488\uff0c\u5373\u6307\u9488\u6ca1\u6709\u6307\u5411\u7279\u5b9a\u7c7b\u578b\u7684\u5408\u6cd5\u5bf9\u8c61\uff0c\u5f71\u54cd\u4e86\u5185\u5b58\u7684\u5b89\u5168\u6027\uff0c\u60f3\u8981\u5e76\u53d1\u6216\u8005\u589e\u91cf\u5730\u6807\u8bb0\u5bf9\u8c61\u8fd8\u662f\u9700\u8981\u4f7f\u7528\u5c4f\u969c\u6280\u672f\u3002 \u6574\u4e2a\u6d41\u7a0b\u5982\u4e0b\uff1a \u6df7\u5408\u5199\u5c4f\u969c \u60f3\u8981\u5728\u5e76\u53d1\u6216\u8005\u589e\u91cf\u7684\u6807\u8bb0\u7b97\u6cd5\u4e2d\u4fdd\u8bc1\u6b63\u786e\u6027\uff0c\u6211\u4eec\u9700\u8981\u8fbe\u6210\u4ee5\u4e0b\u4e24\u79cd\u4e09\u8272\u4e0d\u53d8\u6027\uff08Tri-color invariant\uff09\u4e2d\u7684\u4e00\u79cd\uff1a \u5f3a\u4e09\u8272\u4e0d\u53d8\u6027\uff1a\u9ed1\u8272\u5bf9\u8c61\u4e0d\u4f1a\u6307\u5411\u767d\u8272\u5bf9\u8c61\uff0c\u53ea\u4f1a\u6307\u5411\u7070\u8272\u5bf9\u8c61\u6216\u8005\u9ed1\u8272\u5bf9\u8c61\uff1b \u5f31\u4e09\u8272\u4e0d\u53d8\u6027\uff1a\u9ed1\u8272\u5bf9\u8c61\u6307\u5411\u7684\u767d\u8272\u5bf9\u8c61\u5fc5\u987b\u5305\u542b\u4e00\u6761\u4ece\u7070\u8272\u5bf9\u8c61\u7ecf\u7531\u591a\u4e2a\u767d\u8272\u5bf9\u8c61\u7684\u53ef\u8fbe\u8def\u5f84\u3002 \u4e0a\u56fe\u5206\u522b\u5c55\u793a\u4e86\u9075\u5faa\u5f3a\u4e09\u8272\u4e0d\u53d8\u6027\u548c\u5f31\u4e09\u8272\u4e0d\u53d8\u6027\u7684\u5806\u5185\u5b58\uff0c\u9075\u5faa\u4e0a\u8ff0\u4e24\u4e2a\u4e0d\u53d8\u6027\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u6211\u4eec\u90fd\u80fd\u4fdd\u8bc1\u5783\u573e\u6536\u96c6\u7b97\u6cd5\u7684\u6b63\u786e\u6027\uff0c\u800c\u5c4f\u969c\u6280\u672f\u5c31\u662f\u5728\u5e76\u53d1\u6216\u8005\u589e\u91cf\u6807\u8bb0\u8fc7\u7a0b\u4e2d\u4fdd\u8bc1\u4e09\u8272\u4e0d\u53d8\u6027\u7684\u91cd\u8981\u6280\u672f\u3002 \u5783\u573e\u6536\u96c6\u4e2d\u7684\u5c4f\u969c\u6280\u672f\u66f4\u50cf\u662f\u4e00\u4e2a\u94a9\u5b50\u65b9\u6cd5\uff0c\u5b83\u662f\u5728\u7528\u6237\u7a0b\u5e8f\u8bfb\u53d6\u5bf9\u8c61\u3001\u521b\u5efa\u65b0\u5bf9\u8c61\u4ee5\u53ca\u66f4\u65b0\u5bf9\u8c61\u6307\u9488\u65f6\u6267\u884c\u7684\u4e00\u6bb5\u4ee3\u7801\uff0c\u6839\u636e\u64cd\u4f5c\u7c7b\u578b\u7684\u4e0d\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4eec\u5206\u6210\u8bfb\u5c4f\u969c\uff08Read barrier\uff09\u548c\u5199\u5c4f\u969c\uff08Write barrier\uff09\u4e24\u79cd\uff0c\u56e0\u4e3a\u8bfb\u5c4f\u969c\u9700\u8981\u5728\u8bfb\u64cd\u4f5c\u4e2d\u52a0\u5165\u4ee3\u7801\u7247\u6bb5\uff0c\u5bf9\u7528\u6237\u7a0b\u5e8f\u7684\u6027\u80fd\u5f71\u54cd\u5f88\u5927\uff0c\u6240\u4ee5\u7f16\u7a0b\u8bed\u8a00\u5f80\u5f80\u90fd\u4f1a\u91c7\u7528\u5199\u5c4f\u969c\u4fdd\u8bc1\u4e09\u8272\u4e0d\u53d8\u6027\u3002 Go \u8bed\u8a00\u5728 v1.8 \u7ec4\u5408 Dijkstra \u63d2\u5165\u5199\u5c4f\u969c\u548c Yuasa \u5220\u9664\u5199\u5c4f\u969c\u6784\u6210\u6df7\u5408\u5199\u5c4f\u969c\uff0c\u8be5\u5199\u5c4f\u969c\u4f1a\u5c06\u88ab\u8986\u76d6\u7684\u5bf9\u8c61\u6807\u8bb0\u6210\u7070\u8272\u5e76\u5728\u5f53\u524d\u6808\u6ca1\u6709\u626b\u63cf\u65f6\u5c06\u65b0\u5bf9\u8c61\u4e5f\u6807\u8bb0\u6210\u7070\u8272\u3002 \u4e3a\u4e86\u79fb\u9664\u6808\u7684\u91cd\u626b\u63cf\u8fc7\u7a0b\uff0c\u9664\u4e86\u5f15\u5165\u6df7\u5408\u5199\u5c4f\u969c\u4e4b\u5916\uff0c\u5728\u5783\u573e\u6536\u96c6\u7684\u6807\u8bb0\u9636\u6bb5\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u521b\u5efa\u7684\u6240\u6709\u65b0\u5bf9\u8c61\u90fd\u6807\u8bb0\u6210\u9ed1\u8272\uff0c\u9632\u6b62\u65b0\u5206\u914d\u7684\u6808\u5185\u5b58\u548c\u5806\u5185\u5b58\u4e2d\u7684\u5bf9\u8c61\u88ab\u9519\u8bef\u5730\u56de\u6536\uff0c\u56e0\u4e3a\u6808\u5185\u5b58\u5728\u6807\u8bb0\u9636\u6bb5\u6700\u7ec8\u90fd\u4f1a\u53d8\u4e3a\u9ed1\u8272\uff0c\u6240\u4ee5\u4e0d\u518d\u9700\u8981\u91cd\u65b0\u626b\u63cf\u6808\u7a7a\u95f4\u3002 \u589e\u91cf\u548c\u5e76\u53d1 \u4f20\u7edf\u7684\u5783\u573e\u6536\u96c6\u7b97\u6cd5\u4f1a\u5728\u5783\u573e\u6536\u96c6\u7684\u6267\u884c\u671f\u95f4\u6682\u505c\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e00\u65e6\u89e6\u53d1\u5783\u573e\u6536\u96c6\uff0c\u5783\u573e\u6536\u96c6\u5668\u4f1a\u62a2\u5360 CPU \u7684\u4f7f\u7528\u6743\u5360\u636e\u5927\u91cf\u7684\u8ba1\u7b97\u8d44\u6e90\u4ee5\u5b8c\u6210\u6807\u8bb0\u548c\u6e05\u9664\u5de5\u4f5c\uff0c\u7136\u800c\u5f88\u591a\u8ffd\u6c42\u5b9e\u65f6\u7684\u5e94\u7528\u7a0b\u5e8f\u65e0\u6cd5\u63a5\u53d7\u957f\u65f6\u95f4\u7684 STW\u3002 \u4e3a\u4e86\u51cf\u5c11\u5e94\u7528\u7a0b\u5e8f\u6682\u505c\u7684\u6700\u957f\u65f6\u95f4\u548c\u5783\u573e\u6536\u96c6\u7684\u603b\u6682\u505c\u65f6\u95f4\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e0b\u9762\u7684\u7b56\u7565\u4f18\u5316\u73b0\u4ee3\u7684\u5783\u573e\u6536\u96c6\u5668\uff1a \u589e\u91cf\u5783\u573e\u6536\u96c6\uff1a\u589e\u91cf\u5730\u6807\u8bb0\u548c\u6e05\u9664\u5783\u573e\uff0c\u964d\u4f4e\u5e94\u7528\u7a0b\u5e8f\u6682\u505c\u7684\u6700\u957f\u65f6\u95f4\uff1b \u5e76\u53d1\u5783\u573e\u6536\u96c6\uff1a\u5229\u7528\u591a\u6838\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u5728\u7528\u6237\u7a0b\u5e8f\u6267\u884c\u65f6\u5e76\u53d1\u6807\u8bb0\u548c\u6e05\u9664\u5783\u573e\uff1b \u56e0\u4e3a\u589e\u91cf\u548c\u5e76\u53d1\u4e24\u79cd\u65b9\u5f0f\u90fd\u53ef\u4ee5\u4e0e\u7528\u6237\u7a0b\u5e8f\u4ea4\u66ff\u8fd0\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5c4f\u969c\u6280\u672f\u4fdd\u8bc1\u5783\u573e\u6536\u96c6\u7684\u6b63\u786e\u6027\uff1b\u4e0e\u6b64\u540c\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u4e5f\u4e0d\u80fd\u7b49\u5230\u5185\u5b58\u6ea2\u51fa\u65f6\u89e6\u53d1\u5783\u573e\u6536\u96c6\uff0c\u56e0\u4e3a\u5f53\u5185\u5b58\u4e0d\u8db3\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u5df2\u7ecf\u65e0\u6cd5\u5206\u914d\u5185\u5b58\uff0c\u8fd9\u4e0e\u76f4\u63a5\u6682\u505c\u7a0b\u5e8f\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u589e\u91cf\u548c\u5e76\u53d1\u7684\u5783\u573e\u6536\u96c6\u9700\u8981\u63d0\u524d\u89e6\u53d1\u5e76\u5728\u5185\u5b58\u4e0d\u8db3\u524d\u5b8c\u6210\u6574\u4e2a\u5faa\u73af\uff0c\u907f\u514d\u7a0b\u5e8f\u7684\u957f\u65f6\u95f4\u6682\u505c\u3002 \u589e\u91cf\u6536\u96c6 \u589e\u91cf\u5f0f\uff08Incremental\uff09\u7684\u5783\u573e\u6536\u96c6\u662f\u51cf\u5c11\u7a0b\u5e8f\u6700\u957f\u6682\u505c\u65f6\u95f4\u7684\u4e00\u79cd\u65b9\u6848\uff0c\u5b83\u53ef\u4ee5\u5c06\u539f\u672c\u65f6\u95f4\u8f83\u957f\u7684\u6682\u505c\u65f6\u95f4\u5207\u5206\u6210\u591a\u4e2a\u66f4\u5c0f\u7684 GC \u65f6\u95f4\u7247\uff0c\u867d\u7136\u4ece\u5783\u573e\u6536\u96c6\u5f00\u59cb\u5230\u7ed3\u675f\u7684\u65f6\u95f4\u66f4\u957f\u4e86\uff0c\u4f46\u662f\u8fd9\u4e5f\u51cf\u5c11\u4e86\u5e94\u7528\u7a0b\u5e8f\u6682\u505c\u7684\u6700\u5927\u65f6\u95f4\uff1a \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u589e\u91cf\u5f0f\u7684\u5783\u573e\u6536\u96c6\u9700\u8981\u4e0e\u4e09\u8272\u6807\u8bb0\u6cd5\u4e00\u8d77\u4f7f\u7528\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5783\u573e\u6536\u96c6\u7684\u6b63\u786e\u6027\uff0c\u6211\u4eec\u9700\u8981\u5728\u5783\u573e\u6536\u96c6\u5f00\u59cb\u524d\u6253\u5f00\u5199\u5c4f\u969c\uff0c\u8fd9\u6837\u7528\u6237\u7a0b\u5e8f\u4fee\u6539\u5185\u5b58\u90fd\u4f1a\u5148\u7ecf\u8fc7\u5199\u5c4f\u969c\u7684\u5904\u7406\uff0c\u4fdd\u8bc1\u4e86\u5806\u5185\u5b58\u4e2d\u5bf9\u8c61\u5173\u7cfb\u7684\u5f3a\u4e09\u8272\u4e0d\u53d8\u6027\u6216\u8005\u5f31\u4e09\u8272\u4e0d\u53d8\u6027\u3002\u867d\u7136\u589e\u91cf\u5f0f\u7684\u5783\u573e\u6536\u96c6\u80fd\u591f\u51cf\u5c11\u6700\u5927\u7684\u7a0b\u5e8f\u6682\u505c\u65f6\u95f4\uff0c\u4f46\u662f\u589e\u91cf\u5f0f\u6536\u96c6\u4e5f\u4f1a\u589e\u52a0\u4e00\u6b21 GC \u5faa\u73af\u7684\u603b\u65f6\u95f4\uff0c\u5728\u5783\u573e\u6536\u96c6\u671f\u95f4\uff0c\u56e0\u4e3a\u5199\u5c4f\u969c\u7684\u5f71\u54cd\u7528\u6237\u7a0b\u5e8f\u4e5f\u9700\u8981\u627f\u62c5\u989d\u5916\u7684\u8ba1\u7b97\u5f00\u9500\uff0c\u6240\u4ee5\u589e\u91cf\u5f0f\u7684\u5783\u573e\u6536\u96c6\u4e5f\u4e0d\u662f\u53ea\u5e26\u6765\u597d\u5904\u7684\uff0c\u4f46\u662f\u603b\u4f53\u6765\u8bf4\u8fd8\u662f\u5229\u5927\u4e8e\u5f0a\u3002 \u5e76\u53d1\u6536\u96c6 \u5e76\u53d1\uff08Concurrent\uff09\u7684\u5783\u573e\u6536\u96c6\u4e0d\u4ec5\u80fd\u591f\u51cf\u5c11\u7a0b\u5e8f\u7684\u6700\u957f\u6682\u505c\u65f6\u95f4\uff0c\u8fd8\u80fd\u51cf\u5c11\u6574\u4e2a\u5783\u573e\u6536\u96c6\u9636\u6bb5\u7684\u65f6\u95f4\uff0c\u901a\u8fc7\u5f00\u542f\u8bfb\u5199\u5c4f\u969c\u3001\u5229\u7528\u591a\u6838\u4f18\u52bf\u4e0e\u7528\u6237\u7a0b\u5e8f\u5e76\u884c\u6267\u884c\uff0c\u5e76\u53d1\u5783\u573e\u6536\u96c6\u5668\u786e\u5b9e\u80fd\u591f\u51cf\u5c11\u5783\u573e\u6536\u96c6\u5bf9\u5e94\u7528\u7a0b\u5e8f\u7684\u5f71\u54cd\uff1a \u867d\u7136\u5e76\u53d1\u6536\u96c6\u5668\u80fd\u591f\u4e0e\u7528\u6237\u7a0b\u5e8f\u4e00\u8d77\u8fd0\u884c\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6240\u6709\u9636\u6bb5\u90fd\u53ef\u4ee5\u4e0e\u7528\u6237\u7a0b\u5e8f\u4e00\u8d77\u8fd0\u884c\uff0c\u90e8\u5206\u9636\u6bb5\u8fd8\u662f\u9700\u8981\u6682\u505c\u7528\u6237\u7a0b\u5e8f\u7684\uff0c\u4e0d\u8fc7\u4e0e\u4f20\u7edf\u7684\u7b97\u6cd5\u76f8\u6bd4\uff0c\u5e76\u53d1\u7684\u5783\u573e\u6536\u96c6\u53ef\u4ee5\u5c06\u80fd\u591f\u5e76\u53d1\u6267\u884c\u7684\u5de5\u4f5c\u5c3d\u91cf\u5e76\u53d1\u6267\u884c\uff1b\u5f53\u7136\uff0c\u56e0\u4e3a\u8bfb\u5199\u5c4f\u969c\u7684\u5f15\u5165\uff0c\u5e76\u53d1\u7684\u5783\u573e\u6536\u96c6\u5668\u4e5f\u4e00\u5b9a\u4f1a\u5e26\u6765\u989d\u5916\u5f00\u9500\uff0c\u4e0d\u4ec5\u4f1a\u589e\u52a0\u5783\u573e\u6536\u96c6\u7684\u603b\u65f6\u95f4\uff0c\u8fd8\u4f1a\u5f71\u54cd\u7528\u6237\u7a0b\u5e8f\uff0c\u8fd9\u662f\u6211\u4eec\u5728\u8bbe\u8ba1\u5783\u573e\u6536\u96c6\u7b56\u7565\u65f6\u5fc5\u987b\u8981\u6ce8\u610f\u7684\u3002 GC\u7684\u65f6\u673a \u8fd0\u884c\u65f6\u4f1a\u901a\u8fc7\u5982\u4e0b\u6240\u793a\u7684 runtime.gcTrigger.test \u65b9\u6cd5\u51b3\u5b9a\u662f\u5426\u9700\u8981\u89e6\u53d1\u5783\u573e\u6536\u96c6\uff0c\u5f53\u6ee1\u8db3\u89e6\u53d1\u5783\u573e\u6536\u96c6\u7684\u57fa\u672c\u6761\u4ef6\u65f6 \u2014 \u5141\u8bb8\u5783\u573e\u6536\u96c6\u3001\u7a0b\u5e8f\u6ca1\u6709\u5d29\u6e83\u5e76\u4e14\u6ca1\u6709\u5904\u4e8e\u5783\u573e\u6536\u96c6\u5faa\u73af\uff0c\u8be5\u65b9\u6cd5\u4f1a\u6839\u636e\u4e09\u79cd\u4e0d\u540c\u65b9\u5f0f\u89e6\u53d1\u8fdb\u884c\u4e0d\u540c\u7684\u68c0\u67e5\uff1a func (t gcTrigger) test() bool { if !memstats.enablegc || panicking != 0 || gcphase != _GCoff { return false } switch t.kind { case gcTriggerHeap: return memstats.heap_live >= memstats.gc_trigger case gcTriggerTime: if gcpercent < 0 { return false } lastgc := int64(atomic.Load64(&memstats.last_gc_nanotime)) return lastgc != 0 && t.now-lastgc > forcegcperiod case gcTriggerCycle: return int32(t.n-work.cycles) > 0 } return true } 1\u3001gcTriggerHeap \uff1a\u5806\u5185\u5b58\u7684\u5206\u914d\u8fbe\u5230\u8fbe\u63a7\u5236\u5668\u8ba1\u7b97\u7684\u89e6\u53d1\u5806\u5927\u5c0f\uff1b 2\u3001gcTriggerTime \uff1a\u5982\u679c\u4e00\u5b9a\u65f6\u95f4\u5185\u6ca1\u6709\u89e6\u53d1\uff0c\u5c31\u4f1a\u89e6\u53d1\u65b0\u7684\u5faa\u73af\uff0c\u8be5\u51fa\u53d1\u6761\u4ef6\u7531 runtime.forcegcperiod \u53d8\u91cf\u63a7\u5236\uff0c\u9ed8\u8ba4\u4e3a 2 \u5206\u949f\uff1b 3\u3001gcTriggerCycle\uff1a\u5982\u679c\u5f53\u524d\u6ca1\u6709\u5f00\u542f\u5783\u573e\u6536\u96c6\uff0c\u5219\u89e6\u53d1\u65b0\u7684\u5faa\u73af\uff1b 4\u3001runtime.gcpercent \u662f\u89e6\u53d1\u5783\u573e\u6536\u96c6\u7684\u5185\u5b58\u589e\u957f\u767e\u5206\u6bd4\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a 100\uff0c\u5373\u5806\u5185\u5b58\u76f8\u6bd4\u4e0a\u6b21\u5783\u573e\u6536\u96c6\u589e\u957f 100% \u65f6\u5e94\u8be5\u89e6\u53d1 GC\uff0c\u5e76\u884c\u7684\u5783\u573e\u6536\u96c6\u5668\u4f1a\u5728\u5230\u8fbe\u8be5\u76ee\u6807\u524d\u5b8c\u6210\u5783\u573e\u6536\u96c6\u3002 \u7528\u4e8e\u5f00\u542f\u5783\u573e\u6536\u96c6\u7684\u65b9\u6cd5 runtime.gcStart \u4f1a\u63a5\u6536\u4e00\u4e2a runtime.gcTrigger \u7c7b\u578b\u7684\u7ed3\u6784\uff0c\u6240\u6709\u51fa\u73b0 runtime.gcTrigger \u7ed3\u6784\u4f53\u7684\u4f4d\u7f6e\u90fd\u662f\u89e6\u53d1\u5783\u573e\u6536\u96c6\u7684\u4ee3\u7801\uff1a runtime.sysmon \u548c runtime.forcegchelper \uff1a\u540e\u53f0\u8fd0\u884c\u5b9a\u65f6\u68c0\u67e5\u548c\u5783\u573e\u6536\u96c6\uff1b runtime.GC \uff1a\u7528\u6237\u7a0b\u5e8f\u624b\u52a8\u89e6\u53d1\u5783\u573e\u6536\u96c6\uff1b runtime.mallocgc \uff1a\u7533\u8bf7\u5185\u5b58\u65f6\u6839\u636e\u5806\u5927\u5c0f\u89e6\u53d1\u5783\u573e\u6536\u96c6\u3002","title":"GO\u8bed\u8a00\u4e4b\u5783\u573e\u56de\u6536\u673a\u5236"},{"location":"golang/docs/GO%E8%AF%AD%E8%A8%80%E4%B9%8B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/#gogc","text":"","title":"GO\u7684GC\u91cc\u7a0b\u7891"},{"location":"golang/docs/GO%E8%AF%AD%E8%A8%80%E4%B9%8B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/#v13stw","text":"golang\u7684\u5783\u573e\u56de\u6536\u7b97\u6cd5\u90fd\u975e\u5e38\u7b80\u964b\uff0c\u5176\u6027\u80fd\u4e5f\u5e7f\u88ab\u8bdf\u75c5\uff1ago runtime\u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b\uff08\u5185\u5b58\u8d85\u8fc7\u9608\u503c\u6216\u5b9a\u671f\u59822min\uff09\uff0c\u6682\u505c\u6240\u6709\u4efb\u52a1\u7684\u6267\u884c\uff0c\u8fdb\u884cmark&sweep\u64cd\u4f5c\uff0c\u64cd\u4f5c\u5b8c\u6210\u540e\u542f\u52a8\u6240\u6709\u4efb\u52a1\u7684\u6267\u884c\u3002\u5728\u5185\u5b58\u4f7f\u7528\u8f83\u591a\u7684\u573a\u666f\u4e0b\uff0cgo\u7a0b\u5e8f\u5728\u8fdb\u884c\u5783\u573e\u56de\u6536\u65f6\u4f1a\u53d1\u751f\u975e\u5e38\u660e\u663e\u7684\u5361\u987f\u73b0\u8c61\uff08Stop The World\uff09\u3002\u5728\u5bf9\u54cd\u5e94\u901f\u5ea6\u8981\u6c42\u8f83\u9ad8\u7684\u540e\u53f0\u670d\u52a1\u8fdb\u7a0b\u4e2d\uff0c\u8fd9\u79cd\u5ef6\u8fdf\u7b80\u76f4\u662f\u4e0d\u80fd\u5fcd\u53d7\u7684\uff01\u8fd9\u4e2a\u65f6\u671f\u56fd\u5185\u5916\u5f88\u591a\u5728\u751f\u4ea7\u73af\u5883\u5b9e\u8df5go\u8bed\u8a00\u7684\u56e2\u961f\u90fd\u6216\u591a\u6216\u5c11\u8e29\u8fc7gc\u7684\u5751\u3002\u5f53\u65f6\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6bd4\u8f83\u5e38\u7528\u7684\u65b9\u6cd5\u662f\u5c3d\u5feb\u63a7\u5236\u81ea\u52a8\u5206\u914d\u5185\u5b58\u7684\u5185\u5b58\u6570\u91cf\u4ee5\u51cf\u5c11gc\u8d1f\u8377\uff0c\u540c\u65f6\u91c7\u7528\u624b\u52a8\u7ba1\u7406\u5185\u5b58\u7684\u65b9\u6cd5\u5904\u7406\u9700\u8981\u5927\u91cf\u53ca\u9ad8\u9891\u5206\u914d\u5185\u5b58\u7684\u573a\u666f\u3002","title":"v1.3\u4ee5\u524d\uff1aSTW"},{"location":"golang/docs/GO%E8%AF%AD%E8%A8%80%E4%B9%8B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/#v13mark-stw-sweep","text":"1.3\u7248\u672c\u4e2d\uff0cgo runtime\u5206\u79bb\u4e86mark\u548csweep\u64cd\u4f5c\uff0c\u548c\u4ee5\u524d\u4e00\u6837\uff0c\u4e5f\u662f\u5148\u6682\u505c\u6240\u6709\u4efb\u52a1\u6267\u884c\u5e76\u542f\u52a8mark\uff0cmark\u5b8c\u6210\u540e\u9a6c\u4e0a\u5c31\u91cd\u65b0\u542f\u52a8\u88ab\u6682\u505c\u7684\u4efb\u52a1\u4e86\uff0c\u800c\u662f\u8ba9sweep\u4efb\u52a1\u548c\u666e\u901a\u534f\u7a0b\u4efb\u52a1\u4e00\u6837\u5e76\u884c\u7684\u548c\u5176\u4ed6\u4efb\u52a1\u4e00\u8d77\u6267\u884c\u3002\u5982\u679c\u8fd0\u884c\u5728\u591a\u6838\u5904\u7406\u5668\u4e0a\uff0cgo\u4f1a\u8bd5\u56fe\u5c06gc\u4efb\u52a1\u653e\u5230\u5355\u72ec\u7684\u6838\u5fc3\u4e0a\u8fd0\u884c\u800c\u5c3d\u91cf\u4e0d\u5f71\u54cd\u4e1a\u52a1\u4ee3\u7801\u7684\u6267\u884c\u3002go team\u81ea\u5df1\u7684\u8bf4\u6cd5\u662f\u51cf\u5c11\u4e8650%-70%\u7684\u6682\u505c\u65f6\u95f4\u3002","title":"v1.3\uff1aMark STW &amp; Sweep"},{"location":"golang/docs/GO%E8%AF%AD%E8%A8%80%E4%B9%8B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/#v15","text":"go 1.5\u6b63\u5728\u5b9e\u73b0\u7684\u5783\u573e\u56de\u6536\u5668\u201c\u975e\u5206\u4ee3\u7684\u3001\u975e\u79fb\u52a8\u7684\u3001\u5e76\u53d1\u7684\u3001\u4e09\u8272\u7684\u6807\u8bb0\u6e05\u9664\u5783\u573e\u6536\u96c6\u5668\u201d\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684mark\u64cd\u4f5c\u662f\u53ef\u4ee5\u6e10\u8fdb\u6267\u884c\u7684\u800c\u4e0d\u9700\u6bcf\u6b21\u90fd\u626b\u63cf\u6574\u4e2a\u5185\u5b58\u7a7a\u95f4\uff0c\u53ef\u4ee5\u51cf\u5c11stop the world\u7684\u65f6\u95f4\u3002 \u7531\u6b64\u53ef\u4ee5\u770b\u5230\uff0c\u4e00\u8def\u8d70\u6765\u76f4\u52301.5\u7248\u672c\uff0cgo\u7684\u5783\u573e\u56de\u6536\u6027\u80fd\u4e5f\u662f\u4e00\u76f4\u5728\u63d0\u5347\u3002","title":"v1.5\uff1a\u4e09\u8272\u6807\u8bb0"},{"location":"golang/docs/GO%E8%AF%AD%E8%A8%80%E4%B9%8B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/#v18hybrid-write-barrier","text":"\u7531\u4e8e\u6807\u8bb0\u64cd\u4f5c\u548c\u7528\u6237\u903b\u8f91\u662f\u5e76\u53d1\u6267\u884c\u7684\uff0c\u7528\u6237\u903b\u8f91\u4f1a\u65f6\u5e38\u751f\u6210\u5bf9\u8c61\u6216\u8005\u6539\u53d8\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u4f8b\u5982\u628a\u2f00\u4e2a\u5bf9\u8c61\u6807\u8bb0\u4e3a\u767d\u8272\u51c6\u5907\u56de\u6536\u65f6\uff0c\u7528\u6237\u903b\u8f91\u7a81\u7136\u5f15\u7528\u4e86\u5b83\uff0c\u6216\u8005\u53c8\u521b\u5efa\u4e86\u65b0\u7684\u5bf9\u8c61\u3002\u7531\u4e8e\u5bf9\u8c61\u521d\u59cb\u65f6\u90fd\u770b\u4e3a\u767d\u8272\uff0c\u4f1a\u88ab GC \u56de\u6536\u6389\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f15\u5165\u4e86\u5199\u5c4f\u969c\u673a\u5236\u3002 GC \u5bf9\u626b\u63cf\u8fc7\u540e\u7684\u5bf9\u8c61\u4f7f\u2f64\u64cd\u4f5c\u7cfb\u7edf\u5199\u5c4f\u969c\u529f\u80fd\u6765\u76d1\u63a7\u8fd9\u6bb5\u5185\u5b58\u3002\u5982\u679c\u8fd9\u6bb5\u5185\u5b58\u53d1\u2f63\u5f15\u2f64\u6539\u53d8\uff0c\u5199\u5c4f\u969c\u4f1a\u7ed9\u5783\u573e\u56de\u6536\u671f\u53d1\u9001\u2f00\u4e2a\u4fe1\u53f7\uff0c\u5783\u573e\u56de\u6536\u5668\u6355\u83b7\u5230\u4fe1\u53f7\u540e\u5c31\u77e5\u9053\u8fd9\u4e2a\u5bf9\u8c61\u53d1\u2f63\u6539\u53d8\uff0c\u7136\u540e\u91cd\u65b0\u626b\u63cf\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u770b\u770b\u5b83\u7684\u5f15\u2f64\u6216\u8005\u88ab\u5f15\u2f64\u662f\u5426\u6539\u53d8\u3002\u5229\u2f64\u72b6\u6001\u7684\u91cd\u7f6e\u5b9e\u73b0\u5f53\u5bf9\u8c61\u72b6\u6001\u53d1\u2f63\u6539\u53d8\u7684\u65f6\u5019\uff0c\u4f9d\u7136\u53ef\u4ee5\u518d\u6b21\u5176\u5f15\u7528\u7684\u5bf9\u8c61\u3002","title":"v1.8\uff1a\u6df7\u5408\u5199\u5c4f\u969c\uff08hybrid write barrier\uff09"},{"location":"golang/docs/GO%E8%AF%AD%E8%A8%80%E4%B9%8B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/#gogc_1","text":"","title":"GO\u7684GC"},{"location":"golang/docs/GO%E8%AF%AD%E8%A8%80%E4%B9%8B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/#_1","text":"\u4f20\u7edf\u7684\u6807\u8bb0\u6e05\u9664\u7b97\u6cd5\u4e2d\uff0c\u5783\u573e\u6536\u96c6\u5668\u4ece\u5783\u573e\u6536\u96c6\u7684\u6839\u5bf9\u8c61\u51fa\u53d1\uff0c\u9012\u5f52\u904d\u5386\u8fd9\u4e9b\u5bf9\u8c61\u6307\u5411\u7684\u5b50\u5bf9\u8c61\u5e76\u5c06\u6240\u6709\u53ef\u8fbe\u7684\u5bf9\u8c61\u6807\u8bb0\u6210\u5b58\u6d3b\uff1b\u6807\u8bb0\u9636\u6bb5\u7ed3\u675f\u540e\uff0c\u5783\u573e\u6536\u96c6\u5668\u4f1a\u4f9d\u6b21\u904d\u5386\u5806\u4e2d\u7684\u5bf9\u8c61\u5e76\u6e05\u9664\u5176\u4e2d\u7684\u5783\u573e\uff0c\u6574\u4e2a\u8fc7\u7a0b\u9700\u8981\u6807\u8bb0\u5bf9\u8c61\u7684\u5b58\u6d3b\u72b6\u6001\uff0c\u7528\u6237\u7a0b\u5e8f\u5728\u5783\u573e\u6536\u96c6\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u4e0d\u80fd\u6267\u884c\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u66f4\u590d\u6742\u7684\u673a\u5236\u6765\u89e3\u51b3 STW \u7684\u95ee\u9898\uff0c\u8fd9\u5c31\u51fa\u73b0\u4e86\u4e09\u8272\u6807\u8bb0\u6cd5\u3002 \u4e09\u8272\u6807\u8bb0\u7b97\u6cd5\u5c06\u7a0b\u5e8f\u4e2d\u7684\u5bf9\u8c61\u5206\u6210\u767d\u8272\u3001\u9ed1\u8272\u548c\u7070\u8272\u4e09\u7c7b\uff1a \u767d\u8272\u5bf9\u8c61\uff1a\u6f5c\u5728\u7684\u5783\u573e\uff0c\u5176\u5185\u5b58\u53ef\u80fd\u4f1a\u88ab\u5783\u573e\u6536\u96c6\u5668\u56de\u6536\uff1b \u9ed1\u8272\u5bf9\u8c61\uff1a\u6d3b\u8dc3\u7684\u5bf9\u8c61\uff0c\u5305\u62ec\u4e0d\u5b58\u5728\u4efb\u4f55\u5f15\u7528\u5916\u90e8\u6307\u9488\u7684\u5bf9\u8c61\u4ee5\u53ca\u4ece\u6839\u5bf9\u8c61\u53ef\u8fbe\u7684\u5bf9\u8c61\uff1b \u7070\u8272\u5bf9\u8c61\uff1a\u6d3b\u8dc3\u7684\u5bf9\u8c61\uff0c\u56e0\u4e3a\u5b58\u5728\u6307\u5411\u767d\u8272\u5bf9\u8c61\u7684\u5916\u90e8\u6307\u9488\uff0c\u5783\u573e\u6536\u96c6\u5668\u4f1a\u626b\u63cf\u8fd9\u4e9b\u5bf9\u8c61\u7684\u5b50\u5bf9\u8c61\uff1b \u5728\u5783\u573e\u6536\u96c6\u5668\u5f00\u59cb\u5de5\u4f5c\u65f6\uff0c\u7a0b\u5e8f\u4e2d\u4e0d\u5b58\u5728\u4efb\u4f55\u7684\u9ed1\u8272\u5bf9\u8c61\uff0c\u5783\u573e\u6536\u96c6\u7684\u6839\u5bf9\u8c61\u4f1a\u88ab\u6807\u8bb0\u6210\u7070\u8272\uff0c\u5783\u573e\u6536\u96c6\u5668\u53ea\u4f1a\u4ece\u7070\u8272\u5bf9\u8c61\u96c6\u5408\u4e2d\u53d6\u51fa\u5bf9\u8c61\u5f00\u59cb\u626b\u63cf\uff0c\u5f53\u7070\u8272\u96c6\u5408\u4e2d\u4e0d\u5b58\u5728\u4efb\u4f55\u5bf9\u8c61\u65f6\uff0c\u6807\u8bb0\u9636\u6bb5\u5c31\u4f1a\u7ed3\u675f\u3002 \u4e09\u8272\u6807\u8bb0\u5783\u573e\u6536\u96c6\u5668\u7684\u5de5\u4f5c\u539f\u7406\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5f52\u7eb3\u6210\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a \u4ece\u7070\u8272\u5bf9\u8c61\u7684\u96c6\u5408\u4e2d\u9009\u62e9\u4e00\u4e2a\u7070\u8272\u5bf9\u8c61\u5e76\u5c06\u5176\u6807\u8bb0\u6210\u9ed1\u8272\uff1b \u5c06\u9ed1\u8272\u5bf9\u8c61\u6307\u5411\u7684\u6240\u6709\u5bf9\u8c61\u90fd\u6807\u8bb0\u6210\u7070\u8272\uff0c\u4fdd\u8bc1\u8be5\u5bf9\u8c61\u548c\u88ab\u8be5\u5bf9\u8c61\u5f15\u7528\u7684\u5bf9\u8c61\u90fd\u4e0d\u4f1a\u88ab\u56de\u6536\uff1b \u91cd\u590d\u4e0a\u8ff0\u4e24\u4e2a\u6b65\u9aa4\u76f4\u5230\u5bf9\u8c61\u56fe\u4e2d\u4e0d\u5b58\u5728\u7070\u8272\u5bf9\u8c61\u3002 \u5f53\u4e09\u8272\u7684\u6807\u8bb0\u6e05\u9664\u7684\u6807\u8bb0\u9636\u6bb5\u7ed3\u675f\u4e4b\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u7684\u5806\u4e2d\u5c31\u4e0d\u5b58\u5728\u4efb\u4f55\u7684\u7070\u8272\u5bf9\u8c61\uff0c\u6211\u4eec\u53ea\u80fd\u770b\u5230\u9ed1\u8272\u7684\u5b58\u6d3b\u5bf9\u8c61\u4ee5\u53ca\u767d\u8272\u7684\u5783\u573e\u5bf9\u8c61\uff0c\u5783\u573e\u6536\u96c6\u5668\u53ef\u4ee5\u56de\u6536\u8fd9\u4e9b\u767d\u8272\u7684\u5783\u573e\uff0c\u4e0b\u9762\u662f\u4f7f\u7528\u4e09\u8272\u6807\u8bb0\u5783\u573e\u6536\u96c6\u5668\u6267\u884c\u6807\u8bb0\u540e\u7684\u5806\u5185\u5b58\uff0c\u5806\u4e2d\u53ea\u6709\u5bf9\u8c61 D \u4e3a\u5f85\u56de\u6536\u7684\u5783\u573e\uff1a \u56e0\u4e3a\u7528\u6237\u7a0b\u5e8f\u53ef\u80fd\u5728\u6807\u8bb0\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\u4fee\u6539\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u6240\u4ee5\u4e09\u8272\u6807\u8bb0\u6e05\u9664\u7b97\u6cd5\u672c\u8eab\u662f\u4e0d\u53ef\u4ee5\u5e76\u53d1\u6216\u8005\u589e\u91cf\u6267\u884c\u7684\uff0c\u5b83\u4ecd\u7136\u9700\u8981 STW\uff0c\u5728\u5982\u4e0b\u6240\u793a\u7684\u4e09\u8272\u6807\u8bb0\u8fc7\u7a0b\u4e2d\uff0c\u7528\u6237\u7a0b\u5e8f\u5efa\u7acb\u4e86\u4ece A \u5bf9\u8c61\u5230 D \u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4f46\u662f\u56e0\u4e3a\u7a0b\u5e8f\u4e2d\u5df2\u7ecf\u4e0d\u5b58\u5728\u7070\u8272\u5bf9\u8c61\u4e86\uff0c\u6240\u4ee5 D \u5bf9\u8c61\u4f1a\u88ab\u5783\u573e\u6536\u96c6\u5668\u9519\u8bef\u5730\u56de\u6536\u3002 \u672c\u6765\u4e0d\u5e94\u8be5\u88ab\u56de\u6536\u7684\u5bf9\u8c61\u5374\u88ab\u56de\u6536\u4e86\uff0c\u8fd9\u5728\u5185\u5b58\u7ba1\u7406\u4e2d\u662f\u975e\u5e38\u4e25\u91cd\u7684\u9519\u8bef\uff0c\u6211\u4eec\u5c06\u8fd9\u79cd\u9519\u8bef\u79f0\u4e3a\u60ac\u6302\u6307\u9488\uff0c\u5373\u6307\u9488\u6ca1\u6709\u6307\u5411\u7279\u5b9a\u7c7b\u578b\u7684\u5408\u6cd5\u5bf9\u8c61\uff0c\u5f71\u54cd\u4e86\u5185\u5b58\u7684\u5b89\u5168\u6027\uff0c\u60f3\u8981\u5e76\u53d1\u6216\u8005\u589e\u91cf\u5730\u6807\u8bb0\u5bf9\u8c61\u8fd8\u662f\u9700\u8981\u4f7f\u7528\u5c4f\u969c\u6280\u672f\u3002 \u6574\u4e2a\u6d41\u7a0b\u5982\u4e0b\uff1a","title":"\u4e09\u8272\u6807\u8bb0"},{"location":"golang/docs/GO%E8%AF%AD%E8%A8%80%E4%B9%8B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/#_2","text":"\u60f3\u8981\u5728\u5e76\u53d1\u6216\u8005\u589e\u91cf\u7684\u6807\u8bb0\u7b97\u6cd5\u4e2d\u4fdd\u8bc1\u6b63\u786e\u6027\uff0c\u6211\u4eec\u9700\u8981\u8fbe\u6210\u4ee5\u4e0b\u4e24\u79cd\u4e09\u8272\u4e0d\u53d8\u6027\uff08Tri-color invariant\uff09\u4e2d\u7684\u4e00\u79cd\uff1a \u5f3a\u4e09\u8272\u4e0d\u53d8\u6027\uff1a\u9ed1\u8272\u5bf9\u8c61\u4e0d\u4f1a\u6307\u5411\u767d\u8272\u5bf9\u8c61\uff0c\u53ea\u4f1a\u6307\u5411\u7070\u8272\u5bf9\u8c61\u6216\u8005\u9ed1\u8272\u5bf9\u8c61\uff1b \u5f31\u4e09\u8272\u4e0d\u53d8\u6027\uff1a\u9ed1\u8272\u5bf9\u8c61\u6307\u5411\u7684\u767d\u8272\u5bf9\u8c61\u5fc5\u987b\u5305\u542b\u4e00\u6761\u4ece\u7070\u8272\u5bf9\u8c61\u7ecf\u7531\u591a\u4e2a\u767d\u8272\u5bf9\u8c61\u7684\u53ef\u8fbe\u8def\u5f84\u3002 \u4e0a\u56fe\u5206\u522b\u5c55\u793a\u4e86\u9075\u5faa\u5f3a\u4e09\u8272\u4e0d\u53d8\u6027\u548c\u5f31\u4e09\u8272\u4e0d\u53d8\u6027\u7684\u5806\u5185\u5b58\uff0c\u9075\u5faa\u4e0a\u8ff0\u4e24\u4e2a\u4e0d\u53d8\u6027\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u6211\u4eec\u90fd\u80fd\u4fdd\u8bc1\u5783\u573e\u6536\u96c6\u7b97\u6cd5\u7684\u6b63\u786e\u6027\uff0c\u800c\u5c4f\u969c\u6280\u672f\u5c31\u662f\u5728\u5e76\u53d1\u6216\u8005\u589e\u91cf\u6807\u8bb0\u8fc7\u7a0b\u4e2d\u4fdd\u8bc1\u4e09\u8272\u4e0d\u53d8\u6027\u7684\u91cd\u8981\u6280\u672f\u3002 \u5783\u573e\u6536\u96c6\u4e2d\u7684\u5c4f\u969c\u6280\u672f\u66f4\u50cf\u662f\u4e00\u4e2a\u94a9\u5b50\u65b9\u6cd5\uff0c\u5b83\u662f\u5728\u7528\u6237\u7a0b\u5e8f\u8bfb\u53d6\u5bf9\u8c61\u3001\u521b\u5efa\u65b0\u5bf9\u8c61\u4ee5\u53ca\u66f4\u65b0\u5bf9\u8c61\u6307\u9488\u65f6\u6267\u884c\u7684\u4e00\u6bb5\u4ee3\u7801\uff0c\u6839\u636e\u64cd\u4f5c\u7c7b\u578b\u7684\u4e0d\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4eec\u5206\u6210\u8bfb\u5c4f\u969c\uff08Read barrier\uff09\u548c\u5199\u5c4f\u969c\uff08Write barrier\uff09\u4e24\u79cd\uff0c\u56e0\u4e3a\u8bfb\u5c4f\u969c\u9700\u8981\u5728\u8bfb\u64cd\u4f5c\u4e2d\u52a0\u5165\u4ee3\u7801\u7247\u6bb5\uff0c\u5bf9\u7528\u6237\u7a0b\u5e8f\u7684\u6027\u80fd\u5f71\u54cd\u5f88\u5927\uff0c\u6240\u4ee5\u7f16\u7a0b\u8bed\u8a00\u5f80\u5f80\u90fd\u4f1a\u91c7\u7528\u5199\u5c4f\u969c\u4fdd\u8bc1\u4e09\u8272\u4e0d\u53d8\u6027\u3002 Go \u8bed\u8a00\u5728 v1.8 \u7ec4\u5408 Dijkstra \u63d2\u5165\u5199\u5c4f\u969c\u548c Yuasa \u5220\u9664\u5199\u5c4f\u969c\u6784\u6210\u6df7\u5408\u5199\u5c4f\u969c\uff0c\u8be5\u5199\u5c4f\u969c\u4f1a\u5c06\u88ab\u8986\u76d6\u7684\u5bf9\u8c61\u6807\u8bb0\u6210\u7070\u8272\u5e76\u5728\u5f53\u524d\u6808\u6ca1\u6709\u626b\u63cf\u65f6\u5c06\u65b0\u5bf9\u8c61\u4e5f\u6807\u8bb0\u6210\u7070\u8272\u3002 \u4e3a\u4e86\u79fb\u9664\u6808\u7684\u91cd\u626b\u63cf\u8fc7\u7a0b\uff0c\u9664\u4e86\u5f15\u5165\u6df7\u5408\u5199\u5c4f\u969c\u4e4b\u5916\uff0c\u5728\u5783\u573e\u6536\u96c6\u7684\u6807\u8bb0\u9636\u6bb5\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u521b\u5efa\u7684\u6240\u6709\u65b0\u5bf9\u8c61\u90fd\u6807\u8bb0\u6210\u9ed1\u8272\uff0c\u9632\u6b62\u65b0\u5206\u914d\u7684\u6808\u5185\u5b58\u548c\u5806\u5185\u5b58\u4e2d\u7684\u5bf9\u8c61\u88ab\u9519\u8bef\u5730\u56de\u6536\uff0c\u56e0\u4e3a\u6808\u5185\u5b58\u5728\u6807\u8bb0\u9636\u6bb5\u6700\u7ec8\u90fd\u4f1a\u53d8\u4e3a\u9ed1\u8272\uff0c\u6240\u4ee5\u4e0d\u518d\u9700\u8981\u91cd\u65b0\u626b\u63cf\u6808\u7a7a\u95f4\u3002","title":"\u6df7\u5408\u5199\u5c4f\u969c"},{"location":"golang/docs/GO%E8%AF%AD%E8%A8%80%E4%B9%8B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/#_3","text":"\u4f20\u7edf\u7684\u5783\u573e\u6536\u96c6\u7b97\u6cd5\u4f1a\u5728\u5783\u573e\u6536\u96c6\u7684\u6267\u884c\u671f\u95f4\u6682\u505c\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e00\u65e6\u89e6\u53d1\u5783\u573e\u6536\u96c6\uff0c\u5783\u573e\u6536\u96c6\u5668\u4f1a\u62a2\u5360 CPU \u7684\u4f7f\u7528\u6743\u5360\u636e\u5927\u91cf\u7684\u8ba1\u7b97\u8d44\u6e90\u4ee5\u5b8c\u6210\u6807\u8bb0\u548c\u6e05\u9664\u5de5\u4f5c\uff0c\u7136\u800c\u5f88\u591a\u8ffd\u6c42\u5b9e\u65f6\u7684\u5e94\u7528\u7a0b\u5e8f\u65e0\u6cd5\u63a5\u53d7\u957f\u65f6\u95f4\u7684 STW\u3002 \u4e3a\u4e86\u51cf\u5c11\u5e94\u7528\u7a0b\u5e8f\u6682\u505c\u7684\u6700\u957f\u65f6\u95f4\u548c\u5783\u573e\u6536\u96c6\u7684\u603b\u6682\u505c\u65f6\u95f4\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e0b\u9762\u7684\u7b56\u7565\u4f18\u5316\u73b0\u4ee3\u7684\u5783\u573e\u6536\u96c6\u5668\uff1a \u589e\u91cf\u5783\u573e\u6536\u96c6\uff1a\u589e\u91cf\u5730\u6807\u8bb0\u548c\u6e05\u9664\u5783\u573e\uff0c\u964d\u4f4e\u5e94\u7528\u7a0b\u5e8f\u6682\u505c\u7684\u6700\u957f\u65f6\u95f4\uff1b \u5e76\u53d1\u5783\u573e\u6536\u96c6\uff1a\u5229\u7528\u591a\u6838\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u5728\u7528\u6237\u7a0b\u5e8f\u6267\u884c\u65f6\u5e76\u53d1\u6807\u8bb0\u548c\u6e05\u9664\u5783\u573e\uff1b \u56e0\u4e3a\u589e\u91cf\u548c\u5e76\u53d1\u4e24\u79cd\u65b9\u5f0f\u90fd\u53ef\u4ee5\u4e0e\u7528\u6237\u7a0b\u5e8f\u4ea4\u66ff\u8fd0\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5c4f\u969c\u6280\u672f\u4fdd\u8bc1\u5783\u573e\u6536\u96c6\u7684\u6b63\u786e\u6027\uff1b\u4e0e\u6b64\u540c\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u4e5f\u4e0d\u80fd\u7b49\u5230\u5185\u5b58\u6ea2\u51fa\u65f6\u89e6\u53d1\u5783\u573e\u6536\u96c6\uff0c\u56e0\u4e3a\u5f53\u5185\u5b58\u4e0d\u8db3\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u5df2\u7ecf\u65e0\u6cd5\u5206\u914d\u5185\u5b58\uff0c\u8fd9\u4e0e\u76f4\u63a5\u6682\u505c\u7a0b\u5e8f\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u589e\u91cf\u548c\u5e76\u53d1\u7684\u5783\u573e\u6536\u96c6\u9700\u8981\u63d0\u524d\u89e6\u53d1\u5e76\u5728\u5185\u5b58\u4e0d\u8db3\u524d\u5b8c\u6210\u6574\u4e2a\u5faa\u73af\uff0c\u907f\u514d\u7a0b\u5e8f\u7684\u957f\u65f6\u95f4\u6682\u505c\u3002","title":"\u589e\u91cf\u548c\u5e76\u53d1"},{"location":"golang/docs/GO%E8%AF%AD%E8%A8%80%E4%B9%8B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/#_4","text":"\u589e\u91cf\u5f0f\uff08Incremental\uff09\u7684\u5783\u573e\u6536\u96c6\u662f\u51cf\u5c11\u7a0b\u5e8f\u6700\u957f\u6682\u505c\u65f6\u95f4\u7684\u4e00\u79cd\u65b9\u6848\uff0c\u5b83\u53ef\u4ee5\u5c06\u539f\u672c\u65f6\u95f4\u8f83\u957f\u7684\u6682\u505c\u65f6\u95f4\u5207\u5206\u6210\u591a\u4e2a\u66f4\u5c0f\u7684 GC \u65f6\u95f4\u7247\uff0c\u867d\u7136\u4ece\u5783\u573e\u6536\u96c6\u5f00\u59cb\u5230\u7ed3\u675f\u7684\u65f6\u95f4\u66f4\u957f\u4e86\uff0c\u4f46\u662f\u8fd9\u4e5f\u51cf\u5c11\u4e86\u5e94\u7528\u7a0b\u5e8f\u6682\u505c\u7684\u6700\u5927\u65f6\u95f4\uff1a \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u589e\u91cf\u5f0f\u7684\u5783\u573e\u6536\u96c6\u9700\u8981\u4e0e\u4e09\u8272\u6807\u8bb0\u6cd5\u4e00\u8d77\u4f7f\u7528\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5783\u573e\u6536\u96c6\u7684\u6b63\u786e\u6027\uff0c\u6211\u4eec\u9700\u8981\u5728\u5783\u573e\u6536\u96c6\u5f00\u59cb\u524d\u6253\u5f00\u5199\u5c4f\u969c\uff0c\u8fd9\u6837\u7528\u6237\u7a0b\u5e8f\u4fee\u6539\u5185\u5b58\u90fd\u4f1a\u5148\u7ecf\u8fc7\u5199\u5c4f\u969c\u7684\u5904\u7406\uff0c\u4fdd\u8bc1\u4e86\u5806\u5185\u5b58\u4e2d\u5bf9\u8c61\u5173\u7cfb\u7684\u5f3a\u4e09\u8272\u4e0d\u53d8\u6027\u6216\u8005\u5f31\u4e09\u8272\u4e0d\u53d8\u6027\u3002\u867d\u7136\u589e\u91cf\u5f0f\u7684\u5783\u573e\u6536\u96c6\u80fd\u591f\u51cf\u5c11\u6700\u5927\u7684\u7a0b\u5e8f\u6682\u505c\u65f6\u95f4\uff0c\u4f46\u662f\u589e\u91cf\u5f0f\u6536\u96c6\u4e5f\u4f1a\u589e\u52a0\u4e00\u6b21 GC \u5faa\u73af\u7684\u603b\u65f6\u95f4\uff0c\u5728\u5783\u573e\u6536\u96c6\u671f\u95f4\uff0c\u56e0\u4e3a\u5199\u5c4f\u969c\u7684\u5f71\u54cd\u7528\u6237\u7a0b\u5e8f\u4e5f\u9700\u8981\u627f\u62c5\u989d\u5916\u7684\u8ba1\u7b97\u5f00\u9500\uff0c\u6240\u4ee5\u589e\u91cf\u5f0f\u7684\u5783\u573e\u6536\u96c6\u4e5f\u4e0d\u662f\u53ea\u5e26\u6765\u597d\u5904\u7684\uff0c\u4f46\u662f\u603b\u4f53\u6765\u8bf4\u8fd8\u662f\u5229\u5927\u4e8e\u5f0a\u3002","title":"\u589e\u91cf\u6536\u96c6"},{"location":"golang/docs/GO%E8%AF%AD%E8%A8%80%E4%B9%8B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/#_5","text":"\u5e76\u53d1\uff08Concurrent\uff09\u7684\u5783\u573e\u6536\u96c6\u4e0d\u4ec5\u80fd\u591f\u51cf\u5c11\u7a0b\u5e8f\u7684\u6700\u957f\u6682\u505c\u65f6\u95f4\uff0c\u8fd8\u80fd\u51cf\u5c11\u6574\u4e2a\u5783\u573e\u6536\u96c6\u9636\u6bb5\u7684\u65f6\u95f4\uff0c\u901a\u8fc7\u5f00\u542f\u8bfb\u5199\u5c4f\u969c\u3001\u5229\u7528\u591a\u6838\u4f18\u52bf\u4e0e\u7528\u6237\u7a0b\u5e8f\u5e76\u884c\u6267\u884c\uff0c\u5e76\u53d1\u5783\u573e\u6536\u96c6\u5668\u786e\u5b9e\u80fd\u591f\u51cf\u5c11\u5783\u573e\u6536\u96c6\u5bf9\u5e94\u7528\u7a0b\u5e8f\u7684\u5f71\u54cd\uff1a \u867d\u7136\u5e76\u53d1\u6536\u96c6\u5668\u80fd\u591f\u4e0e\u7528\u6237\u7a0b\u5e8f\u4e00\u8d77\u8fd0\u884c\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6240\u6709\u9636\u6bb5\u90fd\u53ef\u4ee5\u4e0e\u7528\u6237\u7a0b\u5e8f\u4e00\u8d77\u8fd0\u884c\uff0c\u90e8\u5206\u9636\u6bb5\u8fd8\u662f\u9700\u8981\u6682\u505c\u7528\u6237\u7a0b\u5e8f\u7684\uff0c\u4e0d\u8fc7\u4e0e\u4f20\u7edf\u7684\u7b97\u6cd5\u76f8\u6bd4\uff0c\u5e76\u53d1\u7684\u5783\u573e\u6536\u96c6\u53ef\u4ee5\u5c06\u80fd\u591f\u5e76\u53d1\u6267\u884c\u7684\u5de5\u4f5c\u5c3d\u91cf\u5e76\u53d1\u6267\u884c\uff1b\u5f53\u7136\uff0c\u56e0\u4e3a\u8bfb\u5199\u5c4f\u969c\u7684\u5f15\u5165\uff0c\u5e76\u53d1\u7684\u5783\u573e\u6536\u96c6\u5668\u4e5f\u4e00\u5b9a\u4f1a\u5e26\u6765\u989d\u5916\u5f00\u9500\uff0c\u4e0d\u4ec5\u4f1a\u589e\u52a0\u5783\u573e\u6536\u96c6\u7684\u603b\u65f6\u95f4\uff0c\u8fd8\u4f1a\u5f71\u54cd\u7528\u6237\u7a0b\u5e8f\uff0c\u8fd9\u662f\u6211\u4eec\u5728\u8bbe\u8ba1\u5783\u573e\u6536\u96c6\u7b56\u7565\u65f6\u5fc5\u987b\u8981\u6ce8\u610f\u7684\u3002","title":"\u5e76\u53d1\u6536\u96c6"},{"location":"golang/docs/GO%E8%AF%AD%E8%A8%80%E4%B9%8B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/#gc","text":"\u8fd0\u884c\u65f6\u4f1a\u901a\u8fc7\u5982\u4e0b\u6240\u793a\u7684 runtime.gcTrigger.test \u65b9\u6cd5\u51b3\u5b9a\u662f\u5426\u9700\u8981\u89e6\u53d1\u5783\u573e\u6536\u96c6\uff0c\u5f53\u6ee1\u8db3\u89e6\u53d1\u5783\u573e\u6536\u96c6\u7684\u57fa\u672c\u6761\u4ef6\u65f6 \u2014 \u5141\u8bb8\u5783\u573e\u6536\u96c6\u3001\u7a0b\u5e8f\u6ca1\u6709\u5d29\u6e83\u5e76\u4e14\u6ca1\u6709\u5904\u4e8e\u5783\u573e\u6536\u96c6\u5faa\u73af\uff0c\u8be5\u65b9\u6cd5\u4f1a\u6839\u636e\u4e09\u79cd\u4e0d\u540c\u65b9\u5f0f\u89e6\u53d1\u8fdb\u884c\u4e0d\u540c\u7684\u68c0\u67e5\uff1a func (t gcTrigger) test() bool { if !memstats.enablegc || panicking != 0 || gcphase != _GCoff { return false } switch t.kind { case gcTriggerHeap: return memstats.heap_live >= memstats.gc_trigger case gcTriggerTime: if gcpercent < 0 { return false } lastgc := int64(atomic.Load64(&memstats.last_gc_nanotime)) return lastgc != 0 && t.now-lastgc > forcegcperiod case gcTriggerCycle: return int32(t.n-work.cycles) > 0 } return true } 1\u3001gcTriggerHeap \uff1a\u5806\u5185\u5b58\u7684\u5206\u914d\u8fbe\u5230\u8fbe\u63a7\u5236\u5668\u8ba1\u7b97\u7684\u89e6\u53d1\u5806\u5927\u5c0f\uff1b 2\u3001gcTriggerTime \uff1a\u5982\u679c\u4e00\u5b9a\u65f6\u95f4\u5185\u6ca1\u6709\u89e6\u53d1\uff0c\u5c31\u4f1a\u89e6\u53d1\u65b0\u7684\u5faa\u73af\uff0c\u8be5\u51fa\u53d1\u6761\u4ef6\u7531 runtime.forcegcperiod \u53d8\u91cf\u63a7\u5236\uff0c\u9ed8\u8ba4\u4e3a 2 \u5206\u949f\uff1b 3\u3001gcTriggerCycle\uff1a\u5982\u679c\u5f53\u524d\u6ca1\u6709\u5f00\u542f\u5783\u573e\u6536\u96c6\uff0c\u5219\u89e6\u53d1\u65b0\u7684\u5faa\u73af\uff1b 4\u3001runtime.gcpercent \u662f\u89e6\u53d1\u5783\u573e\u6536\u96c6\u7684\u5185\u5b58\u589e\u957f\u767e\u5206\u6bd4\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a 100\uff0c\u5373\u5806\u5185\u5b58\u76f8\u6bd4\u4e0a\u6b21\u5783\u573e\u6536\u96c6\u589e\u957f 100% \u65f6\u5e94\u8be5\u89e6\u53d1 GC\uff0c\u5e76\u884c\u7684\u5783\u573e\u6536\u96c6\u5668\u4f1a\u5728\u5230\u8fbe\u8be5\u76ee\u6807\u524d\u5b8c\u6210\u5783\u573e\u6536\u96c6\u3002 \u7528\u4e8e\u5f00\u542f\u5783\u573e\u6536\u96c6\u7684\u65b9\u6cd5 runtime.gcStart \u4f1a\u63a5\u6536\u4e00\u4e2a runtime.gcTrigger \u7c7b\u578b\u7684\u7ed3\u6784\uff0c\u6240\u6709\u51fa\u73b0 runtime.gcTrigger \u7ed3\u6784\u4f53\u7684\u4f4d\u7f6e\u90fd\u662f\u89e6\u53d1\u5783\u573e\u6536\u96c6\u7684\u4ee3\u7801\uff1a runtime.sysmon \u548c runtime.forcegchelper \uff1a\u540e\u53f0\u8fd0\u884c\u5b9a\u65f6\u68c0\u67e5\u548c\u5783\u573e\u6536\u96c6\uff1b runtime.GC \uff1a\u7528\u6237\u7a0b\u5e8f\u624b\u52a8\u89e6\u53d1\u5783\u573e\u6536\u96c6\uff1b runtime.mallocgc \uff1a\u7533\u8bf7\u5185\u5b58\u65f6\u6839\u636e\u5806\u5927\u5c0f\u89e6\u53d1\u5783\u573e\u6536\u96c6\u3002","title":"GC\u7684\u65f6\u673a"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/","text":"Go \u7a0b\u5e8f\u662f\u600e\u6837\u8dd1\u8d77\u6765\u7684 \u5f15\u5165 \u6211\u4eec\u4ece\u4e00\u4e2a helloworld \u7684\u4f8b\u5b50\u5f00\u59cb package main import \"fmt\" func main() { fmt.Println(\"hello world\") } \u7528 vim \u8981\u6253\u5f00\uff0c\u8f93\u5165\u547d\u4ee4\uff1a :%!xxd \u4e0b\u9762\u662f\u8f93\u51fa 00000000:7061 636b 6167 6520 6d61 696e 0a0a 696d package main.. im 00000010:706f 7274 2022 666d 7422 0a0a 6675 6e63 port \"fmt\".. func 00000020:206d 6169 6e28 2920 7b0a 2020 2020 666d main(){. fm 00000030:742e 5072 696e 746c 6e28 2268 656c 6c6f t. Println(\"hello 00000040:2077 6f72 6c64 2229 0a7d 0a world\").} \u548c ascii \u4e00\u5bf9\u6bd4\uff0c\u5c31\u80fd\u53d1\u73b0\uff0c\u4e2d\u95f4\u7684\u5217\u548c\u6700\u53f3\u8fb9\u7684\u4e00\u4e00\u5bf9\u5e94\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u521a\u5199\u5b8c\u7684 hello.go \u662f\u7531ascii\u5b57\u7b26\u8868\u793a\u7684\u3002\u88ab\u79f0\u4e3a\u6587\u672c\u6587\u4ef6\u3002 go\u7a0b\u5e8f\u5e76\u4e0d\u80fd\u76f4\u63a5\u8fd0\u884c\uff0c\u6bcf\u6761 go \u8bed\u53e5\u5fc5\u987b\u8f6c\u6362\u4e3a\u4e00\u7cfb\u5217\u7684\u4f4e\u7ea7\u673a\u5668\u8bed\u8a00\u6307\u4ee4\uff0c\u5c06\u8fd9\u4e9b\u6307\u4ee4 \u6253\u5305\u5230\u4e00\u8d77\uff0c\u5e76\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\uff0c\u4e5f\u5c31\u662f\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u4ece\u6e90\u6587\u4ef6\u5230\u53ef\u6267\u884c\u76ee\u6807\u6587\u4ef6\u7684\u8f6c\u5316\u8fc7\u7a0b\uff1a \u5b8c\u6210\u4ee5\u4e0a\u5404\u4e2a\u9636\u6bb5\u7684\u5c31\u662f go \u7f16\u8bd1\u7cfb\u7edf\u3002\u4f60\u80af\u5b9a\u542c\u8fc7 GCC\uff0c\u5b83\u652f\u6301 C/C++/JAVA/PYTHON/OBJECTIV-CAADA/FORTRAN/PASCAL\uff0c\u80fd\u591f\u4e3a\u5f88\u591a\u4e0d\u540c\u7684\u673a\u5668\u751f\u6210\u673a\u5668\u7801\u3002 \u53ef\u6267\u884c\u76ee\u6807\u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u5728\u673a\u5668\u4e0a\u6267\u884c\u3002\u4e00\u822c\u800c\u8a00\uff0c \u5148\u6267\u884c\u4e00\u4e9b\u521d\u59cb\u5316\u7684\u5de5\u4f5c\uff1b \u627e\u5230main\u51fd\u6570\u7684\u5165\u53e3\uff0c\u6267\u884c\u7528\u6237\u5199\u7684\u4ee3\u7801\uff1b \u6267\u884c\u5b8c\u6210\u540e\uff0cmain \u51fd\u6570\u9000\u51fa\uff1b \u518d\u6267\u884c\u4e00\u4e9b\u6536\u5c3e\u7684\u5de5\u4f5c\uff0c\u6574\u4e2a\u8fc7\u7a0b\u5b8c\u6bd5\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u63a2\u7d22 \u7f16\u8bd1 \u548c \u8fd0\u884c \u7684\u8fc7\u7a0b \u7f16\u8bd1\u94fe\u63a5 Go \u6e90\u7801\u91cc\u7684\u7f16\u8bd1\u5668\u6e90\u7801\u4f4d\u4e8e src/cmd/compile \u8def\u5f84\u4e0b\uff0c\u94fe\u63a5\u5668\u6e90\u7801\u4f4d\u4e8e src/cmd/link \u8def\u5f84\u4e0b\u3002 \u7f16\u8bd1\u8fc7\u7a0b \u6211\u6bd4\u8f83\u559c\u6b22\u7528 IDE\uff08\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff09\u6765\u5199\u4ee3\u7801\uff0c Go \u6e90\u7801\u7528\u7684 Goland\uff0c\u6709\u65f6\u5019\u76f4\u63a5\u70b9\u51fb IDE \u83dc\u5355\u680f\u91cc\u7684\u201c\u8fd0\u884c\u201d\u6309\u94ae\uff0c\u7a0b\u5e8f\u5c31\u8dd1\u8d77\u6765\u4e86\u3002\u8fd9\u5b9e\u9645\u4e0a\u9690\u542b\u4e86\u7f16\u8bd1\u548c\u94fe\u63a5\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u901a\u5e38\u5c06\u7f16\u8bd1\u548c\u94fe\u63a5\u5408\u5e76\u5230\u4e00\u8d77\u7684\u8fc7\u7a0b\u79f0\u4e3a\u6784\u5efa\uff08Build\uff09\u3002 \u7f16\u8bd1\u8fc7\u7a0b\u5c31\u662f\u5bf9\u6e90\u6587\u4ef6\u8fdb\u884c\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u3001\u4f18\u5316\uff0c\u6700\u540e\u751f\u6210\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6\uff0c\u4ee5 .s \u4f5c\u4e3a\u6587\u4ef6\u540e\u7f00\u3002 \u4e4b\u540e\uff0c\u6c47\u7f16\u5668\u4f1a\u5c06\u6c47\u7f16\u4ee3\u7801\u8f6c\u53d8\u6210\u673a\u5668\u53ef\u4ee5\u6267\u884c\u7684\u6307\u4ee4\u3002\u7531\u4e8e\u6bcf\u4e00\u6761\u6c47\u7f16\u8bed\u53e5\u51e0\u4e4e\u90fd\u4e0e\u4e00\u6761\u673a\u5668\u6307\u4ee4\u76f8\u5bf9\u5e94\uff0c\u6240\u4ee5\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4e00\u4e00\u5bf9\u5e94\uff0c\u6bd4\u8f83\u7b80\u5355\uff0c\u6ca1\u6709\u8bed\u6cd5\u3001\u8bed\u4e49\u5206\u6790\uff0c\u4e5f\u6ca1\u6709\u4f18\u5316\u8fd9\u4e9b\u6b65\u9aa4\u3002 \u7f16\u8bd1\u5668\u662f\u5c06\u9ad8\u7ea7\u8bed\u8a00\u7ffb\u8bd1\u6210\u673a\u5668\u8bed\u8a00\u7684\u4e00\u4e2a\u5de5\u5177\uff0c\u7f16\u8bd1\u8fc7\u7a0b\u4e00\u822c\u5206\u4e3a 6 \u6b65\uff1a\u626b\u63cf\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u3001\u6e90\u4ee3\u7801\u4f18\u5316\u3001\u4ee3\u7801\u751f\u6210\u3001\u76ee\u6807\u4ee3\u7801\u4f18\u5316\u3002\u4e0b\u56fe\u6765\u81ea\u300a\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b\u300b\uff1a \u8bcd\u6cd5\u5206\u6790 \u901a\u8fc7\u524d\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u77e5\u9053\uff0cGo \u7a0b\u5e8f\u6587\u4ef6\u5728\u673a\u5668\u770b\u6765\u4e0d\u8fc7\u662f\u4e00\u5806\u4e8c\u8fdb\u5236\u4f4d\u3002\u6211\u4eec\u80fd\u8bfb\u61c2\uff0c\u662f\u56e0\u4e3a Goland \u6309\u7167 ASCII \u7801\uff08\u5b9e\u9645\u4e0a\u662f UTF-8\uff09\u628a\u8fd9\u5806\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u4e86\u7f16\u7801\u3002\u4f8b\u5982\uff0c\u628a 8\u4e2a bit \u4f4d\u5206\u6210\u4e00\u7ec4\uff0c\u5bf9\u5e94\u4e00\u4e2a\u5b57\u7b26\uff0c\u901a\u8fc7\u5bf9\u7167 ASCII \u7801\u8868\u5c31\u53ef\u4ee5\u67e5\u51fa\u6765\u3002 \u5f53\u628a\u6240\u6709\u7684\u4e8c\u8fdb\u5236\u4f4d\u90fd\u5bf9\u5e94\u6210\u4e86 ASCII \u7801\u5b57\u7b26\u540e\uff0c\u6211\u4eec\u5c31\u80fd\u770b\u5230\u6709\u610f\u4e49\u7684\u5b57\u7b26\u4e32\u3002\u5b83\u53ef\u80fd\u662f\u5173\u952e\u5b57\uff0c\u4f8b\u5982\uff1apackage\uff1b\u53ef\u80fd\u662f\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\uff1a\u201cHello World\u201d\u3002 \u8bcd\u6cd5\u5206\u6790\u5176\u5b9e\u5e72\u7684\u5c31\u662f\u8fd9\u4e2a\u3002\u8f93\u5165\u662f\u539f\u59cb\u7684 Go \u7a0b\u5e8f\u6587\u4ef6\uff0c\u5728\u8bcd\u6cd5\u5206\u6790\u5668\u770b\u6765\uff0c\u5c31\u662f\u4e00\u5806\u4e8c\u8fdb\u5236\u4f4d\uff0c\u6839\u672c\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u4e1c\u897f\uff0c\u7ecf\u8fc7\u5b83\u7684\u5206\u6790\u540e\uff0c\u53d8\u6210\u6709\u610f\u4e49\u7684\u8bb0\u53f7\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u8bcd\u6cd5\u5206\u6790\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u5c06\u5b57\u7b26\u5e8f\u5217\u8f6c\u6362\u4e3a\u6807\u8bb0\uff08token\uff09\u5e8f\u5217\u7684\u8fc7\u7a0b\u3002 \u6211\u4eec\u6765\u770b\u4e00\u4e0b\u7ef4\u57fa\u767e\u79d1\u4e0a\u7ed9\u51fa\u7684\u5b9a\u4e49\uff1a \u8bcd\u6cd5\u5206\u6790\uff08lexical analysis\uff09\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u5c06\u5b57\u7b26\u5e8f\u5217\u8f6c\u6362\u4e3a\u6807\u8bb0\uff08token\uff09\u5e8f\u5217\u7684\u8fc7\u7a0b\u3002\u8fdb\u884c\u8bcd\u6cd5\u5206\u6790\u7684\u7a0b\u5e8f\u6216\u8005\u51fd\u6570\u53eb\u4f5c\u8bcd\u6cd5\u5206\u6790\u5668\uff08lexical analyzer\uff0c\u7b80\u79f0lexer\uff09\uff0c\u4e5f\u53eb\u626b\u63cf\u5668\uff08scanner\uff09\u3002\u8bcd\u6cd5\u5206\u6790\u5668\u4e00\u822c\u4ee5\u51fd\u6570\u7684\u5f62\u5f0f\u5b58\u5728\uff0c\u4f9b\u8bed\u6cd5\u5206\u6790\u5668\u8c03\u7528\u3002 .go \u6587\u4ef6\u88ab\u8f93\u5165\u5230\u626b\u63cf\u5668\uff08Scanner\uff09\uff0c\u5b83\u4f7f\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e \u6709\u9650\u72b6\u6001\u673a \u7684\u7b97\u6cd5\uff0c\u5c06\u6e90\u4ee3\u7801\u7684\u5b57\u7b26\u7cfb\u5217\u5206\u5272\u6210\u4e00\u7cfb\u5217\u7684\u8bb0\u53f7\uff08Token\uff09\u3002 \u8bb0\u53f7\u4e00\u822c\u5206\u4e3a\u8fd9\u51e0\u7c7b\uff1a\u5173\u952e\u5b57\u3001\u6807\u8bc6\u7b26\u3001\u5b57\u9762\u91cf\uff08\u5305\u542b\u6570\u5b57\u3001\u5b57\u7b26\u4e32\uff09\u3001\u7279\u6b8a\u7b26\u53f7\uff08\u5982\u52a0\u53f7\u3001\u7b49\u53f7\uff09\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e\u5982\u4e0b\u7684\u4ee3\u7801\uff1a slice[i] = i * (2 + 6) \u603b\u5171\u5305\u542b 16 \u4e2a\u975e\u7a7a\u5b57\u7b26\uff0c\u7ecf\u8fc7\u626b\u63cf\u540e \u8bb0\u53f7 \u7c7b\u578b slice \u6807\u8bc6\u7b26 [ \u5de6\u65b9\u62ec\u53f7 i \u6807\u8bc6\u7b26 ] \u53f3\u65b9\u62ec\u53f7 = \u8d4b\u503c i \u6807\u8bc6\u7b26 * \u4e58\u53f7 ( \u5de6\u5706\u62ec\u53f7 2 \u6570\u5b57 + \u52a0\u53f7 6 \u6570\u5b57 ) \u53f3\u5706\u62ec\u53f7 Go \u8bed\u8a00\uff08\u672c\u6587\u7684 Go \u7248\u672c\u662f 1.9.2\uff09\u626b\u63cf\u5668\u652f\u6301\u7684 Token \u5728\u6e90\u7801\u4e2d\u7684\u8def\u5f84\uff1a src/cmd/compile/internal/syntax/token.go \u611f\u53d7\u4e00\u4e0b\uff1a var tokstrings = [...]string{ // source control _EOF: \"EOF\", // names and literals _Name: \"name\", _Literal:\"literal\", // operators and operations _Operator:\"op\", _AssignOp:\"op=\", _IncOp: \"opop\", _Assign: \"=\", _Define: \":=\", _Arrow: \"<-\", _Star: \"*\", // delimitors _Lparen: \"(\", _Lbrack: \"[\", _Lbrace: \"{\", _Rparen: \")\", _Rbrack: \"]\", _Rbrace: \"}\", _Comma: \",\", _Semi: \";\", _Colon: \":\", _Dot: \".\", _DotDotDot:\"...\", // keywords _Break: \"break\", _Case: \"case\", _Chan: \"chan\", _Const: \"const\", _Continue: \"continue\", _Default: \"default\", _Defer: \"defer\", _Else: \"else\", _Fallthrough:\"fallthrough\", _For: \"for\", _Func: \"func\", _Go: \"go\", _Goto: \"goto\", _If: \"if\", _Import: \"import\", _Interface: \"interface\", _Map: \"map\", _Package: \"package\", _Range: \"range\", _Return: \"return\", _Select: \"select\", _Struct: \"struct\", _Switch: \"switch\", _Type: \"type\", _Var: \"var\",} \u8fd8\u662f\u6bd4\u8f83\u719f\u6089\u7684\uff0c\u5305\u62ec\u540d\u79f0\u548c\u5b57\u9762\u91cf\u3001\u64cd\u4f5c\u7b26\u3001\u5206\u9694\u7b26\u548c\u5173\u952e\u5b57\u3002 \u800c\u626b\u63cf\u5668\u7684\u8def\u5f84\u662f\uff1a src/cmd/compile/internal/syntax/scanner.go \u5176\u4e2d\u6700\u5173\u952e\u7684\u51fd\u6570\u5c31\u662f next \u51fd\u6570\uff0c\u5b83\u4e0d\u65ad\u5730\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u5b57\u7b26\uff08\u4e0d\u662f\u4e0b\u4e00\u4e2a\u5b57\u8282\uff0c\u56e0\u4e3a Go \u8bed\u8a00\u652f\u6301 Unicode \u7f16\u7801\uff0c\u5e76\u4e0d\u662f\u50cf\u6211\u4eec\u524d\u9762\u4e3e\u5f97 ASCII \u7801\u7684\u4f8b\u5b50\uff0c\u4e00\u4e2a\u5b57\u7b26\u53ea\u6709\u4e00\u4e2a\u5b57\u8282\uff09\uff0c\u76f4\u5230\u8fd9\u4e9b\u5b57\u7b26\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a Token\u3002 func (s *scanner) next() { // ... redo: // skip white space c := s.getr() for c == ' ' || c == '\\t' || c=='\\n' && !nlsemi || c == '\\r' { c = s.getr() } //token start s.line, s.col == s.source.line0, s.source.col0 if isLetter(c) || c >= utf8.RuneSelf && s.isIdentRune(c, true) { s.ident() return } switch c { //... case '\\n': s.lit = \"newline\" s.tok= _Semi case '0', '1', '2', '3', '4', '5', '6', '7', '8', '9': s.number(c) //.. default: s.tok = 0 s.error(fmt.Sprintf(\"invalid charscter %#U\", c)) goto redo return assignop: if c == '=' { s.tok = _AssignOp return } s.ungetr() s.tok = _Operator } \u4ee3\u7801\u7684\u4e3b\u8981\u903b\u8f91\u5c31\u662f\u901a\u8fc7 c:=s.getr() \u83b7\u53d6\u4e0b\u4e00\u4e2a\u672a\u88ab\u89e3\u6790\u7684\u5b57\u7b26\uff0c\u5e76\u4e14\u4f1a\u8df3\u8fc7\u4e4b\u540e\u7684\u7a7a\u683c\u3001\u56de\u8f66\u3001\u6362\u884c\u3001tab \u5b57\u7b26\uff0c\u7136\u540e\u8fdb\u5165\u4e00\u4e2a\u5927\u7684 switch-case \u8bed\u53e5\uff0c\u5339\u914d\u5404\u79cd\u4e0d\u540c\u7684\u60c5\u5f62\uff0c\u6700\u7ec8\u53ef\u4ee5\u89e3\u6790\u51fa\u4e00\u4e2a Token\uff0c\u5e76\u4e14\u628a\u76f8\u5173\u7684\u884c\u3001\u5217\u6570\u5b57\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u6837\u5c31\u5b8c\u6210\u4e00\u6b21\u89e3\u6790\u8fc7\u7a0b\u3002 \u5f53\u524d\u5305\u4e2d\u7684\u8bcd\u6cd5\u5206\u6790\u5668 scanner \u4e5f\u53ea\u662f\u4e3a\u4e0a\u5c42\u63d0\u4f9b\u4e86 next \u65b9\u6cd5\uff0c\u8bcd\u6cd5\u89e3\u6790\u7684\u8fc7\u7a0b\u90fd\u662f\u60f0\u6027\u7684\uff0c\u53ea\u6709\u5728\u4e0a\u5c42\u7684\u89e3\u6790\u5668\u9700\u8981\u65f6\u624d\u4f1a\u8c03\u7528 next \u83b7\u53d6\u6700\u65b0\u7684 Token\u3002 \u8bed\u6cd5\u5206\u6790 \u4e0a\u4e00\u6b65\u751f\u6210\u7684 Token \u5e8f\u5217\uff0c\u9700\u8981\u7ecf\u8fc7\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u751f\u6210\u4e00\u68f5\u4ee5 \u8868\u8fbe\u5f0f \u4e3a\u7ed3\u70b9\u7684 \u8bed\u6cd5\u6811 \u3002 \u6bd4\u5982\u6700\u5f00\u59cb\u7684\u90a3\u4e2a\u4f8b\u5b50\uff0c slice[i]=i*(2+6) \uff0c\u5f97\u5230\u7684\u4e00\u68f5\u8bed\u6cd5\u6811\u5982\u4e0b\uff1a \u6574\u4e2a\u8bed\u53e5\u88ab\u770b\u4f5c\u662f\u4e00\u4e2a\u8d4b\u503c\u8868\u8fbe\u5f0f\uff0c\u5de6\u5b50\u6811\u662f\u4e00\u4e2a\u6570\u7ec4\u8868\u8fbe\u5f0f\uff0c\u53f3\u5b50\u6811\u662f\u4e00\u4e2a\u4e58\u6cd5\u8868\u8fbe\u5f0f\uff1b\u6570\u7ec4\u8868\u8fbe\u5f0f\u7531 2 \u4e2a\u7b26\u53f7\u8868\u8fbe\u5f0f\u7ec4\u6210\uff1b\u4e58\u53f7\u8868\u8fbe\u5f0f\u5219\u662f\u7531\u4e00\u4e2a\u7b26\u53f7\u8868\u8fbe\u5f0f\u548c\u4e00\u4e2a\u52a0\u53f7\u8868\u8fbe\u5f0f\u7ec4\u6210\uff1b\u52a0\u53f7\u8868\u8fbe\u5f0f\u5219\u662f\u7531\u4e24\u4e2a\u6570\u5b57\u7ec4\u6210\u3002\u7b26\u53f7\u548c\u6570\u5b57\u662f\u6700\u5c0f\u7684\u8868\u8fbe\u5f0f\uff0c\u5b83\u4eec\u4e0d\u80fd\u518d\u88ab\u5206\u89e3\uff0c\u901a\u5e38\u4f5c\u4e3a\u6811\u7684\u53f6\u5b50\u8282\u70b9\u3002 \u8bed\u6cd5\u5206\u6790\u7684\u8fc7\u7a0b\u53ef\u4ee5\u68c0\u6d4b\u4e00\u4e9b\u5f62\u5f0f\u4e0a\u7684\u9519\u8bef\uff0c\u4f8b\u5982\uff1a\u62ec\u53f7\u662f\u5426\u7f3a\u5c11\u4e00\u534a\uff0c + \u53f7\u8868\u8fbe\u5f0f\u7f3a\u5c11\u4e00\u4e2a\u64cd\u4f5c\u6570\u7b49\u3002 \u8bed\u6cd5\u5206\u6790\u662f\u6839\u636e\u67d0\u79cd\u7279\u5b9a\u7684\u5f62\u5f0f\u6587\u6cd5\uff08Grammar\uff09\u5bf9 Token \u5e8f\u5217\u6784\u6210\u7684\u8f93\u5165\u6587\u672c\u8fdb\u884c\u5206\u6790\u5e76\u786e\u5b9a\u5176\u8bed\u6cd5\u7ed3\u6784\u7684\u4e00\u79cd\u8fc7\u7a0b\u3002 \u8bed\u4e49\u5206\u6790 \u8bed\u6cd5\u5206\u6790\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u8bed\u53e5\u7684\u5177\u4f53\u610f\u4e49\u662f\u4ec0\u4e48\u3002\u50cf\u4e0a\u9762\u7684 * \u53f7\u7684\u4e24\u68f5\u5b50\u6811\u5982\u679c\u662f\u4e24\u4e2a\u6307\u9488\uff0c\u8fd9\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u4f46\u8bed\u6cd5\u5206\u6790\u68c0\u6d4b\u4e0d\u51fa\u6765\uff0c\u8bed\u4e49\u5206\u6790\u5c31\u662f\u5e72\u8fd9\u4e2a\u4e8b\u3002 \u7f16\u8bd1\u671f\u6240\u80fd\u68c0\u67e5\u7684\u662f\u9759\u6001\u8bed\u4e49\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u662f\u5728\u201c\u4ee3\u7801\u201d\u9636\u6bb5\uff0c\u5305\u62ec\u53d8\u91cf\u7c7b\u578b\u7684\u5339\u914d\u3001\u8f6c\u6362\u7b49\u3002\u4f8b\u5982\uff0c\u5c06\u4e00\u4e2a\u6d6e\u70b9\u503c\u8d4b\u7ed9\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u660e\u663e\u7684\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u5c31\u4f1a\u62a5\u7f16\u8bd1\u9519\u8bef\u3002\u800c\u5bf9\u4e8e\u8fd0\u884c\u671f\u95f4\u624d\u4f1a\u51fa\u73b0\u7684\u9519\u8bef\uff1a\u4e0d\u5c0f\u5fc3\u9664\u4e86\u4e00\u4e2a 0 \uff0c\u8bed\u4e49\u5206\u6790\u662f\u6ca1\u529e\u6cd5\u68c0\u6d4b\u7684\u3002 \u8bed\u4e49\u5206\u6790\u9636\u6bb5\u5b8c\u6210\u4e4b\u540e\uff0c\u4f1a\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6807\u6ce8\u4e0a\u7c7b\u578b\uff1a Go \u8bed\u8a00\u7f16\u8bd1\u5668\u5728\u8fd9\u4e00\u9636\u6bb5\u68c0\u67e5\u5e38\u91cf\u3001\u7c7b\u578b\u3001\u51fd\u6570\u58f0\u660e\u4ee5\u53ca\u53d8\u91cf\u8d4b\u503c\u8bed\u53e5\u7684\u7c7b\u578b\uff0c\u7136\u540e\u68c0\u67e5\u54c8\u5e0c\u4e2d\u952e\u7684\u7c7b\u578b\u3002\u5b9e\u73b0\u7c7b\u578b\u68c0\u67e5\u7684\u51fd\u6570\u901a\u5e38\u90fd\u662f\u51e0\u5343\u884c\u7684\u5de8\u578b switch/case \u8bed\u53e5\u3002 \u7c7b\u578b\u68c0\u67e5\u662f Go \u8bed\u8a00\u7f16\u8bd1\u7684\u7b2c\u4e8c\u4e2a\u9636\u6bb5\uff0c\u5728\u8bcd\u6cd5\u548c\u8bed\u6cd5\u5206\u6790\u4e4b\u540e\u6211\u4eec\u5f97\u5230\u4e86\u6bcf\u4e2a\u6587\u4ef6\u5bf9\u5e94\u7684\u62bd\u8c61\u8bed\u6cd5\u6811\uff0c\u968f\u540e\u7684\u7c7b\u578b\u68c0\u67e5\u4f1a\u904d\u5386\u62bd\u8c61\u8bed\u6cd5\u6811\u4e2d\u7684\u8282\u70b9\uff0c\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7684\u7c7b\u578b\u8fdb\u884c\u68c0\u9a8c\uff0c\u627e\u51fa\u5176\u4e2d\u5b58\u5728\u7684\u8bed\u6cd5\u9519\u8bef\u3002 \u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4e5f\u53ef\u80fd\u4f1a\u5bf9\u62bd\u8c61\u8bed\u6cd5\u6811\u8fdb\u884c\u6539\u5199\uff0c\u8fd9\u4e0d\u4ec5\u80fd\u591f\u53bb\u9664\u4e00\u4e9b\u4e0d\u4f1a\u88ab\u6267\u884c\u7684\u4ee3\u7801\u5bf9\u7f16\u8bd1\u8fdb\u884c\u4f18\u5316\u63d0\u9ad8\u6267\u884c\u6548\u7387\uff0c\u800c\u4e14\u4e5f\u4f1a\u4fee\u6539 make\u3001new \u7b49\u5173\u952e\u5b57\u5bf9\u5e94\u8282\u70b9\u7684\u64cd\u4f5c\u7c7b\u578b\u3002 \u4f8b\u5982\u6bd4\u8f83\u5e38\u7528\u7684 make \u5173\u952e\u5b57\uff0c\u7528\u5b83\u53ef\u4ee5\u521b\u5efa\u5404\u79cd\u7c7b\u578b\uff0c\u5982 slice\uff0cmap\uff0cchannel \u7b49\u7b49\u3002\u5230\u8fd9\u4e00\u6b65\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e make \u5173\u952e\u5b57\uff0c\u4e5f\u5c31\u662f OMAKE \u8282\u70b9\uff0c\u4f1a\u5148\u68c0\u67e5\u5b83\u7684\u53c2\u6570\u7c7b\u578b\uff0c\u6839\u636e\u7c7b\u578b\u7684\u4e0d\u540c\uff0c\u8fdb\u5165\u76f8\u5e94\u7684\u5206\u652f\u3002\u5982\u679c\u53c2\u6570\u7c7b\u578b\u662f slice\uff0c\u5c31\u4f1a\u8fdb\u5165 TSLICE case \u5206\u652f\uff0c\u68c0\u67e5 len \u548c cap \u662f\u5426\u6ee1\u8db3\u8981\u6c42\uff0c\u5982 len <= cap\u3002\u6700\u540e\u8282\u70b9\u7c7b\u578b\u4f1a\u4ece OMAKE \u6539\u6210 OMAKESLICE\u3002 \u4e2d\u95f4\u4ee3\u7801\u751f\u6210 \u6211\u4eec\u77e5\u9053\uff0c\u7f16\u8bd1\u8fc7\u7a0b\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a\u524d\u7aef\u548c\u540e\u7aef\uff0c\u524d\u7aef\u751f\u6210\u548c\u5e73\u53f0\u65e0\u5173\u7684\u4e2d\u95f4\u4ee3\u7801\uff0c\u540e\u7aef\u4f1a\u9488\u5bf9\u4e0d\u540c\u7684\u5e73\u53f0\uff0c\u751f\u6210\u4e0d\u540c\u7684\u673a\u5668\u7801\u3002 \u524d\u9762\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u7b49\u90fd\u5c5e\u4e8e\u7f16\u8bd1\u5668\u524d\u7aef\uff0c\u4e4b\u540e\u7684\u9636\u6bb5\u5c5e\u4e8e\u7f16\u8bd1\u5668\u540e\u7aef\u3002 \u7f16\u8bd1\u8fc7\u7a0b\u6709\u5f88\u591a\u4f18\u5316\u7684\u73af\u8282\uff0c\u5728\u8fd9\u4e2a\u73af\u8282\u662f\u6307\u6e90\u4ee3\u7801\u7ea7\u522b\u7684\u4f18\u5316\u3002\u5b83\u5c06\u8bed\u6cd5\u6811\u8f6c\u6362\u6210\u4e2d\u95f4\u4ee3\u7801\uff0c\u5b83\u662f\u8bed\u6cd5\u6811\u7684\u987a\u5e8f\u8868\u793a\u3002 \u4e2d\u95f4\u4ee3\u7801\u4e00\u822c\u548c\u76ee\u6807\u673a\u5668\u4ee5\u53ca\u8fd0\u884c\u65f6\u73af\u5883\u65e0\u5173\uff0c\u5b83\u6709\u51e0\u79cd\u5e38\u89c1\u7684\u5f62\u5f0f\uff1a\u4e09\u5730\u5740\u7801\u3001P-\u4ee3\u7801\u3002\u4f8b\u5982\uff0c\u6700\u57fa\u672c\u7684 \u4e09\u5730\u5740\u7801 \u662f\u8fd9\u6837\u7684\uff1a x = y op z \u8868\u793a\u53d8\u91cf y \u548c \u53d8\u91cf z \u8fdb\u884c op \u64cd\u4f5c\u540e\uff0c\u8d4b\u503c\u7ed9 x\u3002op \u53ef\u4ee5\u662f\u6570\u5b66\u8fd0\u7b97\uff0c\u4f8b\u5982\u52a0\u51cf\u4e58\u9664\u3002 \u524d\u9762\u6211\u4eec\u4e3e\u7684\u4f8b\u5b50\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u7684\u5f62\u5f0f\uff1a t1 = 2 + 6 t2 = i * t1 slice[i] = t2 \u8fd9\u91cc 2 + 6 \u662f\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u8fd9\u6837\u5c31\u628a t1 \u8fd9\u4e2a\u4e34\u65f6\u53d8\u91cf\u201c\u4f18\u5316\u201d\u6389\u4e86\uff0c\u800c\u4e14 t1 \u53d8\u91cf\u53ef\u4ee5\u91cd\u590d\u5229\u7528\uff0c\u56e0\u6b64 t2 \u4e5f\u53ef\u4ee5\u201c\u4f18\u5316\u201d\u6389\u3002\u4f18\u5316\u4e4b\u540e\uff1a t1 = i * 8 slice[i] = t1 Go \u8bed\u8a00\u7684\u4e2d\u95f4\u4ee3\u7801\u8868\u793a\u5f62\u5f0f\u4e3a SSA\uff08Static Single-Assignment\uff0c\u9759\u6001\u5355\u8d4b\u503c\uff09\uff0c\u4e4b\u6240\u4ee5\u79f0\u4e4b\u4e3a\u5355\u8d4b\u503c\uff0c\u662f\u56e0\u4e3a\u6bcf\u4e2a\u540d\u5b57\u5728 SSA \u4e2d\u4ec5\u88ab\u8d4b\u503c\u4e00\u6b21\u3002\u3002 \u8fd9\u4e00\u9636\u6bb5\u4f1a\u6839\u636e CPU \u7684\u67b6\u6784\u8bbe\u7f6e\u76f8\u5e94\u7684\u7528\u4e8e\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u7684\u53d8\u91cf\uff0c\u4f8b\u5982\u7f16\u8bd1\u5668\u4f7f\u7528\u7684\u6307\u9488\u548c\u5bc4\u5b58\u5668\u7684\u5927\u5c0f\u3001\u53ef\u7528\u5bc4\u5b58\u5668\u5217\u8868\u7b49\u3002\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u548c\u673a\u5668\u7801\u751f\u6210\u8fd9\u4e24\u90e8\u5206\u4f1a\u5171\u4eab\u76f8\u540c\u7684\u8bbe\u7f6e\u3002 \u4f8b\u5982\u5bf9\u4e8e map \u7684\u64cd\u4f5c m[i]\uff0c\u5728\u8fd9\u91cc\u4f1a\u88ab\u8f6c\u6362\u6210 mapacess \u6216 mapassign\u3002 Go \u8bed\u8a00\u7684\u4e3b\u7a0b\u5e8f\u5728\u6267\u884c\u65f6\u4f1a\u8c03\u7528 runtime \u4e2d\u7684\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u5173\u952e\u5b57\u548c\u5185\u7f6e\u51fd\u6570\u7684\u529f\u80fd\u5176\u5b9e\u662f\u7531\u8bed\u8a00\u7684\u7f16\u8bd1\u5668\u548c\u8fd0\u884c\u65f6\u5171\u540c\u5b8c\u6210\u7684\u3002 \u4e2d\u95f4\u4ee3\u7801\u7684\u751f\u6210\u8fc7\u7a0b\u5176\u5b9e\u5c31\u662f\u4ece AST \u62bd\u8c61\u8bed\u6cd5\u6811\u5230 SSA \u4e2d\u95f4\u4ee3\u7801\u7684\u8f6c\u6362\u8fc7\u7a0b\uff0c\u5728\u8fd9\u671f\u95f4\u4f1a\u5bf9\u8bed\u6cd5\u6811\u4e2d\u7684\u5173\u952e\u5b57\u5728\u8fdb\u884c\u4e00\u6b21\u66f4\u65b0\uff0c\u66f4\u65b0\u540e\u7684\u8bed\u6cd5\u6811\u4f1a\u7ecf\u8fc7\u591a\u8f6e\u5904\u7406\u8f6c\u53d8\u6700\u540e\u7684 SSA \u4e2d\u95f4\u4ee3\u7801\u3002 \u76ee\u6807\u4ee3\u7801\u751f\u6210\u4e0e\u4f18\u5316 \u4e0d\u540c\u673a\u5668\u7684\u673a\u5668\u5b57\u957f\u3001\u5bc4\u5b58\u5668\u7b49\u7b49\u90fd\u4e0d\u4e00\u6837\uff0c\u610f\u5473\u7740\u5728\u4e0d\u540c\u673a\u5668\u4e0a\u8dd1\u7684\u673a\u5668\u7801\u662f\u4e0d\u4e00\u6837\u7684\u3002\u6700\u540e\u4e00\u6b65\u7684\u76ee\u7684\u5c31\u662f\u8981\u751f\u6210\u80fd\u5728\u4e0d\u540c CPU \u67b6\u6784\u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u3002 \u4e3a\u4e86\u69a8\u5e72\u673a\u5668\u7684\u6bcf\u4e00\u6ef4\u6cb9\u6c34\uff0c\u76ee\u6807\u4ee3\u7801\u4f18\u5316\u5668\u4f1a\u5bf9\u4e00\u4e9b\u6307\u4ee4\u8fdb\u884c\u4f18\u5316\uff0c\u4f8b\u5982\u4f7f\u7528\u79fb\u4f4d\u6307\u4ee4\u4ee3\u66ff\u4e58\u6cd5\u6307\u4ee4\u7b49\u3002 \u8fd9\u5757\u5b9e\u5728\u6ca1\u80fd\u529b\u6df1\u5165\uff0c\u5e78\u597d\u4e5f\u4e0d\u9700\u8981\u6df1\u5165\u3002\u5bf9\u4e8e\u5e94\u7528\u5c42\u7684\u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08\u6765\u8bf4\uff0c\u4e86\u89e3\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002 \u94fe\u63a5\u8fc7\u7a0b \u7f16\u8bd1\u8fc7\u7a0b\u662f\u9488\u5bf9\u5355\u4e2a\u6587\u4ef6\u8fdb\u884c\u7684\uff0c\u6587\u4ef6\u4e0e\u6587\u4ef6\u4e4b\u95f4\u4e0d\u53ef\u907f\u514d\u5730\u8981\u5f15\u7528\u5b9a\u4e49\u5728\u5176\u4ed6\u6a21\u5757\u7684\u5168\u5c40\u53d8\u91cf\u6216\u8005\u51fd\u6570\uff0c\u8fd9\u4e9b\u53d8\u91cf\u6216\u51fd\u6570\u7684\u5730\u5740\u53ea\u6709\u5728\u6b64\u9636\u6bb5\u624d\u80fd\u786e\u5b9a\u3002 \u94fe\u63a5\u8fc7\u7a0b\u5c31\u662f\u8981\u628a\u7f16\u8bd1\u5668\u751f\u6210\u7684\u4e00\u4e2a\u4e2a\u76ee\u6807\u6587\u4ef6\u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002\u6700\u7ec8\u5f97\u5230\u7684\u6587\u4ef6\u662f\u5206\u6210\u5404\u79cd\u6bb5\u7684\uff0c\u6bd4\u5982\u6570\u636e\u6bb5\u3001\u4ee3\u7801\u6bb5\u3001BSS\u6bb5\u7b49\u7b49\uff0c\u8fd0\u884c\u65f6\u4f1a\u88ab\u88c5\u8f7d\u5230\u5185\u5b58\u4e2d\u3002\u5404\u4e2a\u6bb5\u5177\u6709\u4e0d\u540c\u7684\u8bfb\u5199\u3001\u6267\u884c\u5c5e\u6027\uff0c\u4fdd\u62a4\u4e86\u7a0b\u5e8f\u7684\u5b89\u5168\u8fd0\u884c\u3002 \u7a0b\u5e8f\u542f\u52a8 \u4ecd\u7136\u4f7f\u7528 hello-world \u9879\u76ee\u7684\u4f8b\u5b50\u3002\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6267\u884c\uff1a go build -gcflags \"-N -l\" -o hello src/main.go -gcflags\"-N -l\" \u662f\u4e3a\u4e86\u5173\u95ed\u7f16\u8bd1\u5668\u4f18\u5316\u548c\u51fd\u6570\u5185\u8054\uff0c\u9632\u6b62\u540e\u9762\u5728\u8bbe\u7f6e\u65ad\u70b9\u7684\u65f6\u5019\u627e\u4e0d\u5230\u76f8\u5bf9\u5e94\u7684\u4ee3\u7801\u4f4d\u7f6e\u3002 \u5f97\u5230\u4e86\u53ef\u6267\u884c\u6587\u4ef6 hello\uff0c\u6267\u884c\uff1a [qcrao@qcrao hello-world]$ gdb hello \u8fdb\u5165 gdb \u8c03\u8bd5\u6a21\u5f0f\uff0c\u6267\u884c info files \uff0c\u5f97\u5230\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6587\u4ef6\u5934\uff0c\u5217\u51fa\u4e86\u5404\u79cd\u6bb5\uff1a \u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u5f97\u5230\u4e86\u5165\u53e3\u5730\u5740\uff1a0x450e20\u3002 (gdb) b *0x450e20 Breakpoint 1 at 0x450e20: file /usr/local/go/src/runtime/rt0_linux_amd64.s, line 8. \u8fd9\u5c31\u662f Go \u7a0b\u5e8f\u7684\u5165\u53e3\u5730\u5740\uff0c\u6211\u662f\u5728 linux \u4e0a\u8fd0\u884c\u7684\uff0c\u6240\u4ee5\u5165\u53e3\u6587\u4ef6\u4e3a src/runtime/rt0_linux_amd64.s \uff0cruntime \u76ee\u5f55\u4e0b\u6709\u5404\u79cd\u4e0d\u540c\u540d\u79f0\u7684\u7a0b\u5e8f\u5165\u53e3\u6587\u4ef6\uff0c\u652f\u6301\u5404\u79cd\u64cd\u4f5c\u7cfb\u7edf\u548c\u67b6\u6784\uff0c\u4ee3\u7801\u4e3a\uff1a TEXT _rt0_amd64_linux(SB),NOSPLIT,$-8 LEAQ 8(SP), SI // argv MOVQ 0(SP), DI // argc MOVQ $main(SB), AX JMP AX \u4e3b\u8981\u662f\u628a argc\uff0cargv \u4ece\u5185\u5b58\u62c9\u5230\u4e86\u5bc4\u5b58\u5668\u3002\u8fd9\u91cc LEAQ \u662f\u8ba1\u7b97\u5185\u5b58\u5730\u5740\uff0c\u7136\u540e\u628a\u5185\u5b58\u5730\u5740\u672c\u8eab\u653e\u8fdb\u5bc4\u5b58\u5668\u91cc\uff0c\u4e5f\u5c31\u662f\u628a argv \u7684\u5730\u5740\u653e\u5230\u4e86 SI \u5bc4\u5b58\u5668\u4e2d\u3002\u6700\u540e\u8df3\u8f6c\u5230\uff1a TEXT main(SB),NOSPLIT,$-8 MOVQ $runtime\u00b7rt0_go(SB), AX JMP AX \u7ee7\u7eed\u8df3\u8f6c\u5230 runtime\u00b7rt0_go(SB) \uff0c\u4f4d\u7f6e\uff1a /usr/local/go/src/runtime/asm_amd64.s \uff0c\u4ee3\u7801\uff1a TEXT runtime\u00b7rt0_go(SB),NOSPLIT,$0 // \u7701\u7565\u5f88\u591a CPU \u76f8\u5173\u7684\u7279\u6027\u6807\u5fd7\u4f4d\u68c0\u67e5\u7684\u4ee3\u7801 // \u4e3b\u8981\u662f\u770b\u4e0d\u61c2\uff0c^_^ // \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 // \u4e0b\u9762\u662f\u6700\u540e\u8c03\u7528\u7684\u4e00\u4e9b\u51fd\u6570\uff0c\u6bd4\u8f83\u91cd\u8981 // \u521d\u59cb\u5316\u6267\u884c\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84 CALL runtime\u00b7args(SB) // \u521d\u59cb\u5316 CPU \u4e2a\u6570\u548c\u5185\u5b58\u9875\u5927\u5c0f CALL runtime\u00b7osinit(SB) // \u521d\u59cb\u5316\u547d\u4ee4\u884c\u53c2\u6570\u3001\u73af\u5883\u53d8\u91cf\u3001gc\u3001\u6808\u7a7a\u95f4\u3001\u5185\u5b58\u7ba1\u7406\u3001\u6240\u6709 P \u5b9e\u4f8b\u3001HASH\u7b97\u6cd5\u7b49 CALL runtime\u00b7schedinit(SB) // \u8981\u5728 main goroutine \u4e0a\u8fd0\u884c\u7684\u51fd\u6570 MOVQ $runtime\u00b7mainPC(SB), AX // entry PUSHQ AX PUSHQ $0 // arg size // \u65b0\u5efa\u4e00\u4e2a goroutine\uff0c\u8be5 goroutine \u7ed1\u5b9a runtime.main\uff0c\u653e\u5728 P \u7684\u672c\u5730\u961f\u5217\uff0c\u7b49\u5f85\u8c03\u5ea6 CALL runtime\u00b7newproc(SB) POPQ AX POPQ AX // \u542f\u52a8M\uff0c\u5f00\u59cb\u8c03\u5ea6goroutine CALL runtime\u00b7mstart(SB) MOVL $0xf1, 0xf1 // crash RET DATA runtime\u00b7mainPC+0(SB)/8,$runtime\u00b7main(SB) GLOBL runtime\u00b7mainPC(SB),RODATA,$8 \u603b\u7ed3\u4e0b\uff1a \u68c0\u67e5\u8fd0\u884c\u5e73\u53f0\u7684CPU\uff0c\u8bbe\u7f6e\u597d\u7a0b\u5e8f\u8fd0\u884c\u9700\u8981\u76f8\u5173\u6807\u5fd7\u3002 TLS\u7684\u521d\u59cb\u5316\u3002 runtime.args\u3001runtime.osinit\u3001runtime.schedinit \u4e09\u4e2a\u65b9\u6cd5\u505a\u597d\u7a0b\u5e8f\u8fd0\u884c\u9700\u8981\u7684\u5404\u79cd\u53d8\u91cf\u4e0e\u8c03\u5ea6\u5668\u3002 runtime.newproc\u521b\u5efa\u65b0\u7684goroutine\u7528\u4e8e\u7ed1\u5b9a\u7528\u6237\u5199\u7684main\u65b9\u6cd5\u3002 runtime.mstart\u5f00\u59cbgoroutine\u7684\u8c03\u5ea6\u3002 \u6700\u540e\u7528\u4e00\u5f20\u56fe\u6765\u603b\u7ed3 go bootstrap \u8fc7\u7a0b\u5427\uff1a main \u51fd\u6570\u91cc\u6267\u884c\u7684\u4e00\u4e9b\u91cd\u8981\u7684\u64cd\u4f5c\u5305\u62ec\uff1a\u65b0\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c sysmon \u51fd\u6570\uff0c\u5b9a\u671f\u5783\u573e\u56de\u6536\u548c\u8c03\u5ea6\u62a2\u5360\uff1b\u542f\u52a8 gc\uff1b\u6267\u884c\u6240\u6709\u7684 init \u51fd\u6570\u7b49\u7b49\u3002 \u4e0a\u9762\u662f\u542f\u52a8\u8fc7\u7a0b\uff0c\u770b\u4e00\u4e0b\u9000\u51fa\u8fc7\u7a0b\uff1a \u5f53 main \u51fd\u6570\u6267\u884c\u7ed3\u675f\u4e4b\u540e\uff0c\u4f1a\u6267\u884c exit(0) \u6765\u9000\u51fa\u8fdb\u7a0b\u3002\u82e5\u6267\u884c exit(0) \u540e\uff0c\u8fdb\u7a0b\u6ca1\u6709\u9000\u51fa\uff0cmain \u51fd\u6570\u6700\u540e\u7684\u4ee3\u7801\u4f1a\u4e00\u76f4\u8bbf\u95ee\u975e\u6cd5\u5730\u5740\uff1a exit(0) for { var x *int32 *x = 0 } \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e00\u65e6\u51fa\u73b0\u975e\u6cd5\u5730\u5740\u8bbf\u95ee\uff0c\u7cfb\u7edf\u4f1a\u628a\u8fdb\u7a0b\u6740\u6b7b\uff0c\u7528\u8fd9\u6837\u7684\u65b9\u6cd5\u786e\u4fdd\u8fdb\u7a0b\u9000\u51fa\u3002 \u5f53\u7136 Go \u7a0b\u5e8f\u542f\u52a8\u8fd9\u4e00\u90e8\u5206\u5176\u5b9e\u8fd8\u4f1a\u6d89\u53ca\u5230 fork \u4e00\u4e2a\u65b0\u8fdb\u7a0b\u3001\u88c5\u8f7d\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u63a7\u5236\u6743\u8f6c\u79fb\u7b49\u95ee\u9898\u3002\u8fd8\u662f\u63a8\u8350\u770b\u524d\u9762\u7684\u4e24\u672c\u4e66\uff0c\u6211\u89c9\u5f97\u6211\u4e0d\u4f1a\u5199\u5f97\u66f4\u597d\uff0c\u5c31\u4e0d\u53d9\u8ff0\u4e86\u3002 GoRoot \u548c GoPath GoRoot \u662f Go \u7684\u5b89\u88c5\u8def\u5f84\u3002mac \u6216 unix \u662f\u5728 /usr/local/go \u8def\u5f84\u4e0a\uff0c\u6765\u770b\u4e0b\u8fd9\u91cc\u90fd\u88c5\u4e86\u4e9b\u4ec0\u4e48\uff1a bin \u76ee\u5f55\u4e0b\u9762\uff1a pkg \u76ee\u5f55\u4e0b\u9762\uff1a Go \u5de5\u5177\u76ee\u5f55\u5982\u4e0b\uff0c\u5176\u4e2d\u6bd4\u8f83\u91cd\u8981\u7684\u6709\u7f16\u8bd1\u5668 compile \uff0c\u94fe\u63a5\u5668 link \uff1a GoPath \u7684\u4f5c\u7528\u5728\u4e8e\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u5bfb\u627e .go \u6e90\u7801\u7684\u8def\u5f84\uff0c\u5b83\u662f\u4e00\u4e2a\u5de5\u4f5c\u7a7a\u95f4\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u591a\u4e2a\u76ee\u5f55\u3002Go \u5b98\u65b9\u8981\u6c42\uff0cGoPath \u4e0b\u9762\u9700\u8981\u5305\u542b\u4e09\u4e2a\u6587\u4ef6\u5939\uff1a src pkg bin src \u5b58\u653e\u6e90\u6587\u4ef6\uff0cpkg \u5b58\u653e\u6e90\u6587\u4ef6\u7f16\u8bd1\u540e\u7684\u5e93\u6587\u4ef6\uff0c\u540e\u7f00\u4e3a .a \uff1bbin \u5219\u5b58\u653e\u53ef\u6267\u884c\u6587\u4ef6\u3002 Go \u547d\u4ee4\u8be6\u89e3 \u76f4\u63a5\u5728\u7ec8\u7aef\u6267\u884c\uff1a go \u5c31\u80fd\u5f97\u5230\u548c go \u76f8\u5173\u7684\u547d\u4ee4\u7b80\u4ecb\uff1a \u548c\u7f16\u8bd1\u76f8\u5173\u7684\u547d\u4ee4\u4e3b\u8981\u662f\uff1a go build go install go run go build go build \u7528\u6765\u7f16\u8bd1\u6307\u5b9a packages \u91cc\u7684\u6e90\u7801\u6587\u4ef6\u4ee5\u53ca\u5b83\u4eec\u7684\u4f9d\u8d56\u5305\uff0c\u7f16\u8bd1\u7684\u65f6\u5019\u4f1a\u5230 $GoPath/src/package \u8def\u5f84\u4e0b\u5bfb\u627e\u6e90\u7801\u6587\u4ef6\u3002 go build \u8fd8\u53ef\u4ee5\u76f4\u63a5\u7f16\u8bd1\u6307\u5b9a\u7684\u6e90\u7801\u6587\u4ef6\uff0c\u5e76\u4e14\u53ef\u4ee5\u540c\u65f6\u6307\u5b9a\u591a\u4e2a\u3002 \u901a\u8fc7\u6267\u884c go help build \u547d\u4ee4\u5f97\u5230 go build \u7684\u4f7f\u7528\u65b9\u6cd5\uff1a usage: go build [-o output] [-i] [build flags] [packages] -o \u53ea\u80fd\u5728\u7f16\u8bd1\u5355\u4e2a\u5305\u7684\u65f6\u5019\u51fa\u73b0\uff0c\u5b83\u6307\u5b9a\u8f93\u51fa\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u540d\u5b57\u3002 -i \u4f1a\u5b89\u88c5\u7f16\u8bd1\u76ee\u6807\u6240\u4f9d\u8d56\u7684\u5305\uff0c\u5b89\u88c5\u662f\u6307\u751f\u6210\u4e0e\u4ee3\u7801\u5305\u76f8\u5bf9\u5e94\u7684 .a \u6587\u4ef6\uff0c\u5373\u9759\u6001\u5e93\u6587\u4ef6\uff08\u540e\u9762\u8981\u53c2\u4e0e\u94fe\u63a5\uff09\uff0c\u5e76\u4e14\u653e\u7f6e\u5230\u5f53\u524d\u5de5\u4f5c\u533a\u7684 pkg \u76ee\u5f55\u4e0b\uff0c\u4e14\u5e93\u6587\u4ef6\u7684\u76ee\u5f55\u5c42\u7ea7\u548c\u6e90\u7801\u5c42\u7ea7\u4e00\u81f4\u3002 \u81f3\u4e8e build flags \u53c2\u6570\uff0c build,clean,get,install,list,run,test \u8fd9\u4e9b\u547d\u4ee4\u4f1a\u5171\u7528\u4e00\u5957\uff1a \u53c2\u6570 \u4f5c\u7528 -a \u5f3a\u5236\u91cd\u65b0\u7f16\u8bd1\u6240\u6709\u6d89\u53ca\u5230\u7684\u5305\uff0c\u5305\u62ec\u6807\u51c6\u5e93\u4e2d\u7684\u4ee3\u7801\u5305\uff0c\u8fd9\u4f1a\u91cd\u5199 /usr/local/go \u76ee\u5f55\u4e0b\u7684 .a \u6587\u4ef6 -n \u6253\u5370\u547d\u4ee4\u6267\u884c\u8fc7\u7a0b\uff0c\u4e0d\u771f\u6b63\u6267\u884c -p n \u6307\u5b9a\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u547d\u4ee4\u6267\u884c\u7684\u5e76\u884c\u6570\uff0cn \u9ed8\u8ba4\u4e3a CPU \u6838\u6570 -race \u68c0\u6d4b\u5e76\u62a5\u544a\u7a0b\u5e8f\u4e2d\u7684\u6570\u636e\u7ade\u4e89\u95ee\u9898 -v \u6253\u5370\u547d\u4ee4\u6267\u884c\u8fc7\u7a0b\u4e2d\u6240\u6d89\u53ca\u5230\u7684\u4ee3\u7801\u5305\u540d\u79f0 -x \u6253\u5370\u547d\u4ee4\u6267\u884c\u8fc7\u7a0b\u4e2d\u6240\u6d89\u53ca\u5230\u7684\u547d\u4ee4\uff0c\u5e76\u6267\u884c -work \u6253\u5370\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u7684\u4e34\u65f6\u6587\u4ef6\u5939\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u88ab\u5220\u9664 \u6211\u4eec\u77e5\u9053\uff0cGo \u8bed\u8a00\u7684\u6e90\u7801\u6587\u4ef6\u5206\u4e3a\u4e09\u7c7b\uff1a\u547d\u4ee4\u6e90\u7801\u3001\u5e93\u6e90\u7801\u3001\u6d4b\u8bd5\u6e90\u7801\u3002 \u547d\u4ee4\u6e90\u7801\u6587\u4ef6\uff1a\u662f Go \u7a0b\u5e8f\u7684\u5165\u53e3\uff0c\u5305\u542b func main() \u51fd\u6570\uff0c\u4e14\u7b2c\u4e00\u884c\u7528 packagemain \u58f0\u660e\u5c5e\u4e8e main \u5305\u3002 \u5e93\u6e90\u7801\u6587\u4ef6\uff1a\u4e3b\u8981\u662f\u5404\u79cd\u51fd\u6570\u3001\u63a5\u53e3\u7b49\uff0c\u4f8b\u5982\u5de5\u5177\u7c7b\u7684\u51fd\u6570\u3002 \u6d4b\u8bd5\u6e90\u7801\u6587\u4ef6\uff1a\u4ee5 _test.go \u4e3a\u540e\u7f00\u7684\u6587\u4ef6\uff0c\u7528\u4e8e\u6d4b\u8bd5\u7a0b\u5e8f\u7684\u529f\u80fd\u548c\u6027\u80fd\u3002 \u6ce8\u610f\uff0c go build \u4f1a\u5ffd\u7565 *_test.go \u6587\u4ef6\u3002 \u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u6f14\u793a go build \u547d\u4ee4\u3002\u6211\u7528 Goland \u65b0\u5efa\u4e86\u4e00\u4e2a hello-world \u9879\u76ee\uff08\u4e3a\u4e86\u5c55\u793a\u5f15\u7528\u81ea\u5b9a\u4e49\u7684\u5305\uff0c\u548c\u4e4b\u524d\u7684 hello-world \u7a0b\u5e8f\u4e0d\u540c\uff09\uff0c\u9879\u76ee\u7684\u7ed3\u6784\u5982\u4e0b\uff1a \u6700\u5de6\u8fb9\u53ef\u4ee5\u770b\u5230\u9879\u76ee\u7684\u7ed3\u6784\uff0c\u5305\u542b\u4e09\u4e2a\u6587\u4ef6\u5939\uff1abin\uff0cpkg\uff0csrc\u3002\u5176\u4e2d src \u76ee\u5f55\u4e0b\u6709\u4e00\u4e2a main.go\uff0c\u91cc\u9762\u5b9a\u4e49\u4e86 main \u51fd\u6570\uff0c\u662f\u6574\u4e2a\u9879\u76ee\u7684\u5165\u53e3\uff0c\u4e5f\u5c31\u662f\u524d\u9762\u63d0\u8fc7\u7684\u6240\u8c13\u7684\u547d\u4ee4\u6e90\u7801\u6587\u4ef6\uff1bsrc \u76ee\u5f55\u4e0b\u8fd8\u6709\u4e00\u4e2a util \u76ee\u5f55\uff0c\u91cc\u9762\u6709 util.go \u6587\u4ef6\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53ef\u4ee5\u83b7\u53d6\u672c\u673a IP \u5730\u5740\u7684\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684\u5e93\u6e90\u7801\u6587\u4ef6\u3002 \u4e2d\u95f4\u662f main.go \u7684\u6e90\u7801\uff0c\u5f15\u7528\u4e86\u4e24\u4e2a\u5305\uff0c\u4e00\u4e2a\u662f\u6807\u51c6\u5e93\u7684 fmt\uff1b\u4e00\u4e2a\u662f util \u5305\uff0cutil \u7684\u5bfc\u5165\u8def\u5f84\u662f util \u3002\u6240\u8c13\u7684\u5bfc\u5165\u8def\u5f84\u662f\u6307\u76f8\u5bf9\u4e8e Go \u7684\u6e90\u7801\u76ee\u5f55 $GoRoot/src \u6216\u8005 $GoPath/src \u7684\u4e0b\u7684\u5b50\u8def\u5f84\u3002\u4f8b\u5982 main \u5305\u91cc\u5f15\u7528\u7684 fmt \u7684\u6e90\u7801\u8def\u5f84\u662f /usr/local/go/src/fmt \uff0c\u800c util \u7684\u6e90\u7801\u8def\u5f84\u662f /Users/qcrao/hello-world/src/util \uff0c\u6b63\u597d\u6211\u4eec\u8bbe\u7f6e\u7684 GoPath = /Users/qcrao/hello-world\u3002 \u6700\u53f3\u8fb9\u662f\u5e93\u51fd\u6570\u7684\u6e90\u7801\uff0c\u5b9e\u73b0\u4e86\u83b7\u53d6\u672c\u673a IP \u7684\u51fd\u6570\u3002 \u5728 src \u76ee\u5f55\u4e0b\uff0c\u76f4\u63a5\u6267\u884c go build \u547d\u4ee4\uff0c\u5728\u540c\u7ea7\u76ee\u5f55\u751f\u6210\u4e86\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u4e3a src \uff0c\u4f7f\u7528 ./src \u547d\u4ee4\u76f4\u63a5\u6267\u884c\uff0c\u8f93\u51fa\uff1a hello world! Local IP: 192.168.1.3 \u6211\u4eec\u4e5f\u53ef\u4ee5\u6307\u5b9a\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u540d\u79f0\uff1a go build -o bin/hello \u8fd9\u6837\uff0c\u5728 bin \u76ee\u5f55\u4e0b\u4f1a\u751f\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8fd0\u884c\u7ed3\u679c\u548c\u4e0a\u9762\u7684 src \u4e00\u6837\u3002 \u5176\u5b9e\uff0cutil \u5305\u53ef\u4ee5\u5355\u72ec\u88ab\u7f16\u8bd1\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6267\u884c\uff1a go build util \u7f16\u8bd1\u7a0b\u5e8f\u4f1a\u53bb $GoPath/src \u8def\u5f84\u627e util \u5305\uff08\u5176\u5b9e\u662f\u627e\u6587\u4ef6\u5939\uff09\u3002\u8fd8\u53ef\u4ee5\u5728 ./src/util \u76ee\u5f55\u4e0b\u76f4\u63a5\u6267\u884c go build \u7f16\u8bd1\u3002 \u5f53\u7136\uff0c\u76f4\u63a5\u7f16\u8bd1\u5e93\u6e90\u7801\u6587\u4ef6\u4e0d\u4f1a\u751f\u6210 .a \u6587\u4ef6\uff0c\u56e0\u4e3a\uff1a go build \u547d\u4ee4\u5728\u7f16\u8bd1\u53ea\u5305\u542b\u5e93\u6e90\u7801\u6587\u4ef6\u7684\u4ee3\u7801\u5305\uff08\u6216\u8005\u540c\u65f6\u7f16\u8bd1\u591a\u4e2a\u4ee3\u7801\u5305\uff09\u65f6\uff0c\u53ea\u4f1a\u505a\u68c0\u67e5\u6027\u7684\u7f16\u8bd1\uff0c\u800c\u4e0d\u4f1a\u8f93\u51fa\u4efb\u4f55\u7ed3\u679c\u6587\u4ef6\u3002 \u4e3a\u4e86\u5c55\u793a\u6574\u4e2a\u7f16\u8bd1\u94fe\u63a5\u7684\u8fd0\u884c\u8fc7\u7a0b\uff0c\u6211\u4eec\u5728\u9879\u76ee\u6839\u76ee\u5f55\u6267\u884c\u5982\u4e0b\u7684\u547d\u4ee4\uff1a go build -v -x -work -o bin/hello src/main.go -v \u4f1a\u6253\u5370\u6240\u7f16\u8bd1\u8fc7\u7684\u5305\u540d\u5b57\uff0c -x \u6253\u5370\u7f16\u8bd1\u671f\u95f4\u6240\u6267\u884c\u7684\u547d\u4ee4\uff0c -work \u6253\u5370\u7f16\u8bd1\u671f\u95f4\u751f\u6210\u7684\u4e34\u65f6\u6587\u4ef6\u8def\u5f84\uff0c\u5e76\u4e14\u7f16\u8bd1\u5b8c\u6210\u4e4b\u540e\u4e0d\u4f1a\u88ab\u5220\u9664\u3002 \u6267\u884c\u7ed3\u679c\uff1a \u4ece\u7ed3\u679c\u6765\u770b\uff0c\u56fe\u4e2d\u7528\u7bad\u5934\u6807\u6ce8\u4e86\u672c\u6b21\u7f16\u8bd1\u8fc7\u7a0b\u6d89\u53ca 2 \u4e2a\u5305\uff1autil\uff0ccommand-line-arguments\u3002\u7b2c\u4e8c\u4e2a\u5305\u6bd4\u8f83\u8be1\u5f02\uff0c\u6e90\u7801\u91cc\u6839\u672c\u5c31\u6ca1\u6709\u8fd9\u4e2a\u540d\u5b57\u597d\u5417\uff1f\u5176\u5b9e\u8fd9\u662f go build \u547d\u4ee4\u68c0\u6d4b\u5230 [packages] \u5904\u586b\u7684\u662f\u4e00\u4e2a .go \u6587\u4ef6\uff0c\u56e0\u6b64\u521b\u5efa\u4e86\u4e00\u4e2a\u865a\u62df\u7684\u5305\uff1acommand-line-arguments\u3002 \u540c\u65f6\uff0c\u7528\u7ea2\u6846\u5708\u51fa\u4e86 compile, link\uff0c\u4e5f\u5c31\u662f\u5148\u7f16\u8bd1\u4e86 util \u5305\u548c main.go \u6587\u4ef6\uff0c\u5206\u522b\u5f97\u5230 .a \u6587\u4ef6\uff0c\u4e4b\u540e\u5c06\u4e24\u8005\u8fdb\u884c\u94fe\u63a5\uff0c\u6700\u7ec8\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e76\u4e14\u79fb\u52a8\u5230 bin \u76ee\u5f55\u4e0b\uff0c\u6539\u540d\u4e3a hello\u3002 \u53e6\u5916\uff0c\u7b2c\u4e00\u884c\u663e\u793a\u4e86\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u6b64\u76ee\u5f55\u7684\u6587\u4ef6\u7ed3\u6784\u662f\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u548c hello-world \u76ee\u5f55\u7684\u5c42\u7ea7\u57fa\u672c\u4e00\u81f4\u3002command-line-arguments \u5c31\u662f\u865a\u62df\u7684 main.go \u6587\u4ef6\u6240\u5904\u7684\u5305\u3002exe \u76ee\u5f55\u4e0b\u7684\u53ef\u6267\u884c\u6587\u4ef6\u5728\u6700\u540e\u4e00\u6b65\u88ab\u79fb\u52a8\u5230\u4e86 bin \u76ee\u5f55\u4e0b\uff0c\u6240\u4ee5\u8fd9\u91cc\u662f\u7a7a\u7684\u3002 \u6574\u4f53\u6765\u770b\uff0c go build \u5728\u6267\u884c\u65f6\uff0c\u4f1a\u5148\u9012\u5f52\u5bfb\u627e main.go \u6240\u4f9d\u8d56\u7684\u5305\uff0c\u4ee5\u53ca\u4f9d\u8d56\u7684\u4f9d\u8d56\uff0c\u76f4\u81f3\u6700\u5e95\u5c42\u7684\u5305\u3002\u8fd9\u91cc\u53ef\u4ee5\u662f\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u4e5f\u53ef\u4ee5\u662f\u5bbd\u5ea6\u4f18\u5148\u904d\u5386\u3002\u5982\u679c\u53d1\u73b0\u6709\u5faa\u73af\u4f9d\u8d56\uff0c\u5c31\u4f1a\u76f4\u63a5\u9000\u51fa\uff0c\u8fd9\u4e5f\u662f\u7ecf\u5e38\u4f1a\u53d1\u751f\u7684\u5faa\u73af\u5f15\u7528\u7f16\u8bd1\u9519\u8bef\u3002 \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u4f9d\u8d56\u5173\u7cfb\u4f1a\u5f62\u6210\u4e00\u68f5\u5012\u7740\u751f\u957f\u7684\u6811\uff0c\u6811\u6839\u5728\u6700\u4e0a\u9762\uff0c\u5c31\u662f main.go \u6587\u4ef6\uff0c\u6700\u4e0b\u9762\u662f\u6ca1\u6709\u4efb\u4f55\u5176\u4ed6\u4f9d\u8d56\u7684\u5305\u3002\u7f16\u8bd1\u5668\u4f1a\u4ece\u6700\u5de6\u7684\u8282\u70b9\u6240\u4ee3\u8868\u7684\u5305\u5f00\u59cb\u6328\u4e2a\u7f16\u8bd1\uff0c\u5b8c\u6210\u4e4b\u540e\uff0c\u518d\u53bb\u7f16\u8bd1\u4e0a\u4e00\u5c42\u7684\u5305\u3002 \u8fd9\u91cc\uff0c\u5f15\u7528\u90dd\u6797\u8001\u5e08\u51e0\u5e74\u524d\u5728 github \u4e0a\u53d1\u8868\u7684 go \u547d\u4ee4\u6559\u7a0b\uff0c\u53ef\u4ee5\u4ece\u53c2\u8003\u8d44\u6599\u627e\u5230\u539f\u6587\u5730\u5740\u3002 \u4ece\u4ee3\u7801\u5305\u7f16\u8bd1\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u5982\u679c\u4ee3\u7801\u5305 A \u4f9d\u8d56\u4ee3\u7801\u5305 B\uff0c\u5219\u79f0\u4ee3\u7801\u5305 B \u662f\u4ee3\u7801\u5305 A \u7684\u4f9d\u8d56\u4ee3\u7801\u5305\uff08\u4ee5\u4e0b\u7b80\u79f0\u4f9d\u8d56\u5305\uff09\uff0c\u4ee3\u7801\u5305 A \u662f\u4ee3\u7801\u5305 B \u7684\u89e6\u53d1\u4ee3\u7801\u5305\uff08\u4ee5\u4e0b\u7b80\u79f0\u89e6\u53d1\u5305\uff09\u3002 \u6267\u884c go build \u547d\u4ee4\u7684\u8ba1\u7b97\u673a\u5982\u679c\u62e5\u6709\u591a\u4e2a\u903b\u8f91 CPU \u6838\u5fc3\uff0c\u90a3\u4e48\u7f16\u8bd1\u4ee3\u7801\u5305\u7684\u987a\u5e8f\u53ef\u80fd\u4f1a\u5b58\u5728\u4e00\u4e9b\u4e0d\u786e\u5b9a\u6027\u3002\u4f46\u662f\uff0c\u5b83\u4e00\u5b9a\u4f1a\u6ee1\u8db3\u8fd9\u6837\u7684\u7ea6\u675f\u6761\u4ef6\uff1a\u4f9d\u8d56\u4ee3\u7801\u5305 -> \u5f53\u524d\u4ee3\u7801\u5305 -> \u89e6\u53d1\u4ee3\u7801\u5305\u3002 \u5230\u8fd9\u91cc\uff0c\u4f60\u4e00\u5b9a\u4f1a\u53d1\u73b0\uff0c\u5bf9\u4e8e hello-wrold \u6587\u4ef6\u5939\u4e0b\u7684 pkg \u76ee\u5f55\u597d\u50cf\u4e00\u76f4\u6ca1\u6709\u6d89\u53ca\u5230\u3002 \u5176\u5b9e\uff0cpkg \u76ee\u5f55\u4e0b\u9762\u5e94\u8be5\u5b58\u653e\u7684\u662f\u6d89\u53ca\u5230\u7684\u5e93\u6587\u4ef6\u7f16\u8bd1\u540e\u7684\u5305\uff0c\u4e5f\u5c31\u662f\u4e00\u4e9b .a \u6587\u4ef6\u3002\u4f46\u662f go build \u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e9b .a \u6587\u4ef6\u653e\u5728\u4e34\u65f6\u6587\u4ef6\u5939\u4e2d\uff0c\u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u88ab\u76f4\u63a5\u5220\u6389\uff0c\u56e0\u6b64\u4e00\u822c\u4e0d\u4f1a\u7528\u5230\u3002 \u524d\u9762\u6211\u4eec\u63d0\u5230\u8fc7\uff0c\u5728 go build \u547d\u4ee4\u91cc\u52a0\u4e0a -i \u53c2\u6570\u4f1a\u5b89\u88c5\u8fd9\u4e9b\u5e93\u6587\u4ef6\u7f16\u8bd1\u7684\u5305\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e9b .a \u6587\u4ef6\u4f1a\u653e\u5230 pkg \u76ee\u5f55\u4e0b\u3002 \u5728\u9879\u76ee\u6839\u76ee\u5f55\u6267\u884c go build-i src/main.go \u540e\uff0cpkg \u76ee\u5f55\u91cc\u589e\u52a0\u4e86 util.a \u6587\u4ef6\uff1a darwin_amd64 \u8868\u793a\u7684\u662f\uff1a GOOS \u548c GOARCH\u3002\u8fd9\u4e24\u4e2a\u73af\u5883\u53d8\u91cf\u4e0d\u7528\u6211\u4eec\u8bbe\u7f6e\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u7684\u3002 GOOS \u662f Go \u6240\u5728\u7684\u64cd\u4f5c\u7cfb\u7edf\u7c7b\u578b\uff0cGOARCH \u662f Go \u6240\u5728\u7684\u8ba1\u7b97\u67b6\u6784\u3002 Mac \u5e73\u53f0\u4e0a\u8fd9\u4e2a\u76ee\u5f55\u540d\u5c31\u662f darwin_amd64\u3002 \u751f\u6210\u4e86 util.a \u6587\u4ef6\u540e\uff0c\u518d\u6b21\u7f16\u8bd1\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u4f1a\u518d\u91cd\u65b0\u7f16\u8bd1 util.go \u6587\u4ef6\uff0c\u52a0\u5feb\u4e86\u7f16\u8bd1\u901f\u5ea6\u3002 \u540c\u65f6\uff0c\u5728\u6839\u76ee\u5f55\u4e0b\u751f\u6210\u4e86\u540d\u79f0\u4e3a main \u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8fd9\u662f\u4ee5 main.go \u7684\u6587\u4ef6\u540d\u547d\u4ee4\u7684\u3002 hello-world \u8fd9\u4e2a\u9879\u76ee\u7684\u4ee3\u7801\u5df2\u7ecf\u4e0a\u4f20\u5230\u4e86 github \u9879\u76ee Go-Questions \uff0c\u8fd9\u4e2a\u9879\u76ee\u7531\u95ee\u9898\u5bfc\u5165\uff0c\u4f01\u56fe\u4e32\u8fde Go \u7684\u6240\u6709\u77e5\u8bc6\u70b9\uff0c\u6b63\u5728\u5b8c\u5584\uff0c\u671f\u5f85\u4f60\u7684 star\u3002\u5730\u5740\u89c1\u53c2\u8003\u8d44\u6599\u3010Go-Questions hello-world\u9879\u76ee\u3011\u3002 go install go install \u7528\u4e8e\u7f16\u8bd1\u5e76\u5b89\u88c5\u6307\u5b9a\u7684\u4ee3\u7801\u5305\u53ca\u5b83\u4eec\u7684\u4f9d\u8d56\u5305\u3002\u76f8\u6bd4 go build \uff0c\u5b83\u53ea\u662f\u591a\u4e86\u4e00\u4e2a\u201c\u5b89\u88c5\u7f16\u8bd1\u540e\u7684\u7ed3\u679c\u6587\u4ef6\u5230\u6307\u5b9a\u76ee\u5f55\u201d\u7684\u6b65\u9aa4\u3002 \u8fd8\u662f\u4f7f\u7528\u4e4b\u524d hello-world \u9879\u76ee\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u5148\u5c06 pkg \u76ee\u5f55\u5220\u6389\uff0c\u5728\u9879\u76ee\u6839\u76ee\u5f55\u6267\u884c\uff1a go install src/main.go \u6216\u8005 go install util \u4e24\u8005\u90fd\u4f1a\u5728\u6839\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2a pkg \u76ee\u5f55\uff0c\u5e76\u4e14\u751f\u6210\u4e00\u4e2a util.a \u6587\u4ef6\u3002 \u5e76\u4e14\uff0c\u5728\u6267\u884c\u524d\u8005\u7684\u65f6\u5019\uff0c\u4f1a\u5728 GOBIN \u76ee\u5f55\u4e0b\u751f\u6210\u540d\u4e3a main \u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u6240\u4ee5\uff0c\u8fd0\u884c go install \u547d\u4ee4\uff0c\u5e93\u6e90\u7801\u5305\u5bf9\u5e94\u7684 .a \u6587\u4ef6\u4f1a\u88ab\u653e\u7f6e\u5230 pkg \u76ee\u5f55\u4e0b\uff0c\u547d\u4ee4\u6e90\u7801\u5305\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4f1a\u88ab\u653e\u5230 GOBIN \u76ee\u5f55\u3002 go install \u5728 GoPath \u6709\u591a\u4e2a\u76ee\u5f55\u7684\u65f6\u5019\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e9b\u95ee\u9898\uff0c\u5177\u4f53\u53ef\u4ee5\u53bb\u770b\u90dd\u6797\u8001\u5e08\u7684 Go\u547d\u4ee4\u6559\u7a0b \uff0c\u8fd9\u91cc\u4e0d\u5c55\u5f00\u4e86\u3002 go run go run \u7528\u4e8e\u7f16\u8bd1\u5e76\u8fd0\u884c\u547d\u4ee4\u6e90\u7801\u6587\u4ef6\u3002 \u5728 hello-world \u9879\u76ee\u7684\u6839\u76ee\u5f55\uff0c\u6267\u884c go run \u547d\u4ee4\uff1a go run -x -work src/main.go -x \u53ef\u4ee5\u6253\u5370\u6574\u4e2a\u8fc7\u7a0b\u6d89\u53ca\u5230\u7684\u547d\u4ee4\uff0c-work \u53ef\u4ee5\u770b\u5230\u4e34\u65f6\u7684\u5de5\u4f5c\u76ee\u5f55\uff1a \u4ece\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u4ecd\u7136\u662f\u5148\u7f16\u8bd1\uff0c\u518d\u8fde\u63a5\uff0c\u6700\u540e\u76f4\u63a5\u6267\u884c\uff0c\u5e76\u6253\u5370\u51fa\u4e86\u6267\u884c\u7ed3\u679c\u3002 \u7b2c\u4e00\u884c\u6253\u5370\u7684\u5c31\u662f\u5de5\u4f5c\u76ee\u5f55\uff0c\u6700\u7ec8\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u5c31\u662f\u653e\u7f6e\u4e8e\u6b64\uff1a main \u5c31\u662f\u6700\u7ec8\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u603b\u7ed3 \u8fd9\u6b21\u7684\u8bdd\u9898\u592a\u5927\u4e86\uff0c\u56f0\u96be\u91cd\u91cd\u3002\u4ece\u7f16\u8bd1\u539f\u7406\u5230 go \u542f\u52a8\u65f6\u7684\u6d41\u7a0b\uff0c\u5230 go \u547d\u4ee4\u539f\u7406\uff0c\u6bcf\u4e2a\u8bdd\u9898\u5355\u72ec\u62bd\u51fa\u6765\u90fd\u53ef\u4ee5\u5199\u5f88\u591a\u3002 \u5e78\u597d\u6709\u4e00\u4e9b\u5f88\u4e0d\u9519\u7684\u4e66\u548c\u535a\u5ba2\u6587\u7ae0\u53ef\u4ee5\u53bb\u53c2\u8003\u3002\u8fd9\u7bc7\u6587\u7ae0\u5c31\u4f5c\u4e3a\u4e00\u4e2a\u5f15\u5b50\uff0c\u4f60\u53ef\u4ee5\u8ddf\u968f\u53c2\u8003\u8d44\u6599\u91cc\u63a8\u8350\u7684\u4e00\u4e9b\u5185\u5bb9\u53bb\u53d1\u6563\u3002","title":"Go \u7a0b\u5e8f\u662f\u600e\u6837\u8dd1\u8d77\u6765\u7684"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/#go","text":"","title":"Go \u7a0b\u5e8f\u662f\u600e\u6837\u8dd1\u8d77\u6765\u7684"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/#_1","text":"\u6211\u4eec\u4ece\u4e00\u4e2a helloworld \u7684\u4f8b\u5b50\u5f00\u59cb package main import \"fmt\" func main() { fmt.Println(\"hello world\") } \u7528 vim \u8981\u6253\u5f00\uff0c\u8f93\u5165\u547d\u4ee4\uff1a :%!xxd \u4e0b\u9762\u662f\u8f93\u51fa 00000000:7061 636b 6167 6520 6d61 696e 0a0a 696d package main.. im 00000010:706f 7274 2022 666d 7422 0a0a 6675 6e63 port \"fmt\".. func 00000020:206d 6169 6e28 2920 7b0a 2020 2020 666d main(){. fm 00000030:742e 5072 696e 746c 6e28 2268 656c 6c6f t. Println(\"hello 00000040:2077 6f72 6c64 2229 0a7d 0a world\").} \u548c ascii \u4e00\u5bf9\u6bd4\uff0c\u5c31\u80fd\u53d1\u73b0\uff0c\u4e2d\u95f4\u7684\u5217\u548c\u6700\u53f3\u8fb9\u7684\u4e00\u4e00\u5bf9\u5e94\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u521a\u5199\u5b8c\u7684 hello.go \u662f\u7531ascii\u5b57\u7b26\u8868\u793a\u7684\u3002\u88ab\u79f0\u4e3a\u6587\u672c\u6587\u4ef6\u3002 go\u7a0b\u5e8f\u5e76\u4e0d\u80fd\u76f4\u63a5\u8fd0\u884c\uff0c\u6bcf\u6761 go \u8bed\u53e5\u5fc5\u987b\u8f6c\u6362\u4e3a\u4e00\u7cfb\u5217\u7684\u4f4e\u7ea7\u673a\u5668\u8bed\u8a00\u6307\u4ee4\uff0c\u5c06\u8fd9\u4e9b\u6307\u4ee4 \u6253\u5305\u5230\u4e00\u8d77\uff0c\u5e76\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\uff0c\u4e5f\u5c31\u662f\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u4ece\u6e90\u6587\u4ef6\u5230\u53ef\u6267\u884c\u76ee\u6807\u6587\u4ef6\u7684\u8f6c\u5316\u8fc7\u7a0b\uff1a \u5b8c\u6210\u4ee5\u4e0a\u5404\u4e2a\u9636\u6bb5\u7684\u5c31\u662f go \u7f16\u8bd1\u7cfb\u7edf\u3002\u4f60\u80af\u5b9a\u542c\u8fc7 GCC\uff0c\u5b83\u652f\u6301 C/C++/JAVA/PYTHON/OBJECTIV-CAADA/FORTRAN/PASCAL\uff0c\u80fd\u591f\u4e3a\u5f88\u591a\u4e0d\u540c\u7684\u673a\u5668\u751f\u6210\u673a\u5668\u7801\u3002 \u53ef\u6267\u884c\u76ee\u6807\u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u5728\u673a\u5668\u4e0a\u6267\u884c\u3002\u4e00\u822c\u800c\u8a00\uff0c \u5148\u6267\u884c\u4e00\u4e9b\u521d\u59cb\u5316\u7684\u5de5\u4f5c\uff1b \u627e\u5230main\u51fd\u6570\u7684\u5165\u53e3\uff0c\u6267\u884c\u7528\u6237\u5199\u7684\u4ee3\u7801\uff1b \u6267\u884c\u5b8c\u6210\u540e\uff0cmain \u51fd\u6570\u9000\u51fa\uff1b \u518d\u6267\u884c\u4e00\u4e9b\u6536\u5c3e\u7684\u5de5\u4f5c\uff0c\u6574\u4e2a\u8fc7\u7a0b\u5b8c\u6bd5\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u63a2\u7d22 \u7f16\u8bd1 \u548c \u8fd0\u884c \u7684\u8fc7\u7a0b","title":"\u5f15\u5165"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/#_2","text":"Go \u6e90\u7801\u91cc\u7684\u7f16\u8bd1\u5668\u6e90\u7801\u4f4d\u4e8e src/cmd/compile \u8def\u5f84\u4e0b\uff0c\u94fe\u63a5\u5668\u6e90\u7801\u4f4d\u4e8e src/cmd/link \u8def\u5f84\u4e0b\u3002","title":"\u7f16\u8bd1\u94fe\u63a5"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/#_3","text":"\u6211\u6bd4\u8f83\u559c\u6b22\u7528 IDE\uff08\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff09\u6765\u5199\u4ee3\u7801\uff0c Go \u6e90\u7801\u7528\u7684 Goland\uff0c\u6709\u65f6\u5019\u76f4\u63a5\u70b9\u51fb IDE \u83dc\u5355\u680f\u91cc\u7684\u201c\u8fd0\u884c\u201d\u6309\u94ae\uff0c\u7a0b\u5e8f\u5c31\u8dd1\u8d77\u6765\u4e86\u3002\u8fd9\u5b9e\u9645\u4e0a\u9690\u542b\u4e86\u7f16\u8bd1\u548c\u94fe\u63a5\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u901a\u5e38\u5c06\u7f16\u8bd1\u548c\u94fe\u63a5\u5408\u5e76\u5230\u4e00\u8d77\u7684\u8fc7\u7a0b\u79f0\u4e3a\u6784\u5efa\uff08Build\uff09\u3002 \u7f16\u8bd1\u8fc7\u7a0b\u5c31\u662f\u5bf9\u6e90\u6587\u4ef6\u8fdb\u884c\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u3001\u4f18\u5316\uff0c\u6700\u540e\u751f\u6210\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6\uff0c\u4ee5 .s \u4f5c\u4e3a\u6587\u4ef6\u540e\u7f00\u3002 \u4e4b\u540e\uff0c\u6c47\u7f16\u5668\u4f1a\u5c06\u6c47\u7f16\u4ee3\u7801\u8f6c\u53d8\u6210\u673a\u5668\u53ef\u4ee5\u6267\u884c\u7684\u6307\u4ee4\u3002\u7531\u4e8e\u6bcf\u4e00\u6761\u6c47\u7f16\u8bed\u53e5\u51e0\u4e4e\u90fd\u4e0e\u4e00\u6761\u673a\u5668\u6307\u4ee4\u76f8\u5bf9\u5e94\uff0c\u6240\u4ee5\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4e00\u4e00\u5bf9\u5e94\uff0c\u6bd4\u8f83\u7b80\u5355\uff0c\u6ca1\u6709\u8bed\u6cd5\u3001\u8bed\u4e49\u5206\u6790\uff0c\u4e5f\u6ca1\u6709\u4f18\u5316\u8fd9\u4e9b\u6b65\u9aa4\u3002 \u7f16\u8bd1\u5668\u662f\u5c06\u9ad8\u7ea7\u8bed\u8a00\u7ffb\u8bd1\u6210\u673a\u5668\u8bed\u8a00\u7684\u4e00\u4e2a\u5de5\u5177\uff0c\u7f16\u8bd1\u8fc7\u7a0b\u4e00\u822c\u5206\u4e3a 6 \u6b65\uff1a\u626b\u63cf\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u3001\u6e90\u4ee3\u7801\u4f18\u5316\u3001\u4ee3\u7801\u751f\u6210\u3001\u76ee\u6807\u4ee3\u7801\u4f18\u5316\u3002\u4e0b\u56fe\u6765\u81ea\u300a\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b\u300b\uff1a","title":"\u7f16\u8bd1\u8fc7\u7a0b"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/#_4","text":"\u901a\u8fc7\u524d\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u77e5\u9053\uff0cGo \u7a0b\u5e8f\u6587\u4ef6\u5728\u673a\u5668\u770b\u6765\u4e0d\u8fc7\u662f\u4e00\u5806\u4e8c\u8fdb\u5236\u4f4d\u3002\u6211\u4eec\u80fd\u8bfb\u61c2\uff0c\u662f\u56e0\u4e3a Goland \u6309\u7167 ASCII \u7801\uff08\u5b9e\u9645\u4e0a\u662f UTF-8\uff09\u628a\u8fd9\u5806\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u4e86\u7f16\u7801\u3002\u4f8b\u5982\uff0c\u628a 8\u4e2a bit \u4f4d\u5206\u6210\u4e00\u7ec4\uff0c\u5bf9\u5e94\u4e00\u4e2a\u5b57\u7b26\uff0c\u901a\u8fc7\u5bf9\u7167 ASCII \u7801\u8868\u5c31\u53ef\u4ee5\u67e5\u51fa\u6765\u3002 \u5f53\u628a\u6240\u6709\u7684\u4e8c\u8fdb\u5236\u4f4d\u90fd\u5bf9\u5e94\u6210\u4e86 ASCII \u7801\u5b57\u7b26\u540e\uff0c\u6211\u4eec\u5c31\u80fd\u770b\u5230\u6709\u610f\u4e49\u7684\u5b57\u7b26\u4e32\u3002\u5b83\u53ef\u80fd\u662f\u5173\u952e\u5b57\uff0c\u4f8b\u5982\uff1apackage\uff1b\u53ef\u80fd\u662f\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\uff1a\u201cHello World\u201d\u3002 \u8bcd\u6cd5\u5206\u6790\u5176\u5b9e\u5e72\u7684\u5c31\u662f\u8fd9\u4e2a\u3002\u8f93\u5165\u662f\u539f\u59cb\u7684 Go \u7a0b\u5e8f\u6587\u4ef6\uff0c\u5728\u8bcd\u6cd5\u5206\u6790\u5668\u770b\u6765\uff0c\u5c31\u662f\u4e00\u5806\u4e8c\u8fdb\u5236\u4f4d\uff0c\u6839\u672c\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u4e1c\u897f\uff0c\u7ecf\u8fc7\u5b83\u7684\u5206\u6790\u540e\uff0c\u53d8\u6210\u6709\u610f\u4e49\u7684\u8bb0\u53f7\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u8bcd\u6cd5\u5206\u6790\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u5c06\u5b57\u7b26\u5e8f\u5217\u8f6c\u6362\u4e3a\u6807\u8bb0\uff08token\uff09\u5e8f\u5217\u7684\u8fc7\u7a0b\u3002 \u6211\u4eec\u6765\u770b\u4e00\u4e0b\u7ef4\u57fa\u767e\u79d1\u4e0a\u7ed9\u51fa\u7684\u5b9a\u4e49\uff1a \u8bcd\u6cd5\u5206\u6790\uff08lexical analysis\uff09\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u5c06\u5b57\u7b26\u5e8f\u5217\u8f6c\u6362\u4e3a\u6807\u8bb0\uff08token\uff09\u5e8f\u5217\u7684\u8fc7\u7a0b\u3002\u8fdb\u884c\u8bcd\u6cd5\u5206\u6790\u7684\u7a0b\u5e8f\u6216\u8005\u51fd\u6570\u53eb\u4f5c\u8bcd\u6cd5\u5206\u6790\u5668\uff08lexical analyzer\uff0c\u7b80\u79f0lexer\uff09\uff0c\u4e5f\u53eb\u626b\u63cf\u5668\uff08scanner\uff09\u3002\u8bcd\u6cd5\u5206\u6790\u5668\u4e00\u822c\u4ee5\u51fd\u6570\u7684\u5f62\u5f0f\u5b58\u5728\uff0c\u4f9b\u8bed\u6cd5\u5206\u6790\u5668\u8c03\u7528\u3002 .go \u6587\u4ef6\u88ab\u8f93\u5165\u5230\u626b\u63cf\u5668\uff08Scanner\uff09\uff0c\u5b83\u4f7f\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e \u6709\u9650\u72b6\u6001\u673a \u7684\u7b97\u6cd5\uff0c\u5c06\u6e90\u4ee3\u7801\u7684\u5b57\u7b26\u7cfb\u5217\u5206\u5272\u6210\u4e00\u7cfb\u5217\u7684\u8bb0\u53f7\uff08Token\uff09\u3002 \u8bb0\u53f7\u4e00\u822c\u5206\u4e3a\u8fd9\u51e0\u7c7b\uff1a\u5173\u952e\u5b57\u3001\u6807\u8bc6\u7b26\u3001\u5b57\u9762\u91cf\uff08\u5305\u542b\u6570\u5b57\u3001\u5b57\u7b26\u4e32\uff09\u3001\u7279\u6b8a\u7b26\u53f7\uff08\u5982\u52a0\u53f7\u3001\u7b49\u53f7\uff09\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e\u5982\u4e0b\u7684\u4ee3\u7801\uff1a slice[i] = i * (2 + 6) \u603b\u5171\u5305\u542b 16 \u4e2a\u975e\u7a7a\u5b57\u7b26\uff0c\u7ecf\u8fc7\u626b\u63cf\u540e \u8bb0\u53f7 \u7c7b\u578b slice \u6807\u8bc6\u7b26 [ \u5de6\u65b9\u62ec\u53f7 i \u6807\u8bc6\u7b26 ] \u53f3\u65b9\u62ec\u53f7 = \u8d4b\u503c i \u6807\u8bc6\u7b26 * \u4e58\u53f7 ( \u5de6\u5706\u62ec\u53f7 2 \u6570\u5b57 + \u52a0\u53f7 6 \u6570\u5b57 ) \u53f3\u5706\u62ec\u53f7 Go \u8bed\u8a00\uff08\u672c\u6587\u7684 Go \u7248\u672c\u662f 1.9.2\uff09\u626b\u63cf\u5668\u652f\u6301\u7684 Token \u5728\u6e90\u7801\u4e2d\u7684\u8def\u5f84\uff1a src/cmd/compile/internal/syntax/token.go \u611f\u53d7\u4e00\u4e0b\uff1a var tokstrings = [...]string{ // source control _EOF: \"EOF\", // names and literals _Name: \"name\", _Literal:\"literal\", // operators and operations _Operator:\"op\", _AssignOp:\"op=\", _IncOp: \"opop\", _Assign: \"=\", _Define: \":=\", _Arrow: \"<-\", _Star: \"*\", // delimitors _Lparen: \"(\", _Lbrack: \"[\", _Lbrace: \"{\", _Rparen: \")\", _Rbrack: \"]\", _Rbrace: \"}\", _Comma: \",\", _Semi: \";\", _Colon: \":\", _Dot: \".\", _DotDotDot:\"...\", // keywords _Break: \"break\", _Case: \"case\", _Chan: \"chan\", _Const: \"const\", _Continue: \"continue\", _Default: \"default\", _Defer: \"defer\", _Else: \"else\", _Fallthrough:\"fallthrough\", _For: \"for\", _Func: \"func\", _Go: \"go\", _Goto: \"goto\", _If: \"if\", _Import: \"import\", _Interface: \"interface\", _Map: \"map\", _Package: \"package\", _Range: \"range\", _Return: \"return\", _Select: \"select\", _Struct: \"struct\", _Switch: \"switch\", _Type: \"type\", _Var: \"var\",} \u8fd8\u662f\u6bd4\u8f83\u719f\u6089\u7684\uff0c\u5305\u62ec\u540d\u79f0\u548c\u5b57\u9762\u91cf\u3001\u64cd\u4f5c\u7b26\u3001\u5206\u9694\u7b26\u548c\u5173\u952e\u5b57\u3002 \u800c\u626b\u63cf\u5668\u7684\u8def\u5f84\u662f\uff1a src/cmd/compile/internal/syntax/scanner.go \u5176\u4e2d\u6700\u5173\u952e\u7684\u51fd\u6570\u5c31\u662f next \u51fd\u6570\uff0c\u5b83\u4e0d\u65ad\u5730\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u5b57\u7b26\uff08\u4e0d\u662f\u4e0b\u4e00\u4e2a\u5b57\u8282\uff0c\u56e0\u4e3a Go \u8bed\u8a00\u652f\u6301 Unicode \u7f16\u7801\uff0c\u5e76\u4e0d\u662f\u50cf\u6211\u4eec\u524d\u9762\u4e3e\u5f97 ASCII \u7801\u7684\u4f8b\u5b50\uff0c\u4e00\u4e2a\u5b57\u7b26\u53ea\u6709\u4e00\u4e2a\u5b57\u8282\uff09\uff0c\u76f4\u5230\u8fd9\u4e9b\u5b57\u7b26\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a Token\u3002 func (s *scanner) next() { // ... redo: // skip white space c := s.getr() for c == ' ' || c == '\\t' || c=='\\n' && !nlsemi || c == '\\r' { c = s.getr() } //token start s.line, s.col == s.source.line0, s.source.col0 if isLetter(c) || c >= utf8.RuneSelf && s.isIdentRune(c, true) { s.ident() return } switch c { //... case '\\n': s.lit = \"newline\" s.tok= _Semi case '0', '1', '2', '3', '4', '5', '6', '7', '8', '9': s.number(c) //.. default: s.tok = 0 s.error(fmt.Sprintf(\"invalid charscter %#U\", c)) goto redo return assignop: if c == '=' { s.tok = _AssignOp return } s.ungetr() s.tok = _Operator } \u4ee3\u7801\u7684\u4e3b\u8981\u903b\u8f91\u5c31\u662f\u901a\u8fc7 c:=s.getr() \u83b7\u53d6\u4e0b\u4e00\u4e2a\u672a\u88ab\u89e3\u6790\u7684\u5b57\u7b26\uff0c\u5e76\u4e14\u4f1a\u8df3\u8fc7\u4e4b\u540e\u7684\u7a7a\u683c\u3001\u56de\u8f66\u3001\u6362\u884c\u3001tab \u5b57\u7b26\uff0c\u7136\u540e\u8fdb\u5165\u4e00\u4e2a\u5927\u7684 switch-case \u8bed\u53e5\uff0c\u5339\u914d\u5404\u79cd\u4e0d\u540c\u7684\u60c5\u5f62\uff0c\u6700\u7ec8\u53ef\u4ee5\u89e3\u6790\u51fa\u4e00\u4e2a Token\uff0c\u5e76\u4e14\u628a\u76f8\u5173\u7684\u884c\u3001\u5217\u6570\u5b57\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u6837\u5c31\u5b8c\u6210\u4e00\u6b21\u89e3\u6790\u8fc7\u7a0b\u3002 \u5f53\u524d\u5305\u4e2d\u7684\u8bcd\u6cd5\u5206\u6790\u5668 scanner \u4e5f\u53ea\u662f\u4e3a\u4e0a\u5c42\u63d0\u4f9b\u4e86 next \u65b9\u6cd5\uff0c\u8bcd\u6cd5\u89e3\u6790\u7684\u8fc7\u7a0b\u90fd\u662f\u60f0\u6027\u7684\uff0c\u53ea\u6709\u5728\u4e0a\u5c42\u7684\u89e3\u6790\u5668\u9700\u8981\u65f6\u624d\u4f1a\u8c03\u7528 next \u83b7\u53d6\u6700\u65b0\u7684 Token\u3002","title":"\u8bcd\u6cd5\u5206\u6790"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/#_5","text":"\u4e0a\u4e00\u6b65\u751f\u6210\u7684 Token \u5e8f\u5217\uff0c\u9700\u8981\u7ecf\u8fc7\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u751f\u6210\u4e00\u68f5\u4ee5 \u8868\u8fbe\u5f0f \u4e3a\u7ed3\u70b9\u7684 \u8bed\u6cd5\u6811 \u3002 \u6bd4\u5982\u6700\u5f00\u59cb\u7684\u90a3\u4e2a\u4f8b\u5b50\uff0c slice[i]=i*(2+6) \uff0c\u5f97\u5230\u7684\u4e00\u68f5\u8bed\u6cd5\u6811\u5982\u4e0b\uff1a \u6574\u4e2a\u8bed\u53e5\u88ab\u770b\u4f5c\u662f\u4e00\u4e2a\u8d4b\u503c\u8868\u8fbe\u5f0f\uff0c\u5de6\u5b50\u6811\u662f\u4e00\u4e2a\u6570\u7ec4\u8868\u8fbe\u5f0f\uff0c\u53f3\u5b50\u6811\u662f\u4e00\u4e2a\u4e58\u6cd5\u8868\u8fbe\u5f0f\uff1b\u6570\u7ec4\u8868\u8fbe\u5f0f\u7531 2 \u4e2a\u7b26\u53f7\u8868\u8fbe\u5f0f\u7ec4\u6210\uff1b\u4e58\u53f7\u8868\u8fbe\u5f0f\u5219\u662f\u7531\u4e00\u4e2a\u7b26\u53f7\u8868\u8fbe\u5f0f\u548c\u4e00\u4e2a\u52a0\u53f7\u8868\u8fbe\u5f0f\u7ec4\u6210\uff1b\u52a0\u53f7\u8868\u8fbe\u5f0f\u5219\u662f\u7531\u4e24\u4e2a\u6570\u5b57\u7ec4\u6210\u3002\u7b26\u53f7\u548c\u6570\u5b57\u662f\u6700\u5c0f\u7684\u8868\u8fbe\u5f0f\uff0c\u5b83\u4eec\u4e0d\u80fd\u518d\u88ab\u5206\u89e3\uff0c\u901a\u5e38\u4f5c\u4e3a\u6811\u7684\u53f6\u5b50\u8282\u70b9\u3002 \u8bed\u6cd5\u5206\u6790\u7684\u8fc7\u7a0b\u53ef\u4ee5\u68c0\u6d4b\u4e00\u4e9b\u5f62\u5f0f\u4e0a\u7684\u9519\u8bef\uff0c\u4f8b\u5982\uff1a\u62ec\u53f7\u662f\u5426\u7f3a\u5c11\u4e00\u534a\uff0c + \u53f7\u8868\u8fbe\u5f0f\u7f3a\u5c11\u4e00\u4e2a\u64cd\u4f5c\u6570\u7b49\u3002 \u8bed\u6cd5\u5206\u6790\u662f\u6839\u636e\u67d0\u79cd\u7279\u5b9a\u7684\u5f62\u5f0f\u6587\u6cd5\uff08Grammar\uff09\u5bf9 Token \u5e8f\u5217\u6784\u6210\u7684\u8f93\u5165\u6587\u672c\u8fdb\u884c\u5206\u6790\u5e76\u786e\u5b9a\u5176\u8bed\u6cd5\u7ed3\u6784\u7684\u4e00\u79cd\u8fc7\u7a0b\u3002","title":"\u8bed\u6cd5\u5206\u6790"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/#_6","text":"\u8bed\u6cd5\u5206\u6790\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u8bed\u53e5\u7684\u5177\u4f53\u610f\u4e49\u662f\u4ec0\u4e48\u3002\u50cf\u4e0a\u9762\u7684 * \u53f7\u7684\u4e24\u68f5\u5b50\u6811\u5982\u679c\u662f\u4e24\u4e2a\u6307\u9488\uff0c\u8fd9\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u4f46\u8bed\u6cd5\u5206\u6790\u68c0\u6d4b\u4e0d\u51fa\u6765\uff0c\u8bed\u4e49\u5206\u6790\u5c31\u662f\u5e72\u8fd9\u4e2a\u4e8b\u3002 \u7f16\u8bd1\u671f\u6240\u80fd\u68c0\u67e5\u7684\u662f\u9759\u6001\u8bed\u4e49\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u662f\u5728\u201c\u4ee3\u7801\u201d\u9636\u6bb5\uff0c\u5305\u62ec\u53d8\u91cf\u7c7b\u578b\u7684\u5339\u914d\u3001\u8f6c\u6362\u7b49\u3002\u4f8b\u5982\uff0c\u5c06\u4e00\u4e2a\u6d6e\u70b9\u503c\u8d4b\u7ed9\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u660e\u663e\u7684\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u5c31\u4f1a\u62a5\u7f16\u8bd1\u9519\u8bef\u3002\u800c\u5bf9\u4e8e\u8fd0\u884c\u671f\u95f4\u624d\u4f1a\u51fa\u73b0\u7684\u9519\u8bef\uff1a\u4e0d\u5c0f\u5fc3\u9664\u4e86\u4e00\u4e2a 0 \uff0c\u8bed\u4e49\u5206\u6790\u662f\u6ca1\u529e\u6cd5\u68c0\u6d4b\u7684\u3002 \u8bed\u4e49\u5206\u6790\u9636\u6bb5\u5b8c\u6210\u4e4b\u540e\uff0c\u4f1a\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6807\u6ce8\u4e0a\u7c7b\u578b\uff1a Go \u8bed\u8a00\u7f16\u8bd1\u5668\u5728\u8fd9\u4e00\u9636\u6bb5\u68c0\u67e5\u5e38\u91cf\u3001\u7c7b\u578b\u3001\u51fd\u6570\u58f0\u660e\u4ee5\u53ca\u53d8\u91cf\u8d4b\u503c\u8bed\u53e5\u7684\u7c7b\u578b\uff0c\u7136\u540e\u68c0\u67e5\u54c8\u5e0c\u4e2d\u952e\u7684\u7c7b\u578b\u3002\u5b9e\u73b0\u7c7b\u578b\u68c0\u67e5\u7684\u51fd\u6570\u901a\u5e38\u90fd\u662f\u51e0\u5343\u884c\u7684\u5de8\u578b switch/case \u8bed\u53e5\u3002 \u7c7b\u578b\u68c0\u67e5\u662f Go \u8bed\u8a00\u7f16\u8bd1\u7684\u7b2c\u4e8c\u4e2a\u9636\u6bb5\uff0c\u5728\u8bcd\u6cd5\u548c\u8bed\u6cd5\u5206\u6790\u4e4b\u540e\u6211\u4eec\u5f97\u5230\u4e86\u6bcf\u4e2a\u6587\u4ef6\u5bf9\u5e94\u7684\u62bd\u8c61\u8bed\u6cd5\u6811\uff0c\u968f\u540e\u7684\u7c7b\u578b\u68c0\u67e5\u4f1a\u904d\u5386\u62bd\u8c61\u8bed\u6cd5\u6811\u4e2d\u7684\u8282\u70b9\uff0c\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7684\u7c7b\u578b\u8fdb\u884c\u68c0\u9a8c\uff0c\u627e\u51fa\u5176\u4e2d\u5b58\u5728\u7684\u8bed\u6cd5\u9519\u8bef\u3002 \u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4e5f\u53ef\u80fd\u4f1a\u5bf9\u62bd\u8c61\u8bed\u6cd5\u6811\u8fdb\u884c\u6539\u5199\uff0c\u8fd9\u4e0d\u4ec5\u80fd\u591f\u53bb\u9664\u4e00\u4e9b\u4e0d\u4f1a\u88ab\u6267\u884c\u7684\u4ee3\u7801\u5bf9\u7f16\u8bd1\u8fdb\u884c\u4f18\u5316\u63d0\u9ad8\u6267\u884c\u6548\u7387\uff0c\u800c\u4e14\u4e5f\u4f1a\u4fee\u6539 make\u3001new \u7b49\u5173\u952e\u5b57\u5bf9\u5e94\u8282\u70b9\u7684\u64cd\u4f5c\u7c7b\u578b\u3002 \u4f8b\u5982\u6bd4\u8f83\u5e38\u7528\u7684 make \u5173\u952e\u5b57\uff0c\u7528\u5b83\u53ef\u4ee5\u521b\u5efa\u5404\u79cd\u7c7b\u578b\uff0c\u5982 slice\uff0cmap\uff0cchannel \u7b49\u7b49\u3002\u5230\u8fd9\u4e00\u6b65\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e make \u5173\u952e\u5b57\uff0c\u4e5f\u5c31\u662f OMAKE \u8282\u70b9\uff0c\u4f1a\u5148\u68c0\u67e5\u5b83\u7684\u53c2\u6570\u7c7b\u578b\uff0c\u6839\u636e\u7c7b\u578b\u7684\u4e0d\u540c\uff0c\u8fdb\u5165\u76f8\u5e94\u7684\u5206\u652f\u3002\u5982\u679c\u53c2\u6570\u7c7b\u578b\u662f slice\uff0c\u5c31\u4f1a\u8fdb\u5165 TSLICE case \u5206\u652f\uff0c\u68c0\u67e5 len \u548c cap \u662f\u5426\u6ee1\u8db3\u8981\u6c42\uff0c\u5982 len <= cap\u3002\u6700\u540e\u8282\u70b9\u7c7b\u578b\u4f1a\u4ece OMAKE \u6539\u6210 OMAKESLICE\u3002","title":"\u8bed\u4e49\u5206\u6790"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/#_7","text":"\u6211\u4eec\u77e5\u9053\uff0c\u7f16\u8bd1\u8fc7\u7a0b\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a\u524d\u7aef\u548c\u540e\u7aef\uff0c\u524d\u7aef\u751f\u6210\u548c\u5e73\u53f0\u65e0\u5173\u7684\u4e2d\u95f4\u4ee3\u7801\uff0c\u540e\u7aef\u4f1a\u9488\u5bf9\u4e0d\u540c\u7684\u5e73\u53f0\uff0c\u751f\u6210\u4e0d\u540c\u7684\u673a\u5668\u7801\u3002 \u524d\u9762\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u7b49\u90fd\u5c5e\u4e8e\u7f16\u8bd1\u5668\u524d\u7aef\uff0c\u4e4b\u540e\u7684\u9636\u6bb5\u5c5e\u4e8e\u7f16\u8bd1\u5668\u540e\u7aef\u3002 \u7f16\u8bd1\u8fc7\u7a0b\u6709\u5f88\u591a\u4f18\u5316\u7684\u73af\u8282\uff0c\u5728\u8fd9\u4e2a\u73af\u8282\u662f\u6307\u6e90\u4ee3\u7801\u7ea7\u522b\u7684\u4f18\u5316\u3002\u5b83\u5c06\u8bed\u6cd5\u6811\u8f6c\u6362\u6210\u4e2d\u95f4\u4ee3\u7801\uff0c\u5b83\u662f\u8bed\u6cd5\u6811\u7684\u987a\u5e8f\u8868\u793a\u3002 \u4e2d\u95f4\u4ee3\u7801\u4e00\u822c\u548c\u76ee\u6807\u673a\u5668\u4ee5\u53ca\u8fd0\u884c\u65f6\u73af\u5883\u65e0\u5173\uff0c\u5b83\u6709\u51e0\u79cd\u5e38\u89c1\u7684\u5f62\u5f0f\uff1a\u4e09\u5730\u5740\u7801\u3001P-\u4ee3\u7801\u3002\u4f8b\u5982\uff0c\u6700\u57fa\u672c\u7684 \u4e09\u5730\u5740\u7801 \u662f\u8fd9\u6837\u7684\uff1a x = y op z \u8868\u793a\u53d8\u91cf y \u548c \u53d8\u91cf z \u8fdb\u884c op \u64cd\u4f5c\u540e\uff0c\u8d4b\u503c\u7ed9 x\u3002op \u53ef\u4ee5\u662f\u6570\u5b66\u8fd0\u7b97\uff0c\u4f8b\u5982\u52a0\u51cf\u4e58\u9664\u3002 \u524d\u9762\u6211\u4eec\u4e3e\u7684\u4f8b\u5b50\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u7684\u5f62\u5f0f\uff1a t1 = 2 + 6 t2 = i * t1 slice[i] = t2 \u8fd9\u91cc 2 + 6 \u662f\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u8fd9\u6837\u5c31\u628a t1 \u8fd9\u4e2a\u4e34\u65f6\u53d8\u91cf\u201c\u4f18\u5316\u201d\u6389\u4e86\uff0c\u800c\u4e14 t1 \u53d8\u91cf\u53ef\u4ee5\u91cd\u590d\u5229\u7528\uff0c\u56e0\u6b64 t2 \u4e5f\u53ef\u4ee5\u201c\u4f18\u5316\u201d\u6389\u3002\u4f18\u5316\u4e4b\u540e\uff1a t1 = i * 8 slice[i] = t1 Go \u8bed\u8a00\u7684\u4e2d\u95f4\u4ee3\u7801\u8868\u793a\u5f62\u5f0f\u4e3a SSA\uff08Static Single-Assignment\uff0c\u9759\u6001\u5355\u8d4b\u503c\uff09\uff0c\u4e4b\u6240\u4ee5\u79f0\u4e4b\u4e3a\u5355\u8d4b\u503c\uff0c\u662f\u56e0\u4e3a\u6bcf\u4e2a\u540d\u5b57\u5728 SSA \u4e2d\u4ec5\u88ab\u8d4b\u503c\u4e00\u6b21\u3002\u3002 \u8fd9\u4e00\u9636\u6bb5\u4f1a\u6839\u636e CPU \u7684\u67b6\u6784\u8bbe\u7f6e\u76f8\u5e94\u7684\u7528\u4e8e\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u7684\u53d8\u91cf\uff0c\u4f8b\u5982\u7f16\u8bd1\u5668\u4f7f\u7528\u7684\u6307\u9488\u548c\u5bc4\u5b58\u5668\u7684\u5927\u5c0f\u3001\u53ef\u7528\u5bc4\u5b58\u5668\u5217\u8868\u7b49\u3002\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u548c\u673a\u5668\u7801\u751f\u6210\u8fd9\u4e24\u90e8\u5206\u4f1a\u5171\u4eab\u76f8\u540c\u7684\u8bbe\u7f6e\u3002 \u4f8b\u5982\u5bf9\u4e8e map \u7684\u64cd\u4f5c m[i]\uff0c\u5728\u8fd9\u91cc\u4f1a\u88ab\u8f6c\u6362\u6210 mapacess \u6216 mapassign\u3002 Go \u8bed\u8a00\u7684\u4e3b\u7a0b\u5e8f\u5728\u6267\u884c\u65f6\u4f1a\u8c03\u7528 runtime \u4e2d\u7684\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u5173\u952e\u5b57\u548c\u5185\u7f6e\u51fd\u6570\u7684\u529f\u80fd\u5176\u5b9e\u662f\u7531\u8bed\u8a00\u7684\u7f16\u8bd1\u5668\u548c\u8fd0\u884c\u65f6\u5171\u540c\u5b8c\u6210\u7684\u3002 \u4e2d\u95f4\u4ee3\u7801\u7684\u751f\u6210\u8fc7\u7a0b\u5176\u5b9e\u5c31\u662f\u4ece AST \u62bd\u8c61\u8bed\u6cd5\u6811\u5230 SSA \u4e2d\u95f4\u4ee3\u7801\u7684\u8f6c\u6362\u8fc7\u7a0b\uff0c\u5728\u8fd9\u671f\u95f4\u4f1a\u5bf9\u8bed\u6cd5\u6811\u4e2d\u7684\u5173\u952e\u5b57\u5728\u8fdb\u884c\u4e00\u6b21\u66f4\u65b0\uff0c\u66f4\u65b0\u540e\u7684\u8bed\u6cd5\u6811\u4f1a\u7ecf\u8fc7\u591a\u8f6e\u5904\u7406\u8f6c\u53d8\u6700\u540e\u7684 SSA \u4e2d\u95f4\u4ee3\u7801\u3002","title":"\u4e2d\u95f4\u4ee3\u7801\u751f\u6210"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/#_8","text":"\u4e0d\u540c\u673a\u5668\u7684\u673a\u5668\u5b57\u957f\u3001\u5bc4\u5b58\u5668\u7b49\u7b49\u90fd\u4e0d\u4e00\u6837\uff0c\u610f\u5473\u7740\u5728\u4e0d\u540c\u673a\u5668\u4e0a\u8dd1\u7684\u673a\u5668\u7801\u662f\u4e0d\u4e00\u6837\u7684\u3002\u6700\u540e\u4e00\u6b65\u7684\u76ee\u7684\u5c31\u662f\u8981\u751f\u6210\u80fd\u5728\u4e0d\u540c CPU \u67b6\u6784\u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u3002 \u4e3a\u4e86\u69a8\u5e72\u673a\u5668\u7684\u6bcf\u4e00\u6ef4\u6cb9\u6c34\uff0c\u76ee\u6807\u4ee3\u7801\u4f18\u5316\u5668\u4f1a\u5bf9\u4e00\u4e9b\u6307\u4ee4\u8fdb\u884c\u4f18\u5316\uff0c\u4f8b\u5982\u4f7f\u7528\u79fb\u4f4d\u6307\u4ee4\u4ee3\u66ff\u4e58\u6cd5\u6307\u4ee4\u7b49\u3002 \u8fd9\u5757\u5b9e\u5728\u6ca1\u80fd\u529b\u6df1\u5165\uff0c\u5e78\u597d\u4e5f\u4e0d\u9700\u8981\u6df1\u5165\u3002\u5bf9\u4e8e\u5e94\u7528\u5c42\u7684\u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08\u6765\u8bf4\uff0c\u4e86\u89e3\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002","title":"\u76ee\u6807\u4ee3\u7801\u751f\u6210\u4e0e\u4f18\u5316"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/#_9","text":"\u7f16\u8bd1\u8fc7\u7a0b\u662f\u9488\u5bf9\u5355\u4e2a\u6587\u4ef6\u8fdb\u884c\u7684\uff0c\u6587\u4ef6\u4e0e\u6587\u4ef6\u4e4b\u95f4\u4e0d\u53ef\u907f\u514d\u5730\u8981\u5f15\u7528\u5b9a\u4e49\u5728\u5176\u4ed6\u6a21\u5757\u7684\u5168\u5c40\u53d8\u91cf\u6216\u8005\u51fd\u6570\uff0c\u8fd9\u4e9b\u53d8\u91cf\u6216\u51fd\u6570\u7684\u5730\u5740\u53ea\u6709\u5728\u6b64\u9636\u6bb5\u624d\u80fd\u786e\u5b9a\u3002 \u94fe\u63a5\u8fc7\u7a0b\u5c31\u662f\u8981\u628a\u7f16\u8bd1\u5668\u751f\u6210\u7684\u4e00\u4e2a\u4e2a\u76ee\u6807\u6587\u4ef6\u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002\u6700\u7ec8\u5f97\u5230\u7684\u6587\u4ef6\u662f\u5206\u6210\u5404\u79cd\u6bb5\u7684\uff0c\u6bd4\u5982\u6570\u636e\u6bb5\u3001\u4ee3\u7801\u6bb5\u3001BSS\u6bb5\u7b49\u7b49\uff0c\u8fd0\u884c\u65f6\u4f1a\u88ab\u88c5\u8f7d\u5230\u5185\u5b58\u4e2d\u3002\u5404\u4e2a\u6bb5\u5177\u6709\u4e0d\u540c\u7684\u8bfb\u5199\u3001\u6267\u884c\u5c5e\u6027\uff0c\u4fdd\u62a4\u4e86\u7a0b\u5e8f\u7684\u5b89\u5168\u8fd0\u884c\u3002","title":"\u94fe\u63a5\u8fc7\u7a0b"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/#_10","text":"\u4ecd\u7136\u4f7f\u7528 hello-world \u9879\u76ee\u7684\u4f8b\u5b50\u3002\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6267\u884c\uff1a go build -gcflags \"-N -l\" -o hello src/main.go -gcflags\"-N -l\" \u662f\u4e3a\u4e86\u5173\u95ed\u7f16\u8bd1\u5668\u4f18\u5316\u548c\u51fd\u6570\u5185\u8054\uff0c\u9632\u6b62\u540e\u9762\u5728\u8bbe\u7f6e\u65ad\u70b9\u7684\u65f6\u5019\u627e\u4e0d\u5230\u76f8\u5bf9\u5e94\u7684\u4ee3\u7801\u4f4d\u7f6e\u3002 \u5f97\u5230\u4e86\u53ef\u6267\u884c\u6587\u4ef6 hello\uff0c\u6267\u884c\uff1a [qcrao@qcrao hello-world]$ gdb hello \u8fdb\u5165 gdb \u8c03\u8bd5\u6a21\u5f0f\uff0c\u6267\u884c info files \uff0c\u5f97\u5230\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6587\u4ef6\u5934\uff0c\u5217\u51fa\u4e86\u5404\u79cd\u6bb5\uff1a \u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u5f97\u5230\u4e86\u5165\u53e3\u5730\u5740\uff1a0x450e20\u3002 (gdb) b *0x450e20 Breakpoint 1 at 0x450e20: file /usr/local/go/src/runtime/rt0_linux_amd64.s, line 8. \u8fd9\u5c31\u662f Go \u7a0b\u5e8f\u7684\u5165\u53e3\u5730\u5740\uff0c\u6211\u662f\u5728 linux \u4e0a\u8fd0\u884c\u7684\uff0c\u6240\u4ee5\u5165\u53e3\u6587\u4ef6\u4e3a src/runtime/rt0_linux_amd64.s \uff0cruntime \u76ee\u5f55\u4e0b\u6709\u5404\u79cd\u4e0d\u540c\u540d\u79f0\u7684\u7a0b\u5e8f\u5165\u53e3\u6587\u4ef6\uff0c\u652f\u6301\u5404\u79cd\u64cd\u4f5c\u7cfb\u7edf\u548c\u67b6\u6784\uff0c\u4ee3\u7801\u4e3a\uff1a TEXT _rt0_amd64_linux(SB),NOSPLIT,$-8 LEAQ 8(SP), SI // argv MOVQ 0(SP), DI // argc MOVQ $main(SB), AX JMP AX \u4e3b\u8981\u662f\u628a argc\uff0cargv \u4ece\u5185\u5b58\u62c9\u5230\u4e86\u5bc4\u5b58\u5668\u3002\u8fd9\u91cc LEAQ \u662f\u8ba1\u7b97\u5185\u5b58\u5730\u5740\uff0c\u7136\u540e\u628a\u5185\u5b58\u5730\u5740\u672c\u8eab\u653e\u8fdb\u5bc4\u5b58\u5668\u91cc\uff0c\u4e5f\u5c31\u662f\u628a argv \u7684\u5730\u5740\u653e\u5230\u4e86 SI \u5bc4\u5b58\u5668\u4e2d\u3002\u6700\u540e\u8df3\u8f6c\u5230\uff1a TEXT main(SB),NOSPLIT,$-8 MOVQ $runtime\u00b7rt0_go(SB), AX JMP AX \u7ee7\u7eed\u8df3\u8f6c\u5230 runtime\u00b7rt0_go(SB) \uff0c\u4f4d\u7f6e\uff1a /usr/local/go/src/runtime/asm_amd64.s \uff0c\u4ee3\u7801\uff1a TEXT runtime\u00b7rt0_go(SB),NOSPLIT,$0 // \u7701\u7565\u5f88\u591a CPU \u76f8\u5173\u7684\u7279\u6027\u6807\u5fd7\u4f4d\u68c0\u67e5\u7684\u4ee3\u7801 // \u4e3b\u8981\u662f\u770b\u4e0d\u61c2\uff0c^_^ // \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 // \u4e0b\u9762\u662f\u6700\u540e\u8c03\u7528\u7684\u4e00\u4e9b\u51fd\u6570\uff0c\u6bd4\u8f83\u91cd\u8981 // \u521d\u59cb\u5316\u6267\u884c\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84 CALL runtime\u00b7args(SB) // \u521d\u59cb\u5316 CPU \u4e2a\u6570\u548c\u5185\u5b58\u9875\u5927\u5c0f CALL runtime\u00b7osinit(SB) // \u521d\u59cb\u5316\u547d\u4ee4\u884c\u53c2\u6570\u3001\u73af\u5883\u53d8\u91cf\u3001gc\u3001\u6808\u7a7a\u95f4\u3001\u5185\u5b58\u7ba1\u7406\u3001\u6240\u6709 P \u5b9e\u4f8b\u3001HASH\u7b97\u6cd5\u7b49 CALL runtime\u00b7schedinit(SB) // \u8981\u5728 main goroutine \u4e0a\u8fd0\u884c\u7684\u51fd\u6570 MOVQ $runtime\u00b7mainPC(SB), AX // entry PUSHQ AX PUSHQ $0 // arg size // \u65b0\u5efa\u4e00\u4e2a goroutine\uff0c\u8be5 goroutine \u7ed1\u5b9a runtime.main\uff0c\u653e\u5728 P \u7684\u672c\u5730\u961f\u5217\uff0c\u7b49\u5f85\u8c03\u5ea6 CALL runtime\u00b7newproc(SB) POPQ AX POPQ AX // \u542f\u52a8M\uff0c\u5f00\u59cb\u8c03\u5ea6goroutine CALL runtime\u00b7mstart(SB) MOVL $0xf1, 0xf1 // crash RET DATA runtime\u00b7mainPC+0(SB)/8,$runtime\u00b7main(SB) GLOBL runtime\u00b7mainPC(SB),RODATA,$8 \u603b\u7ed3\u4e0b\uff1a \u68c0\u67e5\u8fd0\u884c\u5e73\u53f0\u7684CPU\uff0c\u8bbe\u7f6e\u597d\u7a0b\u5e8f\u8fd0\u884c\u9700\u8981\u76f8\u5173\u6807\u5fd7\u3002 TLS\u7684\u521d\u59cb\u5316\u3002 runtime.args\u3001runtime.osinit\u3001runtime.schedinit \u4e09\u4e2a\u65b9\u6cd5\u505a\u597d\u7a0b\u5e8f\u8fd0\u884c\u9700\u8981\u7684\u5404\u79cd\u53d8\u91cf\u4e0e\u8c03\u5ea6\u5668\u3002 runtime.newproc\u521b\u5efa\u65b0\u7684goroutine\u7528\u4e8e\u7ed1\u5b9a\u7528\u6237\u5199\u7684main\u65b9\u6cd5\u3002 runtime.mstart\u5f00\u59cbgoroutine\u7684\u8c03\u5ea6\u3002 \u6700\u540e\u7528\u4e00\u5f20\u56fe\u6765\u603b\u7ed3 go bootstrap \u8fc7\u7a0b\u5427\uff1a main \u51fd\u6570\u91cc\u6267\u884c\u7684\u4e00\u4e9b\u91cd\u8981\u7684\u64cd\u4f5c\u5305\u62ec\uff1a\u65b0\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c sysmon \u51fd\u6570\uff0c\u5b9a\u671f\u5783\u573e\u56de\u6536\u548c\u8c03\u5ea6\u62a2\u5360\uff1b\u542f\u52a8 gc\uff1b\u6267\u884c\u6240\u6709\u7684 init \u51fd\u6570\u7b49\u7b49\u3002 \u4e0a\u9762\u662f\u542f\u52a8\u8fc7\u7a0b\uff0c\u770b\u4e00\u4e0b\u9000\u51fa\u8fc7\u7a0b\uff1a \u5f53 main \u51fd\u6570\u6267\u884c\u7ed3\u675f\u4e4b\u540e\uff0c\u4f1a\u6267\u884c exit(0) \u6765\u9000\u51fa\u8fdb\u7a0b\u3002\u82e5\u6267\u884c exit(0) \u540e\uff0c\u8fdb\u7a0b\u6ca1\u6709\u9000\u51fa\uff0cmain \u51fd\u6570\u6700\u540e\u7684\u4ee3\u7801\u4f1a\u4e00\u76f4\u8bbf\u95ee\u975e\u6cd5\u5730\u5740\uff1a exit(0) for { var x *int32 *x = 0 } \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e00\u65e6\u51fa\u73b0\u975e\u6cd5\u5730\u5740\u8bbf\u95ee\uff0c\u7cfb\u7edf\u4f1a\u628a\u8fdb\u7a0b\u6740\u6b7b\uff0c\u7528\u8fd9\u6837\u7684\u65b9\u6cd5\u786e\u4fdd\u8fdb\u7a0b\u9000\u51fa\u3002 \u5f53\u7136 Go \u7a0b\u5e8f\u542f\u52a8\u8fd9\u4e00\u90e8\u5206\u5176\u5b9e\u8fd8\u4f1a\u6d89\u53ca\u5230 fork \u4e00\u4e2a\u65b0\u8fdb\u7a0b\u3001\u88c5\u8f7d\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u63a7\u5236\u6743\u8f6c\u79fb\u7b49\u95ee\u9898\u3002\u8fd8\u662f\u63a8\u8350\u770b\u524d\u9762\u7684\u4e24\u672c\u4e66\uff0c\u6211\u89c9\u5f97\u6211\u4e0d\u4f1a\u5199\u5f97\u66f4\u597d\uff0c\u5c31\u4e0d\u53d9\u8ff0\u4e86\u3002","title":"\u7a0b\u5e8f\u542f\u52a8"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/#goroot-gopath","text":"GoRoot \u662f Go \u7684\u5b89\u88c5\u8def\u5f84\u3002mac \u6216 unix \u662f\u5728 /usr/local/go \u8def\u5f84\u4e0a\uff0c\u6765\u770b\u4e0b\u8fd9\u91cc\u90fd\u88c5\u4e86\u4e9b\u4ec0\u4e48\uff1a bin \u76ee\u5f55\u4e0b\u9762\uff1a pkg \u76ee\u5f55\u4e0b\u9762\uff1a Go \u5de5\u5177\u76ee\u5f55\u5982\u4e0b\uff0c\u5176\u4e2d\u6bd4\u8f83\u91cd\u8981\u7684\u6709\u7f16\u8bd1\u5668 compile \uff0c\u94fe\u63a5\u5668 link \uff1a GoPath \u7684\u4f5c\u7528\u5728\u4e8e\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u5bfb\u627e .go \u6e90\u7801\u7684\u8def\u5f84\uff0c\u5b83\u662f\u4e00\u4e2a\u5de5\u4f5c\u7a7a\u95f4\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u591a\u4e2a\u76ee\u5f55\u3002Go \u5b98\u65b9\u8981\u6c42\uff0cGoPath \u4e0b\u9762\u9700\u8981\u5305\u542b\u4e09\u4e2a\u6587\u4ef6\u5939\uff1a src pkg bin src \u5b58\u653e\u6e90\u6587\u4ef6\uff0cpkg \u5b58\u653e\u6e90\u6587\u4ef6\u7f16\u8bd1\u540e\u7684\u5e93\u6587\u4ef6\uff0c\u540e\u7f00\u4e3a .a \uff1bbin \u5219\u5b58\u653e\u53ef\u6267\u884c\u6587\u4ef6\u3002","title":"GoRoot \u548c GoPath"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/#go_1","text":"\u76f4\u63a5\u5728\u7ec8\u7aef\u6267\u884c\uff1a go \u5c31\u80fd\u5f97\u5230\u548c go \u76f8\u5173\u7684\u547d\u4ee4\u7b80\u4ecb\uff1a \u548c\u7f16\u8bd1\u76f8\u5173\u7684\u547d\u4ee4\u4e3b\u8981\u662f\uff1a go build go install go run","title":"Go \u547d\u4ee4\u8be6\u89e3"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/#go-build","text":"go build \u7528\u6765\u7f16\u8bd1\u6307\u5b9a packages \u91cc\u7684\u6e90\u7801\u6587\u4ef6\u4ee5\u53ca\u5b83\u4eec\u7684\u4f9d\u8d56\u5305\uff0c\u7f16\u8bd1\u7684\u65f6\u5019\u4f1a\u5230 $GoPath/src/package \u8def\u5f84\u4e0b\u5bfb\u627e\u6e90\u7801\u6587\u4ef6\u3002 go build \u8fd8\u53ef\u4ee5\u76f4\u63a5\u7f16\u8bd1\u6307\u5b9a\u7684\u6e90\u7801\u6587\u4ef6\uff0c\u5e76\u4e14\u53ef\u4ee5\u540c\u65f6\u6307\u5b9a\u591a\u4e2a\u3002 \u901a\u8fc7\u6267\u884c go help build \u547d\u4ee4\u5f97\u5230 go build \u7684\u4f7f\u7528\u65b9\u6cd5\uff1a usage: go build [-o output] [-i] [build flags] [packages] -o \u53ea\u80fd\u5728\u7f16\u8bd1\u5355\u4e2a\u5305\u7684\u65f6\u5019\u51fa\u73b0\uff0c\u5b83\u6307\u5b9a\u8f93\u51fa\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u540d\u5b57\u3002 -i \u4f1a\u5b89\u88c5\u7f16\u8bd1\u76ee\u6807\u6240\u4f9d\u8d56\u7684\u5305\uff0c\u5b89\u88c5\u662f\u6307\u751f\u6210\u4e0e\u4ee3\u7801\u5305\u76f8\u5bf9\u5e94\u7684 .a \u6587\u4ef6\uff0c\u5373\u9759\u6001\u5e93\u6587\u4ef6\uff08\u540e\u9762\u8981\u53c2\u4e0e\u94fe\u63a5\uff09\uff0c\u5e76\u4e14\u653e\u7f6e\u5230\u5f53\u524d\u5de5\u4f5c\u533a\u7684 pkg \u76ee\u5f55\u4e0b\uff0c\u4e14\u5e93\u6587\u4ef6\u7684\u76ee\u5f55\u5c42\u7ea7\u548c\u6e90\u7801\u5c42\u7ea7\u4e00\u81f4\u3002 \u81f3\u4e8e build flags \u53c2\u6570\uff0c build,clean,get,install,list,run,test \u8fd9\u4e9b\u547d\u4ee4\u4f1a\u5171\u7528\u4e00\u5957\uff1a \u53c2\u6570 \u4f5c\u7528 -a \u5f3a\u5236\u91cd\u65b0\u7f16\u8bd1\u6240\u6709\u6d89\u53ca\u5230\u7684\u5305\uff0c\u5305\u62ec\u6807\u51c6\u5e93\u4e2d\u7684\u4ee3\u7801\u5305\uff0c\u8fd9\u4f1a\u91cd\u5199 /usr/local/go \u76ee\u5f55\u4e0b\u7684 .a \u6587\u4ef6 -n \u6253\u5370\u547d\u4ee4\u6267\u884c\u8fc7\u7a0b\uff0c\u4e0d\u771f\u6b63\u6267\u884c -p n \u6307\u5b9a\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u547d\u4ee4\u6267\u884c\u7684\u5e76\u884c\u6570\uff0cn \u9ed8\u8ba4\u4e3a CPU \u6838\u6570 -race \u68c0\u6d4b\u5e76\u62a5\u544a\u7a0b\u5e8f\u4e2d\u7684\u6570\u636e\u7ade\u4e89\u95ee\u9898 -v \u6253\u5370\u547d\u4ee4\u6267\u884c\u8fc7\u7a0b\u4e2d\u6240\u6d89\u53ca\u5230\u7684\u4ee3\u7801\u5305\u540d\u79f0 -x \u6253\u5370\u547d\u4ee4\u6267\u884c\u8fc7\u7a0b\u4e2d\u6240\u6d89\u53ca\u5230\u7684\u547d\u4ee4\uff0c\u5e76\u6267\u884c -work \u6253\u5370\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u7684\u4e34\u65f6\u6587\u4ef6\u5939\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u88ab\u5220\u9664 \u6211\u4eec\u77e5\u9053\uff0cGo \u8bed\u8a00\u7684\u6e90\u7801\u6587\u4ef6\u5206\u4e3a\u4e09\u7c7b\uff1a\u547d\u4ee4\u6e90\u7801\u3001\u5e93\u6e90\u7801\u3001\u6d4b\u8bd5\u6e90\u7801\u3002 \u547d\u4ee4\u6e90\u7801\u6587\u4ef6\uff1a\u662f Go \u7a0b\u5e8f\u7684\u5165\u53e3\uff0c\u5305\u542b func main() \u51fd\u6570\uff0c\u4e14\u7b2c\u4e00\u884c\u7528 packagemain \u58f0\u660e\u5c5e\u4e8e main \u5305\u3002 \u5e93\u6e90\u7801\u6587\u4ef6\uff1a\u4e3b\u8981\u662f\u5404\u79cd\u51fd\u6570\u3001\u63a5\u53e3\u7b49\uff0c\u4f8b\u5982\u5de5\u5177\u7c7b\u7684\u51fd\u6570\u3002 \u6d4b\u8bd5\u6e90\u7801\u6587\u4ef6\uff1a\u4ee5 _test.go \u4e3a\u540e\u7f00\u7684\u6587\u4ef6\uff0c\u7528\u4e8e\u6d4b\u8bd5\u7a0b\u5e8f\u7684\u529f\u80fd\u548c\u6027\u80fd\u3002 \u6ce8\u610f\uff0c go build \u4f1a\u5ffd\u7565 *_test.go \u6587\u4ef6\u3002 \u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u6f14\u793a go build \u547d\u4ee4\u3002\u6211\u7528 Goland \u65b0\u5efa\u4e86\u4e00\u4e2a hello-world \u9879\u76ee\uff08\u4e3a\u4e86\u5c55\u793a\u5f15\u7528\u81ea\u5b9a\u4e49\u7684\u5305\uff0c\u548c\u4e4b\u524d\u7684 hello-world \u7a0b\u5e8f\u4e0d\u540c\uff09\uff0c\u9879\u76ee\u7684\u7ed3\u6784\u5982\u4e0b\uff1a \u6700\u5de6\u8fb9\u53ef\u4ee5\u770b\u5230\u9879\u76ee\u7684\u7ed3\u6784\uff0c\u5305\u542b\u4e09\u4e2a\u6587\u4ef6\u5939\uff1abin\uff0cpkg\uff0csrc\u3002\u5176\u4e2d src \u76ee\u5f55\u4e0b\u6709\u4e00\u4e2a main.go\uff0c\u91cc\u9762\u5b9a\u4e49\u4e86 main \u51fd\u6570\uff0c\u662f\u6574\u4e2a\u9879\u76ee\u7684\u5165\u53e3\uff0c\u4e5f\u5c31\u662f\u524d\u9762\u63d0\u8fc7\u7684\u6240\u8c13\u7684\u547d\u4ee4\u6e90\u7801\u6587\u4ef6\uff1bsrc \u76ee\u5f55\u4e0b\u8fd8\u6709\u4e00\u4e2a util \u76ee\u5f55\uff0c\u91cc\u9762\u6709 util.go \u6587\u4ef6\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53ef\u4ee5\u83b7\u53d6\u672c\u673a IP \u5730\u5740\u7684\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684\u5e93\u6e90\u7801\u6587\u4ef6\u3002 \u4e2d\u95f4\u662f main.go \u7684\u6e90\u7801\uff0c\u5f15\u7528\u4e86\u4e24\u4e2a\u5305\uff0c\u4e00\u4e2a\u662f\u6807\u51c6\u5e93\u7684 fmt\uff1b\u4e00\u4e2a\u662f util \u5305\uff0cutil \u7684\u5bfc\u5165\u8def\u5f84\u662f util \u3002\u6240\u8c13\u7684\u5bfc\u5165\u8def\u5f84\u662f\u6307\u76f8\u5bf9\u4e8e Go \u7684\u6e90\u7801\u76ee\u5f55 $GoRoot/src \u6216\u8005 $GoPath/src \u7684\u4e0b\u7684\u5b50\u8def\u5f84\u3002\u4f8b\u5982 main \u5305\u91cc\u5f15\u7528\u7684 fmt \u7684\u6e90\u7801\u8def\u5f84\u662f /usr/local/go/src/fmt \uff0c\u800c util \u7684\u6e90\u7801\u8def\u5f84\u662f /Users/qcrao/hello-world/src/util \uff0c\u6b63\u597d\u6211\u4eec\u8bbe\u7f6e\u7684 GoPath = /Users/qcrao/hello-world\u3002 \u6700\u53f3\u8fb9\u662f\u5e93\u51fd\u6570\u7684\u6e90\u7801\uff0c\u5b9e\u73b0\u4e86\u83b7\u53d6\u672c\u673a IP \u7684\u51fd\u6570\u3002 \u5728 src \u76ee\u5f55\u4e0b\uff0c\u76f4\u63a5\u6267\u884c go build \u547d\u4ee4\uff0c\u5728\u540c\u7ea7\u76ee\u5f55\u751f\u6210\u4e86\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u4e3a src \uff0c\u4f7f\u7528 ./src \u547d\u4ee4\u76f4\u63a5\u6267\u884c\uff0c\u8f93\u51fa\uff1a hello world! Local IP: 192.168.1.3 \u6211\u4eec\u4e5f\u53ef\u4ee5\u6307\u5b9a\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u540d\u79f0\uff1a go build -o bin/hello \u8fd9\u6837\uff0c\u5728 bin \u76ee\u5f55\u4e0b\u4f1a\u751f\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8fd0\u884c\u7ed3\u679c\u548c\u4e0a\u9762\u7684 src \u4e00\u6837\u3002 \u5176\u5b9e\uff0cutil \u5305\u53ef\u4ee5\u5355\u72ec\u88ab\u7f16\u8bd1\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6267\u884c\uff1a go build util \u7f16\u8bd1\u7a0b\u5e8f\u4f1a\u53bb $GoPath/src \u8def\u5f84\u627e util \u5305\uff08\u5176\u5b9e\u662f\u627e\u6587\u4ef6\u5939\uff09\u3002\u8fd8\u53ef\u4ee5\u5728 ./src/util \u76ee\u5f55\u4e0b\u76f4\u63a5\u6267\u884c go build \u7f16\u8bd1\u3002 \u5f53\u7136\uff0c\u76f4\u63a5\u7f16\u8bd1\u5e93\u6e90\u7801\u6587\u4ef6\u4e0d\u4f1a\u751f\u6210 .a \u6587\u4ef6\uff0c\u56e0\u4e3a\uff1a go build \u547d\u4ee4\u5728\u7f16\u8bd1\u53ea\u5305\u542b\u5e93\u6e90\u7801\u6587\u4ef6\u7684\u4ee3\u7801\u5305\uff08\u6216\u8005\u540c\u65f6\u7f16\u8bd1\u591a\u4e2a\u4ee3\u7801\u5305\uff09\u65f6\uff0c\u53ea\u4f1a\u505a\u68c0\u67e5\u6027\u7684\u7f16\u8bd1\uff0c\u800c\u4e0d\u4f1a\u8f93\u51fa\u4efb\u4f55\u7ed3\u679c\u6587\u4ef6\u3002 \u4e3a\u4e86\u5c55\u793a\u6574\u4e2a\u7f16\u8bd1\u94fe\u63a5\u7684\u8fd0\u884c\u8fc7\u7a0b\uff0c\u6211\u4eec\u5728\u9879\u76ee\u6839\u76ee\u5f55\u6267\u884c\u5982\u4e0b\u7684\u547d\u4ee4\uff1a go build -v -x -work -o bin/hello src/main.go -v \u4f1a\u6253\u5370\u6240\u7f16\u8bd1\u8fc7\u7684\u5305\u540d\u5b57\uff0c -x \u6253\u5370\u7f16\u8bd1\u671f\u95f4\u6240\u6267\u884c\u7684\u547d\u4ee4\uff0c -work \u6253\u5370\u7f16\u8bd1\u671f\u95f4\u751f\u6210\u7684\u4e34\u65f6\u6587\u4ef6\u8def\u5f84\uff0c\u5e76\u4e14\u7f16\u8bd1\u5b8c\u6210\u4e4b\u540e\u4e0d\u4f1a\u88ab\u5220\u9664\u3002 \u6267\u884c\u7ed3\u679c\uff1a \u4ece\u7ed3\u679c\u6765\u770b\uff0c\u56fe\u4e2d\u7528\u7bad\u5934\u6807\u6ce8\u4e86\u672c\u6b21\u7f16\u8bd1\u8fc7\u7a0b\u6d89\u53ca 2 \u4e2a\u5305\uff1autil\uff0ccommand-line-arguments\u3002\u7b2c\u4e8c\u4e2a\u5305\u6bd4\u8f83\u8be1\u5f02\uff0c\u6e90\u7801\u91cc\u6839\u672c\u5c31\u6ca1\u6709\u8fd9\u4e2a\u540d\u5b57\u597d\u5417\uff1f\u5176\u5b9e\u8fd9\u662f go build \u547d\u4ee4\u68c0\u6d4b\u5230 [packages] \u5904\u586b\u7684\u662f\u4e00\u4e2a .go \u6587\u4ef6\uff0c\u56e0\u6b64\u521b\u5efa\u4e86\u4e00\u4e2a\u865a\u62df\u7684\u5305\uff1acommand-line-arguments\u3002 \u540c\u65f6\uff0c\u7528\u7ea2\u6846\u5708\u51fa\u4e86 compile, link\uff0c\u4e5f\u5c31\u662f\u5148\u7f16\u8bd1\u4e86 util \u5305\u548c main.go \u6587\u4ef6\uff0c\u5206\u522b\u5f97\u5230 .a \u6587\u4ef6\uff0c\u4e4b\u540e\u5c06\u4e24\u8005\u8fdb\u884c\u94fe\u63a5\uff0c\u6700\u7ec8\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e76\u4e14\u79fb\u52a8\u5230 bin \u76ee\u5f55\u4e0b\uff0c\u6539\u540d\u4e3a hello\u3002 \u53e6\u5916\uff0c\u7b2c\u4e00\u884c\u663e\u793a\u4e86\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u6b64\u76ee\u5f55\u7684\u6587\u4ef6\u7ed3\u6784\u662f\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u548c hello-world \u76ee\u5f55\u7684\u5c42\u7ea7\u57fa\u672c\u4e00\u81f4\u3002command-line-arguments \u5c31\u662f\u865a\u62df\u7684 main.go \u6587\u4ef6\u6240\u5904\u7684\u5305\u3002exe \u76ee\u5f55\u4e0b\u7684\u53ef\u6267\u884c\u6587\u4ef6\u5728\u6700\u540e\u4e00\u6b65\u88ab\u79fb\u52a8\u5230\u4e86 bin \u76ee\u5f55\u4e0b\uff0c\u6240\u4ee5\u8fd9\u91cc\u662f\u7a7a\u7684\u3002 \u6574\u4f53\u6765\u770b\uff0c go build \u5728\u6267\u884c\u65f6\uff0c\u4f1a\u5148\u9012\u5f52\u5bfb\u627e main.go \u6240\u4f9d\u8d56\u7684\u5305\uff0c\u4ee5\u53ca\u4f9d\u8d56\u7684\u4f9d\u8d56\uff0c\u76f4\u81f3\u6700\u5e95\u5c42\u7684\u5305\u3002\u8fd9\u91cc\u53ef\u4ee5\u662f\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u4e5f\u53ef\u4ee5\u662f\u5bbd\u5ea6\u4f18\u5148\u904d\u5386\u3002\u5982\u679c\u53d1\u73b0\u6709\u5faa\u73af\u4f9d\u8d56\uff0c\u5c31\u4f1a\u76f4\u63a5\u9000\u51fa\uff0c\u8fd9\u4e5f\u662f\u7ecf\u5e38\u4f1a\u53d1\u751f\u7684\u5faa\u73af\u5f15\u7528\u7f16\u8bd1\u9519\u8bef\u3002 \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u4f9d\u8d56\u5173\u7cfb\u4f1a\u5f62\u6210\u4e00\u68f5\u5012\u7740\u751f\u957f\u7684\u6811\uff0c\u6811\u6839\u5728\u6700\u4e0a\u9762\uff0c\u5c31\u662f main.go \u6587\u4ef6\uff0c\u6700\u4e0b\u9762\u662f\u6ca1\u6709\u4efb\u4f55\u5176\u4ed6\u4f9d\u8d56\u7684\u5305\u3002\u7f16\u8bd1\u5668\u4f1a\u4ece\u6700\u5de6\u7684\u8282\u70b9\u6240\u4ee3\u8868\u7684\u5305\u5f00\u59cb\u6328\u4e2a\u7f16\u8bd1\uff0c\u5b8c\u6210\u4e4b\u540e\uff0c\u518d\u53bb\u7f16\u8bd1\u4e0a\u4e00\u5c42\u7684\u5305\u3002 \u8fd9\u91cc\uff0c\u5f15\u7528\u90dd\u6797\u8001\u5e08\u51e0\u5e74\u524d\u5728 github \u4e0a\u53d1\u8868\u7684 go \u547d\u4ee4\u6559\u7a0b\uff0c\u53ef\u4ee5\u4ece\u53c2\u8003\u8d44\u6599\u627e\u5230\u539f\u6587\u5730\u5740\u3002 \u4ece\u4ee3\u7801\u5305\u7f16\u8bd1\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u5982\u679c\u4ee3\u7801\u5305 A \u4f9d\u8d56\u4ee3\u7801\u5305 B\uff0c\u5219\u79f0\u4ee3\u7801\u5305 B \u662f\u4ee3\u7801\u5305 A \u7684\u4f9d\u8d56\u4ee3\u7801\u5305\uff08\u4ee5\u4e0b\u7b80\u79f0\u4f9d\u8d56\u5305\uff09\uff0c\u4ee3\u7801\u5305 A \u662f\u4ee3\u7801\u5305 B \u7684\u89e6\u53d1\u4ee3\u7801\u5305\uff08\u4ee5\u4e0b\u7b80\u79f0\u89e6\u53d1\u5305\uff09\u3002 \u6267\u884c go build \u547d\u4ee4\u7684\u8ba1\u7b97\u673a\u5982\u679c\u62e5\u6709\u591a\u4e2a\u903b\u8f91 CPU \u6838\u5fc3\uff0c\u90a3\u4e48\u7f16\u8bd1\u4ee3\u7801\u5305\u7684\u987a\u5e8f\u53ef\u80fd\u4f1a\u5b58\u5728\u4e00\u4e9b\u4e0d\u786e\u5b9a\u6027\u3002\u4f46\u662f\uff0c\u5b83\u4e00\u5b9a\u4f1a\u6ee1\u8db3\u8fd9\u6837\u7684\u7ea6\u675f\u6761\u4ef6\uff1a\u4f9d\u8d56\u4ee3\u7801\u5305 -> \u5f53\u524d\u4ee3\u7801\u5305 -> \u89e6\u53d1\u4ee3\u7801\u5305\u3002 \u5230\u8fd9\u91cc\uff0c\u4f60\u4e00\u5b9a\u4f1a\u53d1\u73b0\uff0c\u5bf9\u4e8e hello-wrold \u6587\u4ef6\u5939\u4e0b\u7684 pkg \u76ee\u5f55\u597d\u50cf\u4e00\u76f4\u6ca1\u6709\u6d89\u53ca\u5230\u3002 \u5176\u5b9e\uff0cpkg \u76ee\u5f55\u4e0b\u9762\u5e94\u8be5\u5b58\u653e\u7684\u662f\u6d89\u53ca\u5230\u7684\u5e93\u6587\u4ef6\u7f16\u8bd1\u540e\u7684\u5305\uff0c\u4e5f\u5c31\u662f\u4e00\u4e9b .a \u6587\u4ef6\u3002\u4f46\u662f go build \u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e9b .a \u6587\u4ef6\u653e\u5728\u4e34\u65f6\u6587\u4ef6\u5939\u4e2d\uff0c\u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u88ab\u76f4\u63a5\u5220\u6389\uff0c\u56e0\u6b64\u4e00\u822c\u4e0d\u4f1a\u7528\u5230\u3002 \u524d\u9762\u6211\u4eec\u63d0\u5230\u8fc7\uff0c\u5728 go build \u547d\u4ee4\u91cc\u52a0\u4e0a -i \u53c2\u6570\u4f1a\u5b89\u88c5\u8fd9\u4e9b\u5e93\u6587\u4ef6\u7f16\u8bd1\u7684\u5305\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e9b .a \u6587\u4ef6\u4f1a\u653e\u5230 pkg \u76ee\u5f55\u4e0b\u3002 \u5728\u9879\u76ee\u6839\u76ee\u5f55\u6267\u884c go build-i src/main.go \u540e\uff0cpkg \u76ee\u5f55\u91cc\u589e\u52a0\u4e86 util.a \u6587\u4ef6\uff1a darwin_amd64 \u8868\u793a\u7684\u662f\uff1a GOOS \u548c GOARCH\u3002\u8fd9\u4e24\u4e2a\u73af\u5883\u53d8\u91cf\u4e0d\u7528\u6211\u4eec\u8bbe\u7f6e\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u7684\u3002 GOOS \u662f Go \u6240\u5728\u7684\u64cd\u4f5c\u7cfb\u7edf\u7c7b\u578b\uff0cGOARCH \u662f Go \u6240\u5728\u7684\u8ba1\u7b97\u67b6\u6784\u3002 Mac \u5e73\u53f0\u4e0a\u8fd9\u4e2a\u76ee\u5f55\u540d\u5c31\u662f darwin_amd64\u3002 \u751f\u6210\u4e86 util.a \u6587\u4ef6\u540e\uff0c\u518d\u6b21\u7f16\u8bd1\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u4f1a\u518d\u91cd\u65b0\u7f16\u8bd1 util.go \u6587\u4ef6\uff0c\u52a0\u5feb\u4e86\u7f16\u8bd1\u901f\u5ea6\u3002 \u540c\u65f6\uff0c\u5728\u6839\u76ee\u5f55\u4e0b\u751f\u6210\u4e86\u540d\u79f0\u4e3a main \u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8fd9\u662f\u4ee5 main.go \u7684\u6587\u4ef6\u540d\u547d\u4ee4\u7684\u3002 hello-world \u8fd9\u4e2a\u9879\u76ee\u7684\u4ee3\u7801\u5df2\u7ecf\u4e0a\u4f20\u5230\u4e86 github \u9879\u76ee Go-Questions \uff0c\u8fd9\u4e2a\u9879\u76ee\u7531\u95ee\u9898\u5bfc\u5165\uff0c\u4f01\u56fe\u4e32\u8fde Go \u7684\u6240\u6709\u77e5\u8bc6\u70b9\uff0c\u6b63\u5728\u5b8c\u5584\uff0c\u671f\u5f85\u4f60\u7684 star\u3002\u5730\u5740\u89c1\u53c2\u8003\u8d44\u6599\u3010Go-Questions hello-world\u9879\u76ee\u3011\u3002","title":"go build"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/#go-install","text":"go install \u7528\u4e8e\u7f16\u8bd1\u5e76\u5b89\u88c5\u6307\u5b9a\u7684\u4ee3\u7801\u5305\u53ca\u5b83\u4eec\u7684\u4f9d\u8d56\u5305\u3002\u76f8\u6bd4 go build \uff0c\u5b83\u53ea\u662f\u591a\u4e86\u4e00\u4e2a\u201c\u5b89\u88c5\u7f16\u8bd1\u540e\u7684\u7ed3\u679c\u6587\u4ef6\u5230\u6307\u5b9a\u76ee\u5f55\u201d\u7684\u6b65\u9aa4\u3002 \u8fd8\u662f\u4f7f\u7528\u4e4b\u524d hello-world \u9879\u76ee\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u5148\u5c06 pkg \u76ee\u5f55\u5220\u6389\uff0c\u5728\u9879\u76ee\u6839\u76ee\u5f55\u6267\u884c\uff1a go install src/main.go \u6216\u8005 go install util \u4e24\u8005\u90fd\u4f1a\u5728\u6839\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2a pkg \u76ee\u5f55\uff0c\u5e76\u4e14\u751f\u6210\u4e00\u4e2a util.a \u6587\u4ef6\u3002 \u5e76\u4e14\uff0c\u5728\u6267\u884c\u524d\u8005\u7684\u65f6\u5019\uff0c\u4f1a\u5728 GOBIN \u76ee\u5f55\u4e0b\u751f\u6210\u540d\u4e3a main \u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u6240\u4ee5\uff0c\u8fd0\u884c go install \u547d\u4ee4\uff0c\u5e93\u6e90\u7801\u5305\u5bf9\u5e94\u7684 .a \u6587\u4ef6\u4f1a\u88ab\u653e\u7f6e\u5230 pkg \u76ee\u5f55\u4e0b\uff0c\u547d\u4ee4\u6e90\u7801\u5305\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4f1a\u88ab\u653e\u5230 GOBIN \u76ee\u5f55\u3002 go install \u5728 GoPath \u6709\u591a\u4e2a\u76ee\u5f55\u7684\u65f6\u5019\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e9b\u95ee\u9898\uff0c\u5177\u4f53\u53ef\u4ee5\u53bb\u770b\u90dd\u6797\u8001\u5e08\u7684 Go\u547d\u4ee4\u6559\u7a0b \uff0c\u8fd9\u91cc\u4e0d\u5c55\u5f00\u4e86\u3002","title":"go install"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/#go-run","text":"go run \u7528\u4e8e\u7f16\u8bd1\u5e76\u8fd0\u884c\u547d\u4ee4\u6e90\u7801\u6587\u4ef6\u3002 \u5728 hello-world \u9879\u76ee\u7684\u6839\u76ee\u5f55\uff0c\u6267\u884c go run \u547d\u4ee4\uff1a go run -x -work src/main.go -x \u53ef\u4ee5\u6253\u5370\u6574\u4e2a\u8fc7\u7a0b\u6d89\u53ca\u5230\u7684\u547d\u4ee4\uff0c-work \u53ef\u4ee5\u770b\u5230\u4e34\u65f6\u7684\u5de5\u4f5c\u76ee\u5f55\uff1a \u4ece\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u4ecd\u7136\u662f\u5148\u7f16\u8bd1\uff0c\u518d\u8fde\u63a5\uff0c\u6700\u540e\u76f4\u63a5\u6267\u884c\uff0c\u5e76\u6253\u5370\u51fa\u4e86\u6267\u884c\u7ed3\u679c\u3002 \u7b2c\u4e00\u884c\u6253\u5370\u7684\u5c31\u662f\u5de5\u4f5c\u76ee\u5f55\uff0c\u6700\u7ec8\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u5c31\u662f\u653e\u7f6e\u4e8e\u6b64\uff1a main \u5c31\u662f\u6700\u7ec8\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002","title":"go run"},{"location":"golang/docs/Go%20%E7%A8%8B%E5%BA%8F%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84/#_11","text":"\u8fd9\u6b21\u7684\u8bdd\u9898\u592a\u5927\u4e86\uff0c\u56f0\u96be\u91cd\u91cd\u3002\u4ece\u7f16\u8bd1\u539f\u7406\u5230 go \u542f\u52a8\u65f6\u7684\u6d41\u7a0b\uff0c\u5230 go \u547d\u4ee4\u539f\u7406\uff0c\u6bcf\u4e2a\u8bdd\u9898\u5355\u72ec\u62bd\u51fa\u6765\u90fd\u53ef\u4ee5\u5199\u5f88\u591a\u3002 \u5e78\u597d\u6709\u4e00\u4e9b\u5f88\u4e0d\u9519\u7684\u4e66\u548c\u535a\u5ba2\u6587\u7ae0\u53ef\u4ee5\u53bb\u53c2\u8003\u3002\u8fd9\u7bc7\u6587\u7ae0\u5c31\u4f5c\u4e3a\u4e00\u4e2a\u5f15\u5b50\uff0c\u4f60\u53ef\u4ee5\u8ddf\u968f\u53c2\u8003\u8d44\u6599\u91cc\u63a8\u8350\u7684\u4e00\u4e9b\u5185\u5bb9\u53bb\u53d1\u6563\u3002","title":"\u603b\u7ed3"},{"location":"golang/docs/Golang%20Heap%20%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/","text":"\u5806\u539f\u7406\u89e3\u6790 \u5806\u4e00\u822c\u6307\u4e8c\u53c9\u5806\u3002\u662f\u4f7f\u7528\u5b8c\u5168\u4e8c\u53c9\u6811\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u6784\u5efa\u7684\u4e00\u79cd\u5b9e\u9645\u5e94\u7528\u3002\u901a\u8fc7\u5b83\u7684\u7279\u6027\uff0c\u5206\u4e3a\u6700\u5927\u5806\u548c\u6700\u5c0f\u5806\u4e24\u79cd\u3002 \u5982\u4e0a\u56fe\u53ef\u77e5\uff0c\u6700\u5c0f\u5806\u5c31\u662f\u5728\u8fd9\u9897\u4e8c\u53c9\u6811\u4e2d\uff0c\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u6bd4\u5176\u6240\u5728\u5b50\u6811\u7684\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u90fd\u8981\u5c0f\u3002\u6700\u5927\u5806\u5c31\u662f\u5728\u8fd9\u9897\u4e8c\u53c9\u6811\u4e2d\uff0c\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u6bd4\u8d77\u6240\u5728\u5b50\u6811\u7684\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u503c\u90fd\u8981\u5927\u3002 \u90a3\u4e48\u5982\u4f55\u6784\u5efa\u4e00\u4e2a\u5806\u5462\uff1f\u9996\u5148\u8981\u5c06\u6240\u6709\u7684\u5143\u7d20\u6784\u5efa\u4e3a\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\u3002\u5b8c\u5168\u4e8c\u53c9\u6811\u662f\u6307\u9664\u53f6\u5b50\u8282\u70b9\uff0c\u6240\u6709\u5c42\u7ea7\u662f\u6ee1\u8282\u70b9\uff0c\u53f6\u5b50\u8282\u70b9\u4ece\u5de6\u5411\u53f3\u6392\u5217\u586b\u6ee1\u3002 \u5728\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\uff0c\u5c06\u6570\u636e\u91cd\u65b0\u6309\u7167\u5806\u7684\u7684\u7279\u6027\u6392\u5217\uff0c\u5c31\u53ef\u4ee5\u5c06\u5b8c\u5168\u4e8c\u53c9\u6811\u53d8\u6210\u4e00\u4e2a\u5806\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53eb\u505a\u201c\u5806\u5316\u201d\u3002 \u5728\u5806\u4e2d\uff0c\u6211\u4eec\u8981\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u4e00\u822c\u4ece\u5806\u9876\u5220\u9664\uff08\u53ef\u4ee5\u53d6\u5230\u6700\u5927\u503c/\u6700\u5c0f\u503c\uff09\u3002\u5220\u9664\u4e4b\u540e\uff0c\u6570\u636e\u96c6\u5c31\u4e0d\u80fd\u7b97\u4f5c\u4e00\u4e2a\u5806\u4e86\uff0c\u56e0\u4e3a\u6700\u9876\u5c42\u7684\u5143\u7d20\u6ca1\u6709\u4e86\uff0c\u6570\u636e\u96c6\u4e0d\u7b26\u5408\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u5b9a\u4e49\u3002\u8fd9\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5806\u7684\u6570\u636e\u8fdb\u884c\u91cd\u65b0\u6392\u5217\uff0c\u4e5f\u5c31\u662f\u91cd\u65b0\u201c\u5806\u5316\u201d\u3002\u540c\u6837\u7684\uff0c\u5728\u5806\u4e2d\u65b0\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u4e5f\u9700\u8981\u91cd\u65b0\u505a\u201c\u5806\u5316\u201d\u7684\u64cd\u4f5c\uff0c\u6765\u5c06\u6570\u636e\u96c6\u6062\u590d\u5230\u6ee1\u8db3\u5806\u5b9a\u4e49\u7684\u72b6\u6001\u3002 \u6240\u4ee5\uff0c\u5728\u5806\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u6700\u91cd\u8981\u7684\u662f\u201c\u5806\u5316\u201d\u7684\u8fd9\u4e2a\u7b97\u6cd5\u64cd\u4f5c\u3002\u5176\u6b21\uff0c\u5806\u5316\u6570\u636e\u5982\u4f55\u5b58\u50a8\u4e5f\u662f\u5f88\u91cd\u8981\u7684\u3002\u63a5\u4e0b\u6765\uff0c\u8be6\u7ec6\u8bf4\u4e00\u4e0b\u3002 \u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u65b9\u5f0f \u5bf9\u4e8e\u4e8c\u53c9\u6811\u6765\u8bf4\uff0c\u5b58\u50a8\u65b9\u5f0f\u67092\u79cd\uff0c\u4e00\u79cd\u4f7f\u7528\u6570\u7ec4\u7684\u5f62\u5f0f\u6765\u5b58\u50a8\uff0c\u4e00\u79cd\u4f7f\u7528\u94fe\u8868\u7684\u65b9\u5f0f\u5b58\u50a8\u3002\u540c\u6837\u7684\uff0c\u8fd9\u4e24\u79cd\u65b9\u5f0f\u7ee7\u627f\u4e86\u8fd9\u4e24\u79cd\u6570\u636e\u7ed3\u6784\u7684\u574f\u5904\u548c\u597d\u5904\u3002\u94fe\u8868\u7684\u65b9\u5f0f\u76f8\u5bf9\u6d6a\u8d39\u5b58\u50a8\u7a7a\u95f4\uff0c\u56e0\u4e3a\u8981\u5b58\u50a8\u5de6\u53f3\u5b50\u6811\u7684\u6307\u9488\uff0c\u4f46\u6269\u7f29\u5bb9\u65b9\u4fbf\u3002\u800c\u6570\u7ec4\u66f4\u52a0\u8282\u7701\u7a7a\u95f4\uff0c\u66f4\u52a0\u65b9\u4fbf\u5b9a\u4f4d\u8282\u70b9\uff0c\u7f3a\u70b9\u5219\u662f\u6269\u7f29\u5bb9\u4e0d\u4fbf\u3002 \u6211\u4eec\u4ee5\u6570\u7ec4\u7684\u65b9\u5f0f\u6765\u505a\u793a\u4f8b\uff0c\u4e86\u89e3\u5b58\u50a8\u7684\u7ec6\u8282\uff1a \u6211\u4eec\u4e0d\u7528 (index = 0) \u7684\u4f4d\u7f6e\u6765\u5b58\u50a8\u6570\u636e\uff0c\u800c\u662f\u4ece (index = 1) \u5f00\u59cb\uff0c\u8fd9\u6837\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u8282\u70b9 (i) \u6765\u8bf4\uff0c\u5c31\u6709 \u5de6\u8282\u70b9 (2 i)\uff0c\u53f3\u8282\u70b9 (2 i+1)\uff0c\u800c\u7236\u8282\u70b9\u5c31\u662f (\\frac i 2)\u3002 \u5806\u7684\u64cd\u4f5c \u6211\u4eec\u5148\u4ecb\u7ecd\u4e24\u79cd\u5e38\u7528\u7684\u5806\u64cd\u4f5c\uff1apop & push\uff0c\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u548c\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u3002 \u5047\u5982\u6211\u4eec\u6709\u5982\u4e0b\u7684\u4e00\u4e2a\u6700\u5927\u5806\uff0c\u5f53\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e\uff0c\u5c31\u9700\u8981\u505a\u201c\u5806\u5316\u201d\uff0c\u4f7f\u5f97\u5806\u6ee1\u8db3\u5b9a\u4e49\u3002 \u8fd9\u79cd\u4ece\u5806\u5e95\u5411\u4e0a\u5806\u5316\u7684\u8fc7\u7a0b\uff0c\u53eb\u505a\u201c\u4ece\u4e0b\u5230\u4e0a\u5806\u5316\u201d\u3002\u6211\u628a\u8fd9\u4e2a\u8fc7\u7a0b\u5b9e\u73b0\u4e3a\u4ee3\u7801\uff0c\u5982\u4e0b\uff1a // \u4ece\u4e0b\u5230\u4e0a\u5806\u5316 func (h *Heap) downToUpHeapify(pos int) { for pos / 2 > 0 && h.data[pos/2].Less(h.data[pos]) { // \u5982\u679c\u5b58\u5728\u7236\u8282\u70b9 & \u503c\u5927\u4e8e\u7236\u8282\u70b9 h.swap(pos, pos/2) // \u4ea4\u6362\u4e24\u4e2a\u503c\u7684\u4f4d\u7f6e pos = pos /2 // \u5c06\u64cd\u4f5c\u8282\u70b9\u53d8\u4e3a\u7236\u8282\u70b9\u7684\u4f4d\u7f6e } } \u5f53\u6211\u4eec\u60f3\u8981\u4ece\u5806\u9876 pop \u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u5019\u3002\u6211\u4eec\u9700\u8981\u5148\u5c06\u5143\u7d20pop\uff0c\u7136\u540e\u628a\u5806\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u653e\u5230\u5806\u9876\uff0c\u7136\u540e\u8fdb\u884c\u4e00\u6b21\u201c\u5806\u5316\u201d\u3002 \u8fd9\u79cd\u4ece\u5806\u9876\u5411\u4e0b\u5806\u5316\u7684\u8fc7\u7a0b\uff0c\u53eb\u505a\u201c\u4ece\u4e0a\u5230\u4e0b\u5806\u5316\u201d\u3002\u6211\u628a\u8fd9\u4e2a\u8fc7\u7a0b\u5b9e\u73b0\u4e3a\u4ee3\u7801\uff0c\u5982\u4e0b\uff1a // \u4ece\u4e0a\u5230\u4e0b\u5806\u5316 func (h *Heap) upToDownHeapify() { max := h.len i := 1 pos := i for { if i * 2 <= max && h.data[i].Less(h.data[i*2]) { // \u5982\u679c\u6709\u5de6\u5b50\u6811\uff0c\u4e14\u81ea\u5df1\u5c0f\u4e8e\u5de6\u5b50\u6811 pos = i*2 } if i *2 +1 <= max && h.data[pos].Less(h.data[i*2+1]) { // \u5982\u679c\u6709\u53f3\u5b50\u6811\uff0c\u4e14\u81ea\u5df1\u5c0f\u4e8e\u53f3\u5b50\u6811 pos = i*2+1 } if pos == i { // \u5982\u679c\u4f4d\u7f6e\u6ca1\u6709\u53d8\u5316\uff0c\u8bf4\u660e\u5806\u5316\u7ed3\u675f break } h.swap(i, pos) // \u4ea4\u6362\u5f53\u524d\u4f4d\u7f6e\u548c\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5185\u5bb9 i = pos // \u64cd\u4f5c\u4e0b\u4e00\u4e2a\u4f4d\u7f6e } } Golang \u7684 container.heap \u5305 \u6ce8\u610f\uff0c\u4e0a\u8ff0\u7684\u8bb2\u8ff0\u4e2d\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8868\u793a\uff0c\u6211\u4eec\u5728\u6570\u7ec4\u7684\u7d22\u5f150\u6ca1\u6709\u5b58\u50a8\u5185\u5bb9\uff0c\u4ece\u7d22\u5f151\u5f00\u59cb\u5b58\u50a8\u3002 \u800c Golang \u7684\u5b9e\u73b0\u4e2d\uff0c\u7d22\u5f150 \u662f\u5b58\u50a8\u4e86\u6570\u636e\u7684\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u5c31\u5206\u522b\u53d8\u6210\u4e86 (2 i+1) \u548c (2 i+2)\u3002 Golang \u7684 Container.heap \u662f\u4e00\u4e2a\u5b9e\u73b0\u4e86\u901a\u7528\u6700\u5c0f\u5806\u7684\u5305\u3002\u4efb\u4f55\u6570\u636e\u96c6\u53ea\u8981\u5b9e\u73b0\u4e86\u5176 Interface \u63a5\u53e3\uff0c\u5373\u53ef\u4f7f\u7528\u8fd9\u4e2a\u5305\u5c06\u5176\u5806\u5316\uff0c\u5e76\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c\u3002 type Interface interface { sort.Interface Push(x interface{}) // \u628a\u5143\u7d20\u6dfb\u52a0\u5230 Len() \u7684\u4f4d\u7f6e Pop() interface{} // \u5220\u9664\u5e76\u8fd4\u56de Len() - 1 \u7684\u5143\u7d20. } // sort.Interface type Interface interface { // Len is the number of elements in the collection. Len() int // Less reports whether the element with // index i should sort before the element with index j. Less(i, j int) bool // Swap swaps the elements with indexes i and j. Swap(i, j int) } Interface \u7684\u6570\u636e\u7ed3\u6784\u5982\u4e0a\uff0c\u8981\u6c42\u5b9e\u73b0 sort.Interface \u548c Push Pop \u4e24\u4e2a\u65b9\u6cd5\u3002 sort.Interface \u7684\u5b9a\u4e49\uff0c\u540c\u6837\u8d34\u5728\u4e86\u4e0a\u9762\uff0c\u4e3b\u8981\u662f\u4e09\u4e2a\u65b9\u6cd5\uff1a Len \u8fd4\u56de\u6570\u636e\u96c6\u7684\u957f\u5ea6\uff1b Less \u8fd4\u56de index i \u662f\u5426\u5c0f\u4e8e index j\uff1b Swap \u4ea4\u6362 index i \u548c j \u7684\u503c\uff1b \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u770b\u4e00\u4e0b Push \u64cd\u4f5c\uff1a func Push(h Interface, x interface{}) { h.Push(x) // \u5411\u6570\u636e\u96c6\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 up(h, h.Len()-1) // \u4ece\u4e0b\u5411\u4e0a\u5806\u5316 } // \u4ece\u4e0b\u5411\u4e0a\u5806\u5316\u7684\u5185\u5bb9 func up(h Interface, j int) { // h \u8868\u793a\u5806\uff0cj \u4ee3\u8868\u9700\u8981\u5806\u5316\u7684\u5143\u7d20 index for { i := (j - 1) / 2 // \u5b9a\u4e49 j \u7684\u7236 index if i == j || !h.Less(j, i) { // \u5982\u679c\u4e24\u4e2a\u5143\u7d20\u76f8\u7b49 \u6216\u8005 \u7236\u5143\u7d20\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20 break // \u5806\u5316\u5b8c\u6210 } h.Swap(i, j) // \u4ea4\u6362\u7236\u5143\u7d20\u548c\u5f53\u524d\u5143\u7d20 j = i // index \u53d8\u4e3a\u7236\u5143\u7d20\u7684 index } } \u4e0a\u9762\u5728 push \u5143\u7d20\u4e4b\u540e\uff0c\u505a\u4e86 \u201c\u4ece\u4e0b\u5230\u4e0a\u201d\u7684\u5806\u5316\u3002 \u63a5\u4e0b\u6765\uff0c\u662f Pop \u64cd\u4f5c\uff1a // \u8fd4\u56de\u5806\u9876\u7684\u5143\u7d20\uff0c\u5e76\u5220\u6389\u5b83 func Pop(h Interface) interface{} { n := h.Len() - 1 // \u83b7\u53d6\u6700\u7ec8\u5806\u957f\u5ea6\uff08\u53bb\u6389\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff09 h.Swap(0, n) // \u4ea4\u6362\u5806\u9876\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20 down(h, 0, n) // \u4ece\u4e0a\u5230\u4e0b\u5806\u5316 return h.Pop() // \u5f39\u51fa\u6700\u540e\u4e00\u4e2a\u5143\u7d20 } func down(h Interface, i0, n int) bool { i := i0 // \u5806\u9876 index for { j1 := 2*i + 1 // \u5de6\u5b69\u5b50 index if j1 >= n || j1 < 0 { // j1 \u5927\u4e8e\u5806\u957f\u5ea6 \u6216 \u6ea2\u51fa break // \u5806\u5316\u7ed3\u675f } j := j1 // j = \u5de6\u5b69\u5b50 if j2 := j1 + 1; j2 < n && h.Less(j2, j1) { // j2 = \u53f3\u5b69\u5b50\uff1bj \u5c0f\u4e8e\u5806\u957f\u5ea6 && \u53f3\u5b69\u5b50\u5c0f\u4e8e\u5de6\u5b69\u5b50 j = j2 // j = 2*i + 2 = \u53f3\u5b69\u5b50 } // \u4e0a\u9762\u662f\u4ece\u5de6\u53f3\u5b69\u5b50\u9009\u51fa\u5c0f\u7684\u90a3\u4e2a\uff0c\u5c06 index \u8d4b\u503c\u7ed9 j if !h.Less(j, i) { // \u5982\u679c \u5806\u9876\u5c0f\u4e8e j , \u5806\u5316\u7ed3\u675f break } h.Swap(i, j) // \u4ea4\u6362\u5806\u9876\u5143\u7d20\u548c j i = j // \u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u64cd\u4f5c index } // \u8fd4\u56de \u5143\u7d20\u662f\u5426\u6709\u79fb\u52a8 // \u6b64\u5904\u662f\u4e00\u4e2a\u7279\u6b8a\u8bbe\u8ba1\uff0c\u7528\u6765\u5224\u65ad\u5411\u4e0b\u5806\u5316\u662f\u5426\u771f\u7684\u6709\u64cd\u4f5c // \u5f53\u5220\u9664\u4e2d\u95f4\u7684\u5143\u7d20\u65f6\uff0c\u5982\u679c\u5411\u4e0b\u5806\u5316\u6ca1\u6709\u64cd\u4f5c\u7684\u8bdd\uff0c\u5c31\u9700\u8981\u518d\u505a\u5411\u4e0a\u5806\u5316 return i > i0 } Golang \u8fd8\u63d0\u4f9b\u4e86\u4e4b\u524d\u539f\u7406\u8bb2\u8ff0\u4e2d\u6ca1\u6709\u7684\u65b9\u6cd5\uff1a Remove Fix Remove \u662f\u5220\u9664\u5806\u4e2d\u6307\u5b9a\u5143\u7d20\uff0c\u4e0d\u4e00\u5b9a\u662f\u5806\u9876\uff1b Fix \u662f\u5f53\u67d0\u4e00\u4e2a\u5143\u7d20\u7684\u503c\u6709\u53d8\u5316\u65f6\uff0c\u7528\u6765\u91cd\u65b0\u5806\u5316\uff1b func Remove(h Interface, i int) interface{} { n := h.Len() - 1 // \u5806\u7684\u957f\u5ea6 if n != i { // \u5982\u679c\u4e0d\u662f\u5806\u9876 h.Swap(i, n) // \u4ea4\u6362\u5220\u9664\u5143\u7d20 \u548c \u6700\u540e\u4e00\u4e2a\u5143\u7d20 if !down(h, i, n) { // \u4ece\u4e0a\u5230\u4e0b\u5806\u5316 up(h, i) // \u5982\u679c\u6ca1\u6709\u6210\u529f\uff0c\u5c31\u4ece\u4e0b\u5c9b\u4e0a\u5806\u5316 } } return h.Pop() // \u5f39\u51fa\u6700\u540e\u4e00\u4e2a\u5143\u7d20 } func Fix(h Interface, i int) { // i \u662f\u503c\u88ab\u6539\u53d8\u7684 index if !down(h, i, h.Len()) { // \u4ece\u4e0a\u5230\u4e0b\u5806\u5316 up(h, i) // \u5982\u679c\u6ca1\u6709\u6210\u529f\uff0c\u5c31\u4ece\u4e0b\u5c9b\u4e0a\u5806\u5316 } } \u8fd9\u91cc\u6709\u4e00\u4e2a\u5185\u5bb9\u9700\u8981\u6ce8\u610f\uff0c\u5c31\u662f Remove \u4e2d\uff0c (n = Len() -1) \u6765\u8868\u793a\u5806\u957f\u5ea6\uff0c\u800c\u5728 Fix \u5219\u4f7f\u7528 (n = Len()) \u6765\u8868\u793a\u3002\u8fd9\u662f\u56e0\u4e3a Remove \u4e2d\uff0c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u662f\u8981\u88ab\u5220\u9664\u6389\uff0c\u6240\u4ee5\u6700\u7ec8\u7684\u5806\u957f\u5ea6\u662f (Len() \u2013 1)\u3002 \u4e0a\u9762\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86 Golang \u4e2d\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5806\u7684\u6240\u6709\u64cd\u4f5c\u3002\u53ea\u5269\u4e0b\u6700\u540e\u4e00\u4e2a\u65b9\u6cd5\uff1aInit\uff0c\u521d\u59cb\u5316\u4e00\u4e2a\u6570\u636e\u96c6\uff0c\u53d8\u6210\u5806\u3002 func Init(h Interface) { n := h.Len() // n \u662f\u5806\u957f\u5ea6 // i = \u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u7684 index\uff1b i >= \u5806\u9876\uff1b index \u81ea\u51cf for i := n/2 - 1; i >= 0; i-- { // \u4ece\u5f53\u524d\u8282\u70b9\u5f00\u59cb\uff0c\u4ece\u4e0a\u5230\u4e0b\u5806\u5316 down(h, i, n) } } \u6839\u636e\u5806\u7684\u7279\u6027\u53ef\u77e5\uff0c\u53f6\u5b50\u8282\u70b9\u4e0d\u53ef\u4ee5\u4ece\u4e0a\u5230\u4e0b\u5806\u5316\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u627e\u5230\u6700\u540e\u975e\u53f6\u5b50\u8282\u70b9\u7684\u7d22\u5f15\u503c\uff0c\u4ece\u8fd9\u91cc\u5f00\u59cb\u505a\u5806\u5316\u64cd\u4f5c\u3002 \u81f3\u6b64\uff0ccontainer.heap \u5305\u4e2d\u7684\u5185\u5bb9\u5c31\u5168\u90e8\u8bb2\u89e3\u5b8c\u6bd5\u3002\u4e86\u89e3\u4e86\u5806\u7684\u539f\u7406\u4e4b\u540e\uff0c\u5176\u5b9e\u4f1a\u53d1\u73b0\u5e76\u4e0d\u96be\u7406\u89e3\u3002 \u5806\u7684\u5e94\u7528 \u5728\u5806\u6392\u5e8f\u4e2d\uff0c\u5c31\u9700\u8981\u7528\u5230\u5806\u7b97\u6cd5\u6765\u5c06\u6570\u636e\u7ea7\u5806\u5316\uff0c\u7136\u540e\u4e00\u4e2a\u4e2a\u7684\u5f39\u51fa\u5143\u7d20\uff0c\u4ee5\u8fbe\u5230\u6392\u5e8f\u7684\u76ee\u7684\u3002 \u5806\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5b9e\u73b0\u4f18\u5148\u7ea7\u961f\u5217\u3002\u4f18\u5148\u7ea7\u961f\u5217\u5728\u5b9e\u9645\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\u3002\u5728\u5f88\u591a\u65f6\u5019\uff0c\u90fd\u53ef\u4ee5\u7528\u5b83\u6765\u5b9e\u73b0\u5904\u7406\u5e26\u4f18\u5148\u7ea7\u7684\u4e8b\u4ef6\uff0c\u5904\u7406\u5b9a\u65f6\u4efb\u52a1\u7b49\u7b49\u3002","title":"\u5806\u539f\u7406\u89e3\u6790"},{"location":"golang/docs/Golang%20Heap%20%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#_1","text":"\u5806\u4e00\u822c\u6307\u4e8c\u53c9\u5806\u3002\u662f\u4f7f\u7528\u5b8c\u5168\u4e8c\u53c9\u6811\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u6784\u5efa\u7684\u4e00\u79cd\u5b9e\u9645\u5e94\u7528\u3002\u901a\u8fc7\u5b83\u7684\u7279\u6027\uff0c\u5206\u4e3a\u6700\u5927\u5806\u548c\u6700\u5c0f\u5806\u4e24\u79cd\u3002 \u5982\u4e0a\u56fe\u53ef\u77e5\uff0c\u6700\u5c0f\u5806\u5c31\u662f\u5728\u8fd9\u9897\u4e8c\u53c9\u6811\u4e2d\uff0c\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u6bd4\u5176\u6240\u5728\u5b50\u6811\u7684\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u90fd\u8981\u5c0f\u3002\u6700\u5927\u5806\u5c31\u662f\u5728\u8fd9\u9897\u4e8c\u53c9\u6811\u4e2d\uff0c\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u6bd4\u8d77\u6240\u5728\u5b50\u6811\u7684\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u503c\u90fd\u8981\u5927\u3002 \u90a3\u4e48\u5982\u4f55\u6784\u5efa\u4e00\u4e2a\u5806\u5462\uff1f\u9996\u5148\u8981\u5c06\u6240\u6709\u7684\u5143\u7d20\u6784\u5efa\u4e3a\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\u3002\u5b8c\u5168\u4e8c\u53c9\u6811\u662f\u6307\u9664\u53f6\u5b50\u8282\u70b9\uff0c\u6240\u6709\u5c42\u7ea7\u662f\u6ee1\u8282\u70b9\uff0c\u53f6\u5b50\u8282\u70b9\u4ece\u5de6\u5411\u53f3\u6392\u5217\u586b\u6ee1\u3002 \u5728\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\uff0c\u5c06\u6570\u636e\u91cd\u65b0\u6309\u7167\u5806\u7684\u7684\u7279\u6027\u6392\u5217\uff0c\u5c31\u53ef\u4ee5\u5c06\u5b8c\u5168\u4e8c\u53c9\u6811\u53d8\u6210\u4e00\u4e2a\u5806\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53eb\u505a\u201c\u5806\u5316\u201d\u3002 \u5728\u5806\u4e2d\uff0c\u6211\u4eec\u8981\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u4e00\u822c\u4ece\u5806\u9876\u5220\u9664\uff08\u53ef\u4ee5\u53d6\u5230\u6700\u5927\u503c/\u6700\u5c0f\u503c\uff09\u3002\u5220\u9664\u4e4b\u540e\uff0c\u6570\u636e\u96c6\u5c31\u4e0d\u80fd\u7b97\u4f5c\u4e00\u4e2a\u5806\u4e86\uff0c\u56e0\u4e3a\u6700\u9876\u5c42\u7684\u5143\u7d20\u6ca1\u6709\u4e86\uff0c\u6570\u636e\u96c6\u4e0d\u7b26\u5408\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u5b9a\u4e49\u3002\u8fd9\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5806\u7684\u6570\u636e\u8fdb\u884c\u91cd\u65b0\u6392\u5217\uff0c\u4e5f\u5c31\u662f\u91cd\u65b0\u201c\u5806\u5316\u201d\u3002\u540c\u6837\u7684\uff0c\u5728\u5806\u4e2d\u65b0\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u4e5f\u9700\u8981\u91cd\u65b0\u505a\u201c\u5806\u5316\u201d\u7684\u64cd\u4f5c\uff0c\u6765\u5c06\u6570\u636e\u96c6\u6062\u590d\u5230\u6ee1\u8db3\u5806\u5b9a\u4e49\u7684\u72b6\u6001\u3002 \u6240\u4ee5\uff0c\u5728\u5806\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u6700\u91cd\u8981\u7684\u662f\u201c\u5806\u5316\u201d\u7684\u8fd9\u4e2a\u7b97\u6cd5\u64cd\u4f5c\u3002\u5176\u6b21\uff0c\u5806\u5316\u6570\u636e\u5982\u4f55\u5b58\u50a8\u4e5f\u662f\u5f88\u91cd\u8981\u7684\u3002\u63a5\u4e0b\u6765\uff0c\u8be6\u7ec6\u8bf4\u4e00\u4e0b\u3002","title":"\u5806\u539f\u7406\u89e3\u6790"},{"location":"golang/docs/Golang%20Heap%20%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#_2","text":"\u5bf9\u4e8e\u4e8c\u53c9\u6811\u6765\u8bf4\uff0c\u5b58\u50a8\u65b9\u5f0f\u67092\u79cd\uff0c\u4e00\u79cd\u4f7f\u7528\u6570\u7ec4\u7684\u5f62\u5f0f\u6765\u5b58\u50a8\uff0c\u4e00\u79cd\u4f7f\u7528\u94fe\u8868\u7684\u65b9\u5f0f\u5b58\u50a8\u3002\u540c\u6837\u7684\uff0c\u8fd9\u4e24\u79cd\u65b9\u5f0f\u7ee7\u627f\u4e86\u8fd9\u4e24\u79cd\u6570\u636e\u7ed3\u6784\u7684\u574f\u5904\u548c\u597d\u5904\u3002\u94fe\u8868\u7684\u65b9\u5f0f\u76f8\u5bf9\u6d6a\u8d39\u5b58\u50a8\u7a7a\u95f4\uff0c\u56e0\u4e3a\u8981\u5b58\u50a8\u5de6\u53f3\u5b50\u6811\u7684\u6307\u9488\uff0c\u4f46\u6269\u7f29\u5bb9\u65b9\u4fbf\u3002\u800c\u6570\u7ec4\u66f4\u52a0\u8282\u7701\u7a7a\u95f4\uff0c\u66f4\u52a0\u65b9\u4fbf\u5b9a\u4f4d\u8282\u70b9\uff0c\u7f3a\u70b9\u5219\u662f\u6269\u7f29\u5bb9\u4e0d\u4fbf\u3002 \u6211\u4eec\u4ee5\u6570\u7ec4\u7684\u65b9\u5f0f\u6765\u505a\u793a\u4f8b\uff0c\u4e86\u89e3\u5b58\u50a8\u7684\u7ec6\u8282\uff1a \u6211\u4eec\u4e0d\u7528 (index = 0) \u7684\u4f4d\u7f6e\u6765\u5b58\u50a8\u6570\u636e\uff0c\u800c\u662f\u4ece (index = 1) \u5f00\u59cb\uff0c\u8fd9\u6837\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u8282\u70b9 (i) \u6765\u8bf4\uff0c\u5c31\u6709 \u5de6\u8282\u70b9 (2 i)\uff0c\u53f3\u8282\u70b9 (2 i+1)\uff0c\u800c\u7236\u8282\u70b9\u5c31\u662f (\\frac i 2)\u3002","title":"\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u65b9\u5f0f"},{"location":"golang/docs/Golang%20Heap%20%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#_3","text":"\u6211\u4eec\u5148\u4ecb\u7ecd\u4e24\u79cd\u5e38\u7528\u7684\u5806\u64cd\u4f5c\uff1apop & push\uff0c\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u548c\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u3002 \u5047\u5982\u6211\u4eec\u6709\u5982\u4e0b\u7684\u4e00\u4e2a\u6700\u5927\u5806\uff0c\u5f53\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e\uff0c\u5c31\u9700\u8981\u505a\u201c\u5806\u5316\u201d\uff0c\u4f7f\u5f97\u5806\u6ee1\u8db3\u5b9a\u4e49\u3002 \u8fd9\u79cd\u4ece\u5806\u5e95\u5411\u4e0a\u5806\u5316\u7684\u8fc7\u7a0b\uff0c\u53eb\u505a\u201c\u4ece\u4e0b\u5230\u4e0a\u5806\u5316\u201d\u3002\u6211\u628a\u8fd9\u4e2a\u8fc7\u7a0b\u5b9e\u73b0\u4e3a\u4ee3\u7801\uff0c\u5982\u4e0b\uff1a // \u4ece\u4e0b\u5230\u4e0a\u5806\u5316 func (h *Heap) downToUpHeapify(pos int) { for pos / 2 > 0 && h.data[pos/2].Less(h.data[pos]) { // \u5982\u679c\u5b58\u5728\u7236\u8282\u70b9 & \u503c\u5927\u4e8e\u7236\u8282\u70b9 h.swap(pos, pos/2) // \u4ea4\u6362\u4e24\u4e2a\u503c\u7684\u4f4d\u7f6e pos = pos /2 // \u5c06\u64cd\u4f5c\u8282\u70b9\u53d8\u4e3a\u7236\u8282\u70b9\u7684\u4f4d\u7f6e } } \u5f53\u6211\u4eec\u60f3\u8981\u4ece\u5806\u9876 pop \u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u5019\u3002\u6211\u4eec\u9700\u8981\u5148\u5c06\u5143\u7d20pop\uff0c\u7136\u540e\u628a\u5806\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u653e\u5230\u5806\u9876\uff0c\u7136\u540e\u8fdb\u884c\u4e00\u6b21\u201c\u5806\u5316\u201d\u3002 \u8fd9\u79cd\u4ece\u5806\u9876\u5411\u4e0b\u5806\u5316\u7684\u8fc7\u7a0b\uff0c\u53eb\u505a\u201c\u4ece\u4e0a\u5230\u4e0b\u5806\u5316\u201d\u3002\u6211\u628a\u8fd9\u4e2a\u8fc7\u7a0b\u5b9e\u73b0\u4e3a\u4ee3\u7801\uff0c\u5982\u4e0b\uff1a // \u4ece\u4e0a\u5230\u4e0b\u5806\u5316 func (h *Heap) upToDownHeapify() { max := h.len i := 1 pos := i for { if i * 2 <= max && h.data[i].Less(h.data[i*2]) { // \u5982\u679c\u6709\u5de6\u5b50\u6811\uff0c\u4e14\u81ea\u5df1\u5c0f\u4e8e\u5de6\u5b50\u6811 pos = i*2 } if i *2 +1 <= max && h.data[pos].Less(h.data[i*2+1]) { // \u5982\u679c\u6709\u53f3\u5b50\u6811\uff0c\u4e14\u81ea\u5df1\u5c0f\u4e8e\u53f3\u5b50\u6811 pos = i*2+1 } if pos == i { // \u5982\u679c\u4f4d\u7f6e\u6ca1\u6709\u53d8\u5316\uff0c\u8bf4\u660e\u5806\u5316\u7ed3\u675f break } h.swap(i, pos) // \u4ea4\u6362\u5f53\u524d\u4f4d\u7f6e\u548c\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5185\u5bb9 i = pos // \u64cd\u4f5c\u4e0b\u4e00\u4e2a\u4f4d\u7f6e } }","title":"\u5806\u7684\u64cd\u4f5c"},{"location":"golang/docs/Golang%20Heap%20%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#golang-containerheap","text":"\u6ce8\u610f\uff0c\u4e0a\u8ff0\u7684\u8bb2\u8ff0\u4e2d\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8868\u793a\uff0c\u6211\u4eec\u5728\u6570\u7ec4\u7684\u7d22\u5f150\u6ca1\u6709\u5b58\u50a8\u5185\u5bb9\uff0c\u4ece\u7d22\u5f151\u5f00\u59cb\u5b58\u50a8\u3002 \u800c Golang \u7684\u5b9e\u73b0\u4e2d\uff0c\u7d22\u5f150 \u662f\u5b58\u50a8\u4e86\u6570\u636e\u7684\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u5c31\u5206\u522b\u53d8\u6210\u4e86 (2 i+1) \u548c (2 i+2)\u3002 Golang \u7684 Container.heap \u662f\u4e00\u4e2a\u5b9e\u73b0\u4e86\u901a\u7528\u6700\u5c0f\u5806\u7684\u5305\u3002\u4efb\u4f55\u6570\u636e\u96c6\u53ea\u8981\u5b9e\u73b0\u4e86\u5176 Interface \u63a5\u53e3\uff0c\u5373\u53ef\u4f7f\u7528\u8fd9\u4e2a\u5305\u5c06\u5176\u5806\u5316\uff0c\u5e76\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c\u3002 type Interface interface { sort.Interface Push(x interface{}) // \u628a\u5143\u7d20\u6dfb\u52a0\u5230 Len() \u7684\u4f4d\u7f6e Pop() interface{} // \u5220\u9664\u5e76\u8fd4\u56de Len() - 1 \u7684\u5143\u7d20. } // sort.Interface type Interface interface { // Len is the number of elements in the collection. Len() int // Less reports whether the element with // index i should sort before the element with index j. Less(i, j int) bool // Swap swaps the elements with indexes i and j. Swap(i, j int) } Interface \u7684\u6570\u636e\u7ed3\u6784\u5982\u4e0a\uff0c\u8981\u6c42\u5b9e\u73b0 sort.Interface \u548c Push Pop \u4e24\u4e2a\u65b9\u6cd5\u3002 sort.Interface \u7684\u5b9a\u4e49\uff0c\u540c\u6837\u8d34\u5728\u4e86\u4e0a\u9762\uff0c\u4e3b\u8981\u662f\u4e09\u4e2a\u65b9\u6cd5\uff1a Len \u8fd4\u56de\u6570\u636e\u96c6\u7684\u957f\u5ea6\uff1b Less \u8fd4\u56de index i \u662f\u5426\u5c0f\u4e8e index j\uff1b Swap \u4ea4\u6362 index i \u548c j \u7684\u503c\uff1b \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u770b\u4e00\u4e0b Push \u64cd\u4f5c\uff1a func Push(h Interface, x interface{}) { h.Push(x) // \u5411\u6570\u636e\u96c6\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 up(h, h.Len()-1) // \u4ece\u4e0b\u5411\u4e0a\u5806\u5316 } // \u4ece\u4e0b\u5411\u4e0a\u5806\u5316\u7684\u5185\u5bb9 func up(h Interface, j int) { // h \u8868\u793a\u5806\uff0cj \u4ee3\u8868\u9700\u8981\u5806\u5316\u7684\u5143\u7d20 index for { i := (j - 1) / 2 // \u5b9a\u4e49 j \u7684\u7236 index if i == j || !h.Less(j, i) { // \u5982\u679c\u4e24\u4e2a\u5143\u7d20\u76f8\u7b49 \u6216\u8005 \u7236\u5143\u7d20\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20 break // \u5806\u5316\u5b8c\u6210 } h.Swap(i, j) // \u4ea4\u6362\u7236\u5143\u7d20\u548c\u5f53\u524d\u5143\u7d20 j = i // index \u53d8\u4e3a\u7236\u5143\u7d20\u7684 index } } \u4e0a\u9762\u5728 push \u5143\u7d20\u4e4b\u540e\uff0c\u505a\u4e86 \u201c\u4ece\u4e0b\u5230\u4e0a\u201d\u7684\u5806\u5316\u3002 \u63a5\u4e0b\u6765\uff0c\u662f Pop \u64cd\u4f5c\uff1a // \u8fd4\u56de\u5806\u9876\u7684\u5143\u7d20\uff0c\u5e76\u5220\u6389\u5b83 func Pop(h Interface) interface{} { n := h.Len() - 1 // \u83b7\u53d6\u6700\u7ec8\u5806\u957f\u5ea6\uff08\u53bb\u6389\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff09 h.Swap(0, n) // \u4ea4\u6362\u5806\u9876\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20 down(h, 0, n) // \u4ece\u4e0a\u5230\u4e0b\u5806\u5316 return h.Pop() // \u5f39\u51fa\u6700\u540e\u4e00\u4e2a\u5143\u7d20 } func down(h Interface, i0, n int) bool { i := i0 // \u5806\u9876 index for { j1 := 2*i + 1 // \u5de6\u5b69\u5b50 index if j1 >= n || j1 < 0 { // j1 \u5927\u4e8e\u5806\u957f\u5ea6 \u6216 \u6ea2\u51fa break // \u5806\u5316\u7ed3\u675f } j := j1 // j = \u5de6\u5b69\u5b50 if j2 := j1 + 1; j2 < n && h.Less(j2, j1) { // j2 = \u53f3\u5b69\u5b50\uff1bj \u5c0f\u4e8e\u5806\u957f\u5ea6 && \u53f3\u5b69\u5b50\u5c0f\u4e8e\u5de6\u5b69\u5b50 j = j2 // j = 2*i + 2 = \u53f3\u5b69\u5b50 } // \u4e0a\u9762\u662f\u4ece\u5de6\u53f3\u5b69\u5b50\u9009\u51fa\u5c0f\u7684\u90a3\u4e2a\uff0c\u5c06 index \u8d4b\u503c\u7ed9 j if !h.Less(j, i) { // \u5982\u679c \u5806\u9876\u5c0f\u4e8e j , \u5806\u5316\u7ed3\u675f break } h.Swap(i, j) // \u4ea4\u6362\u5806\u9876\u5143\u7d20\u548c j i = j // \u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u64cd\u4f5c index } // \u8fd4\u56de \u5143\u7d20\u662f\u5426\u6709\u79fb\u52a8 // \u6b64\u5904\u662f\u4e00\u4e2a\u7279\u6b8a\u8bbe\u8ba1\uff0c\u7528\u6765\u5224\u65ad\u5411\u4e0b\u5806\u5316\u662f\u5426\u771f\u7684\u6709\u64cd\u4f5c // \u5f53\u5220\u9664\u4e2d\u95f4\u7684\u5143\u7d20\u65f6\uff0c\u5982\u679c\u5411\u4e0b\u5806\u5316\u6ca1\u6709\u64cd\u4f5c\u7684\u8bdd\uff0c\u5c31\u9700\u8981\u518d\u505a\u5411\u4e0a\u5806\u5316 return i > i0 } Golang \u8fd8\u63d0\u4f9b\u4e86\u4e4b\u524d\u539f\u7406\u8bb2\u8ff0\u4e2d\u6ca1\u6709\u7684\u65b9\u6cd5\uff1a Remove Fix Remove \u662f\u5220\u9664\u5806\u4e2d\u6307\u5b9a\u5143\u7d20\uff0c\u4e0d\u4e00\u5b9a\u662f\u5806\u9876\uff1b Fix \u662f\u5f53\u67d0\u4e00\u4e2a\u5143\u7d20\u7684\u503c\u6709\u53d8\u5316\u65f6\uff0c\u7528\u6765\u91cd\u65b0\u5806\u5316\uff1b func Remove(h Interface, i int) interface{} { n := h.Len() - 1 // \u5806\u7684\u957f\u5ea6 if n != i { // \u5982\u679c\u4e0d\u662f\u5806\u9876 h.Swap(i, n) // \u4ea4\u6362\u5220\u9664\u5143\u7d20 \u548c \u6700\u540e\u4e00\u4e2a\u5143\u7d20 if !down(h, i, n) { // \u4ece\u4e0a\u5230\u4e0b\u5806\u5316 up(h, i) // \u5982\u679c\u6ca1\u6709\u6210\u529f\uff0c\u5c31\u4ece\u4e0b\u5c9b\u4e0a\u5806\u5316 } } return h.Pop() // \u5f39\u51fa\u6700\u540e\u4e00\u4e2a\u5143\u7d20 } func Fix(h Interface, i int) { // i \u662f\u503c\u88ab\u6539\u53d8\u7684 index if !down(h, i, h.Len()) { // \u4ece\u4e0a\u5230\u4e0b\u5806\u5316 up(h, i) // \u5982\u679c\u6ca1\u6709\u6210\u529f\uff0c\u5c31\u4ece\u4e0b\u5c9b\u4e0a\u5806\u5316 } } \u8fd9\u91cc\u6709\u4e00\u4e2a\u5185\u5bb9\u9700\u8981\u6ce8\u610f\uff0c\u5c31\u662f Remove \u4e2d\uff0c (n = Len() -1) \u6765\u8868\u793a\u5806\u957f\u5ea6\uff0c\u800c\u5728 Fix \u5219\u4f7f\u7528 (n = Len()) \u6765\u8868\u793a\u3002\u8fd9\u662f\u56e0\u4e3a Remove \u4e2d\uff0c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u662f\u8981\u88ab\u5220\u9664\u6389\uff0c\u6240\u4ee5\u6700\u7ec8\u7684\u5806\u957f\u5ea6\u662f (Len() \u2013 1)\u3002 \u4e0a\u9762\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86 Golang \u4e2d\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5806\u7684\u6240\u6709\u64cd\u4f5c\u3002\u53ea\u5269\u4e0b\u6700\u540e\u4e00\u4e2a\u65b9\u6cd5\uff1aInit\uff0c\u521d\u59cb\u5316\u4e00\u4e2a\u6570\u636e\u96c6\uff0c\u53d8\u6210\u5806\u3002 func Init(h Interface) { n := h.Len() // n \u662f\u5806\u957f\u5ea6 // i = \u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u7684 index\uff1b i >= \u5806\u9876\uff1b index \u81ea\u51cf for i := n/2 - 1; i >= 0; i-- { // \u4ece\u5f53\u524d\u8282\u70b9\u5f00\u59cb\uff0c\u4ece\u4e0a\u5230\u4e0b\u5806\u5316 down(h, i, n) } } \u6839\u636e\u5806\u7684\u7279\u6027\u53ef\u77e5\uff0c\u53f6\u5b50\u8282\u70b9\u4e0d\u53ef\u4ee5\u4ece\u4e0a\u5230\u4e0b\u5806\u5316\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u627e\u5230\u6700\u540e\u975e\u53f6\u5b50\u8282\u70b9\u7684\u7d22\u5f15\u503c\uff0c\u4ece\u8fd9\u91cc\u5f00\u59cb\u505a\u5806\u5316\u64cd\u4f5c\u3002 \u81f3\u6b64\uff0ccontainer.heap \u5305\u4e2d\u7684\u5185\u5bb9\u5c31\u5168\u90e8\u8bb2\u89e3\u5b8c\u6bd5\u3002\u4e86\u89e3\u4e86\u5806\u7684\u539f\u7406\u4e4b\u540e\uff0c\u5176\u5b9e\u4f1a\u53d1\u73b0\u5e76\u4e0d\u96be\u7406\u89e3\u3002","title":"Golang \u7684 container.heap \u5305"},{"location":"golang/docs/Golang%20Heap%20%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#_4","text":"\u5728\u5806\u6392\u5e8f\u4e2d\uff0c\u5c31\u9700\u8981\u7528\u5230\u5806\u7b97\u6cd5\u6765\u5c06\u6570\u636e\u7ea7\u5806\u5316\uff0c\u7136\u540e\u4e00\u4e2a\u4e2a\u7684\u5f39\u51fa\u5143\u7d20\uff0c\u4ee5\u8fbe\u5230\u6392\u5e8f\u7684\u76ee\u7684\u3002 \u5806\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5b9e\u73b0\u4f18\u5148\u7ea7\u961f\u5217\u3002\u4f18\u5148\u7ea7\u961f\u5217\u5728\u5b9e\u9645\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\u3002\u5728\u5f88\u591a\u65f6\u5019\uff0c\u90fd\u53ef\u4ee5\u7528\u5b83\u6765\u5b9e\u73b0\u5904\u7406\u5e26\u4f18\u5148\u7ea7\u7684\u4e8b\u4ef6\uff0c\u5904\u7406\u5b9a\u65f6\u4efb\u52a1\u7b49\u7b49\u3002","title":"\u5806\u7684\u5e94\u7528"},{"location":"golang/docs/Golang%E4%B9%8Bsync.Pool%E5%AF%B9%E8%B1%A1%E6%B1%A0%E5%AF%B9%E8%B1%A1%E9%87%8D%E7%94%A8%E6%9C%BA%E5%88%B6%E6%80%BB%E7%BB%93/","text":"sync.Pool\u4f5c\u7528 \u5bf9\u8c61\u91cd\u7528\u673a\u5236,\u4e3a\u4e86\u51cf\u5c11GC,sync.Pool\u662f\u53ef\u4f38\u7f29\u7684\uff0c\u5e76\u53d1\u5b89\u5168\u7684 \u4e24\u4e2a\u7ed3\u6784\u4f53 type Pool struct { local unsafe.Pointer // local fixed-size per-P pool, actual type is [P]poolLocal localSize uintptr // size of the local array // New optionally specifies a function to generate // a value when Get would otherwise return nil. // It may not be changed concurrently with calls to Get. New func() interface{} } // Local per-P Pool appendix. type poolLocal struct { private interface{} // Can be used only by the respective P. shared []interface{} // Can be used by any P. Mutex // Protects shared. pad [128]byte // Prevents false sharing. } Pool\u662f\u63d0\u4f9b\u5916\u90e8\u4f7f\u7528\u7684\u5bf9\u8c61,Pool\u6709\u4e24\u4e2a\u91cd\u8981\u7684\u6210\u5458,local\u662f\u4e00\u4e2apoolLocal\u6570\u7ec4,localSize\u662f\u5de5\u4f5c\u7ebf\u7a0b\u7684\u6570\u91cf( runtime.GOMAXPROCS(0)),Pool\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5206\u914d\u4e00\u4e2apoolLocal\u5bf9\u8c61 \u5199\u5165\u548c\u8bfb\u53d6 Pool.Get \u5148\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u79c1\u6709\u503c(poolLocal.private)\u83b7\u53d6 \u5426\u5219\u5219\u4ece\u5171\u4eab\u5217\u8868(poolLocal.shared)\u83b7\u53d6 \u5426\u5219\u5219\u4ece\u5176\u4ed6\u7ebf\u7a0b\u7684\u5171\u4eab\u5217\u8868\u83b7\u53d6 \u5426\u5219\u76f4\u63a5\u901a\u8fc7New()\u5206\u914d\u4e00\u4e2a\u8fd4\u56de\u503c Pool.Put \u5f53\u524d\u7ebf\u7a0b\u79c1\u6709\u5236\u4e3a\u7a7a,\u8d4b\u503c\u7ed9\u79c1\u6709\u503c \u5426\u5219\u8ffd\u52a0\u5230\u5171\u4eab\u5217\u8868 sync.Pool\u6ce8\u610f\u70b9 \u4e34\u65f6\u6027,\u5f53\u53d1\u751fGC\u65f6,Pool\u7684\u5bf9\u8c61\u4f1a\u88ab\u6e05\u9664,\u5e76\u4e14\u4e0d\u4f1a\u6709\u901a\u77e5 \u65e0\u72b6\u6001,\u5f53\u524d\u7ebf\u7a0b\u4e2d\u7684PoolLocal.shared\u7684\u5bf9\u8c61\u53ef\u80fd\u4f1a\u88ab\u5176\u4ed6\u7ebf\u7a0b\u5077\u8d70 \u5927\u89c4\u6a21Goroutine\u7684\u74f6\u9888 \u4f1a\u5bf9\u5783\u573e\u56de\u6536(gc)\u9020\u6210\u8d1f\u62c5,\u9700\u8981\u9891\u7e41\u7684\u91ca\u653e\u5185\u5b58 \u867d\u7136goroutine\u53ea\u5206\u914d2KB,\u4f46\u662f\u5927\u91cfgorotine\u4f1a\u6d88\u8017\u5b8c\u5185\u5b58,\u5e76\u4e14gc\u4e5f\u662fgoroutine\u8c03\u7528\u7684 \u539f\u7406\u548c\u4f5c\u7528 \u539f\u7406\u7c7b\u4f3c\u662fIO\u591a\u8def\u590d\u7528,\u5c31\u662f\u5c3d\u53ef\u80fd\u590d\u7528,\u6c60\u5316\u7684\u6838\u5fc3\u4f18\u52bf\u5c31\u5728\u4e8e\u5bf9goroutine\u7684\u590d\u7528\u3002\u6b64\u4e3e\u9996\u5148\u6781\u5927\u51cf\u8f7b\u4e86runtime\u8c03\u5ea6goroutine\u7684\u538b\u529b\uff0c\u5176\u6b21\uff0c\u4fbf\u662f\u964d\u4f4e\u4e86\u5bf9\u5185\u5b58\u7684\u6d88\u8017","title":"sync.Pool\u4f5c\u7528"},{"location":"golang/docs/Golang%E4%B9%8Bsync.Pool%E5%AF%B9%E8%B1%A1%E6%B1%A0%E5%AF%B9%E8%B1%A1%E9%87%8D%E7%94%A8%E6%9C%BA%E5%88%B6%E6%80%BB%E7%BB%93/#syncpool","text":"\u5bf9\u8c61\u91cd\u7528\u673a\u5236,\u4e3a\u4e86\u51cf\u5c11GC,sync.Pool\u662f\u53ef\u4f38\u7f29\u7684\uff0c\u5e76\u53d1\u5b89\u5168\u7684 \u4e24\u4e2a\u7ed3\u6784\u4f53 type Pool struct { local unsafe.Pointer // local fixed-size per-P pool, actual type is [P]poolLocal localSize uintptr // size of the local array // New optionally specifies a function to generate // a value when Get would otherwise return nil. // It may not be changed concurrently with calls to Get. New func() interface{} } // Local per-P Pool appendix. type poolLocal struct { private interface{} // Can be used only by the respective P. shared []interface{} // Can be used by any P. Mutex // Protects shared. pad [128]byte // Prevents false sharing. } Pool\u662f\u63d0\u4f9b\u5916\u90e8\u4f7f\u7528\u7684\u5bf9\u8c61,Pool\u6709\u4e24\u4e2a\u91cd\u8981\u7684\u6210\u5458,local\u662f\u4e00\u4e2apoolLocal\u6570\u7ec4,localSize\u662f\u5de5\u4f5c\u7ebf\u7a0b\u7684\u6570\u91cf( runtime.GOMAXPROCS(0)),Pool\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5206\u914d\u4e00\u4e2apoolLocal\u5bf9\u8c61","title":"sync.Pool\u4f5c\u7528"},{"location":"golang/docs/Golang%E4%B9%8Bsync.Pool%E5%AF%B9%E8%B1%A1%E6%B1%A0%E5%AF%B9%E8%B1%A1%E9%87%8D%E7%94%A8%E6%9C%BA%E5%88%B6%E6%80%BB%E7%BB%93/#_1","text":"Pool.Get \u5148\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u79c1\u6709\u503c(poolLocal.private)\u83b7\u53d6 \u5426\u5219\u5219\u4ece\u5171\u4eab\u5217\u8868(poolLocal.shared)\u83b7\u53d6 \u5426\u5219\u5219\u4ece\u5176\u4ed6\u7ebf\u7a0b\u7684\u5171\u4eab\u5217\u8868\u83b7\u53d6 \u5426\u5219\u76f4\u63a5\u901a\u8fc7New()\u5206\u914d\u4e00\u4e2a\u8fd4\u56de\u503c Pool.Put \u5f53\u524d\u7ebf\u7a0b\u79c1\u6709\u5236\u4e3a\u7a7a,\u8d4b\u503c\u7ed9\u79c1\u6709\u503c \u5426\u5219\u8ffd\u52a0\u5230\u5171\u4eab\u5217\u8868","title":"\u5199\u5165\u548c\u8bfb\u53d6"},{"location":"golang/docs/Golang%E4%B9%8Bsync.Pool%E5%AF%B9%E8%B1%A1%E6%B1%A0%E5%AF%B9%E8%B1%A1%E9%87%8D%E7%94%A8%E6%9C%BA%E5%88%B6%E6%80%BB%E7%BB%93/#syncpool_1","text":"\u4e34\u65f6\u6027,\u5f53\u53d1\u751fGC\u65f6,Pool\u7684\u5bf9\u8c61\u4f1a\u88ab\u6e05\u9664,\u5e76\u4e14\u4e0d\u4f1a\u6709\u901a\u77e5 \u65e0\u72b6\u6001,\u5f53\u524d\u7ebf\u7a0b\u4e2d\u7684PoolLocal.shared\u7684\u5bf9\u8c61\u53ef\u80fd\u4f1a\u88ab\u5176\u4ed6\u7ebf\u7a0b\u5077\u8d70","title":"sync.Pool\u6ce8\u610f\u70b9"},{"location":"golang/docs/Golang%E4%B9%8Bsync.Pool%E5%AF%B9%E8%B1%A1%E6%B1%A0%E5%AF%B9%E8%B1%A1%E9%87%8D%E7%94%A8%E6%9C%BA%E5%88%B6%E6%80%BB%E7%BB%93/#goroutine","text":"\u4f1a\u5bf9\u5783\u573e\u56de\u6536(gc)\u9020\u6210\u8d1f\u62c5,\u9700\u8981\u9891\u7e41\u7684\u91ca\u653e\u5185\u5b58 \u867d\u7136goroutine\u53ea\u5206\u914d2KB,\u4f46\u662f\u5927\u91cfgorotine\u4f1a\u6d88\u8017\u5b8c\u5185\u5b58,\u5e76\u4e14gc\u4e5f\u662fgoroutine\u8c03\u7528\u7684","title":"\u5927\u89c4\u6a21Goroutine\u7684\u74f6\u9888"},{"location":"golang/docs/Golang%E4%B9%8Bsync.Pool%E5%AF%B9%E8%B1%A1%E6%B1%A0%E5%AF%B9%E8%B1%A1%E9%87%8D%E7%94%A8%E6%9C%BA%E5%88%B6%E6%80%BB%E7%BB%93/#_2","text":"\u539f\u7406\u7c7b\u4f3c\u662fIO\u591a\u8def\u590d\u7528,\u5c31\u662f\u5c3d\u53ef\u80fd\u590d\u7528,\u6c60\u5316\u7684\u6838\u5fc3\u4f18\u52bf\u5c31\u5728\u4e8e\u5bf9goroutine\u7684\u590d\u7528\u3002\u6b64\u4e3e\u9996\u5148\u6781\u5927\u51cf\u8f7b\u4e86runtime\u8c03\u5ea6goroutine\u7684\u538b\u529b\uff0c\u5176\u6b21\uff0c\u4fbf\u662f\u964d\u4f4e\u4e86\u5bf9\u5185\u5b58\u7684\u6d88\u8017","title":"\u539f\u7406\u548c\u4f5c\u7528"},{"location":"golang/docs/Golang%E7%9A%84GC%E5%92%8C%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8/","text":"\u7b80\u4ecb \u6bcf\u4e2a\u7248\u672c\u7684Golang\u7684\u5783\u573e\u56de\u6536\u90fd\u5728\u4e0d\u65ad\u4f18\u5316\u4e2d\uff0c\u800c\u4e14\u65b9\u6cd5\u548c\u7b56\u7565\u90fd\u5728\u53d8\u5316\uff0c\u56e0\u6b64\u8fd9\u91cc\u53ea\u662f\u603b\u7ed3\u51fa\u4ee5\u4e0b\u51e0\u4e2a\u5173\u952e\u70b9\uff1a \u4ec0\u4e48\u6837\u7684\u6570\u636e\u9700\u8981GC \u89e6\u53d1GC\u7684\u6761\u4ef6\u662f\u4ec0\u4e48 GC\u65f6\u53d1\u751f\u4e86\u4ec0\u4e48 \u80fd\u5426\u4ece\u4ee3\u7801\u5c42\u9762\u4e0a\u63d0\u9ad8GC\u7684\u6548\u7387 GC\u7684\u57fa\u672c\u6d41\u7a0b Golang\u5728\u786e\u5b9a\u7684\u65f6\u95f4\uff0c\u6216\u8005\u5185\u5b58\u5206\u914d\u5230\u8fbe\u4e00\u5b9a\u7a0b\u5ea6\u65f6\uff0c\u8fdb\u884cGC\u3002GC\u65f6\uff0c\u4f1a\u505c\u6b62STW\uff08Stop The World\uff09\uff0c\u5373\u5bf9\u5916\u7684\u670d\u52a1\u90fd\u4f1a\u6682\u505c\uff0c\u7136\u540e\u8fdb\u884c\u5783\u573e\u56de\u6536\u5904\u7406\u3002Go1.12\u5f15\u5165\u4e86\u4e09\u8272\u6807\u8bb0\u6cd5\u548cwrite-barrier\u7684\u65b9\u5f0f\uff1b\u5728Go1.14\u4e2d\uff0c\u5f15\u5165\u770b\u4e86\u62a2\u5360\u5f0f\u56de\u6536\u673a\u5236\u3002 write-barrier\u673a\u5236\uff1a \u5047\u8bbe\u67094\u4e2aG\u5728\u8fd0\u884c\uff0c\u5982\u4e0b\u56fe\uff1a \u8fdb\u884cGC\u7684\u65f6\u5019\uff0c\u9700\u8981STW\uff0c\u6b64\u65f6\u76844\u4e2aG\u90fd\u8981\u505c\u6b62\u5de5\u4f5c\u3002\u5982\u679c\u6709\u4e00\u4e2a\u6ca1\u6709\u505c\u6b62\u5de5\u4f5c\u7684\uff0c\u5219GC\u6682\u65f6\u4e0d\u80fd\u53d1\u751f\u3002\u6bd4\u5982\u4e0b\u56fe\uff1a \u7b2c4\u4e2aG\u6ca1\u505c\u6b62\u5de5\u4f5c\uff0c\u5219GC\u9700\u8981\u7b49\u5f85\u5176\u7ed3\u675f\u3002Go1.14\u4e2d\uff0c\u53ef\u4ee5\u62a2\u5360\u7b2c4\u4e2aG\u7684\u5de5\u4f5c\u72b6\u6001\uff0c\u4fdd\u5b58\u5176\u72b6\u6001\u540e\uff0c\u518d\u8fdb\u884cGC GC\u7684\u65f6\u5019\uff0cGC\u673a\u5236\u4f1a\u5f81\u7528\u4e00\u4e9bG\u5e76\u53d1\u8f85\u52a9\u8fdb\u884c\u5de5\u4f5c\uff0c\u4e00\u822c\u670925%\u7684G\u4f1a\u88ab\u5f81\u7528\u3002 \u6574\u4f53\u5de5\u4f5c\u6d41\u7a0b\uff1a \u521b\u5efa\u767d\u3001\u7070\u548c\u9ed1\u4e09\u4e2a\u96c6\u5408 \u521d\u59cb\u5316\u6240\u6709\u7684\u5f85\u56de\u6536\u5bf9\u8c61\u90fd\u662f\u767d\u8272\u7684 \u4ece\u6839\u8282\u70b9\u904d\u5386\u5bf9\u8c61\uff0c\u4e0d\u9012\u5f52\uff1b\u904d\u5386\u5230\u7684\u767d\u8272\u5bf9\u8c61\u653e\u5230\u7070\u8272\u96c6\u5408\u5f53\u4e2d \u4e4b\u540e\u904d\u5386\u7070\u8272\u96c6\u5408\uff0c\u628a\u7070\u8272\u5bf9\u8c61\u5f15\u7528\u7684\u5bf9\u8c61\uff0c\u4ece\u767d\u8272\u96c6\u5408\u4e2d\u653e\u5165\u7070\u8272\u96c6\u5408\uff0c\u5e76\u628a\u73b0\u5728\u7684\u7070\u8272\u5bf9\u8c61\u653e\u5165\u9ed1\u8272\u96c6\u5408\u4e2d \u91cd\u590d\u4e0a\u4e00\u6b65\uff0c\u77e5\u9053\u7070\u8272\u96c6\u5408\u662f\u7a7a\u7684 \u901a\u8fc7write-barrier\u68c0\u6d4b\u5bf9\u8c61\u7684\u53d8\u5316\uff0c\u91cd\u590d\u4ee5\u4e0a\u64cd\u4f5c \u56de\u6536\u6240\u6709\u7684\u767d\u8272\u5bf9\u8c61 GC\u56de\u6536\u7684\u5bf9\u8c61 \u6c38\u8fdc\u4e0d\u8981\u8fc7\u65e9\u7684\u4f18\u5316\u7a0b\u5e8f\uff01\uff01\uff01 \u6808\u5185\u5b58\u5206\u914d\u548c\u56de\u6536\u7684\u4ee3\u4ef7\u8fdc\u8fdc\u5c0f\u4e8e\u5806\u5185\u5b58\u3002Golang\u7684\u5783\u573e\u56de\u6536\u53d1\u751f\u5728\u5168\u5c40\u7684\u5806\u4e0a\u548c\u6bcf\u4e2aGoroutinue\u7684\u6808\u4e0a\u3002\u56de\u6536\u6808\u5185\u5b58\u53ea\u9700\u8981\u4e24\u4e2aCPU\u6307\u4ee4\uff0cpush\u548cpop\u3002\u7136\u800c\uff0c\u5206\u914d\u5728\u6808\u5185\u5b58\u7684\u6570\u636e\uff0c\u9700\u8981\u5728\u7f16\u8bd1\u671f\u95f4\u5c31\u5f97\u77e5\u9053type\u548csize\u3002 Golang\u7684\u7f16\u8bd1\u5668\u4f7f\u7528\u201c\u9003\u9038\u5206\u6790\u201d\u7684\u65b9\u5f0f\uff0c\u51b3\u5b9a\u91c7\u53d6\u6808\u56de\u6536\u8fd8\u662f\u5806\u56de\u6536\u7684\u65b9\u5f0f\u3002\u5982\u679c\u53d1\u751f\u9003\u9038\uff0c\u5219\u4f7f\u7528\u5806\u56de\u6536\u3002 go build -gcflags '-m'\u547d\u4ee4\u53ef\u4ee5\u5206\u6790\u5185\u5b58\u9003\u9038\u7684\u73b0\u8c61\u3002 \u53d1\u751f\u5185\u5b58\u9003\u9038\u7684\u51e0\u79cd\u60c5\u51b5\uff1a \u5411chan\u4e2d\u53d1\u9001\u6570\u636e\u7684\u6307\u9488\u6216\u8005\u5305\u542b\u6307\u9488\u7684\u503c\u3002 \u56e0\u4e3a\u7f16\u8bd1\u5668\u6b64\u65f6\u4e0d\u77e5\u9053\u503c\u4ec0\u4e48\u65f6\u5019\u4f1a\u88ab\u63a5\u6536\uff0c\u56e0\u6b64\u53ea\u80fd\u653e\u5165\u5806\u4e2d \u975e\u76f4\u63a5\u7684\u51fd\u6570\u8c03\u7528\uff0c\u6bd4\u5982\u5728\u95ed\u5305\u4e2d\u5f15\u7528\u5305\u5916\u7684\u503c\uff0c\u56e0\u4e3a\u95ed\u5305\u6267\u884c\u7684\u751f\u547d\u5468\u671f\u53ef\u80fd\u4f1a\u8d85\u8fc7\u51fd\u6570\u5468\u671f\uff0c\u56e0\u6b64\u9700\u8981\u653e\u5165\u5806\u4e2d \u5728slice\u6216map\u4e2d\u5b58\u50a8\u6307\u9488\u6216\u8005\u5305\u542b\u6307\u9488\u7684\u503c\u3002 \u6bd4\u5982[]*string\uff0c\u5373\u4f7fslice\u662f\u5728\u6808\u4e0a\uff0c\u5176\u5b58\u50a8\u7684\u503c\u4ecd\u7136\u4f1a\u653e\u5165\u5806\u4e2d slice\u5982\u679c\u5e95\u5c42\u4f7f\u7528array\u4f5c\u4e3a\u5bb9\u5668\uff0c\u5728\u4f7f\u7528append\u6269\u5bb9\u7684\u65f6\u5019\u3002\u4f46\u662f\uff0c\u5982\u679c\u77e5\u9053\u5177\u4f53\u6269\u5bb9\u7684\u6570\u91cf\uff0c\u5219\u4ecd\u7136\u5728\u6808\u4e0a\u3002 \u5982\u679c\u5728\u7f16\u8bd1\u671f\u95f4\uff0cslice\u77e5\u9053\u81ea\u5df1\u7684size\uff0c\u90a3\u4e48\u653e\u5165\u6808\u4e2d\u3002\u66f4\u591a\u7684\u65f6\u5019\uff0c\u662f\u4e0d\u77e5\u9053size\u7684\uff0c\u6bd4\u5982append\u7684\u65f6\u5019\uff0c\u6b64\u65f6\u53ea\u80fd\u653e\u5165\u5806\u4e2d\u3002 interface\u7c7b\u578b\u591a\u6001\u7684\u65f6\u5019\u8c03\u7528\u65b9\u6cd5\uff0c\u6b64\u65f6\u4f1a\u53d1\u751f\u9003\u9038 \u6307\u9488\u3001slice\u548cmap\u4f5c\u4e3a\u53c2\u6570\u8fd4\u56de\u7684\u65f6\u5019\uff0c\u6b64\u65f6\u80af\u5b9a\u8981\u53d1\u751f\u9003\u9038\u3002 \u603b\u7ed3\u4e00\u4e0b\u53d1\u751f\u9003\u9038\u7684\u7ed3\u8bba\uff1a \u9996\u5148\u660e\u786e\u4e00\u70b9\uff0cGolang\u4e2d\u6240\u6709\u7684\u6570\u636e\u90fd\u662f\u6309\u503c\u4f20\u9012\uff0c\u8fd9\u70b9\u548cC\u8bed\u8a00\u662f\u4e00\u6837\u7684\uff08\u6ce8\u610fGolang\u4e2d\u7684\u6570\u7ec4\u540d\u662f\u503c\uff0c\u548cC\u7684\u5dee\u522b\uff09\u3002\u6240\u8c13\u7684map\u3001slice\u548cchan\u7b49\u662f\u5f15\u7528\uff0c\u5176\u672c\u8d28\u539f\u56e0\u662f\uff0c\u8fd9\u4e9b\u7ed3\u6784\u7684\u5185\u90e8\u90fd\u6709\u6307\u9488\uff0c\u590d\u5236\u7684\u65f6\u5019\uff0c\u5185\u90e8\u90fd\u662f\u590d\u5236\u7684\u6307\u9488\uff0c\u56e0\u6b64\u8868\u73b0\u7684\u662f\u4f20\u503c\u3002 \u5728\u51fd\u6570\u8c03\u7528\u4e2d\uff0c\u5bf9\u4e8e\u6307\u9488\u7684\u60c5\u51b5\uff0c\u53ea\u8981\u6307\u5411\u7684\u5730\u5740\u7684\u6240\u6709\u8005\u53ea\u6709\u4e00\u4e2a\uff0c\u90a3\u4e48\u5fc5\u7136\u662f\u6808\u56de\u6536\uff1b\u800c\u4e00\u65e6\u5b58\u5728\u5730\u5740\u5b58\u5728\u4e0d\u786e\u5b9a\u53d8\u5316\u65f6\uff0c\u5219\u8f6c\u6362\u6210\u5806\u7684\u6570\u636e\u3002\u6bd4\u5982slice\u60c5\u51b5\uff0c\u56e0\u4e3aslice\u4f1a\u6269\u5bb9\u6216\u8005\u7f29\u5bb9\uff0c\u56e0\u6b64\u9020\u6210\u4e0d\u786e\u5b9a\u60c5\u51b5\u3002 \u4ee5\u4e0b\u4f7f\u7528\u4ee3\u7801\u793a\u4f8b\u8bf4\u660e\uff1a package main func main() { ch := make(chan int, 1) x := 5 ch <- x // x\u4e0d\u53d1\u751f\u9003\u9038\uff0c\u56e0\u4e3a\u53ea\u662f\u590d\u5236\u7684\u503c ch1 := make(chan *int, 1) y := 5 py := &y ch1 <- py // y\u9003\u9038\uff0c\u56e0\u4e3a\u5730\u5740\u4f20\u5165\u4e86chan z := 5 pz := &z // z\u4e0d\u9003\u9038\uff0c\u56e0\u4e3a\u662f\u786e\u5b9a\u6027\u6790\u6784 *pz += 1 } \u6267\u884c\u547d\u4ee4\uff1ago build -gcflags ./main.go\uff0c\u5f97\u5230\u7ed3\u8bba\u662fy z\u90fd\u53d1\u751f\u4e86\u9003\u9038\u3002 # command-line-arguments .\\main.go:3:6: can inline main as: func() { ch := make(chan int, 1); x := 5; ch <- x; ch1 := make(chan *int, 1); y := 5; py := &y; ch1 <- py; z := 5; pz := &z; *pz += 1 } .\\main.go:9:2: y escapes to heap: .\\main.go:9:2: flow: py = &y: .\\main.go:9:2: from &y (address-of) at .\\main.go:10:8 .\\main.go:9:2: from py := &y (assign) at .\\main.go:10:5 .\\main.go:9:2: flow: {heap} = py: .\\main.go:9:2: from ch1 <- py (send) at .\\main.go:11:6 .\\main.go:9:2: moved to heap: y \u5982\u679c\u4f7f\u7528slice\u548cmap\u7684\u6a21\u5f0f\uff1a package main func main() { var x int x = 10 var ls []*int ls = append(ls, &x) var y int var mp map[string]*int mp[\"y\"] = &y } \u7ed3\u8bba\u5206\u6790\uff1a # command-line-arguments .\\main.go:3:6: can inline main as: func() { var x int; x = <N>; x = 10; var ls []*int; ls = <N>; ls = append(ls, &x); var y int; y = <N>; var mp map[string]*int; mp = <N>; mp[\"y\"] = &y } .\\main.go:4:6: x escapes to heap: .\\main.go:4:6: flow: {heap} = &x: .\\main.go:4:6: from &x (address-of) at .\\main.go:7:18 .\\main.go:4:6: from append(ls, &x) (call parameter) at .\\main.go:7:13 .\\main.go:9:6: y escapes to heap: .\\main.go:9:6: flow: {heap} = &y: .\\main.go:9:6: from &y (address-of) at .\\main.go:11:12 .\\main.go:9:6: from mp[\"y\"] = &y (assign) at .\\main.go:11:10 .\\main.go:4:6: moved to heap: x .\\main.go:9:6: moved to heap: y \u4f7f\u7528\u95ed\u5305\u6355\u83b7\u6307\u9488\u7684\u6a21\u5f0f\uff1a package main import \"time\" func main() { x := 10 go func(x *int) { *x += 1 }(&x) // \u6355\u83b7\u7684\u77ac\u95f4\uff0cx\u6ca1\u6709\u79fb\u52a8\u5230heap\u4e0a\uff0c\u4f46\u662f\u6574\u4e2a\u95ed\u5305\u79fb\u52a8\u5230\u4e86heap\u4e0a\uff0c\u56e0\u6b64x\u4e5f\u8ddf\u968f\u95ed\u5305\u88ab\u79fb\u52a8\u5230heap\u4e0a\u4e86 time.Sleep(time.Second * 2) } \u7ed3\u8bba\u5206\u6790\uff1a # command-line-arguments .\\main.go:5:6: cannot inline main: unhandled op GO .\\main.go:7:5: can inline main.func1 as: func(*int) { *x += 1 } .\\main.go:7:5: func literal escapes to heap: .\\main.go:7:5: flow: {heap} = &{storage for func literal}: .\\main.go:7:5: from func literal (spill) at .\\main.go:7:5 .\\main.go:7:5: from go (func literal)(&x) (call parameter) at .\\main.go:7:2 .\\main.go:6:2: x escapes to heap: .\\main.go:6:2: flow: {heap} = &x: .\\main.go:6:2: from &x (address-of) at .\\main.go:9:4 .\\main.go:6:2: from go (func literal)(&x) (call parameter) at .\\main.go:7:2 .\\main.go:7:10: x does not escape .\\main.go:6:2: moved to heap: x .\\main.go:7:5: func literal escapes to heap \u5bf9\u4e8eslice\u6269\u5bb9\u7684\u60c5\u51b5\uff1a package main import ( \"os\" \"strconv\" ) func main() { ls := []int{1, 2, 3} ls = append(ls, 4) // \u786e\u5b9a\u6027\u7684\uff0c\u4e0d\u9003\u9038\uff0c\u7f16\u8bd1\u671f\u95f4\u53ef\u4ee5\u77e5\u9053 var n int n, _ = strconv.Atoi(os.Args[1]) // \u8f93\u5165\u6570\u636e\u540e\uff0c\u5219\u7ed3\u679c\u4e0d\u53ef\u77e5\uff0c\u56e0\u6b64\u53ef\u80fd\u9003\u9038 ls1 := []int{1, 2, 3} for i := 0; i < n; i++ { ls1 = append(ls1, 1) } } interface\u7c7b\u578b\u7684GC\uff0c\u6d89\u53ca\u4f7f\u7528interface\u7c7b\u578b\u8f6c\u6362\u5e76\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u53d1\u751f\u5185\u5b58\u9003\u9038\uff0c\u7ed9\u51fa\u4ee3\u7801\u793a\u4f8b\uff1a package main type foo interface { fooFunc() } type foo1 struct{} func (f1 foo1) fooFunc() {} type foo2 struct{} func (f2 *foo2) fooFunc() {} func main() { var f foo f = foo1{} f.fooFunc() // \u8c03\u7528\u65b9\u6cd5\u65f6\uff0c\u53d1\u751f\u9003\u9038\uff0c\u56e0\u4e3a\u65b9\u6cd5\u662f\u52a8\u6001\u5206\u914d\u7684 f = &foo2{} f.fooFunc() } \u6267\u884c\u8bf4\u660e\uff1a go-code \u27a4 go build -gcflags \"-m\" main.go # command-line-arguments .\\main.go:9:6: can inline foo1.fooFunc .\\main.go:13:6: can inline (*foo2).fooFunc .\\main.go:13:7: f2 does not escape .\\main.go:17:4: foo1 literal escapes to heap .\\main.go:19:6: &foo2 literal escapes to heap <autogenerated>:1: leaking param: .this <autogenerated>:1: inlining call to foo1.fooFunc <autogenerated>:1: .this does not escape \u8fd4\u56deslice\u7b49\u7684\u60c5\u51b5\uff1a package main func foo() []int { return []int{1, 2, 3} } func main() { ls := foo() // \u53d1\u751f\u9003\u9038 ls = append(ls, 1) } \u5206\u6790\u7ed3\u679c\uff1a # command-line-arguments .\\main.go:3:6: can inline foo as: func() []int { return []int literal } .\\main.go:7:6: can inline main as: func() { ls := foo(); ls = append(ls, 1) } .\\main.go:8:11: inlining call to foo func() []int { return []int literal } .\\main.go:4:14: []int literal escapes to heap: .\\main.go:4:14: flow: ~r0 = &{storage for []int literal}: .\\main.go:4:14: from []int literal (spill) at .\\main.go:4:14 .\\main.go:4:14: from return []int literal (return) at .\\main.go:4:2 .\\main.go:4:14: []int literal escapes to heap .\\main.go:8:11: []int literal does not escape \u4f20\u503c\u8fd8\u662f\u4f20\u6307\u9488\u7684\u95ee\u9898\uff1a \u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6307\u9488\u66f4\u5bb9\u6613\u51fa\u73b0\u5185\u5b58\u9003\u9038\u7684\u73b0\u8c61\u3002\u800c\u4e00\u65e6\u53d1\u751f\u4e86\u5185\u5b58\u9003\u9038\uff0c\u5219\u4e0d\u53ef\u907f\u514d\u5730\u5bf9GC\u9020\u6210\u6f5c\u5728\u7684\u538b\u529b\u3002\u6709\u79cd\u9519\u8bef\u7684\u89c2\u5ff5\uff1a\u4f20\u6307\u9488\u7684\u4ee3\u4ef7\u603b\u662f\u6bd4\u4f20\u503c\u7684\u62f7\u8d1d\u4ee3\u4ef7\u5c0f\u3002\u8fd9\u79cd\u89c2\u5ff5\u53ea\u5728\u50cfC\u8bed\u8a00\u8fd9\u79cd\u6ca1\u6709GC\u7684\u4f4e\u7ea7\u8bed\u8a00\u4e2d\u53ef\u80fd\u9002\u7528\u3002\u539f\u56e0\u5982\u4e0b\uff1a \u5bf9\u6307\u9488\u89e3\u5f15\u7528\u7684\u65f6\u5019\uff0c\u7f16\u8bd1\u5668\u4f1a\u8fdb\u884c\u4e00\u4e9b\u68c0\u67e5\u3002 \u6307\u9488\u4e00\u822c\u90fd\u4e0d\u662f\u4e34\u8fd1\u5730\u5740\u7684\u5f15\u7528\uff0c\u800c\u590d\u5236\u65f6\uff0c\u4e00\u822c\u90fd\u662fCPU cash\u4e2d\u7684\u6570\u636e\uff0ccash line\u5185\u7684\u6570\u636e\u7684\u590d\u5236\uff0c\u901f\u5ea6\u57fa\u672c\u548c\u4e00\u4e2a\u590d\u5236\u6307\u9488\u76f8\u7b49 \u56e0\u6b64\uff0c\u5bf9\u4e8e\u5c0f\u578b\u7684\u6570\u636e\uff0c\u4e00\u822c\u4f20\u503c\u5c31\u591f\u4e86\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u5bf9\u4ee3\u7801\u505a\u4e00\u4e9b\u91cd\u6784\uff0c\u4ee5\u6d88\u9664\u6210\u5458\u53d8\u91cf\u4e2d\u4e0d\u5fc5\u8981\u7684\u6307\u9488\u7c7b\u578b\u3002slice\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u4e5f\u4f1a\u9020\u6210\u5185\u5b58\u9003\u9038\uff0c\u4f7f\u7528\u5df2\u77e5\u56fa\u5b9a\u957f\u5ea6\u7684slice\uff0c\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u51cf\u5c11\u5185\u5b58\u9003\u9038\u3002nterface\u8c03\u7528\u65b9\u6cd5\u4f1a\u53d1\u751f\u5185\u5b58\u9003\u9038\uff0c\u67d0\u4e9b\u70ed\u70b9\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u8003\u8651\u4f18\u5316interface\u7684\u60c5\u51b5\u3002 \u51e0\u4e2a\u603b\u7ed3 \u6c38\u8fdc\u4e0d\u8981\u8fc7\u65e9\u7684\u4f18\u5316\uff0c\u4f7f\u7528\u6570\u636e\u9a71\u52a8\u4f18\u5316\u4ee3\u7801 \u6808\u56de\u6536\u7684\u4ee3\u4ef7\u8fdc\u8fdc\u5c0f\u4e8e\u5806\u56de\u6536\u7684\u4ee3\u4ef7 \u6307\u9488\u4e00\u822c\u60c5\u51b5\u4e0b\u4f1a\u5f71\u54cd\u6808\u56de\u6536 \u5728\u70ed\u70b9\u4ee3\u7801\u7247\u6bb5\uff0c\u8c28\u614e\u7684\u4f7f\u7528interface","title":"\u7b80\u4ecb"},{"location":"golang/docs/Golang%E7%9A%84GC%E5%92%8C%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8/#_1","text":"\u6bcf\u4e2a\u7248\u672c\u7684Golang\u7684\u5783\u573e\u56de\u6536\u90fd\u5728\u4e0d\u65ad\u4f18\u5316\u4e2d\uff0c\u800c\u4e14\u65b9\u6cd5\u548c\u7b56\u7565\u90fd\u5728\u53d8\u5316\uff0c\u56e0\u6b64\u8fd9\u91cc\u53ea\u662f\u603b\u7ed3\u51fa\u4ee5\u4e0b\u51e0\u4e2a\u5173\u952e\u70b9\uff1a \u4ec0\u4e48\u6837\u7684\u6570\u636e\u9700\u8981GC \u89e6\u53d1GC\u7684\u6761\u4ef6\u662f\u4ec0\u4e48 GC\u65f6\u53d1\u751f\u4e86\u4ec0\u4e48 \u80fd\u5426\u4ece\u4ee3\u7801\u5c42\u9762\u4e0a\u63d0\u9ad8GC\u7684\u6548\u7387","title":"\u7b80\u4ecb"},{"location":"golang/docs/Golang%E7%9A%84GC%E5%92%8C%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8/#gc","text":"Golang\u5728\u786e\u5b9a\u7684\u65f6\u95f4\uff0c\u6216\u8005\u5185\u5b58\u5206\u914d\u5230\u8fbe\u4e00\u5b9a\u7a0b\u5ea6\u65f6\uff0c\u8fdb\u884cGC\u3002GC\u65f6\uff0c\u4f1a\u505c\u6b62STW\uff08Stop The World\uff09\uff0c\u5373\u5bf9\u5916\u7684\u670d\u52a1\u90fd\u4f1a\u6682\u505c\uff0c\u7136\u540e\u8fdb\u884c\u5783\u573e\u56de\u6536\u5904\u7406\u3002Go1.12\u5f15\u5165\u4e86\u4e09\u8272\u6807\u8bb0\u6cd5\u548cwrite-barrier\u7684\u65b9\u5f0f\uff1b\u5728Go1.14\u4e2d\uff0c\u5f15\u5165\u770b\u4e86\u62a2\u5360\u5f0f\u56de\u6536\u673a\u5236\u3002 write-barrier\u673a\u5236\uff1a \u5047\u8bbe\u67094\u4e2aG\u5728\u8fd0\u884c\uff0c\u5982\u4e0b\u56fe\uff1a \u8fdb\u884cGC\u7684\u65f6\u5019\uff0c\u9700\u8981STW\uff0c\u6b64\u65f6\u76844\u4e2aG\u90fd\u8981\u505c\u6b62\u5de5\u4f5c\u3002\u5982\u679c\u6709\u4e00\u4e2a\u6ca1\u6709\u505c\u6b62\u5de5\u4f5c\u7684\uff0c\u5219GC\u6682\u65f6\u4e0d\u80fd\u53d1\u751f\u3002\u6bd4\u5982\u4e0b\u56fe\uff1a \u7b2c4\u4e2aG\u6ca1\u505c\u6b62\u5de5\u4f5c\uff0c\u5219GC\u9700\u8981\u7b49\u5f85\u5176\u7ed3\u675f\u3002Go1.14\u4e2d\uff0c\u53ef\u4ee5\u62a2\u5360\u7b2c4\u4e2aG\u7684\u5de5\u4f5c\u72b6\u6001\uff0c\u4fdd\u5b58\u5176\u72b6\u6001\u540e\uff0c\u518d\u8fdb\u884cGC GC\u7684\u65f6\u5019\uff0cGC\u673a\u5236\u4f1a\u5f81\u7528\u4e00\u4e9bG\u5e76\u53d1\u8f85\u52a9\u8fdb\u884c\u5de5\u4f5c\uff0c\u4e00\u822c\u670925%\u7684G\u4f1a\u88ab\u5f81\u7528\u3002","title":"GC\u7684\u57fa\u672c\u6d41\u7a0b"},{"location":"golang/docs/Golang%E7%9A%84GC%E5%92%8C%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8/#_2","text":"\u521b\u5efa\u767d\u3001\u7070\u548c\u9ed1\u4e09\u4e2a\u96c6\u5408 \u521d\u59cb\u5316\u6240\u6709\u7684\u5f85\u56de\u6536\u5bf9\u8c61\u90fd\u662f\u767d\u8272\u7684 \u4ece\u6839\u8282\u70b9\u904d\u5386\u5bf9\u8c61\uff0c\u4e0d\u9012\u5f52\uff1b\u904d\u5386\u5230\u7684\u767d\u8272\u5bf9\u8c61\u653e\u5230\u7070\u8272\u96c6\u5408\u5f53\u4e2d \u4e4b\u540e\u904d\u5386\u7070\u8272\u96c6\u5408\uff0c\u628a\u7070\u8272\u5bf9\u8c61\u5f15\u7528\u7684\u5bf9\u8c61\uff0c\u4ece\u767d\u8272\u96c6\u5408\u4e2d\u653e\u5165\u7070\u8272\u96c6\u5408\uff0c\u5e76\u628a\u73b0\u5728\u7684\u7070\u8272\u5bf9\u8c61\u653e\u5165\u9ed1\u8272\u96c6\u5408\u4e2d \u91cd\u590d\u4e0a\u4e00\u6b65\uff0c\u77e5\u9053\u7070\u8272\u96c6\u5408\u662f\u7a7a\u7684 \u901a\u8fc7write-barrier\u68c0\u6d4b\u5bf9\u8c61\u7684\u53d8\u5316\uff0c\u91cd\u590d\u4ee5\u4e0a\u64cd\u4f5c \u56de\u6536\u6240\u6709\u7684\u767d\u8272\u5bf9\u8c61","title":"\u6574\u4f53\u5de5\u4f5c\u6d41\u7a0b\uff1a"},{"location":"golang/docs/Golang%E7%9A%84GC%E5%92%8C%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8/#gc_1","text":"\u6c38\u8fdc\u4e0d\u8981\u8fc7\u65e9\u7684\u4f18\u5316\u7a0b\u5e8f\uff01\uff01\uff01 \u6808\u5185\u5b58\u5206\u914d\u548c\u56de\u6536\u7684\u4ee3\u4ef7\u8fdc\u8fdc\u5c0f\u4e8e\u5806\u5185\u5b58\u3002Golang\u7684\u5783\u573e\u56de\u6536\u53d1\u751f\u5728\u5168\u5c40\u7684\u5806\u4e0a\u548c\u6bcf\u4e2aGoroutinue\u7684\u6808\u4e0a\u3002\u56de\u6536\u6808\u5185\u5b58\u53ea\u9700\u8981\u4e24\u4e2aCPU\u6307\u4ee4\uff0cpush\u548cpop\u3002\u7136\u800c\uff0c\u5206\u914d\u5728\u6808\u5185\u5b58\u7684\u6570\u636e\uff0c\u9700\u8981\u5728\u7f16\u8bd1\u671f\u95f4\u5c31\u5f97\u77e5\u9053type\u548csize\u3002 Golang\u7684\u7f16\u8bd1\u5668\u4f7f\u7528\u201c\u9003\u9038\u5206\u6790\u201d\u7684\u65b9\u5f0f\uff0c\u51b3\u5b9a\u91c7\u53d6\u6808\u56de\u6536\u8fd8\u662f\u5806\u56de\u6536\u7684\u65b9\u5f0f\u3002\u5982\u679c\u53d1\u751f\u9003\u9038\uff0c\u5219\u4f7f\u7528\u5806\u56de\u6536\u3002 go build -gcflags '-m'\u547d\u4ee4\u53ef\u4ee5\u5206\u6790\u5185\u5b58\u9003\u9038\u7684\u73b0\u8c61\u3002 \u53d1\u751f\u5185\u5b58\u9003\u9038\u7684\u51e0\u79cd\u60c5\u51b5\uff1a \u5411chan\u4e2d\u53d1\u9001\u6570\u636e\u7684\u6307\u9488\u6216\u8005\u5305\u542b\u6307\u9488\u7684\u503c\u3002 \u56e0\u4e3a\u7f16\u8bd1\u5668\u6b64\u65f6\u4e0d\u77e5\u9053\u503c\u4ec0\u4e48\u65f6\u5019\u4f1a\u88ab\u63a5\u6536\uff0c\u56e0\u6b64\u53ea\u80fd\u653e\u5165\u5806\u4e2d \u975e\u76f4\u63a5\u7684\u51fd\u6570\u8c03\u7528\uff0c\u6bd4\u5982\u5728\u95ed\u5305\u4e2d\u5f15\u7528\u5305\u5916\u7684\u503c\uff0c\u56e0\u4e3a\u95ed\u5305\u6267\u884c\u7684\u751f\u547d\u5468\u671f\u53ef\u80fd\u4f1a\u8d85\u8fc7\u51fd\u6570\u5468\u671f\uff0c\u56e0\u6b64\u9700\u8981\u653e\u5165\u5806\u4e2d \u5728slice\u6216map\u4e2d\u5b58\u50a8\u6307\u9488\u6216\u8005\u5305\u542b\u6307\u9488\u7684\u503c\u3002 \u6bd4\u5982[]*string\uff0c\u5373\u4f7fslice\u662f\u5728\u6808\u4e0a\uff0c\u5176\u5b58\u50a8\u7684\u503c\u4ecd\u7136\u4f1a\u653e\u5165\u5806\u4e2d slice\u5982\u679c\u5e95\u5c42\u4f7f\u7528array\u4f5c\u4e3a\u5bb9\u5668\uff0c\u5728\u4f7f\u7528append\u6269\u5bb9\u7684\u65f6\u5019\u3002\u4f46\u662f\uff0c\u5982\u679c\u77e5\u9053\u5177\u4f53\u6269\u5bb9\u7684\u6570\u91cf\uff0c\u5219\u4ecd\u7136\u5728\u6808\u4e0a\u3002 \u5982\u679c\u5728\u7f16\u8bd1\u671f\u95f4\uff0cslice\u77e5\u9053\u81ea\u5df1\u7684size\uff0c\u90a3\u4e48\u653e\u5165\u6808\u4e2d\u3002\u66f4\u591a\u7684\u65f6\u5019\uff0c\u662f\u4e0d\u77e5\u9053size\u7684\uff0c\u6bd4\u5982append\u7684\u65f6\u5019\uff0c\u6b64\u65f6\u53ea\u80fd\u653e\u5165\u5806\u4e2d\u3002 interface\u7c7b\u578b\u591a\u6001\u7684\u65f6\u5019\u8c03\u7528\u65b9\u6cd5\uff0c\u6b64\u65f6\u4f1a\u53d1\u751f\u9003\u9038 \u6307\u9488\u3001slice\u548cmap\u4f5c\u4e3a\u53c2\u6570\u8fd4\u56de\u7684\u65f6\u5019\uff0c\u6b64\u65f6\u80af\u5b9a\u8981\u53d1\u751f\u9003\u9038\u3002","title":"GC\u56de\u6536\u7684\u5bf9\u8c61"},{"location":"golang/docs/Golang%E7%9A%84GC%E5%92%8C%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8/#_3","text":"\u9996\u5148\u660e\u786e\u4e00\u70b9\uff0cGolang\u4e2d\u6240\u6709\u7684\u6570\u636e\u90fd\u662f\u6309\u503c\u4f20\u9012\uff0c\u8fd9\u70b9\u548cC\u8bed\u8a00\u662f\u4e00\u6837\u7684\uff08\u6ce8\u610fGolang\u4e2d\u7684\u6570\u7ec4\u540d\u662f\u503c\uff0c\u548cC\u7684\u5dee\u522b\uff09\u3002\u6240\u8c13\u7684map\u3001slice\u548cchan\u7b49\u662f\u5f15\u7528\uff0c\u5176\u672c\u8d28\u539f\u56e0\u662f\uff0c\u8fd9\u4e9b\u7ed3\u6784\u7684\u5185\u90e8\u90fd\u6709\u6307\u9488\uff0c\u590d\u5236\u7684\u65f6\u5019\uff0c\u5185\u90e8\u90fd\u662f\u590d\u5236\u7684\u6307\u9488\uff0c\u56e0\u6b64\u8868\u73b0\u7684\u662f\u4f20\u503c\u3002 \u5728\u51fd\u6570\u8c03\u7528\u4e2d\uff0c\u5bf9\u4e8e\u6307\u9488\u7684\u60c5\u51b5\uff0c\u53ea\u8981\u6307\u5411\u7684\u5730\u5740\u7684\u6240\u6709\u8005\u53ea\u6709\u4e00\u4e2a\uff0c\u90a3\u4e48\u5fc5\u7136\u662f\u6808\u56de\u6536\uff1b\u800c\u4e00\u65e6\u5b58\u5728\u5730\u5740\u5b58\u5728\u4e0d\u786e\u5b9a\u53d8\u5316\u65f6\uff0c\u5219\u8f6c\u6362\u6210\u5806\u7684\u6570\u636e\u3002\u6bd4\u5982slice\u60c5\u51b5\uff0c\u56e0\u4e3aslice\u4f1a\u6269\u5bb9\u6216\u8005\u7f29\u5bb9\uff0c\u56e0\u6b64\u9020\u6210\u4e0d\u786e\u5b9a\u60c5\u51b5\u3002","title":"\u603b\u7ed3\u4e00\u4e0b\u53d1\u751f\u9003\u9038\u7684\u7ed3\u8bba\uff1a"},{"location":"golang/docs/Golang%E7%9A%84GC%E5%92%8C%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8/#_4","text":"package main func main() { ch := make(chan int, 1) x := 5 ch <- x // x\u4e0d\u53d1\u751f\u9003\u9038\uff0c\u56e0\u4e3a\u53ea\u662f\u590d\u5236\u7684\u503c ch1 := make(chan *int, 1) y := 5 py := &y ch1 <- py // y\u9003\u9038\uff0c\u56e0\u4e3a\u5730\u5740\u4f20\u5165\u4e86chan z := 5 pz := &z // z\u4e0d\u9003\u9038\uff0c\u56e0\u4e3a\u662f\u786e\u5b9a\u6027\u6790\u6784 *pz += 1 } \u6267\u884c\u547d\u4ee4\uff1ago build -gcflags ./main.go\uff0c\u5f97\u5230\u7ed3\u8bba\u662fy z\u90fd\u53d1\u751f\u4e86\u9003\u9038\u3002 # command-line-arguments .\\main.go:3:6: can inline main as: func() { ch := make(chan int, 1); x := 5; ch <- x; ch1 := make(chan *int, 1); y := 5; py := &y; ch1 <- py; z := 5; pz := &z; *pz += 1 } .\\main.go:9:2: y escapes to heap: .\\main.go:9:2: flow: py = &y: .\\main.go:9:2: from &y (address-of) at .\\main.go:10:8 .\\main.go:9:2: from py := &y (assign) at .\\main.go:10:5 .\\main.go:9:2: flow: {heap} = py: .\\main.go:9:2: from ch1 <- py (send) at .\\main.go:11:6 .\\main.go:9:2: moved to heap: y \u5982\u679c\u4f7f\u7528slice\u548cmap\u7684\u6a21\u5f0f\uff1a package main func main() { var x int x = 10 var ls []*int ls = append(ls, &x) var y int var mp map[string]*int mp[\"y\"] = &y } \u7ed3\u8bba\u5206\u6790\uff1a # command-line-arguments .\\main.go:3:6: can inline main as: func() { var x int; x = <N>; x = 10; var ls []*int; ls = <N>; ls = append(ls, &x); var y int; y = <N>; var mp map[string]*int; mp = <N>; mp[\"y\"] = &y } .\\main.go:4:6: x escapes to heap: .\\main.go:4:6: flow: {heap} = &x: .\\main.go:4:6: from &x (address-of) at .\\main.go:7:18 .\\main.go:4:6: from append(ls, &x) (call parameter) at .\\main.go:7:13 .\\main.go:9:6: y escapes to heap: .\\main.go:9:6: flow: {heap} = &y: .\\main.go:9:6: from &y (address-of) at .\\main.go:11:12 .\\main.go:9:6: from mp[\"y\"] = &y (assign) at .\\main.go:11:10 .\\main.go:4:6: moved to heap: x .\\main.go:9:6: moved to heap: y \u4f7f\u7528\u95ed\u5305\u6355\u83b7\u6307\u9488\u7684\u6a21\u5f0f\uff1a package main import \"time\" func main() { x := 10 go func(x *int) { *x += 1 }(&x) // \u6355\u83b7\u7684\u77ac\u95f4\uff0cx\u6ca1\u6709\u79fb\u52a8\u5230heap\u4e0a\uff0c\u4f46\u662f\u6574\u4e2a\u95ed\u5305\u79fb\u52a8\u5230\u4e86heap\u4e0a\uff0c\u56e0\u6b64x\u4e5f\u8ddf\u968f\u95ed\u5305\u88ab\u79fb\u52a8\u5230heap\u4e0a\u4e86 time.Sleep(time.Second * 2) } \u7ed3\u8bba\u5206\u6790\uff1a # command-line-arguments .\\main.go:5:6: cannot inline main: unhandled op GO .\\main.go:7:5: can inline main.func1 as: func(*int) { *x += 1 } .\\main.go:7:5: func literal escapes to heap: .\\main.go:7:5: flow: {heap} = &{storage for func literal}: .\\main.go:7:5: from func literal (spill) at .\\main.go:7:5 .\\main.go:7:5: from go (func literal)(&x) (call parameter) at .\\main.go:7:2 .\\main.go:6:2: x escapes to heap: .\\main.go:6:2: flow: {heap} = &x: .\\main.go:6:2: from &x (address-of) at .\\main.go:9:4 .\\main.go:6:2: from go (func literal)(&x) (call parameter) at .\\main.go:7:2 .\\main.go:7:10: x does not escape .\\main.go:6:2: moved to heap: x .\\main.go:7:5: func literal escapes to heap \u5bf9\u4e8eslice\u6269\u5bb9\u7684\u60c5\u51b5\uff1a package main import ( \"os\" \"strconv\" ) func main() { ls := []int{1, 2, 3} ls = append(ls, 4) // \u786e\u5b9a\u6027\u7684\uff0c\u4e0d\u9003\u9038\uff0c\u7f16\u8bd1\u671f\u95f4\u53ef\u4ee5\u77e5\u9053 var n int n, _ = strconv.Atoi(os.Args[1]) // \u8f93\u5165\u6570\u636e\u540e\uff0c\u5219\u7ed3\u679c\u4e0d\u53ef\u77e5\uff0c\u56e0\u6b64\u53ef\u80fd\u9003\u9038 ls1 := []int{1, 2, 3} for i := 0; i < n; i++ { ls1 = append(ls1, 1) } } interface\u7c7b\u578b\u7684GC\uff0c\u6d89\u53ca\u4f7f\u7528interface\u7c7b\u578b\u8f6c\u6362\u5e76\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u53d1\u751f\u5185\u5b58\u9003\u9038\uff0c\u7ed9\u51fa\u4ee3\u7801\u793a\u4f8b\uff1a package main type foo interface { fooFunc() } type foo1 struct{} func (f1 foo1) fooFunc() {} type foo2 struct{} func (f2 *foo2) fooFunc() {} func main() { var f foo f = foo1{} f.fooFunc() // \u8c03\u7528\u65b9\u6cd5\u65f6\uff0c\u53d1\u751f\u9003\u9038\uff0c\u56e0\u4e3a\u65b9\u6cd5\u662f\u52a8\u6001\u5206\u914d\u7684 f = &foo2{} f.fooFunc() } \u6267\u884c\u8bf4\u660e\uff1a go-code \u27a4 go build -gcflags \"-m\" main.go # command-line-arguments .\\main.go:9:6: can inline foo1.fooFunc .\\main.go:13:6: can inline (*foo2).fooFunc .\\main.go:13:7: f2 does not escape .\\main.go:17:4: foo1 literal escapes to heap .\\main.go:19:6: &foo2 literal escapes to heap <autogenerated>:1: leaking param: .this <autogenerated>:1: inlining call to foo1.fooFunc <autogenerated>:1: .this does not escape \u8fd4\u56deslice\u7b49\u7684\u60c5\u51b5\uff1a package main func foo() []int { return []int{1, 2, 3} } func main() { ls := foo() // \u53d1\u751f\u9003\u9038 ls = append(ls, 1) } \u5206\u6790\u7ed3\u679c\uff1a # command-line-arguments .\\main.go:3:6: can inline foo as: func() []int { return []int literal } .\\main.go:7:6: can inline main as: func() { ls := foo(); ls = append(ls, 1) } .\\main.go:8:11: inlining call to foo func() []int { return []int literal } .\\main.go:4:14: []int literal escapes to heap: .\\main.go:4:14: flow: ~r0 = &{storage for []int literal}: .\\main.go:4:14: from []int literal (spill) at .\\main.go:4:14 .\\main.go:4:14: from return []int literal (return) at .\\main.go:4:2 .\\main.go:4:14: []int literal escapes to heap .\\main.go:8:11: []int literal does not escape","title":"\u4ee5\u4e0b\u4f7f\u7528\u4ee3\u7801\u793a\u4f8b\u8bf4\u660e\uff1a"},{"location":"golang/docs/Golang%E7%9A%84GC%E5%92%8C%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8/#_5","text":"\u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6307\u9488\u66f4\u5bb9\u6613\u51fa\u73b0\u5185\u5b58\u9003\u9038\u7684\u73b0\u8c61\u3002\u800c\u4e00\u65e6\u53d1\u751f\u4e86\u5185\u5b58\u9003\u9038\uff0c\u5219\u4e0d\u53ef\u907f\u514d\u5730\u5bf9GC\u9020\u6210\u6f5c\u5728\u7684\u538b\u529b\u3002\u6709\u79cd\u9519\u8bef\u7684\u89c2\u5ff5\uff1a\u4f20\u6307\u9488\u7684\u4ee3\u4ef7\u603b\u662f\u6bd4\u4f20\u503c\u7684\u62f7\u8d1d\u4ee3\u4ef7\u5c0f\u3002\u8fd9\u79cd\u89c2\u5ff5\u53ea\u5728\u50cfC\u8bed\u8a00\u8fd9\u79cd\u6ca1\u6709GC\u7684\u4f4e\u7ea7\u8bed\u8a00\u4e2d\u53ef\u80fd\u9002\u7528\u3002\u539f\u56e0\u5982\u4e0b\uff1a \u5bf9\u6307\u9488\u89e3\u5f15\u7528\u7684\u65f6\u5019\uff0c\u7f16\u8bd1\u5668\u4f1a\u8fdb\u884c\u4e00\u4e9b\u68c0\u67e5\u3002 \u6307\u9488\u4e00\u822c\u90fd\u4e0d\u662f\u4e34\u8fd1\u5730\u5740\u7684\u5f15\u7528\uff0c\u800c\u590d\u5236\u65f6\uff0c\u4e00\u822c\u90fd\u662fCPU cash\u4e2d\u7684\u6570\u636e\uff0ccash line\u5185\u7684\u6570\u636e\u7684\u590d\u5236\uff0c\u901f\u5ea6\u57fa\u672c\u548c\u4e00\u4e2a\u590d\u5236\u6307\u9488\u76f8\u7b49 \u56e0\u6b64\uff0c\u5bf9\u4e8e\u5c0f\u578b\u7684\u6570\u636e\uff0c\u4e00\u822c\u4f20\u503c\u5c31\u591f\u4e86\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u5bf9\u4ee3\u7801\u505a\u4e00\u4e9b\u91cd\u6784\uff0c\u4ee5\u6d88\u9664\u6210\u5458\u53d8\u91cf\u4e2d\u4e0d\u5fc5\u8981\u7684\u6307\u9488\u7c7b\u578b\u3002slice\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u4e5f\u4f1a\u9020\u6210\u5185\u5b58\u9003\u9038\uff0c\u4f7f\u7528\u5df2\u77e5\u56fa\u5b9a\u957f\u5ea6\u7684slice\uff0c\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u51cf\u5c11\u5185\u5b58\u9003\u9038\u3002nterface\u8c03\u7528\u65b9\u6cd5\u4f1a\u53d1\u751f\u5185\u5b58\u9003\u9038\uff0c\u67d0\u4e9b\u70ed\u70b9\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u8003\u8651\u4f18\u5316interface\u7684\u60c5\u51b5\u3002","title":"\u4f20\u503c\u8fd8\u662f\u4f20\u6307\u9488\u7684\u95ee\u9898\uff1a"},{"location":"golang/docs/Golang%E7%9A%84GC%E5%92%8C%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8/#_6","text":"\u6c38\u8fdc\u4e0d\u8981\u8fc7\u65e9\u7684\u4f18\u5316\uff0c\u4f7f\u7528\u6570\u636e\u9a71\u52a8\u4f18\u5316\u4ee3\u7801 \u6808\u56de\u6536\u7684\u4ee3\u4ef7\u8fdc\u8fdc\u5c0f\u4e8e\u5806\u56de\u6536\u7684\u4ee3\u4ef7 \u6307\u9488\u4e00\u822c\u60c5\u51b5\u4e0b\u4f1a\u5f71\u54cd\u6808\u56de\u6536 \u5728\u70ed\u70b9\u4ee3\u7801\u7247\u6bb5\uff0c\u8c28\u614e\u7684\u4f7f\u7528interface","title":"\u51e0\u4e2a\u603b\u7ed3"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/","text":"\u8fd9\u7bc7\u6587\u7ae0\u4e3b\u8981\u4ecb\u7ecdGo\u5185\u5b58\u5206\u914d\u548cGo\u5185\u5b58\u7ba1\u7406\uff0c\u4f1a\u8f7b\u5fae\u6d89\u53ca\u5185\u5b58\u7533\u8bf7\u548c\u91ca\u653e\uff0c\u4ee5\u53caGo\u5783\u573e\u56de\u6536\u3002 \u4ece\u975e\u5e38\u5b8f\u89c2\u7684\u89d2\u5ea6\u770b\uff0cGo\u7684\u5185\u5b58\u7ba1\u7406\u5c31\u662f\u4e0b\u56fe\u8fd9\u4e2a\u6837\u5b50\uff0c\u6211\u4eec\u4eca\u5929\u4e3b\u8981\u5173\u6ce8\u5176\u4e2d\u6807\u7ea2\u7684\u90e8\u5206\u3002 \u672c\u6587\u57fa\u4e8ego1.11.2\uff0c\u4e0d\u540c\u7248\u672cGo\u7684\u5185\u5b58\u7ba1\u7406\u53ef\u80fd\u5b58\u5728\u5dee\u522b\uff0c\u6bd4\u59821.9\u4e0e1.11\u7684mheap\u5b9a\u4e49\u5c31\u662f\u5dee\u522b\u6bd4\u8f83\u5927\u7684\uff0c\u540e\u7eed\u770b\u6e90\u7801\u7684\u65f6\u5019\uff0c\u8bf7\u6ce8\u610f\u4f60\u7684go\u7248\u672c\uff0c\u4f46\u65e0\u8bba\u4f60\u7528\u54ea\u4e2ago\u7248\u672c\uff0c\u8fd9\u90fd\u662f\u4e00\u4e2a\u4f18\u79c0\u7684\u8d44\u6599\uff0c\u56e0\u4e3a\u5185\u5b58\u7ba1\u7406\u7684\u601d\u60f3\u548c\u6846\u67b6\u59cb\u7ec8\u672a\u53d8\u3002 Go\u8fd9\u95e8\u8bed\u8a00\u629b\u5f03\u4e86C/C++\u4e2d\u7684\u5f00\u53d1\u8005\u7ba1\u7406\u5185\u5b58\u7684\u65b9\u5f0f\uff1a\u4e3b\u52a8\u7533\u8bf7\u4e0e\u4e3b\u52a8\u91ca\u653e\uff0c\u589e\u52a0\u4e86\u9003\u9038\u5206\u6790\u548cGC\uff0c\u5c06\u5f00\u53d1\u8005\u4ece\u5185\u5b58\u7ba1\u7406\u4e2d\u91ca\u653e\u51fa\u6765\uff0c\u8ba9\u5f00\u53d1\u8005\u6709\u66f4\u591a\u7684\u7cbe\u529b\u53bb\u5173\u6ce8\u8f6f\u4ef6\u8bbe\u8ba1\uff0c\u800c\u4e0d\u662f\u5e95\u5c42\u7684\u5185\u5b58\u95ee\u9898\u3002\u8fd9\u662fGo\u8bed\u8a00\u6210\u4e3a\u9ad8\u751f\u4ea7\u529b\u8bed\u8a00\u7684\u539f\u56e0\u4e4b\u4e00\u3002 \u6211\u4eec\u4e0d\u9700\u8981\u7cbe\u901a\u5185\u5b58\u7684\u7ba1\u7406\uff0c\u56e0\u4e3a\u5b83\u786e\u5b9e\u5f88\u590d\u6742\uff0c\u4f46\u638c\u63e1\u5185\u5b58\u7684\u7ba1\u7406\uff0c\u53ef\u4ee5\u8ba9\u4f60\u5199\u51fa\u66f4\u9ad8\u8d28\u91cf\u7684\u4ee3\u7801\uff0c\u53e6\u5916\uff0c\u8fd8\u80fd\u52a9\u4f60\u5b9a\u4f4dBug\u3002 \u8fd9\u7bc7\u6587\u7ae0\u91c7\u7528\u5c42\u5c42\u9012\u8fdb\u7684\u65b9\u5f0f\uff0c\u4f9d\u6b21\u4f1a\u4ecb\u7ecd\u5173\u4e8e\u5b58\u50a8\u7684\u57fa\u672c\u77e5\u8bc6\uff0cGo\u5185\u5b58\u7ba1\u7406\u7684\u201c\u524d\u8f88\u201dTCMalloc\uff0c\u7136\u540e\u662fGo\u7684\u5185\u5b58\u7ba1\u7406\u548c\u5206\u914d\uff0c\u6700\u540e\u662f\u603b\u7ed3\u3002\u8fd9\u4e48\u505a\u7684\u76ee\u7684\u662f\uff0c\u5e0c\u671b\u5404\u4f4d\u80fd\u901a\u8fc7\u5168\u5c40\u7684\u8ba4\u8bc6\u548c\u601d\u8003\uff0c\u62e5\u6709\u66f4\u597d\u7684\u7f16\u7801\u601d\u7ef4\u548c\u67b6\u6784\u601d\u7ef4\u3002 1. \u5b58\u50a8\u57fa\u7840\u77e5\u8bc6\u56de\u987e \u8fd9\u90e8\u5206\u6211\u4eec\u7b80\u5355\u56de\u987e\u4e00\u4e0b\u8ba1\u7b97\u673a\u5b58\u50a8\u4f53\u7cfb\u3001\u865a\u62df\u5185\u5b58\u3001\u6808\u548c\u5806\uff0c\u4ee5\u53ca\u5806\u5185\u5b58\u7684\u7ba1\u7406\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u5bf9\u7406\u89e3\u548c\u638c\u63e1Go\u5185\u5b58\u7ba1\u7406\u6bd4\u8f83\u91cd\u8981\uff0c\u5efa\u8bae\u5fd8\u8bb0\u6216\u4e0d\u719f\u6089\u7684\u670b\u53cb\u4e0d\u8981\u8df3\u8fc7\u3002 \u5b58\u50a8\u91d1\u5b57\u5854 \u8fd9\u5e45\u56fe\u8868\u8fbe\u4e86\u8ba1\u7b97\u673a\u7684\u5b58\u50a8\u4f53\u7cfb\uff0c\u4ece\u4e0a\u81f3\u4e0b\u4f9d\u6b21\u662f\uff1a CPU\u5bc4\u5b58\u5668 Cache \u5185\u5b58 \u786c\u76d8\u7b49\u8f85\u52a9\u5b58\u50a8\u8bbe\u5907 \u9f20\u6807\u7b49\u5916\u63a5\u8bbe\u5907 \u4ece\u4e0a\u81f3\u4e0b\uff0c\u8bbf\u95ee\u901f\u5ea6\u8d8a\u6765\u8d8a\u6162\uff0c\u8bbf\u95ee\u65f6\u95f4\u8d8a\u6765\u8d8a\u957f\u3002 \u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\u4e0b\u97622\u4e2a\u7b80\u5355\u7684\u95ee\u9898\uff0c\u5982\u679c\u6ca1\u6709\u4e0d\u59a8\u60f3\u60f3\uff1a \u5982\u679cCPU\u76f4\u63a5\u8bbf\u95ee\u786c\u76d8\uff0cCPU\u80fd\u5145\u5206\u5229\u7528\u5417\uff1f \u5982\u679cCPU\u76f4\u63a5\u8bbf\u95ee\u5185\u5b58\uff0cCPU\u80fd\u5145\u5206\u5229\u7528\u5417\uff1f CPU\u901f\u5ea6\u5f88\u5feb\uff0c\u4f46\u786c\u76d8\u7b49\u6301\u4e45\u5b58\u50a8\u5f88\u6162\uff0c\u5982\u679cCPU\u76f4\u63a5\u8bbf\u95ee\u78c1\u76d8\uff0c\u78c1\u76d8\u53ef\u4ee5\u62c9\u4f4eCPU\u7684\u901f\u5ea6\uff0c\u673a\u5668\u6574\u4f53\u6027\u80fd\u5c31\u4f1a\u4f4e\u4e0b\uff0c\u4e3a\u4e86\u5f25\u8865\u8fd92\u4e2a\u786c\u4ef6\u4e4b\u95f4\u7684\u901f\u7387\u5dee\u5f02\uff0c\u6240\u4ee5\u5728CPU\u548c\u78c1\u76d8\u4e4b\u95f4\u589e\u52a0\u4e86\u6bd4\u78c1\u76d8\u5feb\u5f88\u591a\u7684\u5185\u5b58\u3002 \u7136\u800c\uff0cCPU\u8ddf\u5185\u5b58\u7684\u901f\u7387\u4e5f\u4e0d\u662f\u76f8\u540c\u7684\uff0c\u4ece\u4e0a\u56fe\u53ef\u4ee5\u770b\u5230\uff0cCPU\u7684\u901f\u7387\u63d0\u9ad8\u7684\u5f88\u5feb\uff08\u6469\u5c14\u5b9a\u5f8b\uff09\uff0c\u7136\u800c\u5185\u5b58\u901f\u7387\u589e\u957f\u7684\u5f88\u6162\uff0c\u867d\u7136CPU\u7684\u901f\u7387\u73b0\u5728\u589e\u52a0\u7684\u5f88\u6162\u4e86\uff0c\u4f46\u662f\u5185\u5b58\u7684\u901f\u7387\u4e5f\u6ca1\u589e\u52a0\u591a\u5c11\uff0c\u901f\u7387\u5dee\u8ddd\u5f88\u5927\uff0c\u4ece1980\u5e74\u5f00\u59cbCPU\u548c\u5185\u5b58\u901f\u7387\u5dee\u8ddd\u5728\u4e0d\u65ad\u62c9\u5927\uff0c\u4e3a\u4e86\u5f25\u8865\u8fd92\u4e2a\u786c\u4ef6\u4e4b\u95f4\u7684\u901f\u7387\u5dee\u5f02\uff0c\u6240\u4ee5\u5728CPU\u8ddf\u5185\u5b58\u4e4b\u95f4\u589e\u52a0\u4e86\u6bd4\u5185\u5b58\u66f4\u5feb\u7684Cache\uff0cCache\u662f\u5185\u5b58\u6570\u636e\u7684\u7f13\u5b58\uff0c\u53ef\u4ee5\u964d\u4f4eCPU\u8bbf\u95ee\u5185\u5b58\u7684\u65f6\u95f4\u3002 \u4e0d\u8981\u4ee5\u4e3a\u6709\u4e86Cache\u5c31\u4e07\u4e8b\u5927\u5409\u4e86\uff0cCPU\u7684\u901f\u7387\u8fd8\u5728\u4e0d\u65ad\u589e\u5927\uff0cCache\u4e5f\u5728\u4e0d\u65ad\u6539\u53d8\uff0c\u4ece\u6700\u521d\u76841\u7ea7\uff0c\u5230\u540e\u6765\u76842\u7ea7\uff0c\u5230\u5f53\u4ee3\u76843\u7ea7Cache. \u4e09\u7ea7Cache\u5206\u522b\u662fL1\u3001L2\u3001L3\uff0c\u5b83\u4eec\u7684\u901f\u7387\u662f\u4e09\u4e2a\u4e0d\u540c\u7684\u5c42\u7ea7\uff0cL1\u901f\u7387\u6700\u5feb\uff0c\u4e0eCPU\u901f\u7387\u6700\u63a5\u8fd1\uff0c\u662fRAM\u901f\u7387\u7684100\u500d\uff0cL2\u901f\u7387\u5c31\u964d\u5230\u4e86RAM\u768425\u500d\uff0cL3\u7684\u901f\u7387\u66f4\u9760\u8fd1RAM\u7684\u901f\u7387\u3002 \u770b\u5230\u8fd9\u4e86\uff0c\u4f60\u6709\u6ca1\u6709Get\u5230\u6574\u4e2a\u5b58\u50a8\u4f53\u7cfb\u7684\u5206\u5c42\u8bbe\u8ba1\uff1f\u81ea\u9876\u5411\u4e0b\uff0c\u901f\u7387\u8d8a\u6765\u8d8a\u4f4e\uff0c\u8bbf\u95ee\u65f6\u95f4\u8d8a\u6765\u8d8a\u957f\uff0c\u4ece\u78c1\u76d8\u5230CPU\u5bc4\u5b58\u5668\uff0c\u4e0a\u4e00\u5c42\u90fd\u53ef\u4ee5\u770b\u505a\u662f\u4e0b\u4e00\u5c42\u7684\u7f13\u5b58\u3002 \u770b\u4e86\u5206\u5c42\u8bbe\u8ba1\uff0c\u6211\u4eec\u770b\u4e00\u4e0b\u5185\u5b58\uff0c\u6bd5\u7adf\u6211\u4eec\u662f\u4ecb\u7ecd\u5185\u5b58\u7ba1\u7406\u7684\u6587\u7ae0\u3002 \u865a\u62df\u5185\u5b58 \u865a\u62df\u5185\u5b58\u662f\u5f53\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u5fc5\u5907\u7684\u4e00\u9879\u91cd\u8981\u529f\u80fd\u4e86\uff0c\u5b83\u5411\u8fdb\u7a0b\u5c4f\u853d\u4e86\u5e95\u5c42\u4e86RAM\u548c\u78c1\u76d8\uff0c\u5e76\u5411\u8fdb\u7a0b\u63d0\u4f9b\u4e86\u8fdc\u8d85\u7269\u7406\u5185\u5b58\u5927\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u6211\u4eec\u770b\u4e00\u4e0b\u865a\u62df\u5185\u5b58\u7684\u5206\u5c42\u8bbe\u8ba1\u3002 \u4e0a\u56fe\u5c55\u793a\u4e86\u67d0\u8fdb\u7a0b\u8bbf\u95ee\u6570\u636e\uff0c\u5f53Cache\u6ca1\u6709\u547d\u4e2d\u7684\u65f6\u5019\uff0c\u8bbf\u95ee\u865a\u62df\u5185\u5b58\u83b7\u53d6\u6570\u636e\u7684\u8fc7\u7a0b\u3002 \u8bbf\u95ee\u5185\u5b58\uff0c\u5b9e\u9645\u8bbf\u95ee\u7684\u662f\u865a\u62df\u5185\u5b58\uff0c\u865a\u62df\u5185\u5b58\u901a\u8fc7\u9875\u8868\u67e5\u770b\uff0c\u5f53\u524d\u8981\u8bbf\u95ee\u7684\u865a\u62df\u5185\u5b58\u5730\u5740\uff0c\u662f\u5426\u5df2\u7ecf\u52a0\u8f7d\u5230\u4e86\u7269\u7406\u5185\u5b58\uff0c\u5982\u679c\u5df2\u7ecf\u5728\u7269\u7406\u5185\u5b58\uff0c\u5219\u53d6\u7269\u7406\u5185\u5b58\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\u5bf9\u5e94\u7684\u7269\u7406\u5185\u5b58\uff0c\u5219\u4ece\u78c1\u76d8\u52a0\u8f7d\u6570\u636e\u5230\u7269\u7406\u5185\u5b58\uff0c\u5e76\u628a\u7269\u7406\u5185\u5b58\u5730\u5740\u548c\u865a\u62df\u5185\u5b58\u5730\u5740\u66f4\u65b0\u5230\u9875\u8868\u3002 \u6709\u6ca1\u6709Get\u5230\uff1a\u7269\u7406\u5185\u5b58\u5c31\u662f\u78c1\u76d8\u5b58\u50a8\u7f13\u5b58\u5c42\u3002 \u53e6\u5916\uff0c\u5728\u6ca1\u6709\u865a\u62df\u5185\u5b58\u7684\u65f6\u4ee3\uff0c\u7269\u7406\u5185\u5b58\u5bf9\u6240\u6709\u8fdb\u7a0b\u662f\u5171\u4eab\u7684\uff0c\u591a\u8fdb\u7a0b\u540c\u65f6\u8bbf\u95ee\u540c\u4e00\u4e2a\u7269\u7406\u5185\u5b58\u5b58\u5728\u5e76\u53d1\u8bbf\u95ee\u95ee\u9898\u3002\u5f15\u5165\u865a\u62df\u5185\u5b58\u540e\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u8981\u5404\u81ea\u7684\u865a\u62df\u5185\u5b58\uff0c\u5185\u5b58\u7684\u5e76\u53d1\u8bbf\u95ee\u95ee\u9898\u7684\u7c92\u5ea6\u4ece\u591a\u8fdb\u7a0b\u7ea7\u522b\uff0c\u53ef\u4ee5\u964d\u4f4e\u5230\u591a\u7ebf\u7a0b\u7ea7\u522b\u3002 \u6808\u548c\u5806 \u6211\u4eec\u73b0\u5728\u4ece\u865a\u62df\u5185\u5b58\uff0c\u518d\u8fdb\u4e00\u5c42\uff0c\u770b\u865a\u62df\u5185\u5b58\u4e2d\u7684\u6808\u548c\u5806\uff0c\u4e5f\u5c31\u662f\u8fdb\u7a0b\u5bf9\u5185\u5b58\u7684\u7ba1\u7406\u3002 \u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u8fdb\u7a0b\u7684\u865a\u62df\u5185\u5b58\u5212\u5206\uff0c\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684\u5185\u5b58\u5730\u5740\u90fd\u662f\u865a\u62df\u5185\u5b58\u5730\u5740\uff0c\u800c\u4e0d\u662f\u5b9e\u9645\u7684\u7269\u7406\u5185\u5b58\u5730\u5740\u3002\u6808\u548c\u5806\u53ea\u662f\u865a\u62df\u5185\u5b58\u4e0a2\u5757\u4e0d\u540c\u529f\u80fd\u7684\u5185\u5b58\u533a\u57df\uff1a \u6808\u5728\u9ad8\u5730\u5740\uff0c\u4ece\u9ad8\u5730\u5740\u5411\u4f4e\u5730\u5740\u589e\u957f\u3002 \u5806\u5728\u4f4e\u5730\u5740\uff0c\u4ece\u4f4e\u5730\u5740\u5411\u9ad8\u5730\u5740\u589e\u957f\u3002 \u6808\u548c\u5806\u76f8\u6bd4\u6709\u8fd9\u4e48\u51e0\u4e2a\u597d\u5904\uff1a 1\u3001\u6808\u7684\u5185\u5b58\u7ba1\u7406\u7b80\u5355\uff0c\u5206\u914d\u6bd4\u5806\u4e0a\u5feb\u3002 2\u3001\u6808\u7684\u5185\u5b58\u4e0d\u9700\u8981\u56de\u6536\uff0c\u800c\u5806\u9700\u8981\uff0c\u65e0\u8bba\u662f\u4e3b\u52a8free\uff0c\u8fd8\u662f\u88ab\u52a8\u7684\u5783\u573e\u56de\u6536\uff0c\u8fd9\u90fd\u9700\u8981\u82b1\u8d39\u989d\u5916\u7684CPU\u3002 3\u3001\u6808\u4e0a\u7684\u5185\u5b58\u6709\u66f4\u597d\u7684\u5c40\u90e8\u6027\uff0c\u5806\u4e0a\u5185\u5b58\u8bbf\u95ee\u5c31\u4e0d\u90a3\u4e48\u53cb\u597d\u4e86\uff0cCPU\u8bbf\u95ee\u76842\u5757\u6570\u636e\u53ef\u80fd\u5728\u4e0d\u540c\u7684\u9875\u4e0a\uff0cCPU\u8bbf\u95ee\u6570\u636e\u7684\u65f6\u95f4\u53ef\u80fd\u5c31\u4e0a\u53bb\u4e86\u3002 \u5806\u5185\u5b58\u7ba1\u7406 \u6211\u4eec\u518d\u8fdb\u4e00\u5c42\uff0c\u5f53\u6211\u4eec\u8bf4\u5185\u5b58\u7ba1\u7406\u7684\u65f6\u5019\uff0c\u4e3b\u8981\u662f\u6307\u5806\u5185\u5b58\u7684\u7ba1\u7406\uff0c\u56e0\u4e3a\u6808\u7684\u5185\u5b58\u7ba1\u7406\u4e0d\u9700\u8981\u7a0b\u5e8f\u53bb\u64cd\u5fc3\u3002\u8fd9\u5c0f\u8282\u770b\u4e0b\u5806\u5185\u5b58\u7ba1\u7406\u5e72\u7684\u662f\u5565\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u4e3b\u8981\u662f3\u90e8\u5206\uff1a\u5206\u914d\u5185\u5b58\u5757\uff0c\u56de\u6536\u5185\u5b58\u5757\u548c\u7ec4\u7ec7\u5185\u5b58\u5757\u3002 \u5728\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u5185\u5b58\u7ba1\u7406\u4e2d\uff0c\u5806\u5185\u5b58\u6700\u521d\u4f1a\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u5927\u5757\uff0c\u5373\u672a\u5206\u914d\u5185\u5b58\uff0c\u5f53\u6765\u7533\u8bf7\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u4ece\u672a\u5206\u914d\u5185\u5b58\uff0c\u5206\u5272\u51fa\u4e00\u4e2a\u5c0f\u5185\u5b58\u5757(block)\uff0c\u7136\u540e\u7528\u94fe\u8868\u628a\u6240\u6709\u5185\u5b58\u5757\u8fde\u63a5\u8d77\u6765\u3002\u9700\u8981\u4e00\u4e9b\u4fe1\u606f\u63cf\u8ff0\u6bcf\u4e2a\u5185\u5b58\u5757\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u6bd4\u5982\u5927\u5c0f(size)\u3001\u662f\u5426\u4f7f\u7528\u4e2d(used)\u548c\u4e0b\u4e00\u4e2a\u5185\u5b58\u5757\u7684\u5730\u5740(next)\uff0c\u5185\u5b58\u5757\u5b9e\u9645\u6570\u636e\u5b58\u50a8\u5728data\u4e2d\u3002 \u4e00\u4e2a\u5185\u5b58\u5757\u5305\u542b\u4e863\u7c7b\u4fe1\u606f\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5143\u6570\u636e\u3001\u7528\u6237\u6570\u636e\u548c\u5bf9\u9f50\u5b57\u6bb5\uff0c\u5185\u5b58\u5bf9\u9f50\u662f\u4e3a\u4e86\u63d0\u9ad8\u8bbf\u95ee\u6548\u7387\u3002\u4e0b\u56fe\u7533\u8bf75Byte\u5185\u5b58\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u8fdb\u884c\u5185\u5b58\u5bf9\u9f50\u3002 \u91ca\u653e\u5185\u5b58\u5b9e\u8d28\u662f\u628a\u4f7f\u7528\u7684\u5185\u5b58\u5757\u4ece\u94fe\u8868\u4e2d\u53d6\u51fa\u6765\uff0c\u7136\u540e\u6807\u8bb0\u4e3a\u672a\u4f7f\u7528\uff0c\u5f53\u5206\u914d\u5185\u5b58\u5757\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4ece\u672a\u4f7f\u7528\u5185\u5b58\u5757\u4e2d\u6709\u5148\u67e5\u627e\u5927\u5c0f\u76f8\u8fd1\u7684\u5185\u5b58\u5757\uff0c\u5982\u679c\u627e\u4e0d\u5230\uff0c\u518d\u4ece\u672a\u5206\u914d\u7684\u5185\u5b58\u4e2d\u5206\u914d\u5185\u5b58\u3002 \u4e0a\u9762\u8fd9\u4e2a\u7b80\u5355\u7684\u8bbe\u8ba1\u4e2d\u8fd8\u6ca1\u8003\u8651\u5185\u5b58\u788e\u7247\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u968f\u7740\u5185\u5b58\u4e0d\u65ad\u7684\u7533\u8bf7\u548c\u91ca\u653e\uff0c\u5185\u5b58\u4e0a\u4f1a\u5b58\u5728\u5927\u91cf\u7684\u788e\u7247\uff0c\u964d\u4f4e\u5185\u5b58\u7684\u4f7f\u7528\u7387\u3002\u4e3a\u4e86\u89e3\u51b3\u5185\u5b58\u788e\u7247\uff0c\u53ef\u4ee5\u5c062\u4e2a\u8fde\u7eed\u7684\u672a\u4f7f\u7528\u7684\u5185\u5b58\u5757\u5408\u5e76\uff0c\u51cf\u5c11\u788e\u7247\u3002 \u4ee5\u4e0a\u5c31\u662f\u5185\u5b58\u7ba1\u7406\u7684\u57fa\u672c\u601d\u8def\uff0c\u5173\u4e8e\u57fa\u672c\u7684\u5185\u5b58\u7ba1\u7406\uff0c\u60f3\u4e86\u89e3\u66f4\u591a\uff0c\u53ef\u4ee5\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\u300aWriting a Memory Allocator\u300b\uff0c\u672c\u8282\u76843\u5f20\u56fe\u7247\u4e5f\u662f\u6765\u81ea\u8fd9\u7247\u6587\u7ae0\u3002 2. TCMalloc TCMalloc\u662fThread Cache Malloc\u7684\u7b80\u79f0\uff0c\u662fGo\u5185\u5b58\u7ba1\u7406\u7684\u8d77\u6e90\uff0cGo\u7684\u5185\u5b58\u7ba1\u7406\u662f\u501f\u9274\u4e86TCMalloc\uff0c\u968f\u7740Go\u7684\u8fed\u4ee3\uff0cGo\u7684\u5185\u5b58\u7ba1\u7406\u4e0eTCMalloc\u4e0d\u4e00\u81f4\u5730\u65b9\u5728\u4e0d\u65ad\u6269\u5927\uff0c\u4f46\u5176\u4e3b\u8981\u601d\u60f3\u3001\u539f\u7406\u548c\u6982\u5ff5\u90fd\u662f\u548cTCMalloc\u4e00\u81f4\u7684\uff0c\u5982\u679c\u8df3\u8fc7TCMalloc\u76f4\u63a5\u53bb\u770bGo\u7684\u5185\u5b58\u7ba1\u7406\uff0c\u4e5f\u8bb8\u4f60\u4f1a\u4f3c\u61c2\u975e\u61c2\u3002 \u638c\u63e1TCMalloc\u7684\u7406\u5ff5\uff0c\u65e0\u9700\u53bb\u5173\u6ce8\u8fc7\u591a\u7684\u6e90\u7801\u7ec6\u8282\uff0c\u5c31\u53ef\u4ee5\u4e3a\u638c\u63e1Go\u7684\u5185\u5b58\u7ba1\u7406\u6253\u597d\u57fa\u7840\uff0c\u57fa\u7840\u6253\u597d\u4e86\uff0c\u540e\u9762\u77e5\u8bc6\u624d\u624e\u5b9e\u3002 \u5728Linux\u91cc\uff0c\u5176\u5b9e\u6709\u4e0d\u5c11\u7684\u5185\u5b58\u7ba1\u7406\u5e93\uff0c\u6bd4\u5982glibc\u7684ptmalloc\uff0cFreeBSD\u7684jemalloc\uff0cGoogle\u7684tcmalloc\u7b49\u7b49\uff0c\u4e3a\u4f55\u4f1a\u51fa\u73b0\u8fd9\u4e48\u591a\u7684\u5185\u5b58\u7ba1\u7406\u5e93\uff1f\u672c\u8d28\u90fd\u662f\u5728\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e0b\uff0c\u8ffd\u6c42\u66f4\u9ad8\u5185\u5b58\u7ba1\u7406\u6548\u7387\uff1a\u66f4\u5feb\u7684\u5206\u914d\u662f\u4e3b\u8981\u76ee\u7684\u3002 \u90a3\u5982\u4f55\u66f4\u5feb\u7684\u5206\u914d\u5185\u5b58\uff1f \u6211\u4eec\u524d\u9762\u63d0\u5230\uff1a \u5f15\u5165\u865a\u62df\u5185\u5b58\u540e\uff0c\u8ba9\u5185\u5b58\u7684\u5e76\u53d1\u8bbf\u95ee\u95ee\u9898\u7684\u7c92\u5ea6\u4ece\u591a\u8fdb\u7a0b\u7ea7\u522b\uff0c\u964d\u4f4e\u5230\u591a\u7ebf\u7a0b\u7ea7\u522b\u3002 \u8fd9\u662f\u66f4\u5feb\u5206\u914d\u5185\u5b58\u7684\u7b2c\u4e00\u4e2a\u5c42\u6b21\u3002 \u540c\u4e00\u8fdb\u7a0b\u7684\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u76f8\u540c\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4ed6\u4eec\u7533\u8bf7\u5185\u5b58\u65f6\u9700\u8981\u52a0\u9501\uff0c\u5982\u679c\u4e0d\u52a0\u9501\u5c31\u5b58\u5728\u540c\u4e00\u5757\u5185\u5b58\u88ab2\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u7684\u95ee\u9898\u3002 TCMalloc\u7684\u505a\u6cd5\u662f\u4ec0\u4e48\u5462\uff1f\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u9884\u5206\u914d\u4e00\u5757\u7f13\u5b58\uff0c\u7ebf\u7a0b\u7533\u8bf7\u5c0f\u5185\u5b58\u65f6\uff0c\u53ef\u4ee5\u4ece\u7f13\u5b58\u5206\u914d\u5185\u5b58\uff0c\u8fd9\u6837\u67092\u4e2a\u597d\u5904\uff1a 1\u3001\u4e3a\u7ebf\u7a0b\u9884\u5206\u914d\u7f13\u5b58\u9700\u8981\u8fdb\u884c1\u6b21\u7cfb\u7edf\u8c03\u7528\uff0c\u540e\u7eed\u7ebf\u7a0b\u7533\u8bf7\u5c0f\u5185\u5b58\u65f6\uff0c\u4ece\u7f13\u5b58\u5206\u914d\uff0c\u90fd\u662f\u5728\u7528\u6237\u6001\u6267\u884c\uff0c\u6ca1\u6709\u7cfb\u7edf\u8c03\u7528\uff0c\u7f29\u77ed\u4e86\u5185\u5b58\u603b\u4f53\u7684\u5206\u914d\u548c\u91ca\u653e\u65f6\u95f4\uff0c\u8fd9\u662f\u5feb\u901f\u5206\u914d\u5185\u5b58\u7684\u7b2c\u4e8c\u4e2a\u5c42\u6b21\u3002 2\u3001\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u7533\u8bf7\u5c0f\u5185\u5b58\u65f6\uff0c\u4ece\u5404\u81ea\u7684\u7f13\u5b58\u5206\u914d\uff0c\u8bbf\u95ee\u7684\u662f\u4e0d\u540c\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u65e0\u9700\u52a0\u9501\uff0c\u628a\u5185\u5b58\u5e76\u53d1\u8bbf\u95ee\u7684\u7c92\u5ea6\u8fdb\u4e00\u6b65\u964d\u4f4e\u4e86\uff0c\u8fd9\u662f\u5feb\u901f\u5206\u914d\u5185\u5b58\u7684\u7b2c\u4e09\u4e2a\u5c42\u6b21\u3002 \u57fa\u672c\u539f\u7406 \u4e0b\u9762\u5c31\u7b80\u5355\u4ecb\u7ecd\u4e0bTCMalloc\uff0c\u7ec6\u81f4\u7a0b\u5ea6\u591f\u6211\u4eec\u7406\u89e3Go\u7684\u5185\u5b58\u7ba1\u7406\u5373\u53ef\u3002 \u58f0\u660e\uff1a\u6211\u6ca1\u6709\u7814\u7a76\u8fc7TCMalloc\uff0c\u4ee5\u4e0b\u4ecb\u7ecd\u6839\u636eTCMalloc\u5b98\u65b9\u8d44\u6599\u548c\u5176\u4ed6\u535a\u4e3b\u8d44\u6599\u603b\u7ed3\u800c\u6765\uff0c\u9519\u8bef\u4e4b\u5904\u8bf7\u670b\u53cb\u544a\u77e5\u6211\u3002 \u7ed3\u5408\u4e0a\u56fe\uff0c\u4ecb\u7ecdTCMalloc\u7684\u51e0\u4e2a\u91cd\u8981\u6982\u5ff5\uff1a Page\uff1a\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u5185\u5b58\u7ba1\u7406\u4ee5\u9875\u4e3a\u5355\u4f4d\uff0cTCMalloc\u4e5f\u662f\u8fd9\u6837\uff0c\u53ea\u4e0d\u8fc7TCMalloc\u91cc\u7684Page\u5927\u5c0f\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u91cc\u7684\u5927\u5c0f\u5e76\u4e0d\u4e00\u5b9a\u76f8\u7b49\uff0c\u800c\u662f\u500d\u6570\u5173\u7cfb\u3002\u300aTCMalloc\u89e3\u5bc6\u300b\u91cc\u79f0x64\u4e0bPage\u5927\u5c0f\u662f8KB\u3002 Span\uff1a\u4e00\u7ec4\u8fde\u7eed\u7684Page\u88ab\u79f0\u4e3aSpan\uff0c\u6bd4\u5982\u53ef\u4ee5\u67092\u4e2a\u9875\u5927\u5c0f\u7684Span\uff0c\u4e5f\u53ef\u4ee5\u670916\u9875\u5927\u5c0f\u7684Span\uff0cSpan\u6bd4Page\u9ad8\u4e00\u4e2a\u5c42\u7ea7\uff0c\u662f\u4e3a\u4e86\u65b9\u4fbf\u7ba1\u7406\u4e00\u5b9a\u5927\u5c0f\u7684\u5185\u5b58\u533a\u57df\uff0cSpan\u662fTCMalloc\u4e2d\u5185\u5b58\u7ba1\u7406\u7684\u57fa\u672c\u5355\u4f4d\u3002 ThreadCache\uff1a\u6bcf\u4e2a\u7ebf\u7a0b\u5404\u81ea\u7684Cache\uff0c\u4e00\u4e2aCache\u5305\u542b\u591a\u4e2a\u7a7a\u95f2\u5185\u5b58\u5757\u94fe\u8868\uff0c\u6bcf\u4e2a\u94fe\u8868\u8fde\u63a5\u7684\u90fd\u662f\u5185\u5b58\u5757\uff0c\u540c\u4e00\u4e2a\u94fe\u8868\u4e0a\u5185\u5b58\u5757\u7684\u5927\u5c0f\u662f\u76f8\u540c\u7684\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u6309\u5185\u5b58\u5757\u5927\u5c0f\uff0c\u7ed9\u5185\u5b58\u5757\u5206\u4e86\u4e2a\u7c7b\uff0c\u8fd9\u6837\u53ef\u4ee5\u6839\u636e\u7533\u8bf7\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u5feb\u901f\u4ece\u5408\u9002\u7684\u94fe\u8868\u9009\u62e9\u7a7a\u95f2\u5185\u5b58\u5757\u3002\u7531\u4e8e\u6bcf\u4e2a\u7ebf\u7a0b\u6709\u81ea\u5df1\u7684ThreadCache\uff0c\u6240\u4ee5ThreadCache\u8bbf\u95ee\u662f\u65e0\u9501\u7684\u3002 CentralCache\uff1a\u662f\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u7684\u7f13\u5b58\uff0c\u4e5f\u662f\u4fdd\u5b58\u7684\u7a7a\u95f2\u5185\u5b58\u5757\u94fe\u8868\uff0c\u94fe\u8868\u7684\u6570\u91cf\u4e0eThreadCache\u4e2d\u94fe\u8868\u6570\u91cf\u76f8\u540c\uff0c\u5f53ThreadCache\u5185\u5b58\u5757\u4e0d\u8db3\u65f6\uff0c\u53ef\u4ee5\u4eceCentralCache\u53d6\uff0c\u5f53ThreadCache\u5185\u5b58\u5757\u591a\u65f6\uff0c\u53ef\u4ee5\u653e\u56deCentralCache\u3002\u7531\u4e8eCentralCache\u662f\u5171\u4eab\u7684\uff0c\u6240\u4ee5\u5b83\u7684\u8bbf\u95ee\u662f\u8981\u52a0\u9501\u7684\u3002 PageHeap\uff1aPageHeap\u662f\u5806\u5185\u5b58\u7684\u62bd\u8c61\uff0cPageHeap\u5b58\u7684\u4e5f\u662f\u82e5\u5e72\u94fe\u8868\uff0c\u94fe\u8868\u4fdd\u5b58\u7684\u662fSpan\uff0c\u5f53CentralCache\u6ca1\u6709\u5185\u5b58\u7684\u65f6\uff0c\u4f1a\u4ecePageHeap\u53d6\uff0c\u628a1\u4e2aSpan\u62c6\u6210\u82e5\u5e72\u5185\u5b58\u5757\uff0c\u6dfb\u52a0\u5230\u5bf9\u5e94\u5927\u5c0f\u7684\u94fe\u8868\u4e2d\uff0c\u5f53CentralCache\u5185\u5b58\u591a\u7684\u65f6\u5019\uff0c\u4f1a\u653e\u56dePageHeap\u3002\u5982\u4e0b\u56fe\uff0c\u5206\u522b\u662f1\u9875Page\u7684Span\u94fe\u8868\uff0c2\u9875Page\u7684Span\u94fe\u8868\u7b49\uff0c\u6700\u540e\u662flarge span set\uff0c\u8fd9\u4e2a\u662f\u7528\u6765\u4fdd\u5b58\u4e2d\u5927\u5bf9\u8c61\u7684\u3002\u6beb\u65e0\u7591\u95ee\uff0cPageHeap\u4e5f\u662f\u8981\u52a0\u9501\u7684\u3002 \u4e0a\u6587\u63d0\u5230\u4e86\u5c0f\u3001\u4e2d\u3001\u5927\u5bf9\u8c61\uff0cGo\u5185\u5b58\u7ba1\u7406\u4e2d\u4e5f\u6709\u7c7b\u4f3c\u7684\u6982\u5ff5\uff0c\u6211\u4eec\u7784\u4e00\u773cTCMalloc\u7684\u5b9a\u4e49\uff1a \u5c0f\u5bf9\u8c61\u5927\u5c0f\uff1a0~256KB \u4e2d\u5bf9\u8c61\u5927\u5c0f\uff1a257~1MB \u5927\u5bf9\u8c61\u5927\u5c0f\uff1a>1MB \u5c0f\u5bf9\u8c61\u7684\u5206\u914d\u6d41\u7a0b\uff1aThreadCache -> CentralCache -> HeapPage\uff0c\u5927\u90e8\u5206\u65f6\u5019\uff0cThreadCache\u7f13\u5b58\u90fd\u662f\u8db3\u591f\u7684\uff0c\u4e0d\u9700\u8981\u53bb\u8bbf\u95eeCentralCache\u548cHeapPage\uff0c\u65e0\u9501\u5206\u914d\u52a0\u65e0\u7cfb\u7edf\u8c03\u7528\uff0c\u5206\u914d\u6548\u7387\u662f\u975e\u5e38\u9ad8\u7684\u3002 \u4e2d\u5bf9\u8c61\u5206\u914d\u6d41\u7a0b\uff1a\u76f4\u63a5\u5728PageHeap\u4e2d\u9009\u62e9\u9002\u5f53\u7684\u5927\u5c0f\u5373\u53ef\uff0c128 Page\u7684Span\u6240\u4fdd\u5b58\u7684\u6700\u5927\u5185\u5b58\u5c31\u662f1MB\u3002 \u5927\u5bf9\u8c61\u5206\u914d\u6d41\u7a0b\uff1a\u4ecelarge span set\u9009\u62e9\u5408\u9002\u6570\u91cf\u7684\u9875\u9762\u7ec4\u6210span\uff0c\u7528\u6765\u5b58\u50a8\u6570\u636e\u3002 3. Go\u5185\u5b58\u7ba1\u7406 Go\u5185\u5b58\u7ba1\u7406\u7684\u57fa\u672c\u6982\u5ff5 \u524d\u9762\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\u56de\u987e\uff0c\u662f\u4e00\u79cd\u81ea\u4e0a\u800c\u4e0b\uff0c\u4ece\u5b8f\u89c2\u5230\u5fae\u89c2\u7684\u4ecb\u7ecd\u65b9\u5f0f\uff0c\u628a\u76ee\u5149\u5f15\u5165\u5230\u4eca\u5929\u7684\u4e3b\u9898\u3002 Go\u5185\u5b58\u7ba1\u7406\u7684\u8bb8\u591a\u6982\u5ff5\u5728TCMalloc\u4e2d\u5df2\u7ecf\u6709\u4e86\uff0c\u542b\u4e49\u662f\u76f8\u540c\u7684\uff0c\u53ea\u662f\u540d\u5b57\u6709\u4e00\u4e9b\u53d8\u5316\u3002\u5148\u7ed9\u5927\u5bb6\u4e0a\u4e00\u5e45\u5b8f\u89c2\u7684\u56fe\uff0c\u501f\u52a9\u56fe\u4e00\u8d77\u6765\u4ecb\u7ecd\u3002 Page \u4e0eTCMalloc\u4e2d\u7684Page\u76f8\u540c\uff0cx64\u4e0b1\u4e2aPage\u7684\u5927\u5c0f\u662f8KB\u3002\u4e0a\u56fe\u7684\u6700\u4e0b\u65b9\uff0c1\u4e2a\u6d45\u84dd\u8272\u7684\u957f\u65b9\u5f62\u4ee3\u88681\u4e2aPage\u3002 Span \u4e0eTCMalloc\u4e2d\u7684Span\u76f8\u540c\uff0cSpan\u662f\u5185\u5b58\u7ba1\u7406\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u4ee3\u7801\u4e2d\u4e3amspan\uff0c\u4e00\u7ec4\u8fde\u7eed\u7684Page\u7ec4\u62101\u4e2aSpan\uff0c\u6240\u4ee5\u4e0a\u56fe\u4e00\u7ec4\u8fde\u7eed\u7684\u6d45\u84dd\u8272\u957f\u65b9\u5f62\u4ee3\u8868\u7684\u662f\u4e00\u7ec4Page\u7ec4\u6210\u76841\u4e2aSpan\uff0c\u53e6\u5916\uff0c1\u4e2a\u6de1\u7d2b\u8272\u957f\u65b9\u5f62\u4e3a1\u4e2aSpan\u3002 mcache mcache\u4e0eTCMalloc\u4e2d\u7684ThreadCache\u7c7b\u4f3c\uff0cmcache\u4fdd\u5b58\u7684\u662f\u5404\u79cd\u5927\u5c0f\u7684Span\uff0c\u5e76\u6309Span class\u5206\u7c7b\uff0c\u5c0f\u5bf9\u8c61\u76f4\u63a5\u4ecemcache\u5206\u914d\u5185\u5b58\uff0c\u5b83\u8d77\u5230\u4e86\u7f13\u5b58\u7684\u4f5c\u7528\uff0c\u5e76\u4e14\u53ef\u4ee5\u65e0\u9501\u8bbf\u95ee\u3002 \u4f46mcache\u4e0eThreadCache\u4e5f\u6709\u4e0d\u540c\u70b9\uff0cTCMalloc\u4e2d\u662f\u6bcf\u4e2a\u7ebf\u7a0b1\u4e2aThreadCache\uff0cGo\u4e2d\u662f\u6bcf\u4e2aP\u62e5\u67091\u4e2amcache\uff0c\u56e0\u4e3a\u5728Go\u7a0b\u5e8f\u4e2d\uff0c\u5f53\u524d\u6700\u591a\u6709GOMAXPROCS\u4e2a\u7ebf\u7a0b\u5728\u7528\u6237\u6001\u8fd0\u884c\uff0c\u6240\u4ee5\u6700\u591a\u9700\u8981GOMAXPROCS\u4e2amcache\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5404\u7ebf\u7a0b\u5bf9mcache\u7684\u65e0\u9501\u8bbf\u95ee\uff0c\u7ebf\u7a0b\u7684\u8fd0\u884c\u53c8\u662f\u4e0eP\u7ed1\u5b9a\u7684\uff0c\u628amcache\u4ea4\u7ed9P\u521a\u521a\u597d\u3002 mcentral mcentral\u4e0eTCMalloc\u4e2d\u7684CentralCache\u7c7b\u4f3c\uff0c\u662f\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u7684\u7f13\u5b58\uff0c\u9700\u8981\u52a0\u9501\u8bbf\u95ee\uff0c\u5b83\u6309Span class\u5bf9Span\u5206\u7c7b\uff0c\u4e32\u8054\u6210\u94fe\u8868\uff0c\u5f53mcache\u7684\u67d0\u4e2a\u7ea7\u522bSpan\u7684\u5185\u5b58\u88ab\u5206\u914d\u5149\u65f6\uff0c\u5b83\u4f1a\u5411mcentral\u7533\u8bf71\u4e2a\u5f53\u524d\u7ea7\u522b\u7684Span\u3002 \u4f46mcentral\u4e0eCentralCache\u4e5f\u6709\u4e0d\u540c\u70b9\uff0cCentralCache\u662f\u6bcf\u4e2a\u7ea7\u522b\u7684Span\u67091\u4e2a\u94fe\u8868\uff0cmcache\u662f\u6bcf\u4e2a\u7ea7\u522b\u7684Span\u67092\u4e2a\u94fe\u8868\uff0c\u8fd9\u548cmcache\u7533\u8bf7\u5185\u5b58\u6709\u5173\uff0c\u7a0d\u540e\u6211\u4eec\u518d\u89e3\u91ca\u3002 mheap mheap\u4e0eTCMalloc\u4e2d\u7684PageHeap\u7c7b\u4f3c\uff0c\u5b83\u662f\u5806\u5185\u5b58\u7684\u62bd\u8c61\uff0c\u628a\u4eceOS\u7533\u8bf7\u51fa\u7684\u5185\u5b58\u9875\u7ec4\u7ec7\u6210Span\uff0c\u5e76\u4fdd\u5b58\u8d77\u6765\u3002\u5f53mcentral\u7684Span\u4e0d\u591f\u7528\u65f6\u4f1a\u5411mheap\u7533\u8bf7\uff0cmheap\u7684Span\u4e0d\u591f\u7528\u65f6\u4f1a\u5411OS\u7533\u8bf7\uff0c\u5411OS\u7684\u5185\u5b58\u7533\u8bf7\u662f\u6309\u9875\u6765\u7684\uff0c\u7136\u540e\u628a\u7533\u8bf7\u6765\u7684\u5185\u5b58\u9875\u751f\u6210Span\u7ec4\u7ec7\u8d77\u6765\uff0c\u540c\u6837\u4e5f\u662f\u9700\u8981\u52a0\u9501\u8bbf\u95ee\u7684\u3002 \u4f46mheap\u4e0ePageHeap\u4e5f\u6709\u4e0d\u540c\u70b9\uff1amheap\u628aSpan\u7ec4\u7ec7\u6210\u4e86\u6811\u7ed3\u6784\uff0c\u800c\u4e0d\u662f\u94fe\u8868\uff0c\u5e76\u4e14\u8fd8\u662f2\u68f5\u6811\uff0c\u7136\u540e\u628aSpan\u5206\u914d\u5230heapArena\u8fdb\u884c\u7ba1\u7406\uff0c\u5b83\u5305\u542b\u5730\u5740\u6620\u5c04\u548cspan\u662f\u5426\u5305\u542b\u6307\u9488\u7b49\u4f4d\u56fe\uff0c\u8fd9\u6837\u505a\u7684\u4e3b\u8981\u539f\u56e0\u662f\u4e3a\u4e86\u66f4\u9ad8\u6548\u7684\u5229\u7528\u5185\u5b58\uff1a\u5206\u914d\u3001\u56de\u6536\u548c\u518d\u5229\u7528\u3002 \u5927\u5c0f\u8f6c\u6362 \u9664\u4e86\u4ee5\u4e0a\u5185\u5b58\u5757\u7ec4\u7ec7\u6982\u5ff5\uff0c\u8fd8\u6709\u51e0\u4e2a\u91cd\u8981\u7684\u5927\u5c0f\u6982\u5ff5\uff0c\u4e00\u5b9a\u8981\u62ff\u51fa\u6765\u8bb2\u4e00\u4e0b\uff0c\u4e0d\u8981\u5ffd\u89c6\u4ed6\u4eec\u7684\u91cd\u8981\u6027\uff0c\u4ed6\u4eec\u662f\u5185\u5b58\u5206\u914d\u3001\u7ec4\u7ec7\u548c\u5730\u5740\u8f6c\u6362\u7684\u57fa\u7840\u3002 object size\uff1a\u4ee3\u7801\u91cc\u7b80\u79f0size\uff0c\u6307\u7533\u8bf7\u5185\u5b58\u7684\u5bf9\u8c61\u5927\u5c0f\u3002 size class\uff1a\u4ee3\u7801\u91cc\u7b80\u79f0class\uff0c\u5b83\u662fsize\u7684\u7ea7\u522b\uff0c\u76f8\u5f53\u4e8e\u628asize\u5f52\u7c7b\u5230\u4e00\u5b9a\u5927\u5c0f\u7684\u533a\u95f4\u6bb5\uff0c\u6bd4\u5982size[1,8]\u5c5e\u4e8esize class 1\uff0csize(8,16]\u5c5e\u4e8esize class 2\u3002 span class\uff1a\u6307span\u7684\u7ea7\u522b\uff0c\u4f46span class\u7684\u5927\u5c0f\u4e0espan\u7684\u5927\u5c0f\u5e76\u6ca1\u6709\u6b63\u6bd4\u5173\u7cfb\u3002span class\u4e3b\u8981\u7528\u6765\u548csize class\u505a\u5bf9\u5e94\uff0c1\u4e2asize class\u5bf9\u5e942\u4e2aspan class\uff0c2\u4e2aspan class\u7684span\u5927\u5c0f\u76f8\u540c\uff0c\u53ea\u662f\u529f\u80fd\u4e0d\u540c\uff0c1\u4e2a\u7528\u6765\u5b58\u653e\u5305\u542b\u6307\u9488\u7684\u5bf9\u8c61\uff0c\u4e00\u4e2a\u7528\u6765\u5b58\u653e\u4e0d\u5305\u542b\u6307\u9488\u7684\u5bf9\u8c61\uff0c\u4e0d\u5305\u542b\u6307\u9488\u5bf9\u8c61\u7684Span\u5c31\u65e0\u9700GC\u626b\u63cf\u4e86\u3002 num of page\uff1a\u4ee3\u7801\u91cc\u7b80\u79f0npage\uff0c\u4ee3\u8868Page\u7684\u6570\u91cf\uff0c\u5176\u5b9e\u5c31\u662fSpan\u5305\u542b\u7684\u9875\u6570\uff0c\u7528\u6765\u5206\u914d\u5185\u5b58\u3002 \u5728\u4ecb\u7ecd\u8fd9\u51e0\u4e2a\u5927\u5c0f\u4e4b\u95f4\u7684\u6362\u7b97\u524d\uff0c\u6211\u4eec\u5f97\u5148\u770b\u4e0b\u56fe\u8fd9\u4e2a\u8868\uff0c\u8fd9\u4e2a\u8868\u51b3\u5b9a\u4e86\u6620\u5c04\u5173\u7cfb\u3002 \u6700\u4e0a\u97622\u884c\u662f\u6211\u624b\u52a8\u52a0\u7684\uff0c\u524d3\u5217\u5206\u522b\u662fsize class\uff0cobject size\u548cspan size\uff0c\u6839\u636e\u8fd93\u5217\u505asize\u3001size class\u548cnum of page\u4e4b\u95f4\u7684\u8f6c\u6362\u3002 \u4ed4\u7ec6\u770b\u4e00\u904d\u8fd9\u4e2a\u8868\uff0c\u518d\u5411\u4e0b\u770b\u8f6c\u6362\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002 \u5728Go\u5185\u5b58\u5927\u5c0f\u8f6c\u6362\u90a3\u5e45\u56fe\u4e2d\u5df2\u7ecf\u6807\u8bb0\u5404\u5927\u5c0f\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u5206\u522b\u662f\u6570\u7ec4\uff1aclass_to_size\uff0csize_to_class*\u548cclass_to_allocnpages\uff0c\u8fd93\u4e2a\u6570\u7ec4\u5185\u5bb9\uff0c\u5c31\u662f\u8ddf\u4e0a\u8868\u7684\u6620\u5c04\u5173\u7cfb\u5339\u914d\u7684\u3002\u6bd4\u5982class_to_size\uff0c\u4ece\u4e0a\u8868\u770bclass 1\u5bf9\u5e94\u7684\u4fdd\u5b58\u5bf9\u8c61\u5927\u5c0f\u4e3a8\uff0c\u6240\u4ee5class_to_size[1]=8\uff0cspan\u5927\u5c0f\u4e3a8192Byte\uff0c\u53738KB\uff0c\u4e3a1\u9875\uff0c\u6240\u4ee5class_to_allocnpages[1]=1\u3002 \u4e3a\u4f55\u4e0d\u4f7f\u7528\u51fd\u6570\u8ba1\u7b97\u5404\u79cd\u8f6c\u6362\uff0c\u800c\u662f\u5199\u6210\u6570\u7ec4\uff1f \u67091\u4e2a\u5f88\u91cd\u8981\u7684\u539f\u56e0\uff1a\u7a7a\u95f4\u6362\u65f6\u95f4\u3002\u4f60\u5982\u679c\u4ed4\u7ec6\u89c2\u5bdf\u4e86\uff0c\u4e0a\u8868\u4e2d\u7684\u8f6c\u6362\uff0c\u5e76\u4e0d\u80fd\u901a\u8fc7\u7b80\u5355\u7684\u516c\u5f0f\u8fdb\u884c\u8f6c\u6362\uff0c\u6bd4\u5982size\u548csize class\u7684\u5173\u7cfb\uff0c\u5e76\u4e0d\u662f\u6b63\u6bd4\u7684\u3002\u8fd9\u4e9b\u6570\u636e\u662f\u4f7f\u7528\u8f83\u590d\u6742\u7684\u516c\u5f0f\u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u516c\u5f0f\u5728makesizeclass.go\u4e2d\uff0c\u8fd9\u5176\u4e2d\u5b58\u5728\u6307\u6570\u8fd0\u7b97\u4e0efor\u5faa\u73af\uff0c\u9020\u6210\u6bcf\u6b21\u5927\u5c0f\u8f6c\u6362\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N*2^N)\u3002\u53e6\u5916\uff0c\u5bf9\u4e00\u4e2a\u7a0b\u5e8f\u800c\u8a00\uff0c\u5185\u5b58\u7684\u7533\u8bf7\u548c\u7ba1\u7406\u64cd\u4f5c\u662f\u5f88\u591a\u7684\uff0c\u5982\u679c\u4e0d\u80fd\u5feb\u901f\u5b8c\u6210\uff0c\u5c31\u662f\u975e\u5e38\u7684\u4f4e\u6548\u3002\u628a\u4ee5\u4e0a\u5927\u5c0f\u8f6c\u6362\u5199\u6b7b\u5230\u6570\u7ec4\u91cc\uff0c\u505a\u5230\u4e86\u628a\u5927\u5c0f\u8f6c\u6362\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u76f4\u63a5\u964d\u5230O(1)\u3002 \u5176\u4ed6\u8f6c\u6362\u8868\u5b57\u6bb5 \u7b2c4\u5217num of objects\u4ee3\u8868\u662f\u5f53\u524dsize class\u7ea7\u522b\u7684Span\u53ef\u4ee5\u4fdd\u5b58\u591a\u5c11\u5bf9\u8c61\u6570\u91cf\uff0c\u7b2c5\u5217tail waste\u662fspan%obj\u8ba1\u7b97\u7684\u7ed3\u679c\uff0c\u56e0\u4e3aspan\u7684\u5927\u5c0f\u5e76\u4e0d\u4e00\u5b9a\u662f\u5bf9\u8c61\u5927\u5c0f\u7684\u6574\u6570\u500d\u3002 \u6700\u540e\u4e00\u5217max waste\u4ee3\u8868\u6700\u5927\u6d6a\u8d39\u7684\u5185\u5b58\u767e\u5206\u6bd4\uff0c\u8ba1\u7b97\u65b9\u6cd5\u5728printComment\u51fd\u6570\u4e2d: func printComment(w io.Writer, classes []class) { fmt.Fprintf(w, \"// %-5s %-9s %-10s %-7s %-10s %-9s\\n\", \"class\", \"bytes/obj\", \"bytes/span\", \"objects\", \"tail waste\", \"max waste\") prevSize := 0 for i, c := range classes { if i == 0 { continue } spanSize := c.npages * pageSize objects := spanSize / c.size tailWaste := spanSize - c.size*(spanSize/c.size) maxWaste := float64((c.size-prevSize-1)*objects+tailWaste) / float64(spanSize) prevSize = c.size fmt.Fprintf(w, \"// %5d %9d %10d %7d %10d %8.2f%%\\n\", i, c.size, spanSize, objects, tailWaste, 100*maxWaste) } fmt.Fprintf(w, \"\\n\") } Span\u6700\u6d6a\u8d39\u5185\u5b58\u7684\u573a\u666f\u662f\uff1aSpan\u5185\u7684\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u7a7a\u95f4\u4fdd\u5b58\u7684\u5bf9\u8c61\uff0c\u5b9e\u9645\u5360\u7528\u5185\u5b58\u662f\u524d\u4e00\u4e2aclass\u4e2d\u5bf9\u8c61\u7684\u5927\u5c0f\u52a01\uff0c\u8fd9\u6837\u65e0\u6cd5\u5360\u7528\u4f4e\u4e00\u7ea7\u7684Span\u3002\u4e00\u4e2a\u5bf9\u8c61\u7a7a\u95f4\u672a\u88ab\u5360\u7528\u7684\u5185\u5b58\u5c31\u88ab\u6d6a\u8d39\u4e86\uff0c\u6240\u4ee5\u4e00\u4e2aSpan\u5185\u5bf9\u8c61\u7a7a\u95f4\u6240\u6d6a\u8d39\u7684\u5185\u5b58\u4e3a\uff1a\u6240\u6709\u5bf9\u8c61\u7a7a\u95f4\u6d6a\u8d39\u7684\u5185\u5b58\u4e4b\u548c+tail waste\u3002 ((c.size - (preSize+1)) * objects + tailWaste) / spanSize Go\u5185\u5b58\u5206\u914d \u6d89\u53ca\u7684\u6982\u5ff5\u5df2\u7ecf\u8bb2\u5b8c\u4e86\uff0c\u6211\u4eec\u770b\u4e0bGo\u5185\u5b58\u5206\u914d\u539f\u7406\u3002 Go\u4e2d\u7684\u5185\u5b58\u5206\u7c7b\u5e76\u4e0d\u50cfTCMalloc\u90a3\u6837\u5206\u6210\u5c0f\u3001\u4e2d\u3001\u5927\u5bf9\u8c61\uff0c\u4f46\u662f\u5b83\u7684\u5c0f\u5bf9\u8c61\u91cc\u53c8\u7ec6\u5206\u4e86\u4e00\u4e2aTiny\u5bf9\u8c61\uff0cTiny\u5bf9\u8c61\u6307\u5927\u5c0f\u57281Byte\u523016Byte\u4e4b\u95f4\u5e76\u4e14\u4e0d\u5305\u542b\u6307\u9488\u7684\u5bf9\u8c61\u3002\u5c0f\u5bf9\u8c61\u548c\u5927\u5bf9\u8c61\u53ea\u7528\u5927\u5c0f\u5212\u5b9a\uff0c\u65e0\u5176\u4ed6\u533a\u5206\u3002 \u5c0f\u5bf9\u8c61\u662f\u5728mcache\u4e2d\u5206\u914d\u7684\uff0c\u800c\u5927\u5bf9\u8c61\u662f\u76f4\u63a5\u4ecemheap\u5206\u914d\u7684\uff0c\u4ece\u5c0f\u5bf9\u8c61\u7684\u5185\u5b58\u5206\u914d\u770b\u8d77\u3002 \u5c0f\u5bf9\u8c61\u5206\u914d \u4e3a\u5bf9\u8c61\u5bfb\u627espan \u5bfb\u627espan\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a \u8ba1\u7b97\u5bf9\u8c61\u6240\u9700\u5185\u5b58\u5927\u5c0fsize \u6839\u636esize\u5230size class\u6620\u5c04\uff0c\u8ba1\u7b97\u51fa\u6240\u9700\u7684size class \u6839\u636esize class\u548c\u5bf9\u8c61\u662f\u5426\u5305\u542b\u6307\u9488\u8ba1\u7b97\u51faspan class \u83b7\u53d6\u8be5span class\u6307\u5411\u7684span\u3002 \u4ee5\u5206\u914d\u4e00\u4e2a\u4e0d\u5305\u542b\u6307\u9488\u7684\uff0c\u5927\u5c0f\u4e3a24Byte\u7684\u5bf9\u8c61\u4e3a\u4f8b\u3002 \u6839\u636e\u6620\u5c04\u8868\uff1a // class bytes/obj bytes/span objects tail waste max waste // 1 8 8192 1024 0 87.50% // 2 16 8192 512 0 43.75% // 3 32 8192 256 0 46.88% // 4 48 8192 170 32 31.52% size class 3\uff0c\u5b83\u7684\u5bf9\u8c61\u5927\u5c0f\u8303\u56f4\u662f(16,32]Byte\uff0c24Byte\u521a\u597d\u5728\u6b64\u533a\u95f4\uff0c\u6240\u4ee5\u6b64\u5bf9\u8c61\u7684size class\u4e3a3\u3002 Size class\u5230span class\u7684\u8ba1\u7b97\u5982\u4e0b\uff1a // noscan\u4e3atrue\u4ee3\u8868\u5bf9\u8c61\u4e0d\u5305\u542b\u6307\u9488 func makeSpanClass(sizeclass uint8, noscan bool) spanClass { return spanClass(sizeclass<<1) | spanClass(bool2int(noscan)) } \u6240\u4ee5\uff0c\u5bf9\u5e94\u7684span class\u4e3a\uff1a span class = 3 << 1 | 1 = 7 \u6240\u4ee5\u8be5\u5bf9\u8c61\u9700\u8981\u7684\u662fspan class 7\u6307\u5411\u7684span\u3002 \u4ecespan\u5206\u914d\u5bf9\u8c61\u7a7a\u95f4 Span\u53ef\u4ee5\u6309\u5bf9\u8c61\u5927\u5c0f\u5207\u6210\u5f88\u591a\u4efd\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u4ece\u6620\u5c04\u8868\u4e0a\u8ba1\u7b97\u51fa\u6765\uff0c\u4ee5size class 3\u5bf9\u5e94\u7684span\u4e3a\u4f8b\uff0cspan\u5927\u5c0f\u662f8KB\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u5b9e\u9645\u6240\u5360\u7a7a\u95f4\u4e3a32Byte\uff0c\u8fd9\u4e2aspan\u5c31\u88ab\u5206\u6210\u4e86256\u5757\uff0c\u53ef\u4ee5\u6839\u636espan\u7684\u8d77\u59cb\u5730\u5740\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u5bf9\u8c61\u5757\u7684\u5185\u5b58\u5730\u5740\u3002 \u968f\u7740\u5185\u5b58\u7684\u5206\u914d\uff0cspan\u4e2d\u7684\u5bf9\u8c61\u5185\u5b58\u5757\uff0c\u6709\u4e9b\u88ab\u5360\u7528\uff0c\u6709\u4e9b\u672a\u88ab\u5360\u7528\uff0c\u6bd4\u5982\u4e0a\u56fe\uff0c\u6574\u4f53\u4ee3\u88681\u4e2aspan\uff0c\u84dd\u8272\u5757\u4ee3\u8868\u5df2\u88ab\u5360\u7528\u5185\u5b58\uff0c\u7eff\u8272\u5757\u4ee3\u8868\u672a\u88ab\u5360\u7528\u5185\u5b58\u3002 \u5f53\u5206\u914d\u5185\u5b58\u65f6\uff0c\u53ea\u8981\u5feb\u901f\u627e\u5230\u7b2c\u4e00\u4e2a\u53ef\u7528\u7684\u7eff\u8272\u5757\uff0c\u5e76\u8ba1\u7b97\u51fa\u5185\u5b58\u5730\u5740\u5373\u53ef\uff0c\u5982\u679c\u9700\u8981\u8fd8\u53ef\u4ee5\u5bf9\u5185\u5b58\u5757\u6570\u636e\u6e05\u96f6\u3002 span\u6ca1\u6709\u7a7a\u95f4\u600e\u4e48\u5206\u914d\u5bf9\u8c61 span\u5185\u7684\u6240\u6709\u5185\u5b58\u5757\u90fd\u88ab\u5360\u7528\u65f6\uff0c\u6ca1\u6709\u5269\u4f59\u7a7a\u95f4\u7ee7\u7eed\u5206\u914d\u5bf9\u8c61\uff0cmcache\u4f1a\u5411mcentral\u7533\u8bf71\u4e2aspan\uff0cmcache\u62ff\u5230span\u540e\u7ee7\u7eed\u5206\u914d\u5bf9\u8c61\u3002 mcentral\u5411mcache\u63d0\u4f9bspan mcentral\u548cmcache\u4e00\u6837\uff0c\u90fd\u662f0~133\u8fd9134\u4e2aspan class\u7ea7\u522b\uff0c\u4f46\u6bcf\u4e2a\u7ea7\u522b\u90fd\u4fdd\u5b58\u4e862\u4e2aspan list\uff0c\u53732\u4e2aspan\u94fe\u8868\uff1a nonempty\uff1a\u8fd9\u4e2a\u94fe\u8868\u91cc\u7684span\uff0c\u6240\u6709span\u90fd\u81f3\u5c11\u67091\u4e2a\u7a7a\u95f2\u7684\u5bf9\u8c61\u7a7a\u95f4\u3002\u8fd9\u4e9bspan\u662fmcache\u91ca\u653espan\u65f6\u52a0\u5165\u5230\u8be5\u94fe\u8868\u7684\u3002 empty\uff1a\u8fd9\u4e2a\u94fe\u8868\u91cc\u7684span\uff0c\u6240\u6709\u7684span\u90fd\u4e0d\u786e\u5b9a\u91cc\u9762\u662f\u5426\u6709\u7a7a\u95f2\u7684\u5bf9\u8c61\u7a7a\u95f4\u3002\u5f53\u4e00\u4e2aspan\u4ea4\u7ed9mcache\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u52a0\u5165\u5230empty\u94fe\u8868\u3002 \u8fd92\u4e2a\u4e1c\u897f\u540d\u79f0\u4e00\u76f4\u6709\u70b9\u7ed5\uff0c\u5efa\u8bae\u76f4\u63a5\u628aempty\u7406\u89e3\u4e3a\u6ca1\u6709\u5bf9\u8c61\u7a7a\u95f4\u5c31\u597d\u4e86\u3002 \u5b9e\u9645\u4ee3\u7801\u4e2d\u6bcf1\u4e2aspan class\u5bf9\u5e941\u4e2amcentral\uff0c\u56fe\u91cc\u628a\u6240\u6709mcentral\u62bd\u8c61\u62101\u4e2a\u6574\u4f53\u4e86\u3002 mcache\u5411mcentral\u8981span\u65f6\uff0cmcentral\u4f1a\u5148\u4ecenonempty\u641c\u7d22\u6ee1\u8db3\u6761\u4ef6\u7684span\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u518d\u4eceemtpy\u641c\u7d22\u6ee1\u8db3\u6761\u4ef6\u7684span\uff0c\u7136\u540e\u628a\u627e\u5230\u7684span\u4ea4\u7ed9mcache\u3002 mheap\u7684span\u7ba1\u7406 mheap\u91cc\u4fdd\u5b58\u4e862\u68f5\u4e8c\u53c9\u6392\u5e8f\u6811\uff0c\u6309span\u7684page\u6570\u91cf\u8fdb\u884c\u6392\u5e8f\uff1a free\uff1afree\u4e2d\u4fdd\u5b58\u7684span\u662f\u7a7a\u95f2\u5e76\u4e14\u975e\u5783\u573e\u56de\u6536\u7684span\u3002 scav\uff1ascav\u4e2d\u4fdd\u5b58\u7684\u662f\u7a7a\u95f2\u5e76\u4e14\u5df2\u7ecf\u5783\u573e\u56de\u6536\u7684span\u3002 \u5982\u679c\u662f\u5783\u573e\u56de\u6536\u5bfc\u81f4\u7684span\u91ca\u653e\uff0cspan\u4f1a\u88ab\u52a0\u5165\u5230scav\uff0c\u5426\u5219\u52a0\u5165\u5230free\uff0c\u6bd4\u5982\u521a\u4eceOS\u7533\u8bf7\u7684\u7684\u5185\u5b58\u4e5f\u7ec4\u6210\u7684Span\u3002 mheap\u4e2d\u8fd8\u6709arenas\uff0c\u6709\u4e00\u7ec4heapArena\u7ec4\u6210\uff0c\u6bcf\u4e00\u4e2aheapArena\u90fd\u5305\u542b\u4e86\u8fde\u7eed\u7684pagesPerArena\u4e2aspan\uff0c\u8fd9\u4e2a\u4e3b\u8981\u662f\u4e3amheap\u7ba1\u7406span\u548c\u5783\u573e\u56de\u6536\u670d\u52a1\u3002 mheap\u672c\u8eab\u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u5b83\u5176\u4e2d\u7684\u6570\u636e\uff0c\u4e5f\u90fd\u662f\u4eceOS\u76f4\u63a5\u7533\u8bf7\u6765\u7684\u5185\u5b58\uff0c\u5e76\u4e0d\u5728mheap\u6240\u7ba1\u7406\u7684\u90a3\u90e8\u5206\u5185\u5b58\u5185\u3002 mcentral\u5411mheap\u8981span mcentral\u5411mcache\u63d0\u4f9bspan\u65f6\uff0c\u5982\u679cemtpy\u91cc\u4e5f\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\u7684span\uff0cmcentral\u4f1a\u5411mheap\u7533\u8bf7span\u3002 mcentral\u9700\u8981\u5411mheap\u63d0\u4f9b\u9700\u8981\u7684\u5185\u5b58\u9875\u6570\u548cspan class\u7ea7\u522b\uff0c\u7136\u540e\u5b83\u4f18\u5148\u4ecefree\u4e2d\u641c\u7d22\u53ef\u7528\u7684span\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u4f1a\u4ecescav\u4e2d\u641c\u7d22\u53ef\u7528\u7684span\uff0c\u5982\u679c\u8fd8\u6ca1\u6709\u627e\u5230\uff0c\u5b83\u4f1a\u5411OS\u7533\u8bf7\u5185\u5b58\uff0c\u518d\u91cd\u65b0\u641c\u7d222\u68f5\u6811\uff0c\u5fc5\u7136\u80fd\u627e\u5230span\u3002\u5982\u679c\u627e\u5230\u7684span\u6bd4\u9700\u6c42\u7684span\u5927\uff0c\u5219\u628aspan\u8fdb\u884c\u5206\u5272\u62102\u4e2aspan\uff0c\u5176\u4e2d1\u4e2a\u521a\u597d\u662f\u9700\u6c42\u5927\u5c0f\uff0c\u628a\u5269\u4e0b\u7684span\u518d\u52a0\u5165\u5230free\u4e2d\u53bb\uff0c\u7136\u540e\u8bbe\u7f6e\u9700\u6c42span\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u7136\u540e\u4ea4\u7ed9mcentral\u3002 mheap\u5411OS\u7533\u8bf7\u5185\u5b58 \u5f53mheap\u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58\u65f6\uff0cmheap\u4f1a\u5411OS\u7533\u8bf7\u5185\u5b58\uff0c\u628a\u7533\u8bf7\u7684\u5185\u5b58\u9875\u4fdd\u5b58\u5230span\uff0c\u7136\u540e\u628aspan\u63d2\u5165\u5230free\u6811 \u3002 \u572832\u4f4d\u7cfb\u7edf\u4e0a\uff0cmheap\u8fd8\u4f1a\u9884\u7559\u4e00\u90e8\u5206\u7a7a\u95f4\uff0c\u5f53mheap\u6ca1\u6709\u7a7a\u95f4\u65f6\uff0c\u5148\u4ece\u9884\u7559\u7a7a\u95f4\u7533\u8bf7\uff0c\u5982\u679c\u9884\u7559\u7a7a\u95f4\u5185\u5b58\u4e5f\u6ca1\u6709\u4e86\uff0c\u624d\u5411OS\u7533\u8bf7\u3002 \u5927\u5bf9\u8c61\u5206\u914d \u5927\u5bf9\u8c61\u7684\u5206\u914d\u6bd4\u5c0f\u5bf9\u8c61\u7701\u4e8b\u591a\u4e86\uff0c99%\u7684\u6d41\u7a0b\u4e0emcentral\u5411mheap\u7533\u8bf7\u5185\u5b58\u7684\u76f8\u540c\uff0c\u6240\u4ee5\u4e0d\u91cd\u590d\u4ecb\u7ecd\u4e86\uff0c\u4e0d\u540c\u7684\u4e00\u70b9\u5728\u4e8emheap\u4f1a\u8bb0\u5f55\u4e00\u70b9\u5927\u5bf9\u8c61\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u89c1mheap.alloc_m()\u3002 Go\u5783\u573e\u56de\u6536\u548c\u5185\u5b58\u91ca\u653e \u5982\u679c\u53ea\u7533\u8bf7\u548c\u5206\u914d\u5185\u5b58\uff0c\u5185\u5b58\u7ec8\u5c06\u67af\u7aed\uff0cGo\u4f7f\u7528\u5783\u573e\u56de\u6536\u6536\u96c6\u4e0d\u518d\u4f7f\u7528\u7684span\uff0c\u8c03\u7528mspan.scavenge()\u628aspan\u91ca\u653e\u7ed9OS\uff08\u5e76\u975e\u771f\u91ca\u653e\uff0c\u53ea\u662f\u544a\u8bc9OS\u8fd9\u7247\u5185\u5b58\u7684\u4fe1\u606f\u65e0\u7528\u4e86\uff0c\u5982\u679c\u4f60\u9700\u8981\u7684\u8bdd\uff0c\u6536\u56de\u53bb\u597d\u4e86\uff09\uff0c\u7136\u540e\u4ea4\u7ed9mheap\uff0cmheap\u5bf9span\u8fdb\u884cspan\u7684\u5408\u5e76\uff0c\u628a\u5408\u5e76\u540e\u7684span\u52a0\u5165scav\u6811\u4e2d\uff0c\u7b49\u5f85\u518d\u5206\u914d\u5185\u5b58\u65f6\uff0c\u7531mheap\u8fdb\u884c\u5185\u5b58\u518d\u5206\u914d\uff0cGo\u5783\u573e\u56de\u6536\u4e5f\u662f\u4e00\u4e2a\u5f88\u5f3a\u7684\u4e3b\u9898\uff0c\u8ba1\u5212\u540e\u9762\u5355\u72ec\u5199\u4e00\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u3002 \u73b0\u5728\u6211\u4eec\u5173\u6ce8\u4e00\u4e0b\uff0cGo\u7a0b\u5e8f\u662f\u600e\u4e48\u628a\u5185\u5b58\u91ca\u653e\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u7684\uff1f \u91ca\u653e\u5185\u5b58\u7684\u51fd\u6570\u662fsysUnused\uff0c\u5b83\u4f1a\u88abmspan.scavenge()\u8c03\u7528: // MAC\u4e0b\u7684\u5b9e\u73b0 func sysUnused(v unsafe.Pointer, n uintptr) { // MADV_FREE_REUSABLE is like MADV_FREE except it also propagates // accounting information about the process to task_info. madvise(v, n, _MADV_FREE_REUSABLE) } \u6ce8\u91ca\u8bf4_MADV_FREE_REUSABLE\u4e0eMADV_FREE\u7684\u529f\u80fd\u7c7b\u4f3c\uff0c\u5b83\u7684\u529f\u80fd\u662f\u7ed9\u5185\u6838\u63d0\u4f9b\u4e00\u4e2a\u5efa\u8bae\uff1a\u8fd9\u4e2a\u5185\u5b58\u5730\u5740\u533a\u95f4\u7684\u5185\u5b58\u5df2\u7ecf\u4e0d\u518d\u4f7f\u7528\uff0c\u53ef\u4ee5\u56de\u6536\u3002\u4f46\u5185\u6838\u662f\u5426\u56de\u6536\uff0c\u4ee5\u53ca\u4ec0\u4e48\u65f6\u5019\u56de\u6536\uff0c\u8fd9\u5c31\u662f\u5185\u6838\u7684\u4e8b\u60c5\u4e86\u3002\u5982\u679c\u5185\u6838\u771f\u628a\u8fd9\u7247\u5185\u5b58\u56de\u6536\u4e86\uff0c\u5f53Go\u7a0b\u5e8f\u518d\u4f7f\u7528\u8fd9\u4e2a\u5730\u5740\u65f6\uff0c\u5185\u6838\u4f1a\u91cd\u65b0\u8fdb\u884c\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\u3002\u6240\u4ee5\u5728\u5185\u5b58\u5145\u8db3\u7684\u60c5\u51b5\u4e0b\uff0c\u5185\u6838\u4e5f\u6ca1\u6709\u5fc5\u8981\u7acb\u523b\u56de\u6536\u5185\u5b58\u3002 4. Go\u6808\u5185\u5b58 \u6700\u540e\u63d0\u4e00\u4e0b\u6808\u5185\u5b58\u3002\u4ece\u4e00\u4e2a\u5b8f\u89c2\u7684\u89d2\u5ea6\u770b\uff0c\u5185\u5b58\u7ba1\u7406\u4e0d\u5e94\u5f53\u53ea\u6709\u5806\uff0c\u4e5f\u5e94\u5f53\u6709\u6808\u3002 \u6bcf\u4e2agoroutine\u90fd\u6709\u81ea\u5df1\u7684\u6808\uff0c\u6808\u7684\u521d\u59cb\u5927\u5c0f\u662f2KB\uff0c100\u4e07\u7684goroutine\u4f1a\u5360\u75282G\uff0c\u4f46goroutine\u7684\u6808\u4f1a\u57282KB\u4e0d\u591f\u7528\u65f6\u81ea\u52a8\u6269\u5bb9\uff0c\u5f53\u6269\u5bb9\u4e3a4KB\u7684\u65f6\u5019\uff0c\u767e\u4e07goroutine\u4f1a\u5360\u75284GB\u3002 \u5173\u4e8egoroutine\u6808\u5185\u5b58\u7ba1\u7406\uff0c\u6709\u7bc7\u5f88\u597d\u7684\u6587\u7ae0\uff0c\u997f\u4e86\u4e48\u6846\u67b6\u6280\u672f\u90e8\u7684\u4e13\u680f\u6587\u7ae0\uff1a\u300a\u804a\u4e00\u804agoroutine stack\u300b\uff0c\u628a\u91cc\u9762\u7684\u4e00\u6bb5\u5185\u5bb9\u6458\u5f55\u4e0b\uff0c\u4f60\u611f\u53d7\u4e0b\uff1a \u53ef\u4ee5\u770b\u5230\u5728rpc\u8c03\u7528(grpc invoke)\u65f6\uff0c\u6808\u4f1a\u53d1\u751f\u6269\u5bb9(runtime.morestack)\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5728\u8bfb\u5199routine\u5185\u7684\u4efb\u4f55rpc\u8c03\u7528\u90fd\u4f1a\u5bfc\u81f4\u6808\u6269\u5bb9\uff0c \u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4\u4f1a\u6269\u5927\u4e3a\u539f\u6765\u7684\u4e24\u500d\uff0c4kB\u7684\u6808\u4f1a\u53d8\u4e3a8kB\uff0c100w\u7684\u8fde\u63a5\u7684\u5185\u5b58\u5360\u7528\u4f1a\u4ece8G\u6269\u5927\u4e3a16G\uff08\u5168\u53cc\u5de5\uff0c\u4e0d\u8003\u8651\u5176\u4ed6\u5f00\u9500\uff09\uff0c\u8fd9\u7b80\u76f4\u662f\u5669\u68a6\u3002 \u53e6\u5916\uff0c\u518d\u63a8\u8350\u4e00\u7bc7\u66f9\u5927\u7ffb\u8bd1\u7684\u4e00\u7bc7\u6c47\u7f16\u5165\u95e8\u6587\u7ae0\uff0c\u91cc\u9762\u4e5f\u4ecb\u7ecd\u4e86\u6269\u6808\uff1a\u7b2c\u4e00\u7ae0: Go \u6c47\u7f16\u5165\u95e8 \uff0c\u987a\u4fbf\u5165\u95e8\u4e00\u4e0b\u6c47\u7f16\u3002 \u603b\u7ed3 \u5185\u5b58\u5206\u914d\u539f\u7406\u5c31\u4e0d\u518d\u56de\u987e\u4e86\uff0c\u5f3a\u8c032\u4e2a\u91cd\u8981\u7684\u601d\u60f3\uff1a \u4f7f\u7528\u7f13\u5b58\u63d0\u9ad8\u6548\u7387\u3002\u5728\u5b58\u50a8\u7684\u6574\u4e2a\u4f53\u7cfb\u4e2d\u5230\u5904\u53ef\u89c1\u7f13\u5b58\u7684\u601d\u60f3\uff0cGo\u5185\u5b58\u5206\u914d\u548c\u7ba1\u7406\u4e5f\u4f7f\u7528\u4e86\u7f13\u5b58\uff0c\u5229\u7528\u7f13\u5b58\u4e00\u662f\u51cf\u5c11\u4e86\u7cfb\u7edf\u8c03\u7528\u7684\u6b21\u6570\uff0c\u4e8c\u662f\u964d\u4f4e\u4e86\u9501\u7684\u7c92\u5ea6\uff0c\u51cf\u5c11\u52a0\u9501\u7684\u6b21\u6570\uff0c\u4ece\u8fd92\u70b9\u63d0\u9ad8\u4e86\u5185\u5b58\u7ba1\u7406\u6548\u7387\u3002 \u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u63d0\u9ad8\u5185\u5b58\u7ba1\u7406\u6548\u7387\u3002\u7a7a\u95f4\u6362\u65f6\u95f4\u662f\u4e00\u79cd\u5e38\u7528\u7684\u6027\u80fd\u4f18\u5316\u601d\u60f3\uff0c\u8fd9\u79cd\u601d\u60f3\u5176\u5b9e\u975e\u5e38\u666e\u904d\uff0c\u6bd4\u5982Hash\u3001Map\u3001\u4e8c\u53c9\u6392\u5e8f\u6811\u7b49\u6570\u636e\u7ed3\u6784\u7684\u672c\u8d28\u5c31\u662f\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u5728\u6570\u636e\u5e93\u4e2d\u4e5f\u5f88\u5e38\u89c1\uff0c\u6bd4\u5982\u6570\u636e\u5e93\u7d22\u5f15\u3001\u7d22\u5f15\u89c6\u56fe\u548c\u6570\u636e\u7f13\u5b58\u7b49\uff0c\u518d\u5982Redis\u7b49\u7f13\u5b58\u6570\u636e\u5e93\u4e5f\u662f\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u601d\u60f3\u3002","title":"Go\u5185\u5b58\u5206\u914d\u90a3\u4e9b\u4e8b\uff0c\u5c31\u8fd9\u4e48\u7b80\u5355\uff01"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#1","text":"\u8fd9\u90e8\u5206\u6211\u4eec\u7b80\u5355\u56de\u987e\u4e00\u4e0b\u8ba1\u7b97\u673a\u5b58\u50a8\u4f53\u7cfb\u3001\u865a\u62df\u5185\u5b58\u3001\u6808\u548c\u5806\uff0c\u4ee5\u53ca\u5806\u5185\u5b58\u7684\u7ba1\u7406\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u5bf9\u7406\u89e3\u548c\u638c\u63e1Go\u5185\u5b58\u7ba1\u7406\u6bd4\u8f83\u91cd\u8981\uff0c\u5efa\u8bae\u5fd8\u8bb0\u6216\u4e0d\u719f\u6089\u7684\u670b\u53cb\u4e0d\u8981\u8df3\u8fc7\u3002","title":"1. \u5b58\u50a8\u57fa\u7840\u77e5\u8bc6\u56de\u987e"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#_1","text":"\u8fd9\u5e45\u56fe\u8868\u8fbe\u4e86\u8ba1\u7b97\u673a\u7684\u5b58\u50a8\u4f53\u7cfb\uff0c\u4ece\u4e0a\u81f3\u4e0b\u4f9d\u6b21\u662f\uff1a CPU\u5bc4\u5b58\u5668 Cache \u5185\u5b58 \u786c\u76d8\u7b49\u8f85\u52a9\u5b58\u50a8\u8bbe\u5907 \u9f20\u6807\u7b49\u5916\u63a5\u8bbe\u5907 \u4ece\u4e0a\u81f3\u4e0b\uff0c\u8bbf\u95ee\u901f\u5ea6\u8d8a\u6765\u8d8a\u6162\uff0c\u8bbf\u95ee\u65f6\u95f4\u8d8a\u6765\u8d8a\u957f\u3002 \u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\u4e0b\u97622\u4e2a\u7b80\u5355\u7684\u95ee\u9898\uff0c\u5982\u679c\u6ca1\u6709\u4e0d\u59a8\u60f3\u60f3\uff1a \u5982\u679cCPU\u76f4\u63a5\u8bbf\u95ee\u786c\u76d8\uff0cCPU\u80fd\u5145\u5206\u5229\u7528\u5417\uff1f \u5982\u679cCPU\u76f4\u63a5\u8bbf\u95ee\u5185\u5b58\uff0cCPU\u80fd\u5145\u5206\u5229\u7528\u5417\uff1f CPU\u901f\u5ea6\u5f88\u5feb\uff0c\u4f46\u786c\u76d8\u7b49\u6301\u4e45\u5b58\u50a8\u5f88\u6162\uff0c\u5982\u679cCPU\u76f4\u63a5\u8bbf\u95ee\u78c1\u76d8\uff0c\u78c1\u76d8\u53ef\u4ee5\u62c9\u4f4eCPU\u7684\u901f\u5ea6\uff0c\u673a\u5668\u6574\u4f53\u6027\u80fd\u5c31\u4f1a\u4f4e\u4e0b\uff0c\u4e3a\u4e86\u5f25\u8865\u8fd92\u4e2a\u786c\u4ef6\u4e4b\u95f4\u7684\u901f\u7387\u5dee\u5f02\uff0c\u6240\u4ee5\u5728CPU\u548c\u78c1\u76d8\u4e4b\u95f4\u589e\u52a0\u4e86\u6bd4\u78c1\u76d8\u5feb\u5f88\u591a\u7684\u5185\u5b58\u3002 \u7136\u800c\uff0cCPU\u8ddf\u5185\u5b58\u7684\u901f\u7387\u4e5f\u4e0d\u662f\u76f8\u540c\u7684\uff0c\u4ece\u4e0a\u56fe\u53ef\u4ee5\u770b\u5230\uff0cCPU\u7684\u901f\u7387\u63d0\u9ad8\u7684\u5f88\u5feb\uff08\u6469\u5c14\u5b9a\u5f8b\uff09\uff0c\u7136\u800c\u5185\u5b58\u901f\u7387\u589e\u957f\u7684\u5f88\u6162\uff0c\u867d\u7136CPU\u7684\u901f\u7387\u73b0\u5728\u589e\u52a0\u7684\u5f88\u6162\u4e86\uff0c\u4f46\u662f\u5185\u5b58\u7684\u901f\u7387\u4e5f\u6ca1\u589e\u52a0\u591a\u5c11\uff0c\u901f\u7387\u5dee\u8ddd\u5f88\u5927\uff0c\u4ece1980\u5e74\u5f00\u59cbCPU\u548c\u5185\u5b58\u901f\u7387\u5dee\u8ddd\u5728\u4e0d\u65ad\u62c9\u5927\uff0c\u4e3a\u4e86\u5f25\u8865\u8fd92\u4e2a\u786c\u4ef6\u4e4b\u95f4\u7684\u901f\u7387\u5dee\u5f02\uff0c\u6240\u4ee5\u5728CPU\u8ddf\u5185\u5b58\u4e4b\u95f4\u589e\u52a0\u4e86\u6bd4\u5185\u5b58\u66f4\u5feb\u7684Cache\uff0cCache\u662f\u5185\u5b58\u6570\u636e\u7684\u7f13\u5b58\uff0c\u53ef\u4ee5\u964d\u4f4eCPU\u8bbf\u95ee\u5185\u5b58\u7684\u65f6\u95f4\u3002 \u4e0d\u8981\u4ee5\u4e3a\u6709\u4e86Cache\u5c31\u4e07\u4e8b\u5927\u5409\u4e86\uff0cCPU\u7684\u901f\u7387\u8fd8\u5728\u4e0d\u65ad\u589e\u5927\uff0cCache\u4e5f\u5728\u4e0d\u65ad\u6539\u53d8\uff0c\u4ece\u6700\u521d\u76841\u7ea7\uff0c\u5230\u540e\u6765\u76842\u7ea7\uff0c\u5230\u5f53\u4ee3\u76843\u7ea7Cache. \u4e09\u7ea7Cache\u5206\u522b\u662fL1\u3001L2\u3001L3\uff0c\u5b83\u4eec\u7684\u901f\u7387\u662f\u4e09\u4e2a\u4e0d\u540c\u7684\u5c42\u7ea7\uff0cL1\u901f\u7387\u6700\u5feb\uff0c\u4e0eCPU\u901f\u7387\u6700\u63a5\u8fd1\uff0c\u662fRAM\u901f\u7387\u7684100\u500d\uff0cL2\u901f\u7387\u5c31\u964d\u5230\u4e86RAM\u768425\u500d\uff0cL3\u7684\u901f\u7387\u66f4\u9760\u8fd1RAM\u7684\u901f\u7387\u3002 \u770b\u5230\u8fd9\u4e86\uff0c\u4f60\u6709\u6ca1\u6709Get\u5230\u6574\u4e2a\u5b58\u50a8\u4f53\u7cfb\u7684\u5206\u5c42\u8bbe\u8ba1\uff1f\u81ea\u9876\u5411\u4e0b\uff0c\u901f\u7387\u8d8a\u6765\u8d8a\u4f4e\uff0c\u8bbf\u95ee\u65f6\u95f4\u8d8a\u6765\u8d8a\u957f\uff0c\u4ece\u78c1\u76d8\u5230CPU\u5bc4\u5b58\u5668\uff0c\u4e0a\u4e00\u5c42\u90fd\u53ef\u4ee5\u770b\u505a\u662f\u4e0b\u4e00\u5c42\u7684\u7f13\u5b58\u3002 \u770b\u4e86\u5206\u5c42\u8bbe\u8ba1\uff0c\u6211\u4eec\u770b\u4e00\u4e0b\u5185\u5b58\uff0c\u6bd5\u7adf\u6211\u4eec\u662f\u4ecb\u7ecd\u5185\u5b58\u7ba1\u7406\u7684\u6587\u7ae0\u3002","title":"\u5b58\u50a8\u91d1\u5b57\u5854"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#_2","text":"\u865a\u62df\u5185\u5b58\u662f\u5f53\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u5fc5\u5907\u7684\u4e00\u9879\u91cd\u8981\u529f\u80fd\u4e86\uff0c\u5b83\u5411\u8fdb\u7a0b\u5c4f\u853d\u4e86\u5e95\u5c42\u4e86RAM\u548c\u78c1\u76d8\uff0c\u5e76\u5411\u8fdb\u7a0b\u63d0\u4f9b\u4e86\u8fdc\u8d85\u7269\u7406\u5185\u5b58\u5927\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u6211\u4eec\u770b\u4e00\u4e0b\u865a\u62df\u5185\u5b58\u7684\u5206\u5c42\u8bbe\u8ba1\u3002 \u4e0a\u56fe\u5c55\u793a\u4e86\u67d0\u8fdb\u7a0b\u8bbf\u95ee\u6570\u636e\uff0c\u5f53Cache\u6ca1\u6709\u547d\u4e2d\u7684\u65f6\u5019\uff0c\u8bbf\u95ee\u865a\u62df\u5185\u5b58\u83b7\u53d6\u6570\u636e\u7684\u8fc7\u7a0b\u3002 \u8bbf\u95ee\u5185\u5b58\uff0c\u5b9e\u9645\u8bbf\u95ee\u7684\u662f\u865a\u62df\u5185\u5b58\uff0c\u865a\u62df\u5185\u5b58\u901a\u8fc7\u9875\u8868\u67e5\u770b\uff0c\u5f53\u524d\u8981\u8bbf\u95ee\u7684\u865a\u62df\u5185\u5b58\u5730\u5740\uff0c\u662f\u5426\u5df2\u7ecf\u52a0\u8f7d\u5230\u4e86\u7269\u7406\u5185\u5b58\uff0c\u5982\u679c\u5df2\u7ecf\u5728\u7269\u7406\u5185\u5b58\uff0c\u5219\u53d6\u7269\u7406\u5185\u5b58\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\u5bf9\u5e94\u7684\u7269\u7406\u5185\u5b58\uff0c\u5219\u4ece\u78c1\u76d8\u52a0\u8f7d\u6570\u636e\u5230\u7269\u7406\u5185\u5b58\uff0c\u5e76\u628a\u7269\u7406\u5185\u5b58\u5730\u5740\u548c\u865a\u62df\u5185\u5b58\u5730\u5740\u66f4\u65b0\u5230\u9875\u8868\u3002 \u6709\u6ca1\u6709Get\u5230\uff1a\u7269\u7406\u5185\u5b58\u5c31\u662f\u78c1\u76d8\u5b58\u50a8\u7f13\u5b58\u5c42\u3002 \u53e6\u5916\uff0c\u5728\u6ca1\u6709\u865a\u62df\u5185\u5b58\u7684\u65f6\u4ee3\uff0c\u7269\u7406\u5185\u5b58\u5bf9\u6240\u6709\u8fdb\u7a0b\u662f\u5171\u4eab\u7684\uff0c\u591a\u8fdb\u7a0b\u540c\u65f6\u8bbf\u95ee\u540c\u4e00\u4e2a\u7269\u7406\u5185\u5b58\u5b58\u5728\u5e76\u53d1\u8bbf\u95ee\u95ee\u9898\u3002\u5f15\u5165\u865a\u62df\u5185\u5b58\u540e\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u8981\u5404\u81ea\u7684\u865a\u62df\u5185\u5b58\uff0c\u5185\u5b58\u7684\u5e76\u53d1\u8bbf\u95ee\u95ee\u9898\u7684\u7c92\u5ea6\u4ece\u591a\u8fdb\u7a0b\u7ea7\u522b\uff0c\u53ef\u4ee5\u964d\u4f4e\u5230\u591a\u7ebf\u7a0b\u7ea7\u522b\u3002","title":"\u865a\u62df\u5185\u5b58"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#_3","text":"\u6211\u4eec\u73b0\u5728\u4ece\u865a\u62df\u5185\u5b58\uff0c\u518d\u8fdb\u4e00\u5c42\uff0c\u770b\u865a\u62df\u5185\u5b58\u4e2d\u7684\u6808\u548c\u5806\uff0c\u4e5f\u5c31\u662f\u8fdb\u7a0b\u5bf9\u5185\u5b58\u7684\u7ba1\u7406\u3002 \u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u8fdb\u7a0b\u7684\u865a\u62df\u5185\u5b58\u5212\u5206\uff0c\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684\u5185\u5b58\u5730\u5740\u90fd\u662f\u865a\u62df\u5185\u5b58\u5730\u5740\uff0c\u800c\u4e0d\u662f\u5b9e\u9645\u7684\u7269\u7406\u5185\u5b58\u5730\u5740\u3002\u6808\u548c\u5806\u53ea\u662f\u865a\u62df\u5185\u5b58\u4e0a2\u5757\u4e0d\u540c\u529f\u80fd\u7684\u5185\u5b58\u533a\u57df\uff1a \u6808\u5728\u9ad8\u5730\u5740\uff0c\u4ece\u9ad8\u5730\u5740\u5411\u4f4e\u5730\u5740\u589e\u957f\u3002 \u5806\u5728\u4f4e\u5730\u5740\uff0c\u4ece\u4f4e\u5730\u5740\u5411\u9ad8\u5730\u5740\u589e\u957f\u3002 \u6808\u548c\u5806\u76f8\u6bd4\u6709\u8fd9\u4e48\u51e0\u4e2a\u597d\u5904\uff1a 1\u3001\u6808\u7684\u5185\u5b58\u7ba1\u7406\u7b80\u5355\uff0c\u5206\u914d\u6bd4\u5806\u4e0a\u5feb\u3002 2\u3001\u6808\u7684\u5185\u5b58\u4e0d\u9700\u8981\u56de\u6536\uff0c\u800c\u5806\u9700\u8981\uff0c\u65e0\u8bba\u662f\u4e3b\u52a8free\uff0c\u8fd8\u662f\u88ab\u52a8\u7684\u5783\u573e\u56de\u6536\uff0c\u8fd9\u90fd\u9700\u8981\u82b1\u8d39\u989d\u5916\u7684CPU\u3002 3\u3001\u6808\u4e0a\u7684\u5185\u5b58\u6709\u66f4\u597d\u7684\u5c40\u90e8\u6027\uff0c\u5806\u4e0a\u5185\u5b58\u8bbf\u95ee\u5c31\u4e0d\u90a3\u4e48\u53cb\u597d\u4e86\uff0cCPU\u8bbf\u95ee\u76842\u5757\u6570\u636e\u53ef\u80fd\u5728\u4e0d\u540c\u7684\u9875\u4e0a\uff0cCPU\u8bbf\u95ee\u6570\u636e\u7684\u65f6\u95f4\u53ef\u80fd\u5c31\u4e0a\u53bb\u4e86\u3002","title":"\u6808\u548c\u5806"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#_4","text":"\u6211\u4eec\u518d\u8fdb\u4e00\u5c42\uff0c\u5f53\u6211\u4eec\u8bf4\u5185\u5b58\u7ba1\u7406\u7684\u65f6\u5019\uff0c\u4e3b\u8981\u662f\u6307\u5806\u5185\u5b58\u7684\u7ba1\u7406\uff0c\u56e0\u4e3a\u6808\u7684\u5185\u5b58\u7ba1\u7406\u4e0d\u9700\u8981\u7a0b\u5e8f\u53bb\u64cd\u5fc3\u3002\u8fd9\u5c0f\u8282\u770b\u4e0b\u5806\u5185\u5b58\u7ba1\u7406\u5e72\u7684\u662f\u5565\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u4e3b\u8981\u662f3\u90e8\u5206\uff1a\u5206\u914d\u5185\u5b58\u5757\uff0c\u56de\u6536\u5185\u5b58\u5757\u548c\u7ec4\u7ec7\u5185\u5b58\u5757\u3002 \u5728\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u5185\u5b58\u7ba1\u7406\u4e2d\uff0c\u5806\u5185\u5b58\u6700\u521d\u4f1a\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u5927\u5757\uff0c\u5373\u672a\u5206\u914d\u5185\u5b58\uff0c\u5f53\u6765\u7533\u8bf7\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u4ece\u672a\u5206\u914d\u5185\u5b58\uff0c\u5206\u5272\u51fa\u4e00\u4e2a\u5c0f\u5185\u5b58\u5757(block)\uff0c\u7136\u540e\u7528\u94fe\u8868\u628a\u6240\u6709\u5185\u5b58\u5757\u8fde\u63a5\u8d77\u6765\u3002\u9700\u8981\u4e00\u4e9b\u4fe1\u606f\u63cf\u8ff0\u6bcf\u4e2a\u5185\u5b58\u5757\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u6bd4\u5982\u5927\u5c0f(size)\u3001\u662f\u5426\u4f7f\u7528\u4e2d(used)\u548c\u4e0b\u4e00\u4e2a\u5185\u5b58\u5757\u7684\u5730\u5740(next)\uff0c\u5185\u5b58\u5757\u5b9e\u9645\u6570\u636e\u5b58\u50a8\u5728data\u4e2d\u3002 \u4e00\u4e2a\u5185\u5b58\u5757\u5305\u542b\u4e863\u7c7b\u4fe1\u606f\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5143\u6570\u636e\u3001\u7528\u6237\u6570\u636e\u548c\u5bf9\u9f50\u5b57\u6bb5\uff0c\u5185\u5b58\u5bf9\u9f50\u662f\u4e3a\u4e86\u63d0\u9ad8\u8bbf\u95ee\u6548\u7387\u3002\u4e0b\u56fe\u7533\u8bf75Byte\u5185\u5b58\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u8fdb\u884c\u5185\u5b58\u5bf9\u9f50\u3002 \u91ca\u653e\u5185\u5b58\u5b9e\u8d28\u662f\u628a\u4f7f\u7528\u7684\u5185\u5b58\u5757\u4ece\u94fe\u8868\u4e2d\u53d6\u51fa\u6765\uff0c\u7136\u540e\u6807\u8bb0\u4e3a\u672a\u4f7f\u7528\uff0c\u5f53\u5206\u914d\u5185\u5b58\u5757\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4ece\u672a\u4f7f\u7528\u5185\u5b58\u5757\u4e2d\u6709\u5148\u67e5\u627e\u5927\u5c0f\u76f8\u8fd1\u7684\u5185\u5b58\u5757\uff0c\u5982\u679c\u627e\u4e0d\u5230\uff0c\u518d\u4ece\u672a\u5206\u914d\u7684\u5185\u5b58\u4e2d\u5206\u914d\u5185\u5b58\u3002 \u4e0a\u9762\u8fd9\u4e2a\u7b80\u5355\u7684\u8bbe\u8ba1\u4e2d\u8fd8\u6ca1\u8003\u8651\u5185\u5b58\u788e\u7247\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u968f\u7740\u5185\u5b58\u4e0d\u65ad\u7684\u7533\u8bf7\u548c\u91ca\u653e\uff0c\u5185\u5b58\u4e0a\u4f1a\u5b58\u5728\u5927\u91cf\u7684\u788e\u7247\uff0c\u964d\u4f4e\u5185\u5b58\u7684\u4f7f\u7528\u7387\u3002\u4e3a\u4e86\u89e3\u51b3\u5185\u5b58\u788e\u7247\uff0c\u53ef\u4ee5\u5c062\u4e2a\u8fde\u7eed\u7684\u672a\u4f7f\u7528\u7684\u5185\u5b58\u5757\u5408\u5e76\uff0c\u51cf\u5c11\u788e\u7247\u3002 \u4ee5\u4e0a\u5c31\u662f\u5185\u5b58\u7ba1\u7406\u7684\u57fa\u672c\u601d\u8def\uff0c\u5173\u4e8e\u57fa\u672c\u7684\u5185\u5b58\u7ba1\u7406\uff0c\u60f3\u4e86\u89e3\u66f4\u591a\uff0c\u53ef\u4ee5\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\u300aWriting a Memory Allocator\u300b\uff0c\u672c\u8282\u76843\u5f20\u56fe\u7247\u4e5f\u662f\u6765\u81ea\u8fd9\u7247\u6587\u7ae0\u3002","title":"\u5806\u5185\u5b58\u7ba1\u7406"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#2-tcmalloc","text":"TCMalloc\u662fThread Cache Malloc\u7684\u7b80\u79f0\uff0c\u662fGo\u5185\u5b58\u7ba1\u7406\u7684\u8d77\u6e90\uff0cGo\u7684\u5185\u5b58\u7ba1\u7406\u662f\u501f\u9274\u4e86TCMalloc\uff0c\u968f\u7740Go\u7684\u8fed\u4ee3\uff0cGo\u7684\u5185\u5b58\u7ba1\u7406\u4e0eTCMalloc\u4e0d\u4e00\u81f4\u5730\u65b9\u5728\u4e0d\u65ad\u6269\u5927\uff0c\u4f46\u5176\u4e3b\u8981\u601d\u60f3\u3001\u539f\u7406\u548c\u6982\u5ff5\u90fd\u662f\u548cTCMalloc\u4e00\u81f4\u7684\uff0c\u5982\u679c\u8df3\u8fc7TCMalloc\u76f4\u63a5\u53bb\u770bGo\u7684\u5185\u5b58\u7ba1\u7406\uff0c\u4e5f\u8bb8\u4f60\u4f1a\u4f3c\u61c2\u975e\u61c2\u3002 \u638c\u63e1TCMalloc\u7684\u7406\u5ff5\uff0c\u65e0\u9700\u53bb\u5173\u6ce8\u8fc7\u591a\u7684\u6e90\u7801\u7ec6\u8282\uff0c\u5c31\u53ef\u4ee5\u4e3a\u638c\u63e1Go\u7684\u5185\u5b58\u7ba1\u7406\u6253\u597d\u57fa\u7840\uff0c\u57fa\u7840\u6253\u597d\u4e86\uff0c\u540e\u9762\u77e5\u8bc6\u624d\u624e\u5b9e\u3002 \u5728Linux\u91cc\uff0c\u5176\u5b9e\u6709\u4e0d\u5c11\u7684\u5185\u5b58\u7ba1\u7406\u5e93\uff0c\u6bd4\u5982glibc\u7684ptmalloc\uff0cFreeBSD\u7684jemalloc\uff0cGoogle\u7684tcmalloc\u7b49\u7b49\uff0c\u4e3a\u4f55\u4f1a\u51fa\u73b0\u8fd9\u4e48\u591a\u7684\u5185\u5b58\u7ba1\u7406\u5e93\uff1f\u672c\u8d28\u90fd\u662f\u5728\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e0b\uff0c\u8ffd\u6c42\u66f4\u9ad8\u5185\u5b58\u7ba1\u7406\u6548\u7387\uff1a\u66f4\u5feb\u7684\u5206\u914d\u662f\u4e3b\u8981\u76ee\u7684\u3002 \u90a3\u5982\u4f55\u66f4\u5feb\u7684\u5206\u914d\u5185\u5b58\uff1f \u6211\u4eec\u524d\u9762\u63d0\u5230\uff1a \u5f15\u5165\u865a\u62df\u5185\u5b58\u540e\uff0c\u8ba9\u5185\u5b58\u7684\u5e76\u53d1\u8bbf\u95ee\u95ee\u9898\u7684\u7c92\u5ea6\u4ece\u591a\u8fdb\u7a0b\u7ea7\u522b\uff0c\u964d\u4f4e\u5230\u591a\u7ebf\u7a0b\u7ea7\u522b\u3002 \u8fd9\u662f\u66f4\u5feb\u5206\u914d\u5185\u5b58\u7684\u7b2c\u4e00\u4e2a\u5c42\u6b21\u3002 \u540c\u4e00\u8fdb\u7a0b\u7684\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u76f8\u540c\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4ed6\u4eec\u7533\u8bf7\u5185\u5b58\u65f6\u9700\u8981\u52a0\u9501\uff0c\u5982\u679c\u4e0d\u52a0\u9501\u5c31\u5b58\u5728\u540c\u4e00\u5757\u5185\u5b58\u88ab2\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u7684\u95ee\u9898\u3002 TCMalloc\u7684\u505a\u6cd5\u662f\u4ec0\u4e48\u5462\uff1f\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u9884\u5206\u914d\u4e00\u5757\u7f13\u5b58\uff0c\u7ebf\u7a0b\u7533\u8bf7\u5c0f\u5185\u5b58\u65f6\uff0c\u53ef\u4ee5\u4ece\u7f13\u5b58\u5206\u914d\u5185\u5b58\uff0c\u8fd9\u6837\u67092\u4e2a\u597d\u5904\uff1a 1\u3001\u4e3a\u7ebf\u7a0b\u9884\u5206\u914d\u7f13\u5b58\u9700\u8981\u8fdb\u884c1\u6b21\u7cfb\u7edf\u8c03\u7528\uff0c\u540e\u7eed\u7ebf\u7a0b\u7533\u8bf7\u5c0f\u5185\u5b58\u65f6\uff0c\u4ece\u7f13\u5b58\u5206\u914d\uff0c\u90fd\u662f\u5728\u7528\u6237\u6001\u6267\u884c\uff0c\u6ca1\u6709\u7cfb\u7edf\u8c03\u7528\uff0c\u7f29\u77ed\u4e86\u5185\u5b58\u603b\u4f53\u7684\u5206\u914d\u548c\u91ca\u653e\u65f6\u95f4\uff0c\u8fd9\u662f\u5feb\u901f\u5206\u914d\u5185\u5b58\u7684\u7b2c\u4e8c\u4e2a\u5c42\u6b21\u3002 2\u3001\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u7533\u8bf7\u5c0f\u5185\u5b58\u65f6\uff0c\u4ece\u5404\u81ea\u7684\u7f13\u5b58\u5206\u914d\uff0c\u8bbf\u95ee\u7684\u662f\u4e0d\u540c\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u65e0\u9700\u52a0\u9501\uff0c\u628a\u5185\u5b58\u5e76\u53d1\u8bbf\u95ee\u7684\u7c92\u5ea6\u8fdb\u4e00\u6b65\u964d\u4f4e\u4e86\uff0c\u8fd9\u662f\u5feb\u901f\u5206\u914d\u5185\u5b58\u7684\u7b2c\u4e09\u4e2a\u5c42\u6b21\u3002","title":"2. TCMalloc"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#_5","text":"\u4e0b\u9762\u5c31\u7b80\u5355\u4ecb\u7ecd\u4e0bTCMalloc\uff0c\u7ec6\u81f4\u7a0b\u5ea6\u591f\u6211\u4eec\u7406\u89e3Go\u7684\u5185\u5b58\u7ba1\u7406\u5373\u53ef\u3002 \u58f0\u660e\uff1a\u6211\u6ca1\u6709\u7814\u7a76\u8fc7TCMalloc\uff0c\u4ee5\u4e0b\u4ecb\u7ecd\u6839\u636eTCMalloc\u5b98\u65b9\u8d44\u6599\u548c\u5176\u4ed6\u535a\u4e3b\u8d44\u6599\u603b\u7ed3\u800c\u6765\uff0c\u9519\u8bef\u4e4b\u5904\u8bf7\u670b\u53cb\u544a\u77e5\u6211\u3002 \u7ed3\u5408\u4e0a\u56fe\uff0c\u4ecb\u7ecdTCMalloc\u7684\u51e0\u4e2a\u91cd\u8981\u6982\u5ff5\uff1a Page\uff1a\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u5185\u5b58\u7ba1\u7406\u4ee5\u9875\u4e3a\u5355\u4f4d\uff0cTCMalloc\u4e5f\u662f\u8fd9\u6837\uff0c\u53ea\u4e0d\u8fc7TCMalloc\u91cc\u7684Page\u5927\u5c0f\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u91cc\u7684\u5927\u5c0f\u5e76\u4e0d\u4e00\u5b9a\u76f8\u7b49\uff0c\u800c\u662f\u500d\u6570\u5173\u7cfb\u3002\u300aTCMalloc\u89e3\u5bc6\u300b\u91cc\u79f0x64\u4e0bPage\u5927\u5c0f\u662f8KB\u3002 Span\uff1a\u4e00\u7ec4\u8fde\u7eed\u7684Page\u88ab\u79f0\u4e3aSpan\uff0c\u6bd4\u5982\u53ef\u4ee5\u67092\u4e2a\u9875\u5927\u5c0f\u7684Span\uff0c\u4e5f\u53ef\u4ee5\u670916\u9875\u5927\u5c0f\u7684Span\uff0cSpan\u6bd4Page\u9ad8\u4e00\u4e2a\u5c42\u7ea7\uff0c\u662f\u4e3a\u4e86\u65b9\u4fbf\u7ba1\u7406\u4e00\u5b9a\u5927\u5c0f\u7684\u5185\u5b58\u533a\u57df\uff0cSpan\u662fTCMalloc\u4e2d\u5185\u5b58\u7ba1\u7406\u7684\u57fa\u672c\u5355\u4f4d\u3002 ThreadCache\uff1a\u6bcf\u4e2a\u7ebf\u7a0b\u5404\u81ea\u7684Cache\uff0c\u4e00\u4e2aCache\u5305\u542b\u591a\u4e2a\u7a7a\u95f2\u5185\u5b58\u5757\u94fe\u8868\uff0c\u6bcf\u4e2a\u94fe\u8868\u8fde\u63a5\u7684\u90fd\u662f\u5185\u5b58\u5757\uff0c\u540c\u4e00\u4e2a\u94fe\u8868\u4e0a\u5185\u5b58\u5757\u7684\u5927\u5c0f\u662f\u76f8\u540c\u7684\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u6309\u5185\u5b58\u5757\u5927\u5c0f\uff0c\u7ed9\u5185\u5b58\u5757\u5206\u4e86\u4e2a\u7c7b\uff0c\u8fd9\u6837\u53ef\u4ee5\u6839\u636e\u7533\u8bf7\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u5feb\u901f\u4ece\u5408\u9002\u7684\u94fe\u8868\u9009\u62e9\u7a7a\u95f2\u5185\u5b58\u5757\u3002\u7531\u4e8e\u6bcf\u4e2a\u7ebf\u7a0b\u6709\u81ea\u5df1\u7684ThreadCache\uff0c\u6240\u4ee5ThreadCache\u8bbf\u95ee\u662f\u65e0\u9501\u7684\u3002 CentralCache\uff1a\u662f\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u7684\u7f13\u5b58\uff0c\u4e5f\u662f\u4fdd\u5b58\u7684\u7a7a\u95f2\u5185\u5b58\u5757\u94fe\u8868\uff0c\u94fe\u8868\u7684\u6570\u91cf\u4e0eThreadCache\u4e2d\u94fe\u8868\u6570\u91cf\u76f8\u540c\uff0c\u5f53ThreadCache\u5185\u5b58\u5757\u4e0d\u8db3\u65f6\uff0c\u53ef\u4ee5\u4eceCentralCache\u53d6\uff0c\u5f53ThreadCache\u5185\u5b58\u5757\u591a\u65f6\uff0c\u53ef\u4ee5\u653e\u56deCentralCache\u3002\u7531\u4e8eCentralCache\u662f\u5171\u4eab\u7684\uff0c\u6240\u4ee5\u5b83\u7684\u8bbf\u95ee\u662f\u8981\u52a0\u9501\u7684\u3002 PageHeap\uff1aPageHeap\u662f\u5806\u5185\u5b58\u7684\u62bd\u8c61\uff0cPageHeap\u5b58\u7684\u4e5f\u662f\u82e5\u5e72\u94fe\u8868\uff0c\u94fe\u8868\u4fdd\u5b58\u7684\u662fSpan\uff0c\u5f53CentralCache\u6ca1\u6709\u5185\u5b58\u7684\u65f6\uff0c\u4f1a\u4ecePageHeap\u53d6\uff0c\u628a1\u4e2aSpan\u62c6\u6210\u82e5\u5e72\u5185\u5b58\u5757\uff0c\u6dfb\u52a0\u5230\u5bf9\u5e94\u5927\u5c0f\u7684\u94fe\u8868\u4e2d\uff0c\u5f53CentralCache\u5185\u5b58\u591a\u7684\u65f6\u5019\uff0c\u4f1a\u653e\u56dePageHeap\u3002\u5982\u4e0b\u56fe\uff0c\u5206\u522b\u662f1\u9875Page\u7684Span\u94fe\u8868\uff0c2\u9875Page\u7684Span\u94fe\u8868\u7b49\uff0c\u6700\u540e\u662flarge span set\uff0c\u8fd9\u4e2a\u662f\u7528\u6765\u4fdd\u5b58\u4e2d\u5927\u5bf9\u8c61\u7684\u3002\u6beb\u65e0\u7591\u95ee\uff0cPageHeap\u4e5f\u662f\u8981\u52a0\u9501\u7684\u3002 \u4e0a\u6587\u63d0\u5230\u4e86\u5c0f\u3001\u4e2d\u3001\u5927\u5bf9\u8c61\uff0cGo\u5185\u5b58\u7ba1\u7406\u4e2d\u4e5f\u6709\u7c7b\u4f3c\u7684\u6982\u5ff5\uff0c\u6211\u4eec\u7784\u4e00\u773cTCMalloc\u7684\u5b9a\u4e49\uff1a \u5c0f\u5bf9\u8c61\u5927\u5c0f\uff1a0~256KB \u4e2d\u5bf9\u8c61\u5927\u5c0f\uff1a257~1MB \u5927\u5bf9\u8c61\u5927\u5c0f\uff1a>1MB \u5c0f\u5bf9\u8c61\u7684\u5206\u914d\u6d41\u7a0b\uff1aThreadCache -> CentralCache -> HeapPage\uff0c\u5927\u90e8\u5206\u65f6\u5019\uff0cThreadCache\u7f13\u5b58\u90fd\u662f\u8db3\u591f\u7684\uff0c\u4e0d\u9700\u8981\u53bb\u8bbf\u95eeCentralCache\u548cHeapPage\uff0c\u65e0\u9501\u5206\u914d\u52a0\u65e0\u7cfb\u7edf\u8c03\u7528\uff0c\u5206\u914d\u6548\u7387\u662f\u975e\u5e38\u9ad8\u7684\u3002 \u4e2d\u5bf9\u8c61\u5206\u914d\u6d41\u7a0b\uff1a\u76f4\u63a5\u5728PageHeap\u4e2d\u9009\u62e9\u9002\u5f53\u7684\u5927\u5c0f\u5373\u53ef\uff0c128 Page\u7684Span\u6240\u4fdd\u5b58\u7684\u6700\u5927\u5185\u5b58\u5c31\u662f1MB\u3002 \u5927\u5bf9\u8c61\u5206\u914d\u6d41\u7a0b\uff1a\u4ecelarge span set\u9009\u62e9\u5408\u9002\u6570\u91cf\u7684\u9875\u9762\u7ec4\u6210span\uff0c\u7528\u6765\u5b58\u50a8\u6570\u636e\u3002","title":"\u57fa\u672c\u539f\u7406"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#3-go","text":"","title":"3. Go\u5185\u5b58\u7ba1\u7406"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#go","text":"\u524d\u9762\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\u56de\u987e\uff0c\u662f\u4e00\u79cd\u81ea\u4e0a\u800c\u4e0b\uff0c\u4ece\u5b8f\u89c2\u5230\u5fae\u89c2\u7684\u4ecb\u7ecd\u65b9\u5f0f\uff0c\u628a\u76ee\u5149\u5f15\u5165\u5230\u4eca\u5929\u7684\u4e3b\u9898\u3002 Go\u5185\u5b58\u7ba1\u7406\u7684\u8bb8\u591a\u6982\u5ff5\u5728TCMalloc\u4e2d\u5df2\u7ecf\u6709\u4e86\uff0c\u542b\u4e49\u662f\u76f8\u540c\u7684\uff0c\u53ea\u662f\u540d\u5b57\u6709\u4e00\u4e9b\u53d8\u5316\u3002\u5148\u7ed9\u5927\u5bb6\u4e0a\u4e00\u5e45\u5b8f\u89c2\u7684\u56fe\uff0c\u501f\u52a9\u56fe\u4e00\u8d77\u6765\u4ecb\u7ecd\u3002","title":"Go\u5185\u5b58\u7ba1\u7406\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#page","text":"\u4e0eTCMalloc\u4e2d\u7684Page\u76f8\u540c\uff0cx64\u4e0b1\u4e2aPage\u7684\u5927\u5c0f\u662f8KB\u3002\u4e0a\u56fe\u7684\u6700\u4e0b\u65b9\uff0c1\u4e2a\u6d45\u84dd\u8272\u7684\u957f\u65b9\u5f62\u4ee3\u88681\u4e2aPage\u3002","title":"Page"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#span","text":"\u4e0eTCMalloc\u4e2d\u7684Span\u76f8\u540c\uff0cSpan\u662f\u5185\u5b58\u7ba1\u7406\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u4ee3\u7801\u4e2d\u4e3amspan\uff0c\u4e00\u7ec4\u8fde\u7eed\u7684Page\u7ec4\u62101\u4e2aSpan\uff0c\u6240\u4ee5\u4e0a\u56fe\u4e00\u7ec4\u8fde\u7eed\u7684\u6d45\u84dd\u8272\u957f\u65b9\u5f62\u4ee3\u8868\u7684\u662f\u4e00\u7ec4Page\u7ec4\u6210\u76841\u4e2aSpan\uff0c\u53e6\u5916\uff0c1\u4e2a\u6de1\u7d2b\u8272\u957f\u65b9\u5f62\u4e3a1\u4e2aSpan\u3002","title":"Span"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#mcache","text":"mcache\u4e0eTCMalloc\u4e2d\u7684ThreadCache\u7c7b\u4f3c\uff0cmcache\u4fdd\u5b58\u7684\u662f\u5404\u79cd\u5927\u5c0f\u7684Span\uff0c\u5e76\u6309Span class\u5206\u7c7b\uff0c\u5c0f\u5bf9\u8c61\u76f4\u63a5\u4ecemcache\u5206\u914d\u5185\u5b58\uff0c\u5b83\u8d77\u5230\u4e86\u7f13\u5b58\u7684\u4f5c\u7528\uff0c\u5e76\u4e14\u53ef\u4ee5\u65e0\u9501\u8bbf\u95ee\u3002 \u4f46mcache\u4e0eThreadCache\u4e5f\u6709\u4e0d\u540c\u70b9\uff0cTCMalloc\u4e2d\u662f\u6bcf\u4e2a\u7ebf\u7a0b1\u4e2aThreadCache\uff0cGo\u4e2d\u662f\u6bcf\u4e2aP\u62e5\u67091\u4e2amcache\uff0c\u56e0\u4e3a\u5728Go\u7a0b\u5e8f\u4e2d\uff0c\u5f53\u524d\u6700\u591a\u6709GOMAXPROCS\u4e2a\u7ebf\u7a0b\u5728\u7528\u6237\u6001\u8fd0\u884c\uff0c\u6240\u4ee5\u6700\u591a\u9700\u8981GOMAXPROCS\u4e2amcache\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5404\u7ebf\u7a0b\u5bf9mcache\u7684\u65e0\u9501\u8bbf\u95ee\uff0c\u7ebf\u7a0b\u7684\u8fd0\u884c\u53c8\u662f\u4e0eP\u7ed1\u5b9a\u7684\uff0c\u628amcache\u4ea4\u7ed9P\u521a\u521a\u597d\u3002","title":"mcache"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#mcentral","text":"mcentral\u4e0eTCMalloc\u4e2d\u7684CentralCache\u7c7b\u4f3c\uff0c\u662f\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u7684\u7f13\u5b58\uff0c\u9700\u8981\u52a0\u9501\u8bbf\u95ee\uff0c\u5b83\u6309Span class\u5bf9Span\u5206\u7c7b\uff0c\u4e32\u8054\u6210\u94fe\u8868\uff0c\u5f53mcache\u7684\u67d0\u4e2a\u7ea7\u522bSpan\u7684\u5185\u5b58\u88ab\u5206\u914d\u5149\u65f6\uff0c\u5b83\u4f1a\u5411mcentral\u7533\u8bf71\u4e2a\u5f53\u524d\u7ea7\u522b\u7684Span\u3002 \u4f46mcentral\u4e0eCentralCache\u4e5f\u6709\u4e0d\u540c\u70b9\uff0cCentralCache\u662f\u6bcf\u4e2a\u7ea7\u522b\u7684Span\u67091\u4e2a\u94fe\u8868\uff0cmcache\u662f\u6bcf\u4e2a\u7ea7\u522b\u7684Span\u67092\u4e2a\u94fe\u8868\uff0c\u8fd9\u548cmcache\u7533\u8bf7\u5185\u5b58\u6709\u5173\uff0c\u7a0d\u540e\u6211\u4eec\u518d\u89e3\u91ca\u3002","title":"mcentral"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#mheap","text":"mheap\u4e0eTCMalloc\u4e2d\u7684PageHeap\u7c7b\u4f3c\uff0c\u5b83\u662f\u5806\u5185\u5b58\u7684\u62bd\u8c61\uff0c\u628a\u4eceOS\u7533\u8bf7\u51fa\u7684\u5185\u5b58\u9875\u7ec4\u7ec7\u6210Span\uff0c\u5e76\u4fdd\u5b58\u8d77\u6765\u3002\u5f53mcentral\u7684Span\u4e0d\u591f\u7528\u65f6\u4f1a\u5411mheap\u7533\u8bf7\uff0cmheap\u7684Span\u4e0d\u591f\u7528\u65f6\u4f1a\u5411OS\u7533\u8bf7\uff0c\u5411OS\u7684\u5185\u5b58\u7533\u8bf7\u662f\u6309\u9875\u6765\u7684\uff0c\u7136\u540e\u628a\u7533\u8bf7\u6765\u7684\u5185\u5b58\u9875\u751f\u6210Span\u7ec4\u7ec7\u8d77\u6765\uff0c\u540c\u6837\u4e5f\u662f\u9700\u8981\u52a0\u9501\u8bbf\u95ee\u7684\u3002 \u4f46mheap\u4e0ePageHeap\u4e5f\u6709\u4e0d\u540c\u70b9\uff1amheap\u628aSpan\u7ec4\u7ec7\u6210\u4e86\u6811\u7ed3\u6784\uff0c\u800c\u4e0d\u662f\u94fe\u8868\uff0c\u5e76\u4e14\u8fd8\u662f2\u68f5\u6811\uff0c\u7136\u540e\u628aSpan\u5206\u914d\u5230heapArena\u8fdb\u884c\u7ba1\u7406\uff0c\u5b83\u5305\u542b\u5730\u5740\u6620\u5c04\u548cspan\u662f\u5426\u5305\u542b\u6307\u9488\u7b49\u4f4d\u56fe\uff0c\u8fd9\u6837\u505a\u7684\u4e3b\u8981\u539f\u56e0\u662f\u4e3a\u4e86\u66f4\u9ad8\u6548\u7684\u5229\u7528\u5185\u5b58\uff1a\u5206\u914d\u3001\u56de\u6536\u548c\u518d\u5229\u7528\u3002","title":"mheap"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#_6","text":"\u9664\u4e86\u4ee5\u4e0a\u5185\u5b58\u5757\u7ec4\u7ec7\u6982\u5ff5\uff0c\u8fd8\u6709\u51e0\u4e2a\u91cd\u8981\u7684\u5927\u5c0f\u6982\u5ff5\uff0c\u4e00\u5b9a\u8981\u62ff\u51fa\u6765\u8bb2\u4e00\u4e0b\uff0c\u4e0d\u8981\u5ffd\u89c6\u4ed6\u4eec\u7684\u91cd\u8981\u6027\uff0c\u4ed6\u4eec\u662f\u5185\u5b58\u5206\u914d\u3001\u7ec4\u7ec7\u548c\u5730\u5740\u8f6c\u6362\u7684\u57fa\u7840\u3002 object size\uff1a\u4ee3\u7801\u91cc\u7b80\u79f0size\uff0c\u6307\u7533\u8bf7\u5185\u5b58\u7684\u5bf9\u8c61\u5927\u5c0f\u3002 size class\uff1a\u4ee3\u7801\u91cc\u7b80\u79f0class\uff0c\u5b83\u662fsize\u7684\u7ea7\u522b\uff0c\u76f8\u5f53\u4e8e\u628asize\u5f52\u7c7b\u5230\u4e00\u5b9a\u5927\u5c0f\u7684\u533a\u95f4\u6bb5\uff0c\u6bd4\u5982size[1,8]\u5c5e\u4e8esize class 1\uff0csize(8,16]\u5c5e\u4e8esize class 2\u3002 span class\uff1a\u6307span\u7684\u7ea7\u522b\uff0c\u4f46span class\u7684\u5927\u5c0f\u4e0espan\u7684\u5927\u5c0f\u5e76\u6ca1\u6709\u6b63\u6bd4\u5173\u7cfb\u3002span class\u4e3b\u8981\u7528\u6765\u548csize class\u505a\u5bf9\u5e94\uff0c1\u4e2asize class\u5bf9\u5e942\u4e2aspan class\uff0c2\u4e2aspan class\u7684span\u5927\u5c0f\u76f8\u540c\uff0c\u53ea\u662f\u529f\u80fd\u4e0d\u540c\uff0c1\u4e2a\u7528\u6765\u5b58\u653e\u5305\u542b\u6307\u9488\u7684\u5bf9\u8c61\uff0c\u4e00\u4e2a\u7528\u6765\u5b58\u653e\u4e0d\u5305\u542b\u6307\u9488\u7684\u5bf9\u8c61\uff0c\u4e0d\u5305\u542b\u6307\u9488\u5bf9\u8c61\u7684Span\u5c31\u65e0\u9700GC\u626b\u63cf\u4e86\u3002 num of page\uff1a\u4ee3\u7801\u91cc\u7b80\u79f0npage\uff0c\u4ee3\u8868Page\u7684\u6570\u91cf\uff0c\u5176\u5b9e\u5c31\u662fSpan\u5305\u542b\u7684\u9875\u6570\uff0c\u7528\u6765\u5206\u914d\u5185\u5b58\u3002 \u5728\u4ecb\u7ecd\u8fd9\u51e0\u4e2a\u5927\u5c0f\u4e4b\u95f4\u7684\u6362\u7b97\u524d\uff0c\u6211\u4eec\u5f97\u5148\u770b\u4e0b\u56fe\u8fd9\u4e2a\u8868\uff0c\u8fd9\u4e2a\u8868\u51b3\u5b9a\u4e86\u6620\u5c04\u5173\u7cfb\u3002 \u6700\u4e0a\u97622\u884c\u662f\u6211\u624b\u52a8\u52a0\u7684\uff0c\u524d3\u5217\u5206\u522b\u662fsize class\uff0cobject size\u548cspan size\uff0c\u6839\u636e\u8fd93\u5217\u505asize\u3001size class\u548cnum of page\u4e4b\u95f4\u7684\u8f6c\u6362\u3002 \u4ed4\u7ec6\u770b\u4e00\u904d\u8fd9\u4e2a\u8868\uff0c\u518d\u5411\u4e0b\u770b\u8f6c\u6362\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002 \u5728Go\u5185\u5b58\u5927\u5c0f\u8f6c\u6362\u90a3\u5e45\u56fe\u4e2d\u5df2\u7ecf\u6807\u8bb0\u5404\u5927\u5c0f\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u5206\u522b\u662f\u6570\u7ec4\uff1aclass_to_size\uff0csize_to_class*\u548cclass_to_allocnpages\uff0c\u8fd93\u4e2a\u6570\u7ec4\u5185\u5bb9\uff0c\u5c31\u662f\u8ddf\u4e0a\u8868\u7684\u6620\u5c04\u5173\u7cfb\u5339\u914d\u7684\u3002\u6bd4\u5982class_to_size\uff0c\u4ece\u4e0a\u8868\u770bclass 1\u5bf9\u5e94\u7684\u4fdd\u5b58\u5bf9\u8c61\u5927\u5c0f\u4e3a8\uff0c\u6240\u4ee5class_to_size[1]=8\uff0cspan\u5927\u5c0f\u4e3a8192Byte\uff0c\u53738KB\uff0c\u4e3a1\u9875\uff0c\u6240\u4ee5class_to_allocnpages[1]=1\u3002 \u4e3a\u4f55\u4e0d\u4f7f\u7528\u51fd\u6570\u8ba1\u7b97\u5404\u79cd\u8f6c\u6362\uff0c\u800c\u662f\u5199\u6210\u6570\u7ec4\uff1f \u67091\u4e2a\u5f88\u91cd\u8981\u7684\u539f\u56e0\uff1a\u7a7a\u95f4\u6362\u65f6\u95f4\u3002\u4f60\u5982\u679c\u4ed4\u7ec6\u89c2\u5bdf\u4e86\uff0c\u4e0a\u8868\u4e2d\u7684\u8f6c\u6362\uff0c\u5e76\u4e0d\u80fd\u901a\u8fc7\u7b80\u5355\u7684\u516c\u5f0f\u8fdb\u884c\u8f6c\u6362\uff0c\u6bd4\u5982size\u548csize class\u7684\u5173\u7cfb\uff0c\u5e76\u4e0d\u662f\u6b63\u6bd4\u7684\u3002\u8fd9\u4e9b\u6570\u636e\u662f\u4f7f\u7528\u8f83\u590d\u6742\u7684\u516c\u5f0f\u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u516c\u5f0f\u5728makesizeclass.go\u4e2d\uff0c\u8fd9\u5176\u4e2d\u5b58\u5728\u6307\u6570\u8fd0\u7b97\u4e0efor\u5faa\u73af\uff0c\u9020\u6210\u6bcf\u6b21\u5927\u5c0f\u8f6c\u6362\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N*2^N)\u3002\u53e6\u5916\uff0c\u5bf9\u4e00\u4e2a\u7a0b\u5e8f\u800c\u8a00\uff0c\u5185\u5b58\u7684\u7533\u8bf7\u548c\u7ba1\u7406\u64cd\u4f5c\u662f\u5f88\u591a\u7684\uff0c\u5982\u679c\u4e0d\u80fd\u5feb\u901f\u5b8c\u6210\uff0c\u5c31\u662f\u975e\u5e38\u7684\u4f4e\u6548\u3002\u628a\u4ee5\u4e0a\u5927\u5c0f\u8f6c\u6362\u5199\u6b7b\u5230\u6570\u7ec4\u91cc\uff0c\u505a\u5230\u4e86\u628a\u5927\u5c0f\u8f6c\u6362\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u76f4\u63a5\u964d\u5230O(1)\u3002","title":"\u5927\u5c0f\u8f6c\u6362"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#_7","text":"\u7b2c4\u5217num of objects\u4ee3\u8868\u662f\u5f53\u524dsize class\u7ea7\u522b\u7684Span\u53ef\u4ee5\u4fdd\u5b58\u591a\u5c11\u5bf9\u8c61\u6570\u91cf\uff0c\u7b2c5\u5217tail waste\u662fspan%obj\u8ba1\u7b97\u7684\u7ed3\u679c\uff0c\u56e0\u4e3aspan\u7684\u5927\u5c0f\u5e76\u4e0d\u4e00\u5b9a\u662f\u5bf9\u8c61\u5927\u5c0f\u7684\u6574\u6570\u500d\u3002 \u6700\u540e\u4e00\u5217max waste\u4ee3\u8868\u6700\u5927\u6d6a\u8d39\u7684\u5185\u5b58\u767e\u5206\u6bd4\uff0c\u8ba1\u7b97\u65b9\u6cd5\u5728printComment\u51fd\u6570\u4e2d: func printComment(w io.Writer, classes []class) { fmt.Fprintf(w, \"// %-5s %-9s %-10s %-7s %-10s %-9s\\n\", \"class\", \"bytes/obj\", \"bytes/span\", \"objects\", \"tail waste\", \"max waste\") prevSize := 0 for i, c := range classes { if i == 0 { continue } spanSize := c.npages * pageSize objects := spanSize / c.size tailWaste := spanSize - c.size*(spanSize/c.size) maxWaste := float64((c.size-prevSize-1)*objects+tailWaste) / float64(spanSize) prevSize = c.size fmt.Fprintf(w, \"// %5d %9d %10d %7d %10d %8.2f%%\\n\", i, c.size, spanSize, objects, tailWaste, 100*maxWaste) } fmt.Fprintf(w, \"\\n\") } Span\u6700\u6d6a\u8d39\u5185\u5b58\u7684\u573a\u666f\u662f\uff1aSpan\u5185\u7684\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u7a7a\u95f4\u4fdd\u5b58\u7684\u5bf9\u8c61\uff0c\u5b9e\u9645\u5360\u7528\u5185\u5b58\u662f\u524d\u4e00\u4e2aclass\u4e2d\u5bf9\u8c61\u7684\u5927\u5c0f\u52a01\uff0c\u8fd9\u6837\u65e0\u6cd5\u5360\u7528\u4f4e\u4e00\u7ea7\u7684Span\u3002\u4e00\u4e2a\u5bf9\u8c61\u7a7a\u95f4\u672a\u88ab\u5360\u7528\u7684\u5185\u5b58\u5c31\u88ab\u6d6a\u8d39\u4e86\uff0c\u6240\u4ee5\u4e00\u4e2aSpan\u5185\u5bf9\u8c61\u7a7a\u95f4\u6240\u6d6a\u8d39\u7684\u5185\u5b58\u4e3a\uff1a\u6240\u6709\u5bf9\u8c61\u7a7a\u95f4\u6d6a\u8d39\u7684\u5185\u5b58\u4e4b\u548c+tail waste\u3002 ((c.size - (preSize+1)) * objects + tailWaste) / spanSize","title":"\u5176\u4ed6\u8f6c\u6362\u8868\u5b57\u6bb5"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#go_1","text":"\u6d89\u53ca\u7684\u6982\u5ff5\u5df2\u7ecf\u8bb2\u5b8c\u4e86\uff0c\u6211\u4eec\u770b\u4e0bGo\u5185\u5b58\u5206\u914d\u539f\u7406\u3002 Go\u4e2d\u7684\u5185\u5b58\u5206\u7c7b\u5e76\u4e0d\u50cfTCMalloc\u90a3\u6837\u5206\u6210\u5c0f\u3001\u4e2d\u3001\u5927\u5bf9\u8c61\uff0c\u4f46\u662f\u5b83\u7684\u5c0f\u5bf9\u8c61\u91cc\u53c8\u7ec6\u5206\u4e86\u4e00\u4e2aTiny\u5bf9\u8c61\uff0cTiny\u5bf9\u8c61\u6307\u5927\u5c0f\u57281Byte\u523016Byte\u4e4b\u95f4\u5e76\u4e14\u4e0d\u5305\u542b\u6307\u9488\u7684\u5bf9\u8c61\u3002\u5c0f\u5bf9\u8c61\u548c\u5927\u5bf9\u8c61\u53ea\u7528\u5927\u5c0f\u5212\u5b9a\uff0c\u65e0\u5176\u4ed6\u533a\u5206\u3002 \u5c0f\u5bf9\u8c61\u662f\u5728mcache\u4e2d\u5206\u914d\u7684\uff0c\u800c\u5927\u5bf9\u8c61\u662f\u76f4\u63a5\u4ecemheap\u5206\u914d\u7684\uff0c\u4ece\u5c0f\u5bf9\u8c61\u7684\u5185\u5b58\u5206\u914d\u770b\u8d77\u3002","title":"Go\u5185\u5b58\u5206\u914d"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#_8","text":"","title":"\u5c0f\u5bf9\u8c61\u5206\u914d"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#span_1","text":"\u5bfb\u627espan\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a \u8ba1\u7b97\u5bf9\u8c61\u6240\u9700\u5185\u5b58\u5927\u5c0fsize \u6839\u636esize\u5230size class\u6620\u5c04\uff0c\u8ba1\u7b97\u51fa\u6240\u9700\u7684size class \u6839\u636esize class\u548c\u5bf9\u8c61\u662f\u5426\u5305\u542b\u6307\u9488\u8ba1\u7b97\u51faspan class \u83b7\u53d6\u8be5span class\u6307\u5411\u7684span\u3002 \u4ee5\u5206\u914d\u4e00\u4e2a\u4e0d\u5305\u542b\u6307\u9488\u7684\uff0c\u5927\u5c0f\u4e3a24Byte\u7684\u5bf9\u8c61\u4e3a\u4f8b\u3002 \u6839\u636e\u6620\u5c04\u8868\uff1a // class bytes/obj bytes/span objects tail waste max waste // 1 8 8192 1024 0 87.50% // 2 16 8192 512 0 43.75% // 3 32 8192 256 0 46.88% // 4 48 8192 170 32 31.52% size class 3\uff0c\u5b83\u7684\u5bf9\u8c61\u5927\u5c0f\u8303\u56f4\u662f(16,32]Byte\uff0c24Byte\u521a\u597d\u5728\u6b64\u533a\u95f4\uff0c\u6240\u4ee5\u6b64\u5bf9\u8c61\u7684size class\u4e3a3\u3002 Size class\u5230span class\u7684\u8ba1\u7b97\u5982\u4e0b\uff1a // noscan\u4e3atrue\u4ee3\u8868\u5bf9\u8c61\u4e0d\u5305\u542b\u6307\u9488 func makeSpanClass(sizeclass uint8, noscan bool) spanClass { return spanClass(sizeclass<<1) | spanClass(bool2int(noscan)) } \u6240\u4ee5\uff0c\u5bf9\u5e94\u7684span class\u4e3a\uff1a span class = 3 << 1 | 1 = 7 \u6240\u4ee5\u8be5\u5bf9\u8c61\u9700\u8981\u7684\u662fspan class 7\u6307\u5411\u7684span\u3002","title":"\u4e3a\u5bf9\u8c61\u5bfb\u627espan"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#span_2","text":"Span\u53ef\u4ee5\u6309\u5bf9\u8c61\u5927\u5c0f\u5207\u6210\u5f88\u591a\u4efd\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u4ece\u6620\u5c04\u8868\u4e0a\u8ba1\u7b97\u51fa\u6765\uff0c\u4ee5size class 3\u5bf9\u5e94\u7684span\u4e3a\u4f8b\uff0cspan\u5927\u5c0f\u662f8KB\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u5b9e\u9645\u6240\u5360\u7a7a\u95f4\u4e3a32Byte\uff0c\u8fd9\u4e2aspan\u5c31\u88ab\u5206\u6210\u4e86256\u5757\uff0c\u53ef\u4ee5\u6839\u636espan\u7684\u8d77\u59cb\u5730\u5740\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u5bf9\u8c61\u5757\u7684\u5185\u5b58\u5730\u5740\u3002 \u968f\u7740\u5185\u5b58\u7684\u5206\u914d\uff0cspan\u4e2d\u7684\u5bf9\u8c61\u5185\u5b58\u5757\uff0c\u6709\u4e9b\u88ab\u5360\u7528\uff0c\u6709\u4e9b\u672a\u88ab\u5360\u7528\uff0c\u6bd4\u5982\u4e0a\u56fe\uff0c\u6574\u4f53\u4ee3\u88681\u4e2aspan\uff0c\u84dd\u8272\u5757\u4ee3\u8868\u5df2\u88ab\u5360\u7528\u5185\u5b58\uff0c\u7eff\u8272\u5757\u4ee3\u8868\u672a\u88ab\u5360\u7528\u5185\u5b58\u3002 \u5f53\u5206\u914d\u5185\u5b58\u65f6\uff0c\u53ea\u8981\u5feb\u901f\u627e\u5230\u7b2c\u4e00\u4e2a\u53ef\u7528\u7684\u7eff\u8272\u5757\uff0c\u5e76\u8ba1\u7b97\u51fa\u5185\u5b58\u5730\u5740\u5373\u53ef\uff0c\u5982\u679c\u9700\u8981\u8fd8\u53ef\u4ee5\u5bf9\u5185\u5b58\u5757\u6570\u636e\u6e05\u96f6\u3002","title":"\u4ecespan\u5206\u914d\u5bf9\u8c61\u7a7a\u95f4"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#span_3","text":"span\u5185\u7684\u6240\u6709\u5185\u5b58\u5757\u90fd\u88ab\u5360\u7528\u65f6\uff0c\u6ca1\u6709\u5269\u4f59\u7a7a\u95f4\u7ee7\u7eed\u5206\u914d\u5bf9\u8c61\uff0cmcache\u4f1a\u5411mcentral\u7533\u8bf71\u4e2aspan\uff0cmcache\u62ff\u5230span\u540e\u7ee7\u7eed\u5206\u914d\u5bf9\u8c61\u3002","title":"span\u6ca1\u6709\u7a7a\u95f4\u600e\u4e48\u5206\u914d\u5bf9\u8c61"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#mcentralmcachespan","text":"mcentral\u548cmcache\u4e00\u6837\uff0c\u90fd\u662f0~133\u8fd9134\u4e2aspan class\u7ea7\u522b\uff0c\u4f46\u6bcf\u4e2a\u7ea7\u522b\u90fd\u4fdd\u5b58\u4e862\u4e2aspan list\uff0c\u53732\u4e2aspan\u94fe\u8868\uff1a nonempty\uff1a\u8fd9\u4e2a\u94fe\u8868\u91cc\u7684span\uff0c\u6240\u6709span\u90fd\u81f3\u5c11\u67091\u4e2a\u7a7a\u95f2\u7684\u5bf9\u8c61\u7a7a\u95f4\u3002\u8fd9\u4e9bspan\u662fmcache\u91ca\u653espan\u65f6\u52a0\u5165\u5230\u8be5\u94fe\u8868\u7684\u3002 empty\uff1a\u8fd9\u4e2a\u94fe\u8868\u91cc\u7684span\uff0c\u6240\u6709\u7684span\u90fd\u4e0d\u786e\u5b9a\u91cc\u9762\u662f\u5426\u6709\u7a7a\u95f2\u7684\u5bf9\u8c61\u7a7a\u95f4\u3002\u5f53\u4e00\u4e2aspan\u4ea4\u7ed9mcache\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u52a0\u5165\u5230empty\u94fe\u8868\u3002 \u8fd92\u4e2a\u4e1c\u897f\u540d\u79f0\u4e00\u76f4\u6709\u70b9\u7ed5\uff0c\u5efa\u8bae\u76f4\u63a5\u628aempty\u7406\u89e3\u4e3a\u6ca1\u6709\u5bf9\u8c61\u7a7a\u95f4\u5c31\u597d\u4e86\u3002 \u5b9e\u9645\u4ee3\u7801\u4e2d\u6bcf1\u4e2aspan class\u5bf9\u5e941\u4e2amcentral\uff0c\u56fe\u91cc\u628a\u6240\u6709mcentral\u62bd\u8c61\u62101\u4e2a\u6574\u4f53\u4e86\u3002 mcache\u5411mcentral\u8981span\u65f6\uff0cmcentral\u4f1a\u5148\u4ecenonempty\u641c\u7d22\u6ee1\u8db3\u6761\u4ef6\u7684span\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u518d\u4eceemtpy\u641c\u7d22\u6ee1\u8db3\u6761\u4ef6\u7684span\uff0c\u7136\u540e\u628a\u627e\u5230\u7684span\u4ea4\u7ed9mcache\u3002","title":"mcentral\u5411mcache\u63d0\u4f9bspan"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#mheapspan","text":"mheap\u91cc\u4fdd\u5b58\u4e862\u68f5\u4e8c\u53c9\u6392\u5e8f\u6811\uff0c\u6309span\u7684page\u6570\u91cf\u8fdb\u884c\u6392\u5e8f\uff1a free\uff1afree\u4e2d\u4fdd\u5b58\u7684span\u662f\u7a7a\u95f2\u5e76\u4e14\u975e\u5783\u573e\u56de\u6536\u7684span\u3002 scav\uff1ascav\u4e2d\u4fdd\u5b58\u7684\u662f\u7a7a\u95f2\u5e76\u4e14\u5df2\u7ecf\u5783\u573e\u56de\u6536\u7684span\u3002 \u5982\u679c\u662f\u5783\u573e\u56de\u6536\u5bfc\u81f4\u7684span\u91ca\u653e\uff0cspan\u4f1a\u88ab\u52a0\u5165\u5230scav\uff0c\u5426\u5219\u52a0\u5165\u5230free\uff0c\u6bd4\u5982\u521a\u4eceOS\u7533\u8bf7\u7684\u7684\u5185\u5b58\u4e5f\u7ec4\u6210\u7684Span\u3002 mheap\u4e2d\u8fd8\u6709arenas\uff0c\u6709\u4e00\u7ec4heapArena\u7ec4\u6210\uff0c\u6bcf\u4e00\u4e2aheapArena\u90fd\u5305\u542b\u4e86\u8fde\u7eed\u7684pagesPerArena\u4e2aspan\uff0c\u8fd9\u4e2a\u4e3b\u8981\u662f\u4e3amheap\u7ba1\u7406span\u548c\u5783\u573e\u56de\u6536\u670d\u52a1\u3002 mheap\u672c\u8eab\u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u5b83\u5176\u4e2d\u7684\u6570\u636e\uff0c\u4e5f\u90fd\u662f\u4eceOS\u76f4\u63a5\u7533\u8bf7\u6765\u7684\u5185\u5b58\uff0c\u5e76\u4e0d\u5728mheap\u6240\u7ba1\u7406\u7684\u90a3\u90e8\u5206\u5185\u5b58\u5185\u3002","title":"mheap\u7684span\u7ba1\u7406"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#mcentralmheapspan","text":"mcentral\u5411mcache\u63d0\u4f9bspan\u65f6\uff0c\u5982\u679cemtpy\u91cc\u4e5f\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\u7684span\uff0cmcentral\u4f1a\u5411mheap\u7533\u8bf7span\u3002 mcentral\u9700\u8981\u5411mheap\u63d0\u4f9b\u9700\u8981\u7684\u5185\u5b58\u9875\u6570\u548cspan class\u7ea7\u522b\uff0c\u7136\u540e\u5b83\u4f18\u5148\u4ecefree\u4e2d\u641c\u7d22\u53ef\u7528\u7684span\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u4f1a\u4ecescav\u4e2d\u641c\u7d22\u53ef\u7528\u7684span\uff0c\u5982\u679c\u8fd8\u6ca1\u6709\u627e\u5230\uff0c\u5b83\u4f1a\u5411OS\u7533\u8bf7\u5185\u5b58\uff0c\u518d\u91cd\u65b0\u641c\u7d222\u68f5\u6811\uff0c\u5fc5\u7136\u80fd\u627e\u5230span\u3002\u5982\u679c\u627e\u5230\u7684span\u6bd4\u9700\u6c42\u7684span\u5927\uff0c\u5219\u628aspan\u8fdb\u884c\u5206\u5272\u62102\u4e2aspan\uff0c\u5176\u4e2d1\u4e2a\u521a\u597d\u662f\u9700\u6c42\u5927\u5c0f\uff0c\u628a\u5269\u4e0b\u7684span\u518d\u52a0\u5165\u5230free\u4e2d\u53bb\uff0c\u7136\u540e\u8bbe\u7f6e\u9700\u6c42span\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u7136\u540e\u4ea4\u7ed9mcentral\u3002","title":"mcentral\u5411mheap\u8981span"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#mheapos","text":"\u5f53mheap\u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58\u65f6\uff0cmheap\u4f1a\u5411OS\u7533\u8bf7\u5185\u5b58\uff0c\u628a\u7533\u8bf7\u7684\u5185\u5b58\u9875\u4fdd\u5b58\u5230span\uff0c\u7136\u540e\u628aspan\u63d2\u5165\u5230free\u6811 \u3002 \u572832\u4f4d\u7cfb\u7edf\u4e0a\uff0cmheap\u8fd8\u4f1a\u9884\u7559\u4e00\u90e8\u5206\u7a7a\u95f4\uff0c\u5f53mheap\u6ca1\u6709\u7a7a\u95f4\u65f6\uff0c\u5148\u4ece\u9884\u7559\u7a7a\u95f4\u7533\u8bf7\uff0c\u5982\u679c\u9884\u7559\u7a7a\u95f4\u5185\u5b58\u4e5f\u6ca1\u6709\u4e86\uff0c\u624d\u5411OS\u7533\u8bf7\u3002","title":"mheap\u5411OS\u7533\u8bf7\u5185\u5b58"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#_9","text":"\u5927\u5bf9\u8c61\u7684\u5206\u914d\u6bd4\u5c0f\u5bf9\u8c61\u7701\u4e8b\u591a\u4e86\uff0c99%\u7684\u6d41\u7a0b\u4e0emcentral\u5411mheap\u7533\u8bf7\u5185\u5b58\u7684\u76f8\u540c\uff0c\u6240\u4ee5\u4e0d\u91cd\u590d\u4ecb\u7ecd\u4e86\uff0c\u4e0d\u540c\u7684\u4e00\u70b9\u5728\u4e8emheap\u4f1a\u8bb0\u5f55\u4e00\u70b9\u5927\u5bf9\u8c61\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u89c1mheap.alloc_m()\u3002","title":"\u5927\u5bf9\u8c61\u5206\u914d"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#go_2","text":"\u5982\u679c\u53ea\u7533\u8bf7\u548c\u5206\u914d\u5185\u5b58\uff0c\u5185\u5b58\u7ec8\u5c06\u67af\u7aed\uff0cGo\u4f7f\u7528\u5783\u573e\u56de\u6536\u6536\u96c6\u4e0d\u518d\u4f7f\u7528\u7684span\uff0c\u8c03\u7528mspan.scavenge()\u628aspan\u91ca\u653e\u7ed9OS\uff08\u5e76\u975e\u771f\u91ca\u653e\uff0c\u53ea\u662f\u544a\u8bc9OS\u8fd9\u7247\u5185\u5b58\u7684\u4fe1\u606f\u65e0\u7528\u4e86\uff0c\u5982\u679c\u4f60\u9700\u8981\u7684\u8bdd\uff0c\u6536\u56de\u53bb\u597d\u4e86\uff09\uff0c\u7136\u540e\u4ea4\u7ed9mheap\uff0cmheap\u5bf9span\u8fdb\u884cspan\u7684\u5408\u5e76\uff0c\u628a\u5408\u5e76\u540e\u7684span\u52a0\u5165scav\u6811\u4e2d\uff0c\u7b49\u5f85\u518d\u5206\u914d\u5185\u5b58\u65f6\uff0c\u7531mheap\u8fdb\u884c\u5185\u5b58\u518d\u5206\u914d\uff0cGo\u5783\u573e\u56de\u6536\u4e5f\u662f\u4e00\u4e2a\u5f88\u5f3a\u7684\u4e3b\u9898\uff0c\u8ba1\u5212\u540e\u9762\u5355\u72ec\u5199\u4e00\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u3002 \u73b0\u5728\u6211\u4eec\u5173\u6ce8\u4e00\u4e0b\uff0cGo\u7a0b\u5e8f\u662f\u600e\u4e48\u628a\u5185\u5b58\u91ca\u653e\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u7684\uff1f \u91ca\u653e\u5185\u5b58\u7684\u51fd\u6570\u662fsysUnused\uff0c\u5b83\u4f1a\u88abmspan.scavenge()\u8c03\u7528: // MAC\u4e0b\u7684\u5b9e\u73b0 func sysUnused(v unsafe.Pointer, n uintptr) { // MADV_FREE_REUSABLE is like MADV_FREE except it also propagates // accounting information about the process to task_info. madvise(v, n, _MADV_FREE_REUSABLE) } \u6ce8\u91ca\u8bf4_MADV_FREE_REUSABLE\u4e0eMADV_FREE\u7684\u529f\u80fd\u7c7b\u4f3c\uff0c\u5b83\u7684\u529f\u80fd\u662f\u7ed9\u5185\u6838\u63d0\u4f9b\u4e00\u4e2a\u5efa\u8bae\uff1a\u8fd9\u4e2a\u5185\u5b58\u5730\u5740\u533a\u95f4\u7684\u5185\u5b58\u5df2\u7ecf\u4e0d\u518d\u4f7f\u7528\uff0c\u53ef\u4ee5\u56de\u6536\u3002\u4f46\u5185\u6838\u662f\u5426\u56de\u6536\uff0c\u4ee5\u53ca\u4ec0\u4e48\u65f6\u5019\u56de\u6536\uff0c\u8fd9\u5c31\u662f\u5185\u6838\u7684\u4e8b\u60c5\u4e86\u3002\u5982\u679c\u5185\u6838\u771f\u628a\u8fd9\u7247\u5185\u5b58\u56de\u6536\u4e86\uff0c\u5f53Go\u7a0b\u5e8f\u518d\u4f7f\u7528\u8fd9\u4e2a\u5730\u5740\u65f6\uff0c\u5185\u6838\u4f1a\u91cd\u65b0\u8fdb\u884c\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\u3002\u6240\u4ee5\u5728\u5185\u5b58\u5145\u8db3\u7684\u60c5\u51b5\u4e0b\uff0c\u5185\u6838\u4e5f\u6ca1\u6709\u5fc5\u8981\u7acb\u523b\u56de\u6536\u5185\u5b58\u3002","title":"Go\u5783\u573e\u56de\u6536\u548c\u5185\u5b58\u91ca\u653e"},{"location":"golang/docs/Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%82%A3%E4%BA%9B%E4%BA%8B%EF%BC%8C%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95%EF%BC%81/#4-go","text":"\u6700\u540e\u63d0\u4e00\u4e0b\u6808\u5185\u5b58\u3002\u4ece\u4e00\u4e2a\u5b8f\u89c2\u7684\u89d2\u5ea6\u770b\uff0c\u5185\u5b58\u7ba1\u7406\u4e0d\u5e94\u5f53\u53ea\u6709\u5806\uff0c\u4e5f\u5e94\u5f53\u6709\u6808\u3002 \u6bcf\u4e2agoroutine\u90fd\u6709\u81ea\u5df1\u7684\u6808\uff0c\u6808\u7684\u521d\u59cb\u5927\u5c0f\u662f2KB\uff0c100\u4e07\u7684goroutine\u4f1a\u5360\u75282G\uff0c\u4f46goroutine\u7684\u6808\u4f1a\u57282KB\u4e0d\u591f\u7528\u65f6\u81ea\u52a8\u6269\u5bb9\uff0c\u5f53\u6269\u5bb9\u4e3a4KB\u7684\u65f6\u5019\uff0c\u767e\u4e07goroutine\u4f1a\u5360\u75284GB\u3002 \u5173\u4e8egoroutine\u6808\u5185\u5b58\u7ba1\u7406\uff0c\u6709\u7bc7\u5f88\u597d\u7684\u6587\u7ae0\uff0c\u997f\u4e86\u4e48\u6846\u67b6\u6280\u672f\u90e8\u7684\u4e13\u680f\u6587\u7ae0\uff1a\u300a\u804a\u4e00\u804agoroutine stack\u300b\uff0c\u628a\u91cc\u9762\u7684\u4e00\u6bb5\u5185\u5bb9\u6458\u5f55\u4e0b\uff0c\u4f60\u611f\u53d7\u4e0b\uff1a \u53ef\u4ee5\u770b\u5230\u5728rpc\u8c03\u7528(grpc invoke)\u65f6\uff0c\u6808\u4f1a\u53d1\u751f\u6269\u5bb9(runtime.morestack)\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5728\u8bfb\u5199routine\u5185\u7684\u4efb\u4f55rpc\u8c03\u7528\u90fd\u4f1a\u5bfc\u81f4\u6808\u6269\u5bb9\uff0c \u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4\u4f1a\u6269\u5927\u4e3a\u539f\u6765\u7684\u4e24\u500d\uff0c4kB\u7684\u6808\u4f1a\u53d8\u4e3a8kB\uff0c100w\u7684\u8fde\u63a5\u7684\u5185\u5b58\u5360\u7528\u4f1a\u4ece8G\u6269\u5927\u4e3a16G\uff08\u5168\u53cc\u5de5\uff0c\u4e0d\u8003\u8651\u5176\u4ed6\u5f00\u9500\uff09\uff0c\u8fd9\u7b80\u76f4\u662f\u5669\u68a6\u3002 \u53e6\u5916\uff0c\u518d\u63a8\u8350\u4e00\u7bc7\u66f9\u5927\u7ffb\u8bd1\u7684\u4e00\u7bc7\u6c47\u7f16\u5165\u95e8\u6587\u7ae0\uff0c\u91cc\u9762\u4e5f\u4ecb\u7ecd\u4e86\u6269\u6808\uff1a\u7b2c\u4e00\u7ae0: Go \u6c47\u7f16\u5165\u95e8 \uff0c\u987a\u4fbf\u5165\u95e8\u4e00\u4e0b\u6c47\u7f16\u3002 \u603b\u7ed3 \u5185\u5b58\u5206\u914d\u539f\u7406\u5c31\u4e0d\u518d\u56de\u987e\u4e86\uff0c\u5f3a\u8c032\u4e2a\u91cd\u8981\u7684\u601d\u60f3\uff1a \u4f7f\u7528\u7f13\u5b58\u63d0\u9ad8\u6548\u7387\u3002\u5728\u5b58\u50a8\u7684\u6574\u4e2a\u4f53\u7cfb\u4e2d\u5230\u5904\u53ef\u89c1\u7f13\u5b58\u7684\u601d\u60f3\uff0cGo\u5185\u5b58\u5206\u914d\u548c\u7ba1\u7406\u4e5f\u4f7f\u7528\u4e86\u7f13\u5b58\uff0c\u5229\u7528\u7f13\u5b58\u4e00\u662f\u51cf\u5c11\u4e86\u7cfb\u7edf\u8c03\u7528\u7684\u6b21\u6570\uff0c\u4e8c\u662f\u964d\u4f4e\u4e86\u9501\u7684\u7c92\u5ea6\uff0c\u51cf\u5c11\u52a0\u9501\u7684\u6b21\u6570\uff0c\u4ece\u8fd92\u70b9\u63d0\u9ad8\u4e86\u5185\u5b58\u7ba1\u7406\u6548\u7387\u3002 \u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u63d0\u9ad8\u5185\u5b58\u7ba1\u7406\u6548\u7387\u3002\u7a7a\u95f4\u6362\u65f6\u95f4\u662f\u4e00\u79cd\u5e38\u7528\u7684\u6027\u80fd\u4f18\u5316\u601d\u60f3\uff0c\u8fd9\u79cd\u601d\u60f3\u5176\u5b9e\u975e\u5e38\u666e\u904d\uff0c\u6bd4\u5982Hash\u3001Map\u3001\u4e8c\u53c9\u6392\u5e8f\u6811\u7b49\u6570\u636e\u7ed3\u6784\u7684\u672c\u8d28\u5c31\u662f\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u5728\u6570\u636e\u5e93\u4e2d\u4e5f\u5f88\u5e38\u89c1\uff0c\u6bd4\u5982\u6570\u636e\u5e93\u7d22\u5f15\u3001\u7d22\u5f15\u89c6\u56fe\u548c\u6570\u636e\u7f13\u5b58\u7b49\uff0c\u518d\u5982Redis\u7b49\u7f13\u5b58\u6570\u636e\u5e93\u4e5f\u662f\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u601d\u60f3\u3002","title":"4. Go\u6808\u5185\u5b58"},{"location":"golang/docs/Go%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","text":"Go\u5e38\u7528\u547d\u4ee4 Go\u8bed\u8a00\u81ea\u5e26\u6709\u4e00\u5957\u5b8c\u6574\u7684\u547d\u4ee4\u64cd\u4f5c\u5de5\u5177\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c go \u6765\u67e5\u770b\u5b83\u4eec go build \u8fd9\u4e2a\u547d\u4ee4\u4e3b\u8981\u7528\u4e8e\u7f16\u8bd1\u4ee3\u7801\u3002\u5728\u5305\u7684\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\uff0c\u82e5\u6709\u5fc5\u8981\uff0c\u4f1a\u540c\u65f6\u7f16\u8bd1\u4e0e\u4e4b\u76f8\u5173\u8054\u7684\u5305\u3002 \u5982\u679c\u662f\u666e\u901a\u5305\uff0c\u5c31\u50cf\u7f16\u5199\u7684 mymath \u5305\u90a3\u6837\uff0c\u5f53\u6267\u884c go build \u4e4b\u540e\uff0c\u5b83\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u6587\u4ef6\u3002\u5982\u679c\u9700\u8981\u5728 $GOPATH/pkg \u4e0b\u751f\u6210\u76f8\u5e94\u7684\u6587\u4ef6\uff0c\u90a3\u5c31\u5f97\u6267\u884c go install \u3002 \u5982\u679c\u662f main \u5305\uff0c\u5f53\u6267\u884c go build \u4e4b\u540e\uff0c\u5b83\u5c31\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u3002\u5982\u679c\u9700\u8981\u5728 $GOPATH/bin \u4e0b\u751f\u6210\u76f8\u5e94\u7684\u6587\u4ef6\uff0c\u9700\u8981\u6267\u884c go install \uff0c\u6216\u8005\u4f7f\u7528 go build -o \u8def\u5f84/a.exe \u3002 \u5982\u679c\u67d0\u4e2a\u9879\u76ee\u6587\u4ef6\u5939\u4e0b\u6709\u591a\u4e2a\u6587\u4ef6\uff0c\u800c\u53ea\u60f3\u7f16\u8bd1\u67d0\u4e2a\u6587\u4ef6\uff0c\u5c31\u53ef\u5728 go build \u4e4b\u540e\u52a0\u4e0a\u6587\u4ef6\u540d\uff0c\u4f8b\u5982 go build a.go \uff1b go build \u547d\u4ee4\u9ed8\u8ba4\u4f1a\u7f16\u8bd1\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709go\u6587\u4ef6\u3002 \u4e5f\u53ef\u4ee5\u6307\u5b9a\u7f16\u8bd1\u8f93\u51fa\u7684\u6587\u4ef6\u540d\u3002\u4f8b\u59821.2\u8282\u4e2d\u7684 mathapp \u5e94\u7528\uff0c\u53ef\u4ee5\u6307\u5b9a go build -o astaxie.exe \uff0c\u9ed8\u8ba4\u60c5\u51b5\u662fpackage\u540d(\u975emain\u5305)\uff0c\u6216\u8005\u662f\u7b2c\u4e00\u4e2a\u6e90\u6587\u4ef6\u7684\u6587\u4ef6\u540d(main\u5305)\u3002 \uff08\u6ce8\uff1a\u5b9e\u9645\u4e0a\uff0cpackage\u540d\u5728Go\u8bed\u8a00\u89c4\u8303\u4e2d\u6307\u4ee3\u7801\u4e2d\u201cpackage\u201d\u540e\u4f7f\u7528\u7684\u540d\u79f0\uff0c\u6b64\u540d\u79f0\u53ef\u4ee5\u4e0e\u6587\u4ef6\u5939\u540d\u4e0d\u540c\u3002\u9ed8\u8ba4\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u540d\u662f\u6587\u4ef6\u5939\u540d\u3002\uff09 go build\u4f1a\u5ffd\u7565\u76ee\u5f55\u4e0b\u4ee5\u201c_\u201d\u6216\u201c.\u201d\u5f00\u5934\u7684go\u6587\u4ef6\u3002 \u5982\u679c\u6e90\u4ee3\u7801\u9488\u5bf9\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u4e0d\u540c\u7684\u5904\u7406\uff0c\u90a3\u4e48\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u540e\u7f00\u6765\u547d\u540d\u6587\u4ef6\u3002\u4f8b\u5982\u6709\u4e00\u4e2a\u8bfb\u53d6\u6570\u7ec4\u7684\u7a0b\u5e8f\uff0c\u5b83\u5bf9\u4e8e\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u53ef\u80fd\u6709\u5982\u4e0b\u51e0\u4e2a\u6e90\u6587\u4ef6\uff1a array_linux.go array_darwin.go array_windows.go array_freebsd.go go build \u7684\u65f6\u5019\u4f1a\u9009\u62e9\u6027\u5730\u7f16\u8bd1\u4ee5\u7cfb\u7edf\u540d\u7ed3\u5c3e\u7684\u6587\u4ef6\uff08Linux\u3001Darwin\u3001Windows\u3001Freebsd\uff09\u3002\u4f8b\u5982Linux\u7cfb\u7edf\u4e0b\u9762\u7f16\u8bd1\u53ea\u4f1a\u9009\u62e9array_linux.go\u6587\u4ef6\uff0c\u5176\u5b83\u7cfb\u7edf\u547d\u540d\u540e\u7f00\u6587\u4ef6\u5168\u90e8\u5ffd\u7565\u3002 \u53c2\u6570\u7684\u4ecb\u7ecd -o \u6307\u5b9a\u8f93\u51fa\u7684\u6587\u4ef6\u540d\uff0c\u53ef\u4ee5\u5e26\u4e0a\u8def\u5f84\uff0c\u4f8b\u5982 go build -o a/b/c -i \u5b89\u88c5\u76f8\u5e94\u7684\u5305\uff0c\u7f16\u8bd1+ go install -a \u66f4\u65b0\u5168\u90e8\u5df2\u7ecf\u662f\u6700\u65b0\u7684\u5305\u7684\uff0c\u4f46\u662f\u5bf9\u6807\u51c6\u5305\u4e0d\u9002\u7528 -n \u628a\u9700\u8981\u6267\u884c\u7684\u7f16\u8bd1\u547d\u4ee4\u6253\u5370\u51fa\u6765\uff0c\u4f46\u662f\u4e0d\u6267\u884c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u77e5\u9053\u5e95\u5c42\u662f\u5982\u4f55\u8fd0\u884c\u7684 -p n \u6307\u5b9a\u53ef\u4ee5\u5e76\u884c\u53ef\u8fd0\u884c\u7684\u7f16\u8bd1\u6570\u76ee\uff0c\u9ed8\u8ba4\u662fCPU\u6570\u76ee -race \u5f00\u542f\u7f16\u8bd1\u7684\u65f6\u5019\u81ea\u52a8\u68c0\u6d4b\u6570\u636e\u7ade\u4e89\u7684\u60c5\u51b5\uff0c\u76ee\u524d\u53ea\u652f\u630164\u4f4d\u7684\u673a\u5668 -v \u6253\u5370\u51fa\u6765\u6b63\u5728\u7f16\u8bd1\u7684\u5305\u540d -work \u6253\u5370\u51fa\u6765\u7f16\u8bd1\u65f6\u5019\u7684\u4e34\u65f6\u6587\u4ef6\u5939\u540d\u79f0\uff0c\u5e76\u4e14\u5982\u679c\u5df2\u7ecf\u5b58\u5728\u7684\u8bdd\u5c31\u4e0d\u8981\u5220\u9664 -x \u6253\u5370\u51fa\u6765\u6267\u884c\u7684\u547d\u4ee4\uff0c\u5176\u5b9e\u5c31\u662f\u548c -n \u7684\u7ed3\u679c\u7c7b\u4f3c\uff0c\u53ea\u662f\u8fd9\u4e2a\u4f1a\u6267\u884c -ccflags 'arg list' \u4f20\u9012\u53c2\u6570\u7ed95c, 6c, 8c \u8c03\u7528 -compiler name \u6307\u5b9a\u76f8\u5e94\u7684\u7f16\u8bd1\u5668\uff0cgccgo\u8fd8\u662fgc -gccgoflags 'arg list' \u4f20\u9012\u53c2\u6570\u7ed9gccgo\u7f16\u8bd1\u8fde\u63a5\u8c03\u7528 -gcflags 'arg list' \u4f20\u9012\u53c2\u6570\u7ed95g, 6g, 8g \u8c03\u7528 -installsuffix suffix \u4e3a\u4e86\u548c\u9ed8\u8ba4\u7684\u5b89\u88c5\u5305\u533a\u522b\u5f00\u6765\uff0c\u91c7\u7528\u8fd9\u4e2a\u524d\u7f00\u6765\u91cd\u65b0\u5b89\u88c5\u90a3\u4e9b\u4f9d\u8d56\u7684\u5305\uff0c -race \u7684\u65f6\u5019\u9ed8\u8ba4\u5df2\u7ecf\u662f -installsuffix race ,\u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7 -n \u547d\u4ee4\u6765\u9a8c\u8bc1 -ldflags 'flag list' \u4f20\u9012\u53c2\u6570\u7ed95l, 6l, 8l \u8c03\u7528 -tags 'tag list' \u8bbe\u7f6e\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u53ef\u4ee5\u9002\u914d\u7684\u90a3\u4e9btag\uff0c\u8be6\u7ec6\u7684tag\u9650\u5236\u53c2\u8003\u91cc\u9762\u7684 Build Constraints go clean \u8fd9\u4e2a\u547d\u4ee4\u662f\u7528\u6765\u79fb\u9664\u5f53\u524d\u6e90\u7801\u5305\u548c\u5173\u8054\u6e90\u7801\u5305\u91cc\u9762\u7f16\u8bd1\u751f\u6210\u7684\u6587\u4ef6\u3002\u8fd9\u4e9b\u6587\u4ef6\u5305\u62ec _obj/ \u65e7\u7684object\u76ee\u5f55\uff0c\u7531Makefiles\u9057\u7559 _test/ \u65e7\u7684test\u76ee\u5f55\uff0c\u7531Makefiles\u9057\u7559 _testmain.go \u65e7\u7684gotest\u6587\u4ef6\uff0c\u7531Makefiles\u9057\u7559 test.out \u65e7\u7684test\u8bb0\u5f55\uff0c\u7531Makefiles\u9057\u7559 build.out \u65e7\u7684test\u8bb0\u5f55\uff0c\u7531Makefiles\u9057\u7559 *.[568ao] object\u6587\u4ef6\uff0c\u7531Makefiles\u9057\u7559 DIR(.exe) \u7531go build\u4ea7\u751f DIR.test(.exe) \u7531go test -c\u4ea7\u751f MAINFILE(.exe) \u7531go build MAINFILE.go\u4ea7\u751f *.so \u7531 SWIG \u4ea7\u751f \u4e00\u822c\u90fd\u662f\u5229\u7528\u8fd9\u4e2a\u547d\u4ee4\u6e05\u9664\u7f16\u8bd1\u6587\u4ef6\uff0c\u7136\u540egithub\u9012\u4ea4\u6e90\u7801\uff0c\u5728\u672c\u673a\u6d4b\u8bd5\u7684\u65f6\u5019\u8fd9\u4e9b\u7f16\u8bd1\u6587\u4ef6\u90fd\u662f\u548c\u7cfb\u7edf\u76f8\u5173\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u6e90\u7801\u7ba1\u7406\u6765\u8bf4\u6ca1\u5fc5\u8981\u3002 $ go clean -i -n cd /Users/astaxie/develop/gopath/src/mathapp rm -f mathapp mathapp.exe mathapp.test mathapp.test.exe app app.exe rm -f /Users/astaxie/develop/gopath/bin/mathapp \u53c2\u6570\u4ecb\u7ecd -i \u6e05\u9664\u5173\u8054\u7684\u5b89\u88c5\u7684\u5305\u548c\u53ef\u8fd0\u884c\u6587\u4ef6\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7go install\u5b89\u88c5\u7684\u6587\u4ef6 -n \u628a\u9700\u8981\u6267\u884c\u7684\u6e05\u9664\u547d\u4ee4\u6253\u5370\u51fa\u6765\uff0c\u4f46\u662f\u4e0d\u6267\u884c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u77e5\u9053\u5e95\u5c42\u662f\u5982\u4f55\u8fd0\u884c\u7684 -r \u5faa\u73af\u7684\u6e05\u9664\u5728import\u4e2d\u5f15\u5165\u7684\u5305 -x \u6253\u5370\u51fa\u6765\u6267\u884c\u7684\u8be6\u7ec6\u547d\u4ee4\uff0c\u5176\u5b9e\u5c31\u662f -n \u6253\u5370\u7684\u6267\u884c\u7248\u672c go fmt \u6709\u8fc7C/C++\u7ecf\u9a8c\u7684\u8bfb\u8005\u4f1a\u77e5\u9053,\u4e00\u4e9b\u4eba\u7ecf\u5e38\u4e3a\u4ee3\u7801\u91c7\u53d6K&R\u98ce\u683c\u8fd8\u662fANSI\u98ce\u683c\u800c\u4e89\u8bba\u4e0d\u4f11\u3002\u5728go\u4e2d\uff0c\u4ee3\u7801\u5219\u6709\u6807\u51c6\u7684\u98ce\u683c\u3002\u7531\u4e8e\u4e4b\u524d\u5df2\u7ecf\u6709\u7684\u4e00\u4e9b\u4e60\u60ef\u6216\u5176\u5b83\u7684\u539f\u56e0\u5e38\u5c06\u4ee3\u7801\u5199\u6210ANSI\u98ce\u683c\u6216\u8005\u5176\u5b83\u66f4\u5408\u9002\u81ea\u5df1\u7684\u683c\u5f0f\uff0c\u8fd9\u5c06\u4e3a\u4eba\u4eec\u5728\u9605\u8bfb\u522b\u4eba\u7684\u4ee3\u7801\u65f6\u6dfb\u52a0\u4e0d\u5fc5\u8981\u7684\u8d1f\u62c5\uff0c\u6240\u4ee5go\u5f3a\u5236\u4e86\u4ee3\u7801\u683c\u5f0f\uff08\u6bd4\u5982\u5de6\u5927\u62ec\u53f7\u5fc5\u987b\u653e\u5728\u884c\u5c3e\uff09\uff0c\u4e0d\u6309\u7167\u6b64\u683c\u5f0f\u7684\u4ee3\u7801\u5c06\u4e0d\u80fd\u7f16\u8bd1\u901a\u8fc7\uff0c\u4e3a\u4e86\u51cf\u5c11\u6d6a\u8d39\u5728\u6392\u7248\u4e0a\u7684\u65f6\u95f4\uff0cgo\u5de5\u5177\u96c6\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a go fmt \u547d\u4ee4 \u5b83\u53ef\u4ee5\u683c\u5f0f\u5316\u5199\u597d\u7684\u4ee3\u7801\u6587\u4ef6\uff0c\u5199\u4ee3\u7801\u7684\u65f6\u5019\u4e0d\u9700\u8981\u5173\u5fc3\u683c\u5f0f\uff0c\u53ea\u9700\u8981\u5728\u5199\u5b8c\u4e4b\u540e\u6267\u884c go fmt <\u6587\u4ef6\u540d>.go \uff0c\u4ee3\u7801\u5c31\u88ab\u4fee\u6539\u6210\u4e86\u6807\u51c6\u683c\u5f0f\uff0c\u4f46\u662f\u5e73\u5e38\u5f88\u5c11\u7528\u5230\u8fd9\u4e2a\u547d\u4ee4\uff0c\u56e0\u4e3a\u5f00\u53d1\u5de5\u5177\u91cc\u9762\u4e00\u822c\u90fd\u5e26\u4e86\u4fdd\u5b58\u65f6\u5019\u81ea\u52a8\u683c\u5f0f\u5316\u529f\u80fd\uff0c\u8fd9\u4e2a\u529f\u80fd\u5176\u5b9e\u5728\u5e95\u5c42\u5c31\u662f\u8c03\u7528\u4e86 go fmt \u3002\u63a5\u4e0b\u6765\u5c06\u8bb2\u8ff0\u4e24\u4e2a\u5de5\u5177\uff0c\u8fd9\u4e24\u4e2a\u5de5\u5177\u90fd\u81ea\u5e26\u4e86\u4fdd\u5b58\u6587\u4ef6\u65f6\u81ea\u52a8\u5316 go fmt \u529f\u80fd\u3002 \u4f7f\u7528go fmt\u547d\u4ee4\uff0c\u5176\u5b9e\u662f\u8c03\u7528\u4e86gofmt\uff0c\u800c\u4e14\u9700\u8981\u53c2\u6570-w\uff0c\u5426\u5219\u683c\u5f0f\u5316\u7ed3\u679c\u4e0d\u4f1a\u5199\u5165\u6587\u4ef6\u3002gofmt -w -l src\uff0c\u53ef\u4ee5\u683c\u5f0f\u5316\u6574\u4e2a\u9879\u76ee\u3002 \u6240\u4ee5go fmt\u662fgofmt\u7684\u4e0a\u5c42\u4e00\u4e2a\u5305\u88c5\u7684\u547d\u4ee4\uff0c\u60f3\u8981\u66f4\u591a\u7684\u4e2a\u6027\u5316\u7684\u683c\u5f0f\u5316\u53ef\u4ee5\u53c2\u8003 go fmt gofmt\u7684\u53c2\u6570\u4ecb\u7ecd -l \u663e\u793a\u90a3\u4e9b\u9700\u8981\u683c\u5f0f\u5316\u7684\u6587\u4ef6 -w \u628a\u6539\u5199\u540e\u7684\u5185\u5bb9\u76f4\u63a5\u5199\u5165\u5230\u6587\u4ef6\u4e2d\uff0c\u800c\u4e0d\u662f\u4f5c\u4e3a\u7ed3\u679c\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\u3002 -r \u6dfb\u52a0\u5f62\u5982\u201ca[b:len(a)] -> a[b:]\u201d\u7684\u91cd\u5199\u89c4\u5219\uff0c\u65b9\u4fbf\u505a\u6279\u91cf\u66ff\u6362 -s \u7b80\u5316\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801 -d \u663e\u793a\u683c\u5f0f\u5316\u524d\u540e\u7684diff\u800c\u4e0d\u662f\u5199\u5165\u6587\u4ef6\uff0c\u9ed8\u8ba4\u662ffalse -e \u6253\u5370\u6240\u6709\u7684\u8bed\u6cd5\u9519\u8bef\u5230\u6807\u51c6\u8f93\u51fa\u3002\u5982\u679c\u4e0d\u4f7f\u7528\u6b64\u6807\u8bb0\uff0c\u5219\u53ea\u4f1a\u6253\u5370\u4e0d\u540c\u884c\u7684\u524d10\u4e2a\u9519\u8bef\u3002 -cpuprofile \u652f\u6301\u8c03\u8bd5\u6a21\u5f0f\uff0c\u5199\u5165\u76f8\u5e94\u7684cpufile\u5230\u6307\u5b9a\u7684\u6587\u4ef6 go get \u8fd9\u4e2a\u547d\u4ee4\u662f\u7528\u6765\u52a8\u6001\u83b7\u53d6\u8fdc\u7a0b\u4ee3\u7801\u5305\u7684\uff0c\u76ee\u524d\u652f\u6301\u7684\u6709BitBucket\u3001GitHub\u3001Google Code\u548cLaunchpad\u3002\u8fd9\u4e2a\u547d\u4ee4\u5728\u5185\u90e8\u5b9e\u9645\u4e0a\u5206\u6210\u4e86\u4e24\u6b65\u64cd\u4f5c\uff1a\u7b2c\u4e00\u6b65\u662f\u4e0b\u8f7d\u6e90\u7801\u5305\uff0c\u7b2c\u4e8c\u6b65\u662f\u6267\u884c go install \u3002\u4e0b\u8f7d\u6e90\u7801\u5305\u7684go\u5de5\u5177\u4f1a\u81ea\u52a8\u6839\u636e\u4e0d\u540c\u7684\u57df\u540d\u8c03\u7528\u4e0d\u540c\u7684\u6e90\u7801\u5de5\u5177\uff0c\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\uff1a BitBucket (Mercurial Git) GitHub (Git) Google Code Project Hosting (Git, Mercurial, Subversion) Launchpad (Bazaar) \u6240\u4ee5\u4e3a\u4e86 go get \u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u5fc5\u987b\u786e\u4fdd\u5b89\u88c5\u4e86\u5408\u9002\u7684\u6e90\u7801\u7ba1\u7406\u5de5\u5177\uff0c\u5e76\u540c\u65f6\u628a\u8fd9\u4e9b\u547d\u4ee4\u52a0\u5165PATH\u4e2d\u3002\u5176\u5b9e go get \u652f\u6301\u81ea\u5b9a\u4e49\u57df\u540d\u7684\u529f\u80fd\uff0c\u5177\u4f53\u53c2\u89c1 go help remote \u3002 \u53c2\u6570\u4ecb\u7ecd\uff1a -d \u53ea\u4e0b\u8f7d\u4e0d\u5b89\u88c5 -f \u53ea\u6709\u5728\u5305\u542b\u4e86 -u \u53c2\u6570\u7684\u65f6\u5019\u624d\u6709\u6548\uff0c\u4e0d\u8ba9 -u \u53bb\u9a8c\u8bc1import\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u5df2\u7ecf\u83b7\u53d6\u4e86\uff0c\u8fd9\u5bf9\u4e8e\u672c\u5730fork\u7684\u5305\u7279\u522b\u6709\u7528 -fix \u5728\u83b7\u53d6\u6e90\u7801\u4e4b\u540e\u5148\u8fd0\u884cfix\uff0c\u7136\u540e\u518d\u53bb\u505a\u5176\u4ed6\u7684\u4e8b\u60c5 -t \u540c\u65f6\u4e5f\u4e0b\u8f7d\u9700\u8981\u4e3a\u8fd0\u884c\u6d4b\u8bd5\u6240\u9700\u8981\u7684\u5305 -u \u5f3a\u5236\u4f7f\u7528\u7f51\u7edc\u53bb\u66f4\u65b0\u5305\u548c\u5b83\u7684\u4f9d\u8d56\u5305 -v \u663e\u793a\u6267\u884c\u7684\u547d\u4ee4 \u4ece Go 1.16 \u8d77\uff0c\u4e0d\u63a8\u8350\u901a\u8fc7 go get \u6765\u5b89\u88c5\u5305\uff08\u4e3b\u8981\u662f\u8bf4\u5b89\u88c5\u53ef\u6267\u884c\u6587\u4ef6\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cgo get \u5e94\u8be5\u53ea\u662f\u7528\u6765\u4e0b\u8f7d\u5305\uff0c\u800c\u4e14\u5c06\u6765\u7248\u672c\u53ef\u80fd\u4f1a\u7ed9\u8be5\u547d\u4ee4\u59cb\u7ec8\u52a0\u4e0a -d \u6807\u5fd7\u3002 \u770b\u4e00\u4e2a\u5b9e\u9645\u7684\u4f8b\u5b50\uff1a \u5728\u672c\u5730\u901a\u8fc7\u6e90\u7801\u5b89\u88c5 Go \u7684\u8c03\u8bd5\u5668 Delve\uff0c\u53ef\u4ee5\u8fd9\u4e48\u505a\uff1a $ go get github.com/go-delve/delve/cmd/dlv \u56e0\u4e3a go get \u4f1a\u4e0b\u8f7d\u3001\u7f16\u8bd1\u5e76\u5b89\u88c5\u5305\uff08\u5982\u679c\u6709 main \u5305\uff09\u3002 Go 1.16 \u5efa\u8bae\u8fd9\u4e48\u4f7f\u7528 go get\uff1a $ go get -d github.com/go-delve/delve/cmd/dlv \u8fd9\u53ea\u4f1a\u4e0b\u8f7d delve\uff0c\u5e76\u4e0d\u4f1a\u6784\u5efa\u548c\u5b89\u88c5\uff0c\u800c\u4e14\u5c06\u6765 go get \u53ea\u4f1a\u7528\u6765\u4e0b\u8f7d\u3002\u56e0\u6b64\uff0c\u8fd8\u9700\u8981\u624b\u52a8\u6267\u884c\u5b89\u88c5\u3002 go install \u8fd9\u4e2a\u547d\u4ee4\u5728\u5185\u90e8\u5b9e\u9645\u4e0a\u5206\u6210\u4e86\u4e24\u6b65\u64cd\u4f5c\uff1a\u7b2c\u4e00\u6b65\u662f\u751f\u6210\u7ed3\u679c\u6587\u4ef6(\u53ef\u6267\u884c\u6587\u4ef6\u6216\u8005.a\u5305)\uff0c\u7b2c\u4e8c\u6b65\u4f1a\u628a\u7f16\u8bd1\u597d\u7684\u7ed3\u679c\u79fb\u5230 $GOPATH/pkg \u6216\u8005 $GOPATH/bin \u3002 go install \u4f1a\u5c06\u5305\u7f16\u8bd1\u6210 .a \u6587\u4ef6\u5e76\u5b89\u88c5\u5230 $GOPATH/pkg/$GOOS_$GOARCH \u4e0b\uff1b\u5982\u679c\u662f main \u5305\uff0c\u4f1a\u7f16\u8bd1\u5e76\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u5b89\u88c5\u5230 $GOPATH/bin \u76ee\u5f55\u4e0b\uff08\u5982\u679c\u8bbe\u7f6e\u4e86 $GOBIN \uff0c\u5219\u4f1a\u5b89\u88c5\u5230 $GOBIN \u4e0b \uff09\u3002\u8fd9\u4e5f\u662f\u548c go build \u4e0d\u540c\u4e4b\u5904\u3002 \u53c2\u6570\u652f\u6301 go build \u7684\u7f16\u8bd1\u53c2\u6570\u3002\u4e00\u822c\u53ea\u8981\u8bb0\u4f4f\u4e00\u4e2a\u53c2\u6570 -v \u5c31\u597d\u4e86\uff0c\u8fd9\u4e2a\u968f\u65f6\u968f\u5730\u7684\u53ef\u4ee5\u67e5\u770b\u5e95\u5c42\u7684\u6267\u884c\u4fe1\u606f\u3002 Module \u6ca1\u542f\u7528\u65f6\uff0c\u548c GOPATH \u5e74\u4ee3\u7684\u4f5c\u7528\u662f\u4e00\u6837\u7684\u3002\u5f53\u542f\u7528 Module \u6a21\u5f0f\u65f6\uff0cgo install \u5bf9\u666e\u901a\u5305\uff08\u975e main \u5305\uff09\u4e0d\u518d\u5b89\u88c5\uff08\u5373\u6ca1\u6709\u4e86 pkg/$GOOS_$GOARCH \uff09\uff0c\u8fd9\u548c go build \u4e00\u6837\u4e86\u3002\u800c\u5bf9\u4e8e main \u5305\uff0c\u4f1a\u5c06\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u5b89\u88c5\u5230 $GOBIN \u76ee\u5f55\u4e0b\uff08 $GOBIN \u7684\u9ed8\u8ba4\u503c\u662f $GOPATH/bin \uff0c\u5982\u679c $GOPATH \u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u662f $HOME/go/bin \uff09\u3002 \u4ece Go 1.16 \u8d77\uff0cgo install \u53ef\u4ee5\u63a5\u53d7\u5e26\u6709\u7248\u672c\u540e\u7f00\u7684\u53c2\u6570\uff08\u4f8b\u5982 go install example.com/cmd@v1.0.0\uff09\u3002\u8fd9\u5c06\u5bfc\u81f4 go install \u4ee5\u6a21\u5757\u611f\u77e5\u6a21\u5f0f\u6784\u5efa\u548c\u5b89\u88c5\u5305\uff0c\u800c\u5ffd\u7565\u5f53\u524d\u76ee\u5f55\u6216\u4efb\u4f55\u7236\u76ee\u5f55\uff08\u5982\u679c\u6709\uff09\u4e2d\u7684 go.mod \u6587\u4ef6\u3002\u8fd9\u5bf9\u4e8e\u5728\u4e0d\u5f71\u54cd\u4e3b\u6a21\u5757\u4f9d\u8d56\u6027\u7684\u60c5\u51b5\u4e0b\u5b89\u88c5\u53ef\u6267\u884c\u6587\u4ef6\u5f88\u6709\u7528\u3002 \u5982\u679c\u8981\u5b89\u88c5\u7b2c\u4e09\u65b9\u5e93\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6bd4\u5982\u4e0a\u9762\u7684 Delve\uff0c\u4f7f\u7528 go install\uff0c\u4f46\u9700\u8981\u5e26\u4e0a\u7248\u672c\u540e\u7f00\uff0c\u6bd4\u5982 @latest\uff1b \u666e\u901a\u7684\u5e93\uff0c\u7ee7\u7eed\u4f7f\u7528 go get\uff0c\u5efa\u8bae\u52a0\u4e0a -d \u6807\u5fd7\uff1b \u6ce8\u610f\uff1a\u867d\u7136 go install \u4e00\u4e2a\u666e\u901a\u7684\u7b2c\u4e09\u65b9\u5305\uff08\u4e0d\u8fc7\u5fc5\u987b\u5e26\u4e0a\u7248\u672c\u540e\u7f00\uff09\u4e5f\u4f1a\u4e0b\u8f7d\u5bf9\u5e94\u7684\u5305\uff0c\u4f46\u4e0d\u4f1a\u4fee\u6539 go.mod\uff0c\u8fd9\u548c go get \u662f\u4e0d\u540c\u7684\u3002 go test \u6267\u884c\u8fd9\u4e2a\u547d\u4ee4\uff0c\u4f1a\u81ea\u52a8\u8bfb\u53d6\u6e90\u7801\u76ee\u5f55\u4e0b\u9762\u540d\u4e3a *_test.go \u7684\u6587\u4ef6\uff0c\u751f\u6210\u5e76\u8fd0\u884c\u6d4b\u8bd5\u7528\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\u8f93\u51fa\u7684\u4fe1\u606f\u7c7b\u4f3c ok archive/tar 0.011s FAIL archive/zip 0.022s ok compress/gzip 0.033s ... \u9ed8\u8ba4\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u7684\u53c2\u6570\uff0c\u5b83\u4f1a\u81ea\u52a8\u628a\u6e90\u7801\u5305\u4e0b\u9762\u6240\u6709test\u6587\u4ef6\u6d4b\u8bd5\u5b8c\u6bd5\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5e26\u4e0a\u53c2\u6570\uff0c\u8be6\u60c5\u8bf7\u53c2\u8003 go help testflag \u8fd9\u91cc\u4ecb\u7ecd\u51e0\u4e2a\u5e38\u7528\u7684\u53c2\u6570\uff1a -bench regexp \u6267\u884c\u76f8\u5e94\u7684benchmarks\uff0c\u4f8b\u5982 -bench=. -cover \u5f00\u542f\u6d4b\u8bd5\u8986\u76d6\u7387 -run regexp \u53ea\u8fd0\u884cregexp\u5339\u914d\u7684\u51fd\u6570\uff0c\u4f8b\u5982 -run=Array \u90a3\u4e48\u5c31\u6267\u884c\u5305\u542b\u6709Array\u5f00\u5934\u7684\u51fd\u6570 -v \u663e\u793a\u6d4b\u8bd5\u7684\u8be6\u7ec6\u547d\u4ee4 go tool go tool \u4e0b\u9762\u4e0b\u8f7d\u805a\u96c6\u4e86\u5f88\u591a\u547d\u4ee4\uff0c\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u4e24\u4e2a\uff0cfix\u548cvet go tool fix . \u7528\u6765\u4fee\u590d\u4ee5\u524d\u8001\u7248\u672c\u7684\u4ee3\u7801\u5230\u65b0\u7248\u672c\uff0c\u4f8b\u5982go1\u4e4b\u524d\u8001\u7248\u672c\u7684\u4ee3\u7801\u8f6c\u5316\u5230go1,\u4f8b\u5982API\u7684\u53d8\u5316 go tool vet directory|files \u7528\u6765\u5206\u6790\u5f53\u524d\u76ee\u5f55\u7684\u4ee3\u7801\u662f\u5426\u90fd\u662f\u6b63\u786e\u7684\u4ee3\u7801,\u4f8b\u5982\u662f\u4e0d\u662f\u8c03\u7528fmt.Printf\u91cc\u9762\u7684\u53c2\u6570\u4e0d\u6b63\u786e\uff0c\u4f8b\u5982\u51fd\u6570\u91cc\u9762\u63d0\u524dreturn\u4e86\u7136\u540e\u51fa\u73b0\u4e86\u65e0\u7528\u4ee3\u7801\u4e4b\u7c7b\u7684\u3002 go generate \u8fd9\u4e2a\u547d\u4ee4\u662f\u4eceGo1.4\u5f00\u59cb\u624d\u8bbe\u8ba1\u7684\uff0c\u7528\u4e8e\u5728\u7f16\u8bd1\u524d\u81ea\u52a8\u5316\u751f\u6210\u67d0\u7c7b\u4ee3\u7801\u3002 go generate \u548c go build \u662f\u5b8c\u5168\u4e0d\u4e00\u6837\u7684\u547d\u4ee4\uff0c\u901a\u8fc7\u5206\u6790\u6e90\u7801\u4e2d\u7279\u6b8a\u7684\u6ce8\u91ca\uff0c\u7136\u540e\u6267\u884c\u76f8\u5e94\u7684\u547d\u4ee4\u3002\u8fd9\u4e9b\u547d\u4ee4\u90fd\u662f\u5f88\u660e\u786e\u7684\uff0c\u6ca1\u6709\u4efb\u4f55\u7684\u4f9d\u8d56\u5728\u91cc\u9762\u3002\u800c\u4e14\u5927\u5bb6\u5728\u7528\u8fd9\u4e2a\u4e4b\u524d\u5fc3\u91cc\u9762\u4e00\u5b9a\u8981\u6709\u4e00\u4e2a\u7406\u5ff5\uff0c\u8fd9\u4e2a go generate \u662f\u7ed9\u5f00\u53d1\u8005\u7528\u7684\uff0c\u4e0d\u662f\u7ed9\u4f7f\u7528\u8fd9\u4e2a\u5305\u7684\u4eba\u7528\u7684\uff0c\u662f\u65b9\u4fbf\u751f\u6210\u4e00\u4e9b\u4ee3\u7801\u7684\u3002 \u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u4f8b\u5982\u7ecf\u5e38\u4f1a\u4f7f\u7528 yacc \u6765\u751f\u6210\u4ee3\u7801\uff0c\u90a3\u4e48\u5e38\u7528\u8fd9\u6837\u7684\u547d\u4ee4\uff1a go tool yacc -o gopher.go -p parser gopher.y -o \u6307\u5b9a\u4e86\u8f93\u51fa\u7684\u6587\u4ef6\u540d\uff0c -p\u6307\u5b9a\u4e86package\u7684\u540d\u79f0\uff0c\u8fd9\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u547d\u4ee4\uff0c\u5982\u679c\u60f3\u8ba9 go generate \u6765\u89e6\u53d1\u8fd9\u4e2a\u547d\u4ee4\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728\u5f53\u524d\u76ee\u5f55\u7684\u4efb\u610f\u4e00\u4e2a xxx.go \u6587\u4ef6\u91cc\u9762\u7684\u4efb\u610f\u4f4d\u7f6e\u589e\u52a0\u4e00\u884c\u5982\u4e0b\u7684\u6ce8\u91ca\uff1a //go:generate go tool yacc -o gopher.go -p parser gopher.y \u8fd9\u91cc\u6ce8\u610f\u4e86\uff0c //go:generate \u662f\u6ca1\u6709\u4efb\u4f55\u7a7a\u683c\u7684\uff0c\u8fd9\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u56fa\u5b9a\u7684\u683c\u5f0f\uff0c\u5728\u626b\u63cf\u6e90\u7801\u6587\u4ef6\u7684\u65f6\u5019\u5c31\u662f\u6839\u636e\u8fd9\u4e2a\u6765\u5224\u65ad\u7684\u3002 \u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7684\u547d\u4ee4\u6765\u751f\u6210\uff0c\u7f16\u8bd1\uff0c\u6d4b\u8bd5\u3002\u5982\u679c gopher.y \u6587\u4ef6\u6709\u4fee\u6539\uff0c\u90a3\u4e48\u5c31\u91cd\u65b0\u6267\u884c go generate \u91cd\u65b0\u751f\u6210\u6587\u4ef6\u5c31\u597d\u3002 $ go generate $ go build $ go test godoc \u5728Go1.2\u7248\u672c\u4e4b\u524d\u8fd8\u652f\u6301 go doc \u547d\u4ee4\uff0c\u4f46\u662f\u4e4b\u540e\u5168\u90e8\u79fb\u5230\u4e86godoc\u8fd9\u4e2a\u547d\u4ee4\u4e0b\uff0c\u9700\u8981\u8fd9\u6837\u5b89\u88c5 go get golang.org/x/tools/cmd/godoc \u5f88\u591a\u4eba\u8bf4go\u4e0d\u9700\u8981\u4efb\u4f55\u7684\u7b2c\u4e09\u65b9\u6587\u6863\uff0c\u4f8b\u5982chm\u624b\u518c\u4e4b\u7c7b\u7684\uff0c\u56e0\u4e3a\u5b83\u5185\u90e8\u5c31\u6709\u4e00\u4e2a\u5f88\u5f3a\u5927\u7684\u6587\u6863\u5de5\u5177\u3002 \u5982\u4f55\u67e5\u770b\u76f8\u5e94package\u7684\u6587\u6863\u5462\uff1f \u4f8b\u5982builtin\u5305\uff0c\u90a3\u4e48\u6267\u884c godoc builtin \u5982\u679c\u662fhttp\u5305\uff0c\u90a3\u4e48\u6267\u884c godoc net/http \u67e5\u770b\u67d0\u4e00\u4e2a\u5305\u91cc\u9762\u7684\u51fd\u6570\uff0c\u90a3\u4e48\u6267\u884c godoc fmt Printf \u4e5f\u53ef\u4ee5\u67e5\u770b\u76f8\u5e94\u7684\u4ee3\u7801\uff0c\u6267\u884c godoc -src fmt Printf \u901a\u8fc7\u547d\u4ee4\u5728\u547d\u4ee4\u884c\u6267\u884c godoc -http=:\u7aef\u53e3\u53f7 \u6bd4\u5982 godoc -http=:8080 \u3002\u7136\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 127.0.0.1:8080 \uff0c\u5c06\u4f1a\u770b\u5230\u4e00\u4e2agolang.org\u7684\u672c\u5730copy\u7248\u672c\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u67e5\u8be2pkg\u6587\u6863\u7b49\u5176\u5b83\u5185\u5bb9\u3002\u5982\u679c\u8bbe\u7f6e\u4e86GOPATH\uff0c\u5728pkg\u5206\u7c7b\u4e0b\uff0c\u4e0d\u4f46\u4f1a\u5217\u51fa\u6807\u51c6\u5305\u7684\u6587\u6863\uff0c\u8fd8\u4f1a\u5217\u51fa\u672c\u5730 GOPATH \u4e2d\u6240\u6709\u9879\u76ee\u7684\u76f8\u5173\u6587\u6863\uff0c\u8fd9\u5bf9\u4e8e\u7ecf\u5e38\u88ab\u5899\u7684\u7528\u6237\u6765\u8bf4\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002 \u5176\u5b83\u547d\u4ee4 go\u8fd8\u63d0\u4f9b\u4e86\u5176\u5b83\u5f88\u591a\u7684\u5de5\u5177\uff0c\u4f8b\u5982\u4e0b\u9762\u7684\u8fd9\u4e9b\u5de5\u5177 go version \u67e5\u770bgo\u5f53\u524d\u7684\u7248\u672c go env \u67e5\u770b\u5f53\u524dgo\u7684\u73af\u5883\u53d8\u91cf go list \u5217\u51fa\u5f53\u524d\u5168\u90e8\u5b89\u88c5\u7684package go run \u7f16\u8bd1\u5e76\u8fd0\u884cGo\u7a0b\u5e8f","title":"Go\u5e38\u7528\u547d\u4ee4"},{"location":"golang/docs/Go%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#go","text":"Go\u8bed\u8a00\u81ea\u5e26\u6709\u4e00\u5957\u5b8c\u6574\u7684\u547d\u4ee4\u64cd\u4f5c\u5de5\u5177\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c go \u6765\u67e5\u770b\u5b83\u4eec","title":"Go\u5e38\u7528\u547d\u4ee4"},{"location":"golang/docs/Go%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#go-build","text":"\u8fd9\u4e2a\u547d\u4ee4\u4e3b\u8981\u7528\u4e8e\u7f16\u8bd1\u4ee3\u7801\u3002\u5728\u5305\u7684\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\uff0c\u82e5\u6709\u5fc5\u8981\uff0c\u4f1a\u540c\u65f6\u7f16\u8bd1\u4e0e\u4e4b\u76f8\u5173\u8054\u7684\u5305\u3002 \u5982\u679c\u662f\u666e\u901a\u5305\uff0c\u5c31\u50cf\u7f16\u5199\u7684 mymath \u5305\u90a3\u6837\uff0c\u5f53\u6267\u884c go build \u4e4b\u540e\uff0c\u5b83\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u6587\u4ef6\u3002\u5982\u679c\u9700\u8981\u5728 $GOPATH/pkg \u4e0b\u751f\u6210\u76f8\u5e94\u7684\u6587\u4ef6\uff0c\u90a3\u5c31\u5f97\u6267\u884c go install \u3002 \u5982\u679c\u662f main \u5305\uff0c\u5f53\u6267\u884c go build \u4e4b\u540e\uff0c\u5b83\u5c31\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u3002\u5982\u679c\u9700\u8981\u5728 $GOPATH/bin \u4e0b\u751f\u6210\u76f8\u5e94\u7684\u6587\u4ef6\uff0c\u9700\u8981\u6267\u884c go install \uff0c\u6216\u8005\u4f7f\u7528 go build -o \u8def\u5f84/a.exe \u3002 \u5982\u679c\u67d0\u4e2a\u9879\u76ee\u6587\u4ef6\u5939\u4e0b\u6709\u591a\u4e2a\u6587\u4ef6\uff0c\u800c\u53ea\u60f3\u7f16\u8bd1\u67d0\u4e2a\u6587\u4ef6\uff0c\u5c31\u53ef\u5728 go build \u4e4b\u540e\u52a0\u4e0a\u6587\u4ef6\u540d\uff0c\u4f8b\u5982 go build a.go \uff1b go build \u547d\u4ee4\u9ed8\u8ba4\u4f1a\u7f16\u8bd1\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709go\u6587\u4ef6\u3002 \u4e5f\u53ef\u4ee5\u6307\u5b9a\u7f16\u8bd1\u8f93\u51fa\u7684\u6587\u4ef6\u540d\u3002\u4f8b\u59821.2\u8282\u4e2d\u7684 mathapp \u5e94\u7528\uff0c\u53ef\u4ee5\u6307\u5b9a go build -o astaxie.exe \uff0c\u9ed8\u8ba4\u60c5\u51b5\u662fpackage\u540d(\u975emain\u5305)\uff0c\u6216\u8005\u662f\u7b2c\u4e00\u4e2a\u6e90\u6587\u4ef6\u7684\u6587\u4ef6\u540d(main\u5305)\u3002 \uff08\u6ce8\uff1a\u5b9e\u9645\u4e0a\uff0cpackage\u540d\u5728Go\u8bed\u8a00\u89c4\u8303\u4e2d\u6307\u4ee3\u7801\u4e2d\u201cpackage\u201d\u540e\u4f7f\u7528\u7684\u540d\u79f0\uff0c\u6b64\u540d\u79f0\u53ef\u4ee5\u4e0e\u6587\u4ef6\u5939\u540d\u4e0d\u540c\u3002\u9ed8\u8ba4\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u540d\u662f\u6587\u4ef6\u5939\u540d\u3002\uff09 go build\u4f1a\u5ffd\u7565\u76ee\u5f55\u4e0b\u4ee5\u201c_\u201d\u6216\u201c.\u201d\u5f00\u5934\u7684go\u6587\u4ef6\u3002 \u5982\u679c\u6e90\u4ee3\u7801\u9488\u5bf9\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u4e0d\u540c\u7684\u5904\u7406\uff0c\u90a3\u4e48\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u540e\u7f00\u6765\u547d\u540d\u6587\u4ef6\u3002\u4f8b\u5982\u6709\u4e00\u4e2a\u8bfb\u53d6\u6570\u7ec4\u7684\u7a0b\u5e8f\uff0c\u5b83\u5bf9\u4e8e\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u53ef\u80fd\u6709\u5982\u4e0b\u51e0\u4e2a\u6e90\u6587\u4ef6\uff1a array_linux.go array_darwin.go array_windows.go array_freebsd.go go build \u7684\u65f6\u5019\u4f1a\u9009\u62e9\u6027\u5730\u7f16\u8bd1\u4ee5\u7cfb\u7edf\u540d\u7ed3\u5c3e\u7684\u6587\u4ef6\uff08Linux\u3001Darwin\u3001Windows\u3001Freebsd\uff09\u3002\u4f8b\u5982Linux\u7cfb\u7edf\u4e0b\u9762\u7f16\u8bd1\u53ea\u4f1a\u9009\u62e9array_linux.go\u6587\u4ef6\uff0c\u5176\u5b83\u7cfb\u7edf\u547d\u540d\u540e\u7f00\u6587\u4ef6\u5168\u90e8\u5ffd\u7565\u3002 \u53c2\u6570\u7684\u4ecb\u7ecd -o \u6307\u5b9a\u8f93\u51fa\u7684\u6587\u4ef6\u540d\uff0c\u53ef\u4ee5\u5e26\u4e0a\u8def\u5f84\uff0c\u4f8b\u5982 go build -o a/b/c -i \u5b89\u88c5\u76f8\u5e94\u7684\u5305\uff0c\u7f16\u8bd1+ go install -a \u66f4\u65b0\u5168\u90e8\u5df2\u7ecf\u662f\u6700\u65b0\u7684\u5305\u7684\uff0c\u4f46\u662f\u5bf9\u6807\u51c6\u5305\u4e0d\u9002\u7528 -n \u628a\u9700\u8981\u6267\u884c\u7684\u7f16\u8bd1\u547d\u4ee4\u6253\u5370\u51fa\u6765\uff0c\u4f46\u662f\u4e0d\u6267\u884c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u77e5\u9053\u5e95\u5c42\u662f\u5982\u4f55\u8fd0\u884c\u7684 -p n \u6307\u5b9a\u53ef\u4ee5\u5e76\u884c\u53ef\u8fd0\u884c\u7684\u7f16\u8bd1\u6570\u76ee\uff0c\u9ed8\u8ba4\u662fCPU\u6570\u76ee -race \u5f00\u542f\u7f16\u8bd1\u7684\u65f6\u5019\u81ea\u52a8\u68c0\u6d4b\u6570\u636e\u7ade\u4e89\u7684\u60c5\u51b5\uff0c\u76ee\u524d\u53ea\u652f\u630164\u4f4d\u7684\u673a\u5668 -v \u6253\u5370\u51fa\u6765\u6b63\u5728\u7f16\u8bd1\u7684\u5305\u540d -work \u6253\u5370\u51fa\u6765\u7f16\u8bd1\u65f6\u5019\u7684\u4e34\u65f6\u6587\u4ef6\u5939\u540d\u79f0\uff0c\u5e76\u4e14\u5982\u679c\u5df2\u7ecf\u5b58\u5728\u7684\u8bdd\u5c31\u4e0d\u8981\u5220\u9664 -x \u6253\u5370\u51fa\u6765\u6267\u884c\u7684\u547d\u4ee4\uff0c\u5176\u5b9e\u5c31\u662f\u548c -n \u7684\u7ed3\u679c\u7c7b\u4f3c\uff0c\u53ea\u662f\u8fd9\u4e2a\u4f1a\u6267\u884c -ccflags 'arg list' \u4f20\u9012\u53c2\u6570\u7ed95c, 6c, 8c \u8c03\u7528 -compiler name \u6307\u5b9a\u76f8\u5e94\u7684\u7f16\u8bd1\u5668\uff0cgccgo\u8fd8\u662fgc -gccgoflags 'arg list' \u4f20\u9012\u53c2\u6570\u7ed9gccgo\u7f16\u8bd1\u8fde\u63a5\u8c03\u7528 -gcflags 'arg list' \u4f20\u9012\u53c2\u6570\u7ed95g, 6g, 8g \u8c03\u7528 -installsuffix suffix \u4e3a\u4e86\u548c\u9ed8\u8ba4\u7684\u5b89\u88c5\u5305\u533a\u522b\u5f00\u6765\uff0c\u91c7\u7528\u8fd9\u4e2a\u524d\u7f00\u6765\u91cd\u65b0\u5b89\u88c5\u90a3\u4e9b\u4f9d\u8d56\u7684\u5305\uff0c -race \u7684\u65f6\u5019\u9ed8\u8ba4\u5df2\u7ecf\u662f -installsuffix race ,\u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7 -n \u547d\u4ee4\u6765\u9a8c\u8bc1 -ldflags 'flag list' \u4f20\u9012\u53c2\u6570\u7ed95l, 6l, 8l \u8c03\u7528 -tags 'tag list' \u8bbe\u7f6e\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u53ef\u4ee5\u9002\u914d\u7684\u90a3\u4e9btag\uff0c\u8be6\u7ec6\u7684tag\u9650\u5236\u53c2\u8003\u91cc\u9762\u7684 Build Constraints","title":"go build"},{"location":"golang/docs/Go%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#go-clean","text":"\u8fd9\u4e2a\u547d\u4ee4\u662f\u7528\u6765\u79fb\u9664\u5f53\u524d\u6e90\u7801\u5305\u548c\u5173\u8054\u6e90\u7801\u5305\u91cc\u9762\u7f16\u8bd1\u751f\u6210\u7684\u6587\u4ef6\u3002\u8fd9\u4e9b\u6587\u4ef6\u5305\u62ec _obj/ \u65e7\u7684object\u76ee\u5f55\uff0c\u7531Makefiles\u9057\u7559 _test/ \u65e7\u7684test\u76ee\u5f55\uff0c\u7531Makefiles\u9057\u7559 _testmain.go \u65e7\u7684gotest\u6587\u4ef6\uff0c\u7531Makefiles\u9057\u7559 test.out \u65e7\u7684test\u8bb0\u5f55\uff0c\u7531Makefiles\u9057\u7559 build.out \u65e7\u7684test\u8bb0\u5f55\uff0c\u7531Makefiles\u9057\u7559 *.[568ao] object\u6587\u4ef6\uff0c\u7531Makefiles\u9057\u7559 DIR(.exe) \u7531go build\u4ea7\u751f DIR.test(.exe) \u7531go test -c\u4ea7\u751f MAINFILE(.exe) \u7531go build MAINFILE.go\u4ea7\u751f *.so \u7531 SWIG \u4ea7\u751f \u4e00\u822c\u90fd\u662f\u5229\u7528\u8fd9\u4e2a\u547d\u4ee4\u6e05\u9664\u7f16\u8bd1\u6587\u4ef6\uff0c\u7136\u540egithub\u9012\u4ea4\u6e90\u7801\uff0c\u5728\u672c\u673a\u6d4b\u8bd5\u7684\u65f6\u5019\u8fd9\u4e9b\u7f16\u8bd1\u6587\u4ef6\u90fd\u662f\u548c\u7cfb\u7edf\u76f8\u5173\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u6e90\u7801\u7ba1\u7406\u6765\u8bf4\u6ca1\u5fc5\u8981\u3002 $ go clean -i -n cd /Users/astaxie/develop/gopath/src/mathapp rm -f mathapp mathapp.exe mathapp.test mathapp.test.exe app app.exe rm -f /Users/astaxie/develop/gopath/bin/mathapp \u53c2\u6570\u4ecb\u7ecd -i \u6e05\u9664\u5173\u8054\u7684\u5b89\u88c5\u7684\u5305\u548c\u53ef\u8fd0\u884c\u6587\u4ef6\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7go install\u5b89\u88c5\u7684\u6587\u4ef6 -n \u628a\u9700\u8981\u6267\u884c\u7684\u6e05\u9664\u547d\u4ee4\u6253\u5370\u51fa\u6765\uff0c\u4f46\u662f\u4e0d\u6267\u884c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u77e5\u9053\u5e95\u5c42\u662f\u5982\u4f55\u8fd0\u884c\u7684 -r \u5faa\u73af\u7684\u6e05\u9664\u5728import\u4e2d\u5f15\u5165\u7684\u5305 -x \u6253\u5370\u51fa\u6765\u6267\u884c\u7684\u8be6\u7ec6\u547d\u4ee4\uff0c\u5176\u5b9e\u5c31\u662f -n \u6253\u5370\u7684\u6267\u884c\u7248\u672c","title":"go clean"},{"location":"golang/docs/Go%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#go-fmt","text":"\u6709\u8fc7C/C++\u7ecf\u9a8c\u7684\u8bfb\u8005\u4f1a\u77e5\u9053,\u4e00\u4e9b\u4eba\u7ecf\u5e38\u4e3a\u4ee3\u7801\u91c7\u53d6K&R\u98ce\u683c\u8fd8\u662fANSI\u98ce\u683c\u800c\u4e89\u8bba\u4e0d\u4f11\u3002\u5728go\u4e2d\uff0c\u4ee3\u7801\u5219\u6709\u6807\u51c6\u7684\u98ce\u683c\u3002\u7531\u4e8e\u4e4b\u524d\u5df2\u7ecf\u6709\u7684\u4e00\u4e9b\u4e60\u60ef\u6216\u5176\u5b83\u7684\u539f\u56e0\u5e38\u5c06\u4ee3\u7801\u5199\u6210ANSI\u98ce\u683c\u6216\u8005\u5176\u5b83\u66f4\u5408\u9002\u81ea\u5df1\u7684\u683c\u5f0f\uff0c\u8fd9\u5c06\u4e3a\u4eba\u4eec\u5728\u9605\u8bfb\u522b\u4eba\u7684\u4ee3\u7801\u65f6\u6dfb\u52a0\u4e0d\u5fc5\u8981\u7684\u8d1f\u62c5\uff0c\u6240\u4ee5go\u5f3a\u5236\u4e86\u4ee3\u7801\u683c\u5f0f\uff08\u6bd4\u5982\u5de6\u5927\u62ec\u53f7\u5fc5\u987b\u653e\u5728\u884c\u5c3e\uff09\uff0c\u4e0d\u6309\u7167\u6b64\u683c\u5f0f\u7684\u4ee3\u7801\u5c06\u4e0d\u80fd\u7f16\u8bd1\u901a\u8fc7\uff0c\u4e3a\u4e86\u51cf\u5c11\u6d6a\u8d39\u5728\u6392\u7248\u4e0a\u7684\u65f6\u95f4\uff0cgo\u5de5\u5177\u96c6\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a go fmt \u547d\u4ee4 \u5b83\u53ef\u4ee5\u683c\u5f0f\u5316\u5199\u597d\u7684\u4ee3\u7801\u6587\u4ef6\uff0c\u5199\u4ee3\u7801\u7684\u65f6\u5019\u4e0d\u9700\u8981\u5173\u5fc3\u683c\u5f0f\uff0c\u53ea\u9700\u8981\u5728\u5199\u5b8c\u4e4b\u540e\u6267\u884c go fmt <\u6587\u4ef6\u540d>.go \uff0c\u4ee3\u7801\u5c31\u88ab\u4fee\u6539\u6210\u4e86\u6807\u51c6\u683c\u5f0f\uff0c\u4f46\u662f\u5e73\u5e38\u5f88\u5c11\u7528\u5230\u8fd9\u4e2a\u547d\u4ee4\uff0c\u56e0\u4e3a\u5f00\u53d1\u5de5\u5177\u91cc\u9762\u4e00\u822c\u90fd\u5e26\u4e86\u4fdd\u5b58\u65f6\u5019\u81ea\u52a8\u683c\u5f0f\u5316\u529f\u80fd\uff0c\u8fd9\u4e2a\u529f\u80fd\u5176\u5b9e\u5728\u5e95\u5c42\u5c31\u662f\u8c03\u7528\u4e86 go fmt \u3002\u63a5\u4e0b\u6765\u5c06\u8bb2\u8ff0\u4e24\u4e2a\u5de5\u5177\uff0c\u8fd9\u4e24\u4e2a\u5de5\u5177\u90fd\u81ea\u5e26\u4e86\u4fdd\u5b58\u6587\u4ef6\u65f6\u81ea\u52a8\u5316 go fmt \u529f\u80fd\u3002 \u4f7f\u7528go fmt\u547d\u4ee4\uff0c\u5176\u5b9e\u662f\u8c03\u7528\u4e86gofmt\uff0c\u800c\u4e14\u9700\u8981\u53c2\u6570-w\uff0c\u5426\u5219\u683c\u5f0f\u5316\u7ed3\u679c\u4e0d\u4f1a\u5199\u5165\u6587\u4ef6\u3002gofmt -w -l src\uff0c\u53ef\u4ee5\u683c\u5f0f\u5316\u6574\u4e2a\u9879\u76ee\u3002 \u6240\u4ee5go fmt\u662fgofmt\u7684\u4e0a\u5c42\u4e00\u4e2a\u5305\u88c5\u7684\u547d\u4ee4\uff0c\u60f3\u8981\u66f4\u591a\u7684\u4e2a\u6027\u5316\u7684\u683c\u5f0f\u5316\u53ef\u4ee5\u53c2\u8003 go fmt gofmt\u7684\u53c2\u6570\u4ecb\u7ecd -l \u663e\u793a\u90a3\u4e9b\u9700\u8981\u683c\u5f0f\u5316\u7684\u6587\u4ef6 -w \u628a\u6539\u5199\u540e\u7684\u5185\u5bb9\u76f4\u63a5\u5199\u5165\u5230\u6587\u4ef6\u4e2d\uff0c\u800c\u4e0d\u662f\u4f5c\u4e3a\u7ed3\u679c\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\u3002 -r \u6dfb\u52a0\u5f62\u5982\u201ca[b:len(a)] -> a[b:]\u201d\u7684\u91cd\u5199\u89c4\u5219\uff0c\u65b9\u4fbf\u505a\u6279\u91cf\u66ff\u6362 -s \u7b80\u5316\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801 -d \u663e\u793a\u683c\u5f0f\u5316\u524d\u540e\u7684diff\u800c\u4e0d\u662f\u5199\u5165\u6587\u4ef6\uff0c\u9ed8\u8ba4\u662ffalse -e \u6253\u5370\u6240\u6709\u7684\u8bed\u6cd5\u9519\u8bef\u5230\u6807\u51c6\u8f93\u51fa\u3002\u5982\u679c\u4e0d\u4f7f\u7528\u6b64\u6807\u8bb0\uff0c\u5219\u53ea\u4f1a\u6253\u5370\u4e0d\u540c\u884c\u7684\u524d10\u4e2a\u9519\u8bef\u3002 -cpuprofile \u652f\u6301\u8c03\u8bd5\u6a21\u5f0f\uff0c\u5199\u5165\u76f8\u5e94\u7684cpufile\u5230\u6307\u5b9a\u7684\u6587\u4ef6","title":"go fmt"},{"location":"golang/docs/Go%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#go-get","text":"\u8fd9\u4e2a\u547d\u4ee4\u662f\u7528\u6765\u52a8\u6001\u83b7\u53d6\u8fdc\u7a0b\u4ee3\u7801\u5305\u7684\uff0c\u76ee\u524d\u652f\u6301\u7684\u6709BitBucket\u3001GitHub\u3001Google Code\u548cLaunchpad\u3002\u8fd9\u4e2a\u547d\u4ee4\u5728\u5185\u90e8\u5b9e\u9645\u4e0a\u5206\u6210\u4e86\u4e24\u6b65\u64cd\u4f5c\uff1a\u7b2c\u4e00\u6b65\u662f\u4e0b\u8f7d\u6e90\u7801\u5305\uff0c\u7b2c\u4e8c\u6b65\u662f\u6267\u884c go install \u3002\u4e0b\u8f7d\u6e90\u7801\u5305\u7684go\u5de5\u5177\u4f1a\u81ea\u52a8\u6839\u636e\u4e0d\u540c\u7684\u57df\u540d\u8c03\u7528\u4e0d\u540c\u7684\u6e90\u7801\u5de5\u5177\uff0c\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\uff1a BitBucket (Mercurial Git) GitHub (Git) Google Code Project Hosting (Git, Mercurial, Subversion) Launchpad (Bazaar) \u6240\u4ee5\u4e3a\u4e86 go get \u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u5fc5\u987b\u786e\u4fdd\u5b89\u88c5\u4e86\u5408\u9002\u7684\u6e90\u7801\u7ba1\u7406\u5de5\u5177\uff0c\u5e76\u540c\u65f6\u628a\u8fd9\u4e9b\u547d\u4ee4\u52a0\u5165PATH\u4e2d\u3002\u5176\u5b9e go get \u652f\u6301\u81ea\u5b9a\u4e49\u57df\u540d\u7684\u529f\u80fd\uff0c\u5177\u4f53\u53c2\u89c1 go help remote \u3002 \u53c2\u6570\u4ecb\u7ecd\uff1a -d \u53ea\u4e0b\u8f7d\u4e0d\u5b89\u88c5 -f \u53ea\u6709\u5728\u5305\u542b\u4e86 -u \u53c2\u6570\u7684\u65f6\u5019\u624d\u6709\u6548\uff0c\u4e0d\u8ba9 -u \u53bb\u9a8c\u8bc1import\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u5df2\u7ecf\u83b7\u53d6\u4e86\uff0c\u8fd9\u5bf9\u4e8e\u672c\u5730fork\u7684\u5305\u7279\u522b\u6709\u7528 -fix \u5728\u83b7\u53d6\u6e90\u7801\u4e4b\u540e\u5148\u8fd0\u884cfix\uff0c\u7136\u540e\u518d\u53bb\u505a\u5176\u4ed6\u7684\u4e8b\u60c5 -t \u540c\u65f6\u4e5f\u4e0b\u8f7d\u9700\u8981\u4e3a\u8fd0\u884c\u6d4b\u8bd5\u6240\u9700\u8981\u7684\u5305 -u \u5f3a\u5236\u4f7f\u7528\u7f51\u7edc\u53bb\u66f4\u65b0\u5305\u548c\u5b83\u7684\u4f9d\u8d56\u5305 -v \u663e\u793a\u6267\u884c\u7684\u547d\u4ee4 \u4ece Go 1.16 \u8d77\uff0c\u4e0d\u63a8\u8350\u901a\u8fc7 go get \u6765\u5b89\u88c5\u5305\uff08\u4e3b\u8981\u662f\u8bf4\u5b89\u88c5\u53ef\u6267\u884c\u6587\u4ef6\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cgo get \u5e94\u8be5\u53ea\u662f\u7528\u6765\u4e0b\u8f7d\u5305\uff0c\u800c\u4e14\u5c06\u6765\u7248\u672c\u53ef\u80fd\u4f1a\u7ed9\u8be5\u547d\u4ee4\u59cb\u7ec8\u52a0\u4e0a -d \u6807\u5fd7\u3002 \u770b\u4e00\u4e2a\u5b9e\u9645\u7684\u4f8b\u5b50\uff1a \u5728\u672c\u5730\u901a\u8fc7\u6e90\u7801\u5b89\u88c5 Go \u7684\u8c03\u8bd5\u5668 Delve\uff0c\u53ef\u4ee5\u8fd9\u4e48\u505a\uff1a $ go get github.com/go-delve/delve/cmd/dlv \u56e0\u4e3a go get \u4f1a\u4e0b\u8f7d\u3001\u7f16\u8bd1\u5e76\u5b89\u88c5\u5305\uff08\u5982\u679c\u6709 main \u5305\uff09\u3002 Go 1.16 \u5efa\u8bae\u8fd9\u4e48\u4f7f\u7528 go get\uff1a $ go get -d github.com/go-delve/delve/cmd/dlv \u8fd9\u53ea\u4f1a\u4e0b\u8f7d delve\uff0c\u5e76\u4e0d\u4f1a\u6784\u5efa\u548c\u5b89\u88c5\uff0c\u800c\u4e14\u5c06\u6765 go get \u53ea\u4f1a\u7528\u6765\u4e0b\u8f7d\u3002\u56e0\u6b64\uff0c\u8fd8\u9700\u8981\u624b\u52a8\u6267\u884c\u5b89\u88c5\u3002","title":"go get"},{"location":"golang/docs/Go%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#go-install","text":"\u8fd9\u4e2a\u547d\u4ee4\u5728\u5185\u90e8\u5b9e\u9645\u4e0a\u5206\u6210\u4e86\u4e24\u6b65\u64cd\u4f5c\uff1a\u7b2c\u4e00\u6b65\u662f\u751f\u6210\u7ed3\u679c\u6587\u4ef6(\u53ef\u6267\u884c\u6587\u4ef6\u6216\u8005.a\u5305)\uff0c\u7b2c\u4e8c\u6b65\u4f1a\u628a\u7f16\u8bd1\u597d\u7684\u7ed3\u679c\u79fb\u5230 $GOPATH/pkg \u6216\u8005 $GOPATH/bin \u3002 go install \u4f1a\u5c06\u5305\u7f16\u8bd1\u6210 .a \u6587\u4ef6\u5e76\u5b89\u88c5\u5230 $GOPATH/pkg/$GOOS_$GOARCH \u4e0b\uff1b\u5982\u679c\u662f main \u5305\uff0c\u4f1a\u7f16\u8bd1\u5e76\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u5b89\u88c5\u5230 $GOPATH/bin \u76ee\u5f55\u4e0b\uff08\u5982\u679c\u8bbe\u7f6e\u4e86 $GOBIN \uff0c\u5219\u4f1a\u5b89\u88c5\u5230 $GOBIN \u4e0b \uff09\u3002\u8fd9\u4e5f\u662f\u548c go build \u4e0d\u540c\u4e4b\u5904\u3002 \u53c2\u6570\u652f\u6301 go build \u7684\u7f16\u8bd1\u53c2\u6570\u3002\u4e00\u822c\u53ea\u8981\u8bb0\u4f4f\u4e00\u4e2a\u53c2\u6570 -v \u5c31\u597d\u4e86\uff0c\u8fd9\u4e2a\u968f\u65f6\u968f\u5730\u7684\u53ef\u4ee5\u67e5\u770b\u5e95\u5c42\u7684\u6267\u884c\u4fe1\u606f\u3002 Module \u6ca1\u542f\u7528\u65f6\uff0c\u548c GOPATH \u5e74\u4ee3\u7684\u4f5c\u7528\u662f\u4e00\u6837\u7684\u3002\u5f53\u542f\u7528 Module \u6a21\u5f0f\u65f6\uff0cgo install \u5bf9\u666e\u901a\u5305\uff08\u975e main \u5305\uff09\u4e0d\u518d\u5b89\u88c5\uff08\u5373\u6ca1\u6709\u4e86 pkg/$GOOS_$GOARCH \uff09\uff0c\u8fd9\u548c go build \u4e00\u6837\u4e86\u3002\u800c\u5bf9\u4e8e main \u5305\uff0c\u4f1a\u5c06\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u5b89\u88c5\u5230 $GOBIN \u76ee\u5f55\u4e0b\uff08 $GOBIN \u7684\u9ed8\u8ba4\u503c\u662f $GOPATH/bin \uff0c\u5982\u679c $GOPATH \u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u662f $HOME/go/bin \uff09\u3002 \u4ece Go 1.16 \u8d77\uff0cgo install \u53ef\u4ee5\u63a5\u53d7\u5e26\u6709\u7248\u672c\u540e\u7f00\u7684\u53c2\u6570\uff08\u4f8b\u5982 go install example.com/cmd@v1.0.0\uff09\u3002\u8fd9\u5c06\u5bfc\u81f4 go install \u4ee5\u6a21\u5757\u611f\u77e5\u6a21\u5f0f\u6784\u5efa\u548c\u5b89\u88c5\u5305\uff0c\u800c\u5ffd\u7565\u5f53\u524d\u76ee\u5f55\u6216\u4efb\u4f55\u7236\u76ee\u5f55\uff08\u5982\u679c\u6709\uff09\u4e2d\u7684 go.mod \u6587\u4ef6\u3002\u8fd9\u5bf9\u4e8e\u5728\u4e0d\u5f71\u54cd\u4e3b\u6a21\u5757\u4f9d\u8d56\u6027\u7684\u60c5\u51b5\u4e0b\u5b89\u88c5\u53ef\u6267\u884c\u6587\u4ef6\u5f88\u6709\u7528\u3002 \u5982\u679c\u8981\u5b89\u88c5\u7b2c\u4e09\u65b9\u5e93\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6bd4\u5982\u4e0a\u9762\u7684 Delve\uff0c\u4f7f\u7528 go install\uff0c\u4f46\u9700\u8981\u5e26\u4e0a\u7248\u672c\u540e\u7f00\uff0c\u6bd4\u5982 @latest\uff1b \u666e\u901a\u7684\u5e93\uff0c\u7ee7\u7eed\u4f7f\u7528 go get\uff0c\u5efa\u8bae\u52a0\u4e0a -d \u6807\u5fd7\uff1b \u6ce8\u610f\uff1a\u867d\u7136 go install \u4e00\u4e2a\u666e\u901a\u7684\u7b2c\u4e09\u65b9\u5305\uff08\u4e0d\u8fc7\u5fc5\u987b\u5e26\u4e0a\u7248\u672c\u540e\u7f00\uff09\u4e5f\u4f1a\u4e0b\u8f7d\u5bf9\u5e94\u7684\u5305\uff0c\u4f46\u4e0d\u4f1a\u4fee\u6539 go.mod\uff0c\u8fd9\u548c go get \u662f\u4e0d\u540c\u7684\u3002","title":"go install"},{"location":"golang/docs/Go%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#go-test","text":"\u6267\u884c\u8fd9\u4e2a\u547d\u4ee4\uff0c\u4f1a\u81ea\u52a8\u8bfb\u53d6\u6e90\u7801\u76ee\u5f55\u4e0b\u9762\u540d\u4e3a *_test.go \u7684\u6587\u4ef6\uff0c\u751f\u6210\u5e76\u8fd0\u884c\u6d4b\u8bd5\u7528\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\u8f93\u51fa\u7684\u4fe1\u606f\u7c7b\u4f3c ok archive/tar 0.011s FAIL archive/zip 0.022s ok compress/gzip 0.033s ... \u9ed8\u8ba4\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u7684\u53c2\u6570\uff0c\u5b83\u4f1a\u81ea\u52a8\u628a\u6e90\u7801\u5305\u4e0b\u9762\u6240\u6709test\u6587\u4ef6\u6d4b\u8bd5\u5b8c\u6bd5\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5e26\u4e0a\u53c2\u6570\uff0c\u8be6\u60c5\u8bf7\u53c2\u8003 go help testflag \u8fd9\u91cc\u4ecb\u7ecd\u51e0\u4e2a\u5e38\u7528\u7684\u53c2\u6570\uff1a -bench regexp \u6267\u884c\u76f8\u5e94\u7684benchmarks\uff0c\u4f8b\u5982 -bench=. -cover \u5f00\u542f\u6d4b\u8bd5\u8986\u76d6\u7387 -run regexp \u53ea\u8fd0\u884cregexp\u5339\u914d\u7684\u51fd\u6570\uff0c\u4f8b\u5982 -run=Array \u90a3\u4e48\u5c31\u6267\u884c\u5305\u542b\u6709Array\u5f00\u5934\u7684\u51fd\u6570 -v \u663e\u793a\u6d4b\u8bd5\u7684\u8be6\u7ec6\u547d\u4ee4","title":"go test"},{"location":"golang/docs/Go%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#go-tool","text":"go tool \u4e0b\u9762\u4e0b\u8f7d\u805a\u96c6\u4e86\u5f88\u591a\u547d\u4ee4\uff0c\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u4e24\u4e2a\uff0cfix\u548cvet go tool fix . \u7528\u6765\u4fee\u590d\u4ee5\u524d\u8001\u7248\u672c\u7684\u4ee3\u7801\u5230\u65b0\u7248\u672c\uff0c\u4f8b\u5982go1\u4e4b\u524d\u8001\u7248\u672c\u7684\u4ee3\u7801\u8f6c\u5316\u5230go1,\u4f8b\u5982API\u7684\u53d8\u5316 go tool vet directory|files \u7528\u6765\u5206\u6790\u5f53\u524d\u76ee\u5f55\u7684\u4ee3\u7801\u662f\u5426\u90fd\u662f\u6b63\u786e\u7684\u4ee3\u7801,\u4f8b\u5982\u662f\u4e0d\u662f\u8c03\u7528fmt.Printf\u91cc\u9762\u7684\u53c2\u6570\u4e0d\u6b63\u786e\uff0c\u4f8b\u5982\u51fd\u6570\u91cc\u9762\u63d0\u524dreturn\u4e86\u7136\u540e\u51fa\u73b0\u4e86\u65e0\u7528\u4ee3\u7801\u4e4b\u7c7b\u7684\u3002","title":"go tool"},{"location":"golang/docs/Go%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#go-generate","text":"\u8fd9\u4e2a\u547d\u4ee4\u662f\u4eceGo1.4\u5f00\u59cb\u624d\u8bbe\u8ba1\u7684\uff0c\u7528\u4e8e\u5728\u7f16\u8bd1\u524d\u81ea\u52a8\u5316\u751f\u6210\u67d0\u7c7b\u4ee3\u7801\u3002 go generate \u548c go build \u662f\u5b8c\u5168\u4e0d\u4e00\u6837\u7684\u547d\u4ee4\uff0c\u901a\u8fc7\u5206\u6790\u6e90\u7801\u4e2d\u7279\u6b8a\u7684\u6ce8\u91ca\uff0c\u7136\u540e\u6267\u884c\u76f8\u5e94\u7684\u547d\u4ee4\u3002\u8fd9\u4e9b\u547d\u4ee4\u90fd\u662f\u5f88\u660e\u786e\u7684\uff0c\u6ca1\u6709\u4efb\u4f55\u7684\u4f9d\u8d56\u5728\u91cc\u9762\u3002\u800c\u4e14\u5927\u5bb6\u5728\u7528\u8fd9\u4e2a\u4e4b\u524d\u5fc3\u91cc\u9762\u4e00\u5b9a\u8981\u6709\u4e00\u4e2a\u7406\u5ff5\uff0c\u8fd9\u4e2a go generate \u662f\u7ed9\u5f00\u53d1\u8005\u7528\u7684\uff0c\u4e0d\u662f\u7ed9\u4f7f\u7528\u8fd9\u4e2a\u5305\u7684\u4eba\u7528\u7684\uff0c\u662f\u65b9\u4fbf\u751f\u6210\u4e00\u4e9b\u4ee3\u7801\u7684\u3002 \u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u4f8b\u5982\u7ecf\u5e38\u4f1a\u4f7f\u7528 yacc \u6765\u751f\u6210\u4ee3\u7801\uff0c\u90a3\u4e48\u5e38\u7528\u8fd9\u6837\u7684\u547d\u4ee4\uff1a go tool yacc -o gopher.go -p parser gopher.y -o \u6307\u5b9a\u4e86\u8f93\u51fa\u7684\u6587\u4ef6\u540d\uff0c -p\u6307\u5b9a\u4e86package\u7684\u540d\u79f0\uff0c\u8fd9\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u547d\u4ee4\uff0c\u5982\u679c\u60f3\u8ba9 go generate \u6765\u89e6\u53d1\u8fd9\u4e2a\u547d\u4ee4\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728\u5f53\u524d\u76ee\u5f55\u7684\u4efb\u610f\u4e00\u4e2a xxx.go \u6587\u4ef6\u91cc\u9762\u7684\u4efb\u610f\u4f4d\u7f6e\u589e\u52a0\u4e00\u884c\u5982\u4e0b\u7684\u6ce8\u91ca\uff1a //go:generate go tool yacc -o gopher.go -p parser gopher.y \u8fd9\u91cc\u6ce8\u610f\u4e86\uff0c //go:generate \u662f\u6ca1\u6709\u4efb\u4f55\u7a7a\u683c\u7684\uff0c\u8fd9\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u56fa\u5b9a\u7684\u683c\u5f0f\uff0c\u5728\u626b\u63cf\u6e90\u7801\u6587\u4ef6\u7684\u65f6\u5019\u5c31\u662f\u6839\u636e\u8fd9\u4e2a\u6765\u5224\u65ad\u7684\u3002 \u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7684\u547d\u4ee4\u6765\u751f\u6210\uff0c\u7f16\u8bd1\uff0c\u6d4b\u8bd5\u3002\u5982\u679c gopher.y \u6587\u4ef6\u6709\u4fee\u6539\uff0c\u90a3\u4e48\u5c31\u91cd\u65b0\u6267\u884c go generate \u91cd\u65b0\u751f\u6210\u6587\u4ef6\u5c31\u597d\u3002 $ go generate $ go build $ go test","title":"go generate"},{"location":"golang/docs/Go%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#godoc","text":"\u5728Go1.2\u7248\u672c\u4e4b\u524d\u8fd8\u652f\u6301 go doc \u547d\u4ee4\uff0c\u4f46\u662f\u4e4b\u540e\u5168\u90e8\u79fb\u5230\u4e86godoc\u8fd9\u4e2a\u547d\u4ee4\u4e0b\uff0c\u9700\u8981\u8fd9\u6837\u5b89\u88c5 go get golang.org/x/tools/cmd/godoc \u5f88\u591a\u4eba\u8bf4go\u4e0d\u9700\u8981\u4efb\u4f55\u7684\u7b2c\u4e09\u65b9\u6587\u6863\uff0c\u4f8b\u5982chm\u624b\u518c\u4e4b\u7c7b\u7684\uff0c\u56e0\u4e3a\u5b83\u5185\u90e8\u5c31\u6709\u4e00\u4e2a\u5f88\u5f3a\u5927\u7684\u6587\u6863\u5de5\u5177\u3002 \u5982\u4f55\u67e5\u770b\u76f8\u5e94package\u7684\u6587\u6863\u5462\uff1f \u4f8b\u5982builtin\u5305\uff0c\u90a3\u4e48\u6267\u884c godoc builtin \u5982\u679c\u662fhttp\u5305\uff0c\u90a3\u4e48\u6267\u884c godoc net/http \u67e5\u770b\u67d0\u4e00\u4e2a\u5305\u91cc\u9762\u7684\u51fd\u6570\uff0c\u90a3\u4e48\u6267\u884c godoc fmt Printf \u4e5f\u53ef\u4ee5\u67e5\u770b\u76f8\u5e94\u7684\u4ee3\u7801\uff0c\u6267\u884c godoc -src fmt Printf \u901a\u8fc7\u547d\u4ee4\u5728\u547d\u4ee4\u884c\u6267\u884c godoc -http=:\u7aef\u53e3\u53f7 \u6bd4\u5982 godoc -http=:8080 \u3002\u7136\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 127.0.0.1:8080 \uff0c\u5c06\u4f1a\u770b\u5230\u4e00\u4e2agolang.org\u7684\u672c\u5730copy\u7248\u672c\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u67e5\u8be2pkg\u6587\u6863\u7b49\u5176\u5b83\u5185\u5bb9\u3002\u5982\u679c\u8bbe\u7f6e\u4e86GOPATH\uff0c\u5728pkg\u5206\u7c7b\u4e0b\uff0c\u4e0d\u4f46\u4f1a\u5217\u51fa\u6807\u51c6\u5305\u7684\u6587\u6863\uff0c\u8fd8\u4f1a\u5217\u51fa\u672c\u5730 GOPATH \u4e2d\u6240\u6709\u9879\u76ee\u7684\u76f8\u5173\u6587\u6863\uff0c\u8fd9\u5bf9\u4e8e\u7ecf\u5e38\u88ab\u5899\u7684\u7528\u6237\u6765\u8bf4\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002","title":"godoc"},{"location":"golang/docs/Go%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_1","text":"go\u8fd8\u63d0\u4f9b\u4e86\u5176\u5b83\u5f88\u591a\u7684\u5de5\u5177\uff0c\u4f8b\u5982\u4e0b\u9762\u7684\u8fd9\u4e9b\u5de5\u5177 go version \u67e5\u770bgo\u5f53\u524d\u7684\u7248\u672c go env \u67e5\u770b\u5f53\u524dgo\u7684\u73af\u5883\u53d8\u91cf go list \u5217\u51fa\u5f53\u524d\u5168\u90e8\u5b89\u88c5\u7684package go run \u7f16\u8bd1\u5e76\u8fd0\u884cGo\u7a0b\u5e8f","title":"\u5176\u5b83\u547d\u4ee4"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/","text":"Golang\u7684\u4e3b\u8981 \u8bbe\u8ba1\u76ee\u6807\u4e4b\u4e00\u5c31\u662f\u9762\u5411\u5927\u89c4\u6a21\u540e\u7aef\u670d\u52a1\u7a0b\u5e8f\uff0c\u7f51\u7edc\u901a\u4fe1\u8fd9\u5757\u662f\u670d\u52a1\u7aef \u7a0b\u5e8f\u5fc5\u4e0d\u53ef\u5c11\u4e5f\u662f\u81f3\u5173\u91cd\u8981\u7684\u4e00\u90e8\u5206\u3002\u5728\u65e5\u5e38\u5e94\u7528\u4e2d\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u770b\u5230Go\u4e2d\u7684net\u4ee5\u53ca\u5176subdirectories\u4e0b\u7684\u5305\u5747\u662f\u201c\u9ad8\u9891+\u521a\u9700\u201d\uff0c\u800cTCP socket\u5219\u662f\u7f51\u7edc\u7f16\u7a0b\u7684\u4e3b\u6d41\uff0c\u5373\u4fbf\u60a8\u6ca1\u6709\u76f4\u63a5\u4f7f\u7528\u5230net\u4e2d\u6709\u5173TCP Socket\u65b9\u9762\u7684\u63a5\u53e3\uff0c\u4f46net/http\u603b\u662f\u7528\u5230\u4e86\u5427\uff0chttp\u5e95\u5c42\u4f9d\u65e7\u662f\u7528tcp socket\u5b9e\u73b0\u7684\u3002 \u7f51\u7edc\u7f16\u7a0b\u65b9\u9762\uff0c\u6211\u4eec\u6700\u5e38\u7528\u7684\u5c31\u662ftcp socket\u7f16\u7a0b\u4e86\uff0c\u5728posix\u6807\u51c6\u51fa\u6765\u540e\uff0csocket\u5728\u5404\u5927\u4e3b\u6d41OS\u5e73\u53f0\u4e0a\u90fd\u5f97\u5230\u4e86\u5f88\u597d\u7684\u652f\u6301\u3002\u5173\u4e8etcp programming\uff0c\u6700\u597d\u7684\u8d44\u6599\u83ab\u8fc7\u4e8eW. Richard Stevens \u7684\u7f51\u7edc\u7f16\u7a0b\u5723\u7ecf\u300aUNIX\u7f51\u7edc \u7f16\u7a0b \u53771\uff1a\u5957\u63a5\u5b57\u8054\u7f51API\u300b \u4e86\uff0c\u4e66\u4e2d\u5173\u4e8etcp socket\u63a5\u53e3\u7684\u5404\u79cd\u4f7f\u7528\u3001\u884c\u4e3a\u6a21\u5f0f\u3001\u5f02\u5e38\u5904\u7406\u8bb2\u89e3\u7684\u5341\u5206\u7ec6\u81f4\u3002Go\u662f\u81ea\u5e26runtime\u7684\u8de8\u5e73\u53f0\u7f16\u7a0b\u8bed\u8a00\uff0cGo\u4e2d\u66b4\u9732\u7ed9\u8bed\u8a00\u4f7f\u7528\u8005\u7684tcp socket api\u662f\u5efa\u7acbOS\u539f\u751ftcp socket\u63a5\u53e3\u4e4b\u4e0a\u7684\u3002\u7531\u4e8eGo runtime\u8c03\u5ea6\u7684\u9700\u8981\uff0cgolang tcp socket\u63a5\u53e3\u5728\u884c\u4e3a\u7279\u70b9\u4e0e\u5f02\u5e38\u5904\u7406\u65b9\u9762\u4e0eOS\u539f\u751f\u63a5\u53e3\u6709\u7740\u4e00\u4e9b\u5dee\u522b\u3002\u8fd9\u7bc7\u535a\u6587\u7684\u76ee\u6807\u5c31\u662f\u6574\u7406\u51fa\u5173\u4e8eGo tcp socket\u5728\u5404\u4e2a\u573a\u666f\u4e0b\u7684\u4f7f\u7528\u65b9\u6cd5\u3001\u884c\u4e3a\u7279\u70b9\u4ee5\u53ca\u6ce8\u610f\u4e8b\u9879\u3002 \u4e00\u3001\u6a21\u578b \u4ecetcp socket\u8bde\u751f\u540e\uff0c\u7f51\u7edc\u7f16\u7a0b\u67b6\u6784\u6a21\u578b\u4e5f\u51e0\u7ecf\u6f14\u5316\uff0c\u5927\u81f4\u662f\uff1a\u201c\u6bcf\u8fdb\u7a0b\u4e00\u4e2a\u8fde\u63a5\u201d \u2013> \u201c\u6bcf\u7ebf\u7a0b\u4e00\u4e2a\u8fde\u63a5\u201d \u2013> \u201cNon-Block + I/O\u591a\u8def\u590d\u7528(linux epoll/windows iocp/freebsd darwin kqueue/solaris Event Port)\u201d\u3002\u4f34\u968f\u7740\u6a21\u578b\u7684\u6f14\u5316\uff0c\u670d\u52a1\u7a0b\u5e8f\u6108\u52a0\u5f3a\u5927\uff0c\u53ef\u4ee5\u652f\u6301\u66f4\u591a\u7684\u8fde\u63a5\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u5904\u7406\u6027\u80fd\u3002 \u76ee\u524d\u4e3b\u6d41web server\u4e00\u822c\u5747\u91c7\u7528\u7684\u90fd\u662f\u201dNon-Block + I/O\u591a\u8def\u590d\u7528\u201d\uff08\u6709\u7684\u4e5f\u7ed3\u5408\u4e86\u591a\u7ebf\u7a0b\u3001\u591a\u8fdb\u7a0b\uff09\u3002\u4e0d\u8fc7I/O\u591a\u8def\u590d\u7528\u4e5f\u7ed9\u4f7f\u7528\u8005\u5e26\u6765\u4e86\u4e0d\u5c0f\u7684\u590d\u6742\u5ea6\uff0c\u4ee5\u81f3\u4e8e\u540e\u7eed\u51fa\u73b0\u4e86\u8bb8\u591a\u9ad8\u6027\u80fd\u7684I/O\u591a\u8def\u590d\u7528\u6846\u67b6\uff0c \u6bd4\u5982libevent\u3001libev\u3001libuv\u7b49\uff0c\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u7b80\u5316\u5f00\u53d1\u590d\u6742\u6027\uff0c\u964d\u4f4e\u5fc3\u667a\u8d1f\u62c5\u3002\u4e0d\u8fc7Go\u7684\u8bbe\u8ba1\u8005\u4f3c\u4e4e\u8ba4\u4e3aI/O\u591a\u8def\u590d\u7528\u7684\u8fd9\u79cd\u901a\u8fc7\u56de\u8c03\u673a\u5236\u5272\u88c2\u63a7\u5236\u6d41 \u7684\u65b9\u5f0f\u4f9d\u65e7\u590d\u6742\uff0c\u4e14\u6709\u6096\u4e8e\u201c\u4e00\u822c\u903b\u8f91\u201d\u8bbe\u8ba1\uff0c\u4e3a\u6b64Go\u8bed\u8a00\u5c06\u8be5\u201c\u590d\u6742\u6027\u201d\u9690\u85cf\u5728Runtime\u4e2d\u4e86\uff1aGo\u5f00\u53d1\u8005\u65e0\u9700\u5173\u6ce8socket\u662f\u5426\u662f non-block\u7684\uff0c\u4e5f\u65e0\u9700\u4eb2\u81ea\u6ce8\u518c\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u56de\u8c03\uff0c\u53ea\u9700\u5728\u6bcf\u4e2a\u8fde\u63a5\u5bf9\u5e94\u7684goroutine\u4e2d\u4ee5\u201cblock I/O\u201d\u7684\u65b9\u5f0f\u5bf9\u5f85socket\u5904\u7406\u5373\u53ef\uff0c\u8fd9\u53ef\u4ee5\u8bf4\u5927\u5927\u964d\u4f4e\u4e86\u5f00\u53d1\u4eba\u5458\u7684\u5fc3\u667a\u8d1f\u62c5\u3002\u4e00\u4e2a\u5178\u578b\u7684Go server\u7aef\u7a0b\u5e8f\u5927\u81f4\u5982\u4e0b\uff1a //go-tcpsock/server.go func handleConn(c net.Conn) { defer c.Close() for { // read from the connection // ... ... // write to the connection //... ... } } func main() { l, err := net.Listen(\"tcp\", \":8888\") if err != nil { fmt.Println(\"listen error:\", err) return } for { c, err := l.Accept() if err != nil { fmt.Println(\"accept error:\", err) break } // start a new goroutine to handle // the new connection. go handleConn(c) } } \u7528\u6237\u5c42\u773c\u4e2d\u770b\u5230\u7684goroutine\u4e2d\u7684\u201cblock socket\u201d\uff0c\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7Go runtime\u4e2d\u7684netpoller\u901a\u8fc7Non-block socket + I/O\u591a\u8def\u590d\u7528\u673a\u5236\u201c\u6a21\u62df\u201d\u51fa\u6765\u7684\uff0c\u771f\u5b9e\u7684underlying socket\u5b9e\u9645\u4e0a\u662fnon-block\u7684\uff0c\u53ea\u662fruntime\u62e6\u622a\u4e86\u5e95\u5c42socket\u7cfb\u7edf\u8c03\u7528\u7684\u9519\u8bef\u7801\uff0c\u5e76\u901a\u8fc7netpoller\u548cgoroutine \u8c03\u5ea6\u8ba9goroutine\u201c\u963b\u585e\u201d\u5728\u7528\u6237\u5c42\u5f97\u5230\u7684Socket fd\u4e0a\u3002\u6bd4\u5982\uff1a\u5f53\u7528\u6237\u5c42\u9488\u5bf9\u67d0\u4e2asocket fd\u53d1\u8d77read\u64cd\u4f5c\u65f6\uff0c\u5982\u679c\u8be5socket fd\u4e2d\u5c1a\u65e0\u6570\u636e\uff0c\u90a3\u4e48runtime\u4f1a\u5c06\u8be5socket fd\u52a0\u5165\u5230netpoller\u4e2d\u76d1\u542c\uff0c\u540c\u65f6\u5bf9\u5e94\u7684goroutine\u88ab\u6302\u8d77\uff0c\u76f4\u5230runtime\u6536\u5230socket fd \u6570\u636eready\u7684\u901a\u77e5\uff0cruntime\u624d\u4f1a\u91cd\u65b0\u5524\u9192\u7b49\u5f85\u5728\u8be5socket fd\u4e0a\u51c6\u5907read\u7684\u90a3\u4e2aGoroutine\u3002\u800c\u8fd9\u4e2a\u8fc7\u7a0b\u4eceGoroutine\u7684\u89c6\u89d2\u6765\u770b\uff0c\u5c31\u50cf\u662fread\u64cd\u4f5c\u4e00\u76f4block\u5728\u90a3\u4e2asocket fd\u4e0a\u4f3c\u7684\u3002\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u5728\u540e\u7eed\u573a\u666f\u4e2d\u4f1a\u6709\u8865\u5145\u63cf\u8ff0\u3002 \u4e8c\u3001TCP\u8fde\u63a5\u7684\u5efa\u7acb \u4f17\u6240\u5468\u77e5\uff0cTCP Socket\u7684\u8fde\u63a5\u7684\u5efa\u7acb\u9700\u8981\u7ecf\u5386\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u4e09\u6b21\u63e1\u624b\u7684\u8fc7\u7a0b\u3002\u8fde\u63a5\u5efa\u7acb\u8fc7\u7a0b\u4e2d\uff0c\u670d\u52a1\u7aef\u662f\u4e00\u4e2a\u6807\u51c6\u7684Listen + Accept\u7684\u7ed3\u6784(\u53ef\u53c2\u8003\u4e0a\u9762\u7684\u4ee3\u7801)\uff0c\u800c\u5728\u5ba2\u6237\u7aefGo\u8bed\u8a00\u4f7f\u7528net.Dial\u6216DialTimeout\u8fdb\u884c\u8fde\u63a5\u5efa\u7acb\uff1a \u963b\u585eDial\uff1a conn, err := net.Dial(\"tcp\", \"google.com:80\") if err != nil { //handle error } // read or write on conn \u6216\u662f\u5e26\u4e0a\u8d85\u65f6\u673a\u5236\u7684Dial\uff1a conn, err := net.DialTimeout(\"tcp\", \":8080\", 2 * time.Second) if err != nil { //handle error } // read or write on conn \u5bf9\u4e8e\u5ba2\u6237\u7aef\u800c\u8a00\uff0c\u8fde\u63a5\u7684\u5efa\u7acb\u4f1a\u9047\u5230\u5982\u4e0b\u51e0\u79cd\u60c5\u5f62\uff1a 1\u3001\u7f51\u7edc\u4e0d\u53ef\u8fbe\u6216\u5bf9\u65b9\u670d\u52a1\u672a\u542f\u52a8 \u5982\u679c\u4f20\u7ed9Dial\u7684Addr\u662f\u53ef\u4ee5\u7acb\u5373\u5224\u65ad\u51fa\u7f51\u7edc\u4e0d\u53ef\u8fbe\uff0c\u6216\u8005Addr\u4e2d\u7aef\u53e3\u5bf9\u5e94\u7684\u670d\u52a1\u6ca1\u6709\u542f\u52a8\uff0c\u7aef\u53e3\u672a\u88ab\u76d1\u542c\uff0cDial\u4f1a\u51e0\u4e4e\u7acb\u5373\u8fd4\u56de\u9519\u8bef\uff0c\u6bd4\u5982\uff1a //go-tcpsock/conn_establish/client1.go ... ... func main() { log.Println(\"begin dial...\") conn, err := net.Dial(\"tcp\", \":8888\") if err != nil { log.Println(\"dial error:\", err) return } defer conn.Close() log.Println(\"dial ok\") } \u5982\u679c\u672c\u673a8888\u7aef\u53e3\u672a\u6709\u670d\u52a1\u7a0b\u5e8f\u76d1\u542c\uff0c\u90a3\u4e48\u6267\u884c\u4e0a\u9762\u7a0b\u5e8f\uff0cDial\u4f1a\u5f88\u5feb\u8fd4\u56de\u9519\u8bef\uff1a $go run client1.go 2015/11/16 14:37:41 begin dial... 2015/11/16 14:37:41 dial error: dial tcp :8888: getsockopt: connection refused 2\u3001\u5bf9\u65b9\u670d\u52a1\u7684listen backlog\u6ee1 \u8fd8\u6709\u4e00\u79cd\u573a\u666f\u5c31\u662f\u5bf9\u65b9\u670d\u52a1\u5668\u5f88\u5fd9\uff0c\u77ac\u95f4\u6709\u5927\u91cfclient\u7aef\u8fde\u63a5\u5c1d\u8bd5\u5411server\u5efa\u7acb\uff0cserver\u7aef\u7684listen backlog\u961f\u5217\u6ee1\uff0cserver accept\u4e0d\u53ca\u65f6((\u5373\u4fbf\u4e0daccept\uff0c\u90a3\u4e48\u5728backlog\u6570\u91cf\u8303\u7574\u91cc\u9762\uff0cconnect\u90fd\u4f1a\u662f\u6210\u529f\u7684\uff0c\u56e0\u4e3anew conn\u5df2\u7ecf\u52a0\u5165\u5230server side\u7684listen queue\u4e2d\u4e86\uff0caccept\u53ea\u662f\u4ecequeue\u4e2d\u53d6\u51fa\u4e00\u4e2aconn\u800c\u5df2)\uff0c\u8fd9\u5c06\u5bfc\u81f4client\u7aefDial\u963b\u585e\u3002\u6211\u4eec\u8fd8\u662f\u901a\u8fc7\u4f8b\u5b50\u611f\u53d7Dial\u7684\u884c\u4e3a\u7279\u70b9\uff1a \u670d\u52a1\u7aef\u4ee3\u7801\uff1a //go-tcpsock/conn_establish/server2.go ... ... func main() { l, err := net.Listen(\"tcp\", \":8888\") if err != nil { log.Println(\"error listen:\", err) return } defer l.Close() log.Println(\"listen ok\") var i int for { time.Sleep(time.Second * 10) if _, err := l.Accept(); err != nil { log.Println(\"accept error:\", err) break } i++ log.Printf(\"%d: accept a new connection\\n\", i) } } \u5ba2\u6237\u7aef\u4ee3\u7801\uff1a //go-tcpsock/conn_establish/client2.go ... ... func establishConn(i int) net.Conn { conn, err := net.Dial(\"tcp\", \":8888\") if err != nil { log.Printf(\"%d: dial error: %s\", i, err) return nil } log.Println(i, \":connect to server ok\") return conn } func main() { var sl []net.Conn for i := 1; i < 1000; i++ { conn := establishConn(i) if conn != nil { sl = append(sl, conn) } } time.Sleep(time.Second * 10000) } \u4ece\u7a0b\u5e8f\u53ef\u4ee5\u770b\u51fa\uff0c\u670d\u52a1\u7aef\u5728listen\u6210\u529f\u540e\uff0c\u6bcf\u969410s\u949faccept\u4e00\u6b21\u3002\u5ba2\u6237\u7aef\u5219\u662f\u4e32\u884c\u7684\u5c1d\u8bd5\u5efa\u7acb\u8fde\u63a5\u3002\u8fd9\u4e24\u4e2a\u7a0b\u5e8f\u5728Darwin\u4e0b\u7684\u6267\u884c \u7ed3\u679c\uff1a $go run server2.go 2015/11/16 21:55:41 listen ok 2015/11/16 21:55:51 1: accept a new connection 2015/11/16 21:56:01 2: accept a new connection ... ... $go run client2.go 2015/11/16 21:55:44 1 :connect to server ok 2015/11/16 21:55:44 2 :connect to server ok 2015/11/16 21:55:44 3 :connect to server ok ... ... 2015/11/16 21:55:44 126 :connect to server ok 2015/11/16 21:55:44 127 :connect to server ok 2015/11/16 21:55:44 128 :connect to server ok 2015/11/16 21:55:52 129 :connect to server ok 2015/11/16 21:56:03 130 :connect to server ok 2015/11/16 21:56:14 131 :connect to server ok ... ... \u53ef\u4ee5\u770b\u51faClient\u521d\u59cb\u65f6\u6210\u529f\u5730\u4e00\u6b21\u6027\u5efa\u7acb\u4e86128\u4e2a\u8fde\u63a5\uff0c\u7136\u540e\u540e\u7eed\u6bcf\u963b\u585e\u8fd110s\u624d\u80fd\u6210\u529f\u5efa\u7acb\u4e00\u6761\u8fde\u63a5\u3002\u4e5f\u5c31\u662f\u8bf4\u5728server\u7aef backlog\u6ee1\u65f6(\u672a\u53ca\u65f6accept)\uff0c\u5ba2\u6237\u7aef\u5c06\u963b\u585e\u5728Dial\u4e0a\uff0c\u76f4\u5230server\u7aef\u8fdb\u884c\u4e00\u6b21accept\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u662f128\uff0c\u8fd9\u4e0edarwin \u4e0b\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u6709\u5173\uff1a $sysctl -a|grep kern.ipc.somaxconn kern.ipc.somaxconn: 128 \u5982\u679c\u6211\u5728ubuntu 14.04\u4e0a\u8fd0\u884c\u4e0a\u8ff0server\u7a0b\u5e8f\uff0c\u6211\u4eec\u7684client\u7aef\u521d\u59cb\u53ef\u4ee5\u6210\u529f\u5efa\u7acb499\u6761\u8fde\u63a5\u3002 \u5982\u679cserver\u4e00\u76f4\u4e0daccept\uff0cclient\u7aef\u4f1a\u4e00\u76f4\u963b\u585e\u4e48\uff1f\u6211\u4eec\u53bb\u6389accept\u540e\u7684\u7ed3\u679c\u662f\uff1a\u5728Darwin\u4e0b\uff0cclient\u7aef\u4f1a\u963b\u585e\u5927 \u7ea61\u5206\u591a\u949f\u624d\u4f1a\u8fd4\u56detimeout\uff1a 2015/11/16 22:03:31 128 :connect to server ok 2015/11/16 22:04:48 129: dial error: dial tcp :8888: getsockopt: operation timed out \u800c\u5982\u679cserver\u8fd0\u884c\u5728ubuntu 14.04\u4e0a\uff0cclient\u4f3c\u4e4e\u4e00\u76f4\u963b\u585e\uff0c\u6211\u7b49\u4e8610\u591a\u5206\u949f\u4f9d\u65e7\u6ca1\u6709\u8fd4\u56de\u3002 \u963b\u585e\u4e0e\u5426\u770b\u6765\u4e0eserver\u7aef\u7684\u7f51\u7edc\u5b9e\u73b0\u548c\u8bbe\u7f6e\u6709\u5173\u3002 3\u3001\u7f51\u7edc\u5ef6\u8fdf\u8f83\u5927\uff0cDial\u963b\u585e\u5e76\u8d85\u65f6 \u5982\u679c\u7f51\u7edc\u5ef6\u8fdf\u8f83\u5927\uff0cTCP\u63e1\u624b\u8fc7\u7a0b\u5c06\u66f4\u52a0\u8270\u96be\u574e\u5777\uff08\u5404\u79cd\u4e22\u5305\uff09\uff0c\u65f6\u95f4\u6d88\u8017\u7684\u81ea\u7136\u4e5f\u4f1a\u66f4\u957f\u3002Dial\u8fd9\u65f6\u4f1a\u963b\u585e\uff0c\u5982\u679c\u957f\u65f6\u95f4\u4f9d\u65e7\u65e0\u6cd5\u5efa\u7acb\u8fde\u63a5\uff0c\u5219Dial\u4e5f\u4f1a\u8fd4\u56de\u201c getsockopt: operation timed out\u201d\u9519\u8bef\u3002 \u5728\u8fde\u63a5\u5efa\u7acb\u9636\u6bb5\uff0c\u591a\u6570\u60c5\u51b5\u4e0b\uff0cDial\u662f\u53ef\u4ee5\u6ee1\u8db3\u9700\u6c42\u7684\uff0c\u5373\u4fbf\u963b\u585e\u4e00\u5c0f\u4f1a\u513f\u3002\u4f46\u5bf9\u4e8e\u67d0\u4e9b\u7a0b\u5e8f\u800c\u8a00\uff0c\u9700\u8981\u6709\u4e25\u683c\u7684\u8fde\u63a5\u65f6\u95f4\u9650\u5b9a\uff0c\u5982\u679c\u4e00\u5b9a\u65f6\u95f4\u5185\u6ca1\u80fd\u6210\u529f\u5efa\u7acb\u8fde\u63a5\uff0c\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u9700\u8981\u6267\u884c\u4e00\u6bb5\u201c\u5f02\u5e38\u201d\u5904\u7406\u903b\u8f91\uff0c\u4e3a\u6b64\u6211\u4eec\u5c31\u9700\u8981DialTimeout\u4e86\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u5c06Dial\u7684\u6700\u957f\u963b\u585e\u65f6\u95f4\u9650\u5236\u57282s\u5185\uff0c\u8d85\u51fa\u8fd9\u4e2a\u65f6\u957f\uff0cDial\u5c06\u8fd4\u56detimeout error\uff1a //go-tcpsock/conn_establish/client3.go ... ... func main() { log.Println(\"begin dial...\") conn, err := net.DialTimeout(\"tcp\", \"104.236.176.96:80\", 2*time.Second) if err != nil { log.Println(\"dial error:\", err) return } defer conn.Close() log.Println(\"dial ok\") } \u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff08\u9700\u8981\u6a21\u62df\u4e00\u4e2a\u5ef6\u8fdf\u8f83\u5927\u7684\u7f51\u7edc\u73af\u5883\uff09\uff1a $go run client3.go 2015/11/17 09:28:34 begin dial... 2015/11/17 09:28:36 dial error: dial tcp 104.236.176.96:80: i/o timeout \u4e09\u3001Socket\u8bfb\u5199 \u8fde\u63a5\u5efa\u7acb\u8d77\u6765\u540e\uff0c\u6211\u4eec\u5c31\u8981\u5728conn\u4e0a\u8fdb\u884c\u8bfb\u5199\uff0c\u4ee5\u5b8c\u6210\u4e1a\u52a1\u903b\u8f91\u3002\u524d\u9762\u8bf4\u8fc7Go runtime\u9690\u85cf\u4e86I/O\u591a\u8def\u590d\u7528\u7684\u590d\u6742\u6027\u3002\u8bed\u8a00\u4f7f\u7528\u8005\u53ea\u9700\u91c7\u7528goroutine+Block I/O\u7684\u6a21\u5f0f\u5373\u53ef\u6ee1\u8db3\u5927\u90e8\u5206\u573a\u666f\u9700\u6c42\u3002Dial\u6210\u529f\u540e\uff0c\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2anet.Conn\u63a5\u53e3\u7c7b\u578b\u53d8\u91cf\u503c\uff0c\u8fd9\u4e2a\u63a5\u53e3\u53d8\u91cf\u7684\u52a8\u6001\u7c7b\u578b\u4e3a\u4e00\u4e2a*TCPConn\uff1a //$GOROOT/src/net/tcpsock_posix.go type TCPConn struct { conn } TCPConn\u5185\u5d4c\u4e86\u4e00\u4e2aunexported\u7c7b\u578b\uff1aconn\uff0c\u56e0\u6b64TCPConn\u201d\u7ee7\u627f\u201d\u4e86conn\u7684Read\u548cWrite\u65b9\u6cd5\uff0c\u540e\u7eed\u901a\u8fc7Dial\u8fd4\u56de\u503c\u8c03\u7528\u7684Write\u548cRead\u65b9\u6cd5\u5747\u662fnet.conn\u7684\u65b9\u6cd5\uff1a //$GOROOT/src/net/net.go type conn struct { fd *netFD } func (c *conn) ok() bool { return c != nil && c.fd != nil } // Implementation of the Conn interface. // Read implements the Conn Read method. func (c *conn) Read(b []byte) (int, error) { if !c.ok() { return 0, syscall.EINVAL } n, err := c.fd.Read(b) if err != nil && err != io.EOF { err = &OpError{Op: \"read\", Net: c.fd.net, Source: c.fd.laddr, Addr: c.fd.raddr, Err: err} } return n, err } // Write implements the Conn Write method. func (c *conn) Write(b []byte) (int, error) { if !c.ok() { return 0, syscall.EINVAL } n, err := c.fd.Write(b) if err != nil { err = &OpError{Op: \"write\", Net: c.fd.net, Source: c.fd.laddr, Addr: c.fd.raddr, Err: err} } return n, err } \u4e0b\u9762\u6211\u4eec\u5148\u6765\u901a\u8fc7\u51e0\u4e2a\u573a\u666f\u6765\u603b\u7ed3\u4e00\u4e0bconn.Read\u7684\u884c\u4e3a\u7279\u70b9\u3002 1\u3001Socket\u4e2d\u65e0\u6570\u636e \u8fde\u63a5\u5efa\u7acb\u540e\uff0c\u5982\u679c\u5bf9\u65b9\u672a\u53d1\u9001\u6570\u636e\u5230socket\uff0c\u63a5\u6536\u65b9(Server)\u4f1a\u963b\u585e\u5728Read\u64cd\u4f5c\u4e0a\uff0c\u8fd9\u548c\u524d\u9762\u63d0\u5230\u7684\u201c\u6a21\u578b\u201d\u539f\u7406\u662f\u4e00\u81f4\u7684\u3002\u6267\u884c\u8be5Read\u64cd\u4f5c\u7684goroutine\u4e5f\u4f1a\u88ab\u6302\u8d77\u3002runtime\u4f1a\u76d1\u89c6\u8be5socket\uff0c\u76f4\u5230\u5176\u6709\u6570\u636e\u624d\u4f1a\u91cd\u65b0 \u8c03\u5ea6\u8be5socket\u5bf9\u5e94\u7684Goroutine\u5b8c\u6210read\u3002\u7531\u4e8e\u7bc7\u5e45\u539f\u56e0\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5217\u4ee3\u7801\u4e86\uff0c\u4f8b\u5b50\u5bf9\u5e94\u7684\u4ee3\u7801\u6587\u4ef6\uff1ago-tcpsock/read_write\u4e0b\u7684client1.go\u548cserver1.go\u3002 2\u3001Socket\u4e2d\u6709\u90e8\u5206\u6570\u636e \u5982\u679csocket\u4e2d\u6709\u90e8\u5206\u6570\u636e\uff0c\u4e14\u957f\u5ea6\u5c0f\u4e8e\u4e00\u6b21Read\u64cd\u4f5c\u6240\u671f\u671b\u8bfb\u51fa\u7684\u6570\u636e\u957f\u5ea6\uff0c\u90a3\u4e48Read\u5c06\u4f1a\u6210\u529f\u8bfb\u51fa\u8fd9\u90e8\u5206\u6570\u636e\u5e76\u8fd4\u56de\uff0c\u800c\u4e0d\u662f\u7b49\u5f85\u6240\u6709\u671f\u671b\u6570\u636e\u5168\u90e8\u8bfb\u53d6\u540e\u518d\u8fd4\u56de\u3002 Client\u7aef\uff1a //go-tcpsock/read_write/client2.go ... ... func main() { if len(os.Args) <= 1 { fmt.Println(\"usage: go run client2.go YOUR_CONTENT\") return } log.Println(\"begin dial...\") conn, err := net.Dial(\"tcp\", \":8888\") if err != nil { log.Println(\"dial error:\", err) return } defer conn.Close() log.Println(\"dial ok\") time.Sleep(time.Second * 2) data := os.Args[1] conn.Write([]byte(data)) time.Sleep(time.Second * 10000) } Server\u7aef\uff1a //go-tcpsock/read_write/server2.go ... ... func handleConn(c net.Conn) { defer c.Close() for { // read from the connection var buf = make([]byte, 10) log.Println(\"start to read from conn\") n, err := c.Read(buf) if err != nil { log.Println(\"conn read error:\", err) return } log.Printf(\"read %d bytes, content is %s\\n\", n, string(buf[:n])) } } ... ... \u6211\u4eec\u901a\u8fc7client2.go\u53d1\u9001\u201dhi\u201d\u5230Server\u7aef\uff1a \u8fd0\u884c\u7ed3\u679c: $go run client2.go hi 2015/11/17 13:30:53 begin dial... 2015/11/17 13:30:53 dial ok $go run server2.go 2015/11/17 13:33:45 accept a new connection 2015/11/17 13:33:45 start to read from conn 2015/11/17 13:33:47 read 2 bytes, content is hi ... Client\u5411socket\u4e2d\u5199\u5165\u4e24\u4e2a\u5b57\u8282\u6570\u636e(\u201chi\u201d)\uff0cServer\u7aef\u521b\u5efa\u4e00\u4e2alen = 10\u7684slice\uff0c\u7b49\u5f85Read\u5c06\u8bfb\u53d6\u7684\u6570\u636e\u653e\u5165slice\uff1bServer\u968f\u540e\u8bfb\u53d6\u5230\u90a3\u4e24\u4e2a\u5b57\u8282\uff1a\u201dhi\u201d\u3002Read\u6210\u529f\u8fd4\u56de\uff0cn =2 \uff0cerr = nil\u3002 3\u3001Socket\u4e2d\u6709\u8db3\u591f\u6570\u636e \u5982\u679csocket\u4e2d\u6709\u6570\u636e\uff0c\u4e14\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e\u4e00\u6b21Read\u64cd\u4f5c\u6240\u671f\u671b\u8bfb\u51fa\u7684\u6570\u636e\u957f\u5ea6\uff0c\u90a3\u4e48Read\u5c06\u4f1a\u6210\u529f\u8bfb\u51fa\u8fd9\u90e8\u5206\u6570\u636e\u5e76\u8fd4\u56de\u3002\u8fd9\u4e2a\u60c5\u666f\u662f\u6700\u7b26\u5408\u6211\u4eec\u5bf9Read\u7684\u671f\u5f85\u7684\u4e86\uff1aRead\u5c06\u7528Socket\u4e2d\u7684\u6570\u636e\u5c06\u6211\u4eec\u4f20\u5165\u7684slice\u586b\u6ee1\u540e\u8fd4\u56de\uff1an = 10, err = nil\u3002 \u6211\u4eec\u901a\u8fc7client2.go\u5411Server2\u53d1\u9001\u5982\u4e0b\u5185\u5bb9\uff1aabcdefghij12345\uff0c\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $go run client2.go abcdefghij12345 2015/11/17 13:38:00 begin dial... 2015/11/17 13:38:00 dial ok $go run server2.go 2015/11/17 13:38:00 accept a new connection 2015/11/17 13:38:00 start to read from conn 2015/11/17 13:38:02 read 10 bytes, content is abcdefghij 2015/11/17 13:38:02 start to read from conn 2015/11/17 13:38:02 read 5 bytes, content is 12345 client\u7aef\u53d1\u9001\u7684\u5185\u5bb9\u957f\u5ea6\u4e3a15\u4e2a\u5b57\u8282\uff0cServer\u7aefRead buffer\u7684\u957f\u5ea6\u4e3a10\uff0c\u56e0\u6b64Server Read\u7b2c\u4e00\u6b21\u8fd4\u56de\u65f6\u53ea\u4f1a\u8bfb\u53d610\u4e2a\u5b57\u8282\uff1bSocket\u4e2d\u8fd8\u5269\u4f595\u4e2a\u5b57\u8282\u6570\u636e\uff0cServer\u518d\u6b21Read\u65f6\u4f1a\u628a\u5269\u4f59\u6570\u636e\u8bfb\u51fa\uff08\u5982\uff1a\u60c5\u5f622\uff09\u3002 4\u3001Socket\u5173\u95ed \u5982\u679cclient\u7aef\u4e3b\u52a8\u5173\u95ed\u4e86socket\uff0c\u90a3\u4e48Server\u7684Read\u5c06\u4f1a\u8bfb\u5230\u4ec0\u4e48\u5462\uff1f\u8fd9\u91cc\u5206\u4e3a\u201c\u6709\u6570\u636e\u5173\u95ed\u201d\u548c\u201c\u65e0\u6570\u636e\u5173\u95ed\u201d\u3002 \u201c\u6709\u6570\u636e\u5173\u95ed\u201d\u662f\u6307\u5728client\u5173\u95ed\u65f6\uff0csocket\u4e2d\u8fd8\u6709server\u7aef\u672a\u8bfb\u53d6\u7684\u6570\u636e\uff0c\u6211\u4eec\u5728go-tcpsock/read_write/client3.go\u548cserver3.go\u4e2d\u6a21\u62df\u8fd9\u79cd\u60c5\u51b5\uff1a $go run client3.go hello 2015/11/17 13:50:57 begin dial... 2015/11/17 13:50:57 dial ok $go run server3.go 2015/11/17 13:50:57 accept a new connection 2015/11/17 13:51:07 start to read from conn 2015/11/17 13:51:07 read 5 bytes, content is hello 2015/11/17 13:51:17 start to read from conn 2015/11/17 13:51:17 conn read error: EOF \u4ece\u8f93\u51fa\u7ed3\u679c\u6765\u770b\uff0c\u5f53client\u7aefclose socket\u9000\u51fa\u540e\uff0cserver3\u4f9d\u65e7\u6ca1\u6709\u5f00\u59cbRead\uff0c10s\u540e\u7b2c\u4e00\u6b21Read\u6210\u529f\u8bfb\u51fa\u4e865\u4e2a\u5b57\u8282\u7684\u6570\u636e\uff0c\u5f53\u7b2c\u4e8c\u6b21Read\u65f6\uff0c\u7531\u4e8eclient\u7aef socket\u5173\u95ed\uff0cRead\u8fd4\u56deEOF error\u3002 \u901a\u8fc7\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u731c\u6d4b\u51fa\u201c\u65e0\u6570\u636e\u5173\u95ed\u201d\u60c5\u5f62\u4e0b\u7684\u7ed3\u679c\uff0c\u90a3\u5c31\u662fRead\u76f4\u63a5\u8fd4\u56deEOF error\u3002 5\u3001\u8bfb\u53d6\u64cd\u4f5c\u8d85\u65f6 \u6709\u4e9b\u573a\u5408\u5bf9Read\u7684\u963b\u585e\u65f6\u95f4\u6709\u4e25\u683c\u9650\u5236\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cRead\u7684\u884c\u4e3a\u5230\u5e95\u662f\u4ec0\u4e48\u6837\u7684\u5462\uff1f\u5728\u8fd4\u56de\u8d85\u65f6\u9519\u8bef\u65f6\uff0c\u662f\u5426\u4e5f\u540c\u65f6Read\u4e86\u4e00\u90e8\u5206\u6570\u636e\u4e86\u5462\uff1f\u8fd9\u4e2a\u5b9e\u9a8c\u6bd4\u8f83\u96be\u4e8e\u6a21\u62df\uff0c\u4e0b\u9762\u7684\u6d4b\u8bd5\u7ed3\u679c\u4e5f\u672a\u5fc5\u80fd\u53cd\u6620\u51fa\u6240\u6709\u53ef\u80fd\u7ed3\u679c\u3002\u6211\u4eec\u7f16\u5199\u4e86client4.go\u548cserver4.go\u6765\u6a21\u62df\u8fd9\u4e00\u60c5\u5f62\u3002 //go-tcpsock/read_write/client4.go ... ... func main() { log.Println(\"begin dial...\") conn, err := net.Dial(\"tcp\", \":8888\") if err != nil { log.Println(\"dial error:\", err) return } defer conn.Close() log.Println(\"dial ok\") data := make([]byte, 65536) conn.Write(data) time.Sleep(time.Second * 10000) } //go-tcpsock/read_write/server4.go ... ... func handleConn(c net.Conn) { defer c.Close() for { // read from the connection time.Sleep(10 * time.Second) var buf = make([]byte, 65536) log.Println(\"start to read from conn\") c.SetReadDeadline(time.Now().Add(time.Microsecond * 10)) n, err := c.Read(buf) if err != nil { log.Printf(\"conn read %d bytes, error: %s\", n, err) if nerr, ok := err.(net.Error); ok && nerr.Timeout() { continue } return } log.Printf(\"read %d bytes, content is %s\\n\", n, string(buf[:n])) } } \u5728Server\u7aef\u6211\u4eec\u901a\u8fc7Conn\u7684SetReadDeadline\u65b9\u6cd5\u8bbe\u7f6e\u4e8610\u5fae\u79d2\u7684\u8bfb\u8d85\u65f6\u65f6\u95f4\uff0cServer\u7684\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $go run server4.go 2015/11/17 14:21:17 accept a new connection 2015/11/17 14:21:27 start to read from conn 2015/11/17 14:21:27 conn read 0 bytes, error: read tcp 127.0.0.1:8888->127.0.0.1:60970: i/o timeout 2015/11/17 14:21:37 start to read from conn 2015/11/17 14:21:37 read 65536 bytes, content is \u867d\u7136\u6bcf\u6b21\u90fd\u662f10\u5fae\u79d2\u8d85\u65f6\uff0c\u4f46\u7ed3\u679c\u4e0d\u540c\uff0c\u7b2c\u4e00\u6b21Read\u8d85\u65f6\uff0c\u8bfb\u51fa\u6570\u636e\u957f\u5ea6\u4e3a0\uff1b\u7b2c\u4e8c\u6b21\u8bfb\u53d6\u6240\u6709\u6570\u636e\u6210\u529f\uff0c\u6ca1\u6709\u8d85\u65f6\u3002\u53cd\u590d\u6267\u884c\u4e86\u591a\u6b21\uff0c\u6ca1\u80fd\u51fa\u73b0\u201c\u8bfb\u51fa\u90e8\u5206\u6570\u636e\u4e14\u8fd4\u56de\u8d85\u65f6\u9519\u8bef\u201d\u7684\u60c5\u51b5\u3002 \u548c\u8bfb\u76f8\u6bd4\uff0cWrite\u9047\u5230\u7684\u60c5\u5f62\u4e00\u6837\u4e0d\u5c11\uff0c\u6211\u4eec\u4e5f\u9010\u4e00\u770b\u4e00\u4e0b\u3002 1\u3001\u6210\u529f\u5199 \u524d\u9762\u4f8b\u5b50\u7740\u91cd\u4e8eRead\uff0cclient\u7aef\u5728Write\u65f6\u5e76\u672a\u5224\u65adWrite\u7684\u8fd4\u56de\u503c\u3002\u6240\u8c13\u201c\u6210\u529f\u5199\u201d\u6307\u7684\u5c31\u662fWrite\u8c03\u7528\u8fd4\u56de\u7684n\u4e0e\u9884\u671f\u8981\u5199\u5165\u7684\u6570\u636e\u957f\u5ea6\u76f8\u7b49\uff0c\u4e14error = nil\u3002\u8fd9\u662f\u6211\u4eec\u5728\u8c03\u7528Write\u65f6\u9047\u5230\u7684\u6700\u5e38\u89c1\u7684\u60c5\u5f62\uff0c\u8fd9\u91cc\u4e0d\u518d\u4e3e\u4f8b\u4e86\u3002 2\u3001\u5199\u963b\u585e TCP\u8fde\u63a5\u901a\u4fe1\u4e24\u7aef\u7684OS\u90fd\u4f1a\u4e3a\u8be5\u8fde\u63a5\u4fdd\u7559\u6570\u636e\u7f13\u51b2\uff0c\u4e00\u7aef\u8c03\u7528Write\u540e\uff0c\u5b9e\u9645\u4e0a\u6570\u636e\u662f\u5199\u5165\u5230OS\u7684\u534f\u8bae\u6808\u7684\u6570\u636e\u7f13\u51b2\u7684\u3002TCP\u662f\u5168\u53cc\u5de5\u901a\u4fe1\uff0c\u56e0\u6b64\u6bcf\u4e2a\u65b9\u5411\u90fd\u6709\u72ec\u7acb\u7684\u6570\u636e\u7f13\u51b2\u3002\u5f53\u53d1\u9001\u65b9\u5c06\u5bf9\u65b9\u7684\u63a5\u6536\u7f13\u51b2\u533a\u4ee5\u53ca\u81ea\u8eab\u7684\u53d1\u9001\u7f13\u51b2\u533a\u5199\u6ee1\u540e\uff0cWrite\u5c31\u4f1a\u963b\u585e\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1aclient5.go\u548cserver.go\u3002 //go-tcpsock/read_write/client5.go ... ... func main() { log.Println(\"begin dial...\") conn, err := net.Dial(\"tcp\", \":8888\") if err != nil { log.Println(\"dial error:\", err) return } defer conn.Close() log.Println(\"dial ok\") data := make([]byte, 65536) var total int for { n, err := conn.Write(data) if err != nil { total += n log.Printf(\"write %d bytes, error:%s\\n\", n, err) break } total += n log.Printf(\"write %d bytes this time, %d bytes in total\\n\", n, total) } log.Printf(\"write %d bytes in total\\n\", total) time.Sleep(time.Second * 10000) } //go-tcpsock/read_write/server5.go ... ... func handleConn(c net.Conn) { defer c.Close() time.Sleep(time.Second * 10) for { // read from the connection time.Sleep(5 * time.Second) var buf = make([]byte, 60000) log.Println(\"start to read from conn\") n, err := c.Read(buf) if err != nil { log.Printf(\"conn read %d bytes, error: %s\", n, err) if nerr, ok := err.(net.Error); ok && nerr.Timeout() { continue } } log.Printf(\"read %d bytes, content is %s\\n\", n, string(buf[:n])) } } ... ... Server5\u5728\u524d10s\u4e2d\u5e76\u4e0dRead\u6570\u636e\uff0c\u56e0\u6b64\u5f53client5\u4e00\u76f4\u5c1d\u8bd5\u5199\u5165\u65f6\uff0c\u5199\u5230\u4e00\u5b9a\u91cf\u540e\u5c31\u4f1a\u53d1\u751f\u963b\u585e\uff1a $go run client5.go 2015/11/17 14:57:33 begin dial... 2015/11/17 14:57:33 dial ok 2015/11/17 14:57:33 write 65536 bytes this time, 65536 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 131072 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 196608 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 262144 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 327680 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 393216 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 458752 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 524288 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 589824 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 655360 bytes in total \u5728Darwin\u4e0a\uff0c\u8fd9\u4e2asize\u5927\u7ea6\u5728679468bytes\u3002\u540e\u7eed\u5f53server5\u6bcf\u96945s\u8fdb\u884cRead\u65f6\uff0cOS socket\u7f13\u51b2\u533a\u817e\u51fa\u4e86\u7a7a\u95f4\uff0cclient5\u5c31\u53c8\u53ef\u4ee5\u5199\u5165\u4e86\uff1a $go run server5.go 2015/11/17 15:07:01 accept a new connection 2015/11/17 15:07:16 start to read from conn 2015/11/17 15:07:16 read 60000 bytes, content is 2015/11/17 15:07:21 start to read from conn 2015/11/17 15:07:21 read 60000 bytes, content is 2015/11/17 15:07:26 start to read from conn 2015/11/17 15:07:26 read 60000 bytes, content is .... client\u7aef\uff1a 2015/11/17 15:07:01 write 65536 bytes this time, 720896 bytes in total 2015/11/17 15:07:06 write 65536 bytes this time, 786432 bytes in total 2015/11/17 15:07:16 write 65536 bytes this time, 851968 bytes in total 2015/11/17 15:07:16 write 65536 bytes this time, 917504 bytes in total 2015/11/17 15:07:27 write 65536 bytes this time, 983040 bytes in total 2015/11/17 15:07:27 write 65536 bytes this time, 1048576 bytes in total .... ... 3\u3001\u5199\u5165\u90e8\u5206\u6570\u636e Write\u64cd\u4f5c\u5b58\u5728\u5199\u5165\u90e8\u5206\u6570\u636e\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u4e0a\u9762\u4f8b\u5b50\u4e2d\uff0c\u5f53client\u7aef\u8f93\u51fa\u65e5\u5fd7\u505c\u7559\u5728\u201cwrite 65536 bytes this time, 655360 bytes in total\u201d\u65f6\uff0c\u6211\u4eec\u6740\u6389server5\uff0c\u8fd9\u65f6\u6211\u4eec\u4f1a\u770b\u5230client5\u8f93\u51fa\u4ee5\u4e0b\u65e5\u5fd7\uff1a ... 2015/11/17 15:19:14 write 65536 bytes this time, 655360 bytes in total 2015/11/17 15:19:16 write 24108 bytes, error:write tcp 127.0.0.1:62245->127.0.0.1:8888: write: broken pipe 2015/11/17 15:19:16 write 679468 bytes in total \u663e\u7136Write\u5e76\u975e\u5728655360\u8fd9\u4e2a\u5730\u65b9\u963b\u585e\u7684\uff0c\u800c\u662f\u540e\u7eed\u53c8\u5199\u516524108\u540e\u53d1\u751f\u4e86\u963b\u585e\uff0cserver\u7aefsocket\u5173\u95ed\u540e\uff0c\u6211\u4eec\u770b\u5230Wrote\u8fd4\u56deer != nil\u4e14n = 24108\uff0c\u7a0b\u5e8f\u9700\u8981\u5bf9\u8fd9\u90e8\u5206\u5199\u5165\u768424108\u5b57\u8282\u505a\u7279\u5b9a\u5904\u7406\u3002 4\u3001\u5199\u5165\u8d85\u65f6 \u5982\u679c\u975e\u8981\u7ed9Write\u589e\u52a0\u4e00\u4e2a\u671f\u9650\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u8c03\u7528SetWriteDeadline\u65b9\u6cd5\u3002\u6211\u4eeccopy\u4e00\u4efdclient5.go\uff0c\u5f62\u6210client6.go\uff0c\u5728client6.go\u7684Write\u4e4b\u524d\u589e\u52a0\u4e00\u884ctimeout\u8bbe\u7f6e\u4ee3\u7801\uff1a conn.SetWriteDeadline(time.Now().Add(time.Microsecond * 10)) \u542f\u52a8server6.go\uff0c\u542f\u52a8client6.go\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5199\u5165\u8d85\u65f6\u7684\u60c5\u51b5\u4e0b\uff0cWrite\u7684\u8fd4\u56de\u7ed3\u679c\uff1a $go run client6.go 2015/11/17 15:26:34 begin dial... 2015/11/17 15:26:34 dial ok 2015/11/17 15:26:34 write 65536 bytes this time, 65536 bytes in total ... ... 2015/11/17 15:26:34 write 65536 bytes this time, 655360 bytes in total 2015/11/17 15:26:34 write 24108 bytes, error:write tcp 127.0.0.1:62325->127.0.0.1:8888: i/o timeout 2015/11/17 15:26:34 write 679468 bytes in total \u53ef\u4ee5\u770b\u5230\u5728\u5199\u5165\u8d85\u65f6\u65f6\uff0c\u4f9d\u65e7\u5b58\u5728\u90e8\u5206\u6570\u636e\u5199\u5165\u7684\u60c5\u51b5\u3002 \u7efc\u4e0a\u4f8b\u5b50\uff0c\u867d\u7136Go\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u963b\u585eI/O\u7684\u4fbf\u5229\uff0c\u4f46\u5728\u8c03\u7528Read\u548cWrite\u65f6\u4f9d\u65e7\u8981\u7efc\u5408\u9700\u8981\u65b9\u6cd5\u8fd4\u56de\u7684n\u548cerr\u7684\u7ed3\u679c\uff0c\u4ee5\u505a\u51fa\u6b63\u786e\u5904\u7406\u3002net.conn\u5b9e\u73b0\u4e86io.Reader\u548cio.Writer\u63a5\u53e3\uff0c\u56e0\u6b64\u53ef\u4ee5\u8bd5\u7528\u4e00\u4e9bwrapper\u5305\u8fdb\u884csocket\u8bfb\u5199\uff0c\u6bd4\u5982bufio\u5305\u4e0b\u9762\u7684Writer\u548cReader\u3001io/ioutil\u4e0b\u7684\u51fd\u6570\u7b49\u3002 Goroutine safe \u57fa\u4e8egoroutine\u7684\u7f51\u7edc\u67b6\u6784\u6a21\u578b\uff0c\u5b58\u5728\u5728\u4e0d\u540cgoroutine\u95f4\u5171\u4eabconn\u7684\u60c5\u51b5\uff0c\u90a3\u4e48conn\u7684\u8bfb\u5199\u662f\u5426\u662fgoroutine safe\u7684\u5462\uff1f\u5728\u6df1\u5165\u8fd9\u4e2a\u95ee\u9898\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u4ece\u5e94\u7528\u610f\u4e49\u4e0a\u6765\u770bread\u64cd\u4f5c\u548cwrite\u64cd\u4f5c\u7684goroutine-safe\u5fc5\u8981\u6027\u3002 \u5bf9\u4e8eread\u64cd\u4f5c\u800c\u8a00\uff0c\u7531\u4e8eTCP\u662f\u9762\u5411\u5b57\u8282\u6d41\uff0cconn.Read\u65e0\u6cd5\u6b63\u786e\u533a\u5206\u6570\u636e\u7684\u4e1a\u52a1\u8fb9\u754c\uff0c\u56e0\u6b64\u591a\u4e2agoroutine\u5bf9\u540c\u4e00\u4e2aconn\u8fdb\u884cread\u7684\u610f\u4e49\u4e0d\u5927\uff0cgoroutine\u8bfb\u5230\u4e0d\u5b8c\u6574\u7684\u4e1a\u52a1\u5305\u53cd\u5012\u662f\u589e\u52a0\u4e86\u4e1a\u52a1\u5904\u7406\u7684\u96be\u5ea6\u3002\u5bf9\u4e0eWrite\u64cd\u4f5c\u800c\u8a00\uff0c\u5012\u662f\u6709\u591a\u4e2agoroutine\u5e76\u53d1\u5199\u7684\u60c5\u51b5\u3002\u4e0d\u8fc7conn\u8bfb\u5199\u662f\u5426goroutine-safe\u7684\u6d4b\u8bd5\u4e0d\u662f\u5f88\u597d\u505a\uff0c\u6211\u4eec\u5148\u6df1\u5165\u4e00\u4e0bruntime\u4ee3\u7801\uff0c\u5148\u4ece\u7406\u8bba\u4e0a\u7ed9\u8fd9\u4e2a\u95ee\u9898\u5b9a\u4e2a\u6027\uff1a net.conn\u53ea\u662fnetFD\u7684wrapper\u7ed3\u6784\uff0c\u6700\u7ec8Write\u548cRead\u90fd\u4f1a\u843d\u5728\u5176\u4e2d\u7684fd\u4e0a\uff1a type conn struct { fd *netFD } netFD\u5728\u4e0d\u540c\u5e73\u53f0\u4e0a\u6709\u7740\u4e0d\u540c\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u4ee5net/fd_unix.go\u4e2d\u7684netFD\u4e3a\u4f8b\uff1a // Network file descriptor. type netFD struct { // locking/lifetime of sysfd + serialize access to Read and Write methods fdmu fdMutex // immutable until Close sysfd int family int sotype int isConnected bool net string laddr Addr raddr Addr // wait server pd pollDesc } \u6211\u4eec\u770b\u5230netFD\u4e2d\u5305\u542b\u4e86\u4e00\u4e2aruntime\u5b9e\u73b0\u7684fdMutex\u7c7b\u578b\u5b57\u6bb5\uff0c\u4ece\u6ce8\u91ca\u4e0a\u6765\u770b\uff0c\u8be5fdMutex\u7528\u6765\u4e32\u884c\u5316\u5bf9\u8be5netFD\u5bf9\u5e94\u7684sysfd\u7684Write\u548cRead\u64cd\u4f5c\u3002\u4ece\u8fd9\u4e2a\u6ce8\u91ca\u4e0a\u6765\u770b\uff0c\u6240\u6709\u5bf9conn\u7684Read\u548cWrite\u64cd\u4f5c\u90fd\u662f\u6709fdMutex\u4e92\u65a5\u7684\uff0c\u4ecenetFD\u7684Read\u548cWrite\u65b9\u6cd5\u7684\u5b9e\u73b0\u4e5f\u8bc1\u5b9e\u4e86\u8fd9\u4e00\u70b9\uff1a func (fd *netFD) Read(p []byte) (n int, err error) { if err := fd.readLock(); err != nil { return 0, err } defer fd.readUnlock() if err := fd.pd.PrepareRead(); err != nil { return 0, err } for { n, err = syscall.Read(fd.sysfd, p) if err != nil { n = 0 if err == syscall.EAGAIN { if err = fd.pd.WaitRead(); err == nil { continue } } } err = fd.eofError(n, err) break } if _, ok := err.(syscall.Errno); ok { err = os.NewSyscallError(\"read\", err) } return } func (fd *netFD) Write(p []byte) (nn int, err error) { if err := fd.writeLock(); err != nil { return 0, err } defer fd.writeUnlock() if err := fd.pd.PrepareWrite(); err != nil { return 0, err } for { var n int n, err = syscall.Write(fd.sysfd, p[nn:]) if n > 0 { nn += n } if nn == len(p) { break } if err == syscall.EAGAIN { if err = fd.pd.WaitWrite(); err == nil { continue } } if err != nil { break } if n == 0 { err = io.ErrUnexpectedEOF break } } if _, ok := err.(syscall.Errno); ok { err = os.NewSyscallError(\"write\", err) } return nn, err } \u6bcf\u6b21Write\u64cd\u4f5c\u90fd\u662f\u53d7lock\u4fdd\u62a4\uff0c\u76f4\u5230\u6b64\u6b21\u6570\u636e\u5168\u90e8write\u5b8c\u3002\u56e0\u6b64\u5728\u5e94\u7528\u5c42\u9762\uff0c\u8981\u60f3\u4fdd\u8bc1\u591a\u4e2agoroutine\u5728\u4e00\u4e2aconn\u4e0awrite\u64cd\u4f5c\u7684Safe\uff0c\u9700\u8981\u4e00\u6b21write\u5b8c\u6574\u5199\u5165\u4e00\u4e2a\u201c\u4e1a\u52a1\u5305\u201d\uff1b\u4e00\u65e6\u5c06\u4e1a\u52a1\u5305\u7684\u5199\u5165\u62c6\u5206\u4e3a\u591a\u6b21write\uff0c\u90a3\u5c31\u65e0\u6cd5\u4fdd\u8bc1\u67d0\u4e2aGoroutine\u7684\u67d0\u201c\u4e1a\u52a1\u5305\u201d\u6570\u636e\u5728conn\u53d1\u9001\u7684\u8fde\u7eed\u6027\u3002 \u540c\u65f6\u4e5f\u53ef\u4ee5\u770b\u51fa\u5373\u4fbf\u662fRead\u64cd\u4f5c\uff0c\u4e5f\u662flock\u4fdd\u62a4\u7684\u3002\u591a\u4e2aGoroutine\u5bf9\u540c\u4e00conn\u7684\u5e76\u53d1\u8bfb\u4e0d\u4f1a\u51fa\u73b0\u8bfb\u51fa\u5185\u5bb9\u91cd\u53e0\u7684\u60c5\u51b5\uff0c\u4f46\u5185\u5bb9\u65ad\u70b9\u662f\u4f9d runtime\u8c03\u5ea6\u6765\u968f\u673a\u786e\u5b9a\u7684\u3002\u5b58\u5728\u4e00\u4e2a\u4e1a\u52a1\u5305\u6570\u636e\uff0c1/3\u5185\u5bb9\u88abgoroutine-1\u8bfb\u8d70\uff0c\u53e6\u59162/3\u88ab\u53e6\u5916\u4e00\u4e2agoroutine-2\u8bfb \u8d70\u7684\u60c5\u51b5\u3002\u6bd4\u5982\u4e00\u4e2a\u5b8c\u6574\u5305\uff1aworld\uff0c\u5f53goroutine\u7684read slice size < 5\u65f6\uff0c\u5b58\u5728\u53ef\u80fd\uff1a\u4e00\u4e2agoroutine\u8bfb\u5230 \u201cworl\u201d,\u53e6\u5916\u4e00\u4e2agoroutine\u8bfb\u51fa\u201dd\u201d\u3002 \u56db\u3001Socket\u5c5e\u6027 \u539f\u751fSocket API\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684sockopt\u8bbe\u7f6e\u63a5\u53e3\uff0c\u4f46Golang\u6709\u81ea\u5df1\u7684\u7f51\u7edc\u67b6\u6784\u6a21\u578b\uff0cgolang\u63d0\u4f9b\u7684socket options\u63a5\u53e3\u4e5f\u662f\u57fa\u4e8e\u4e0a\u8ff0\u6a21\u578b\u7684\u5fc5\u8981\u7684\u5c5e\u6027\u8bbe\u7f6e\u3002\u5305\u62ec SetKeepAlive SetKeepAlivePeriod SetLinger SetNoDelay \uff08\u9ed8\u8ba4no delay\uff09 SetWriteBuffer SetReadBuffer \u4e0d\u8fc7\u4e0a\u9762\u7684Method\u662fTCPConn\u7684\uff0c\u800c\u4e0d\u662fConn\u7684\uff0c\u8981\u4f7f\u7528\u4e0a\u9762\u7684Method\u7684\uff0c\u9700\u8981type assertion\uff1a tcpConn, ok := c.(*TCPConn) if !ok { //error handle } tcpConn.SetNoDelay(true) \u5bf9\u4e8elistener socket, golang\u9ed8\u8ba4\u91c7\u7528\u4e86 SO_REUSEADDR\uff0c\u8fd9\u6837\u5f53\u4f60\u91cd\u542f listener\u7a0b\u5e8f\u65f6\uff0c\u4e0d\u4f1a\u56e0\u4e3aaddress in use\u7684\u9519\u8bef\u800c\u542f\u52a8\u5931\u8d25\u3002\u800clisten backlog\u7684\u9ed8\u8ba4\u503c\u662f\u901a\u8fc7\u83b7\u53d6\u7cfb\u7edf\u7684\u8bbe\u7f6e\u503c\u5f97\u5230\u7684\u3002\u4e0d\u540c\u7cfb\u7edf\u4e0d\u540c\uff1amac 128, linux 512\u7b49\u3002 \u4e94\u3001\u5173\u95ed\u8fde\u63a5 \u548c\u524d\u9762\u7684\u65b9\u6cd5\u76f8\u6bd4\uff0c\u5173\u95ed\u8fde\u63a5\u7b97\u662f\u6700\u7b80\u5355\u7684\u64cd\u4f5c\u4e86\u3002\u7531\u4e8esocket\u662f\u5168\u53cc\u5de5\u7684\uff0cclient\u548cserver\u7aef\u5728\u5df1\u65b9\u5df2\u5173\u95ed\u7684socket\u548c\u5bf9\u65b9\u5173\u95ed\u7684socket\u4e0a\u64cd\u4f5c\u7684\u7ed3\u679c\u6709\u4e0d\u540c\u3002\u770b\u4e0b\u9762\u4f8b\u5b50\uff1a //go-tcpsock/conn_close/client1.go ... ... func main() { log.Println(\"begin dial...\") conn, err := net.Dial(\"tcp\", \":8888\") if err != nil { log.Println(\"dial error:\", err) return } conn.Close() log.Println(\"close ok\") var buf = make([]byte, 32) n, err := conn.Read(buf) if err != nil { log.Println(\"read error:\", err) } else { log.Printf(\"read % bytes, content is %s\\n\", n, string(buf[:n])) } n, err = conn.Write(buf) if err != nil { log.Println(\"write error:\", err) } else { log.Printf(\"write % bytes, content is %s\\n\", n, string(buf[:n])) } time.Sleep(time.Second * 1000) } //go-tcpsock/conn_close/server1.go ... ... func handleConn(c net.Conn) { defer c.Close() // read from the connection var buf = make([]byte, 10) log.Println(\"start to read from conn\") n, err := c.Read(buf) if err != nil { log.Println(\"conn read error:\", err) } else { log.Printf(\"read %d bytes, content is %s\\n\", n, string(buf[:n])) } n, err = c.Write(buf) if err != nil { log.Println(\"conn write error:\", err) } else { log.Printf(\"write %d bytes, content is %s\\n\", n, string(buf[:n])) } } ... ... \u4e0a\u8ff0\u4f8b\u5b50\u7684\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $go run server1.go 2015/11/17 17:00:51 accept a new connection 2015/11/17 17:00:51 start to read from conn 2015/11/17 17:00:51 conn read error: EOF 2015/11/17 17:00:51 write 10 bytes, content is $go run client1.go 2015/11/17 17:00:51 begin dial... 2015/11/17 17:00:51 close ok 2015/11/17 17:00:51 read error: read tcp 127.0.0.1:64195->127.0.0.1:8888: use of closed network connection 2015/11/17 17:00:51 write error: write tcp 127.0.0.1:64195->127.0.0.1:8888: use of closed network connection \u4ececlient1\u7684\u7ed3\u679c\u6765\u770b\uff0c\u5728\u5df1\u65b9\u5df2\u7ecf\u5173\u95ed\u7684socket\u4e0a\u518d\u8fdb\u884cread\u548cwrite\u64cd\u4f5c\uff0c\u4f1a\u5f97\u5230\u201duse of closed network connection\u201d error\uff1b \u4eceserver1\u7684\u6267\u884c\u7ed3\u679c\u6765\u770b\uff0c\u5728\u5bf9\u65b9\u5173\u95ed\u7684socket\u4e0a\u6267\u884cread\u64cd\u4f5c\u4f1a\u5f97\u5230EOF error\uff0c\u4f46write\u64cd\u4f5c\u4f1a\u6210\u529f\uff0c\u56e0\u4e3a\u6570\u636e\u4f1a\u6210\u529f\u5199\u5165\u5df1\u65b9\u7684\u5185\u6838socket\u7f13\u51b2\u533a\u4e2d\uff0c\u5373\u4fbf\u6700\u7ec8\u53d1\u4e0d\u5230\u5bf9\u65b9socket\u7f13\u51b2\u533a\u4e86\uff0c\u56e0\u4e3a\u5df1\u65b9socket\u5e76\u672a\u5173\u95ed\u3002\u56e0\u6b64\u5f53\u53d1\u73b0\u5bf9\u65b9socket\u5173\u95ed\u540e\uff0c\u5df1\u65b9\u5e94\u8be5\u6b63\u786e\u5408\u7406\u5904\u7406\u81ea\u5df1\u7684socket\uff0c\u518d\u7ee7\u7eedwrite\u5df2\u7ecf\u65e0\u4efb\u4f55\u610f\u4e49\u4e86\u3002 \u516d\u3001\u5c0f\u7ed3 \u672c\u6587\u6bd4\u8f83\u57fa\u7840\uff0c\u4f46\u5374\u5f88\u91cd\u8981\uff0c\u6bd5\u7adfgolang\u662f\u9762\u5411\u5927\u89c4\u6a21\u670d\u52a1\u540e\u7aef\u7684\uff0c\u5bf9\u901a\u4fe1\u73af\u8282\u7684\u7ec6\u8282\u7684\u6df1\u5165\u7406\u89e3\u4f1a\u5927\u6709\u88e8\u76ca\u3002\u53e6\u5916Go\u7684goroutine+\u963b\u585e\u901a\u4fe1\u7684\u7f51\u7edc\u901a\u4fe1\u6a21\u578b\u964d\u4f4e\u4e86\u5f00\u53d1\u8005\u5fc3\u667a\u8d1f\u62c5\uff0c\u7b80\u5316\u4e86\u901a\u4fe1\u7684\u590d\u6742\u6027\uff0c\u8fd9\u70b9\u5c24\u4e3a\u91cd\u8981\u3002 \u672c\u6587\u4ee3\u7801\u5b9e\u9a8c\u73af\u5883\uff1ago 1.5.1 on Darwin amd64\u4ee5\u53ca\u90e8\u5206\u5728ubuntu 14.04 amd64\u3002","title":"Go\u8bed\u8a00TCP Socket\u7f16\u7a0b"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#_1","text":"\u4ecetcp socket\u8bde\u751f\u540e\uff0c\u7f51\u7edc\u7f16\u7a0b\u67b6\u6784\u6a21\u578b\u4e5f\u51e0\u7ecf\u6f14\u5316\uff0c\u5927\u81f4\u662f\uff1a\u201c\u6bcf\u8fdb\u7a0b\u4e00\u4e2a\u8fde\u63a5\u201d \u2013> \u201c\u6bcf\u7ebf\u7a0b\u4e00\u4e2a\u8fde\u63a5\u201d \u2013> \u201cNon-Block + I/O\u591a\u8def\u590d\u7528(linux epoll/windows iocp/freebsd darwin kqueue/solaris Event Port)\u201d\u3002\u4f34\u968f\u7740\u6a21\u578b\u7684\u6f14\u5316\uff0c\u670d\u52a1\u7a0b\u5e8f\u6108\u52a0\u5f3a\u5927\uff0c\u53ef\u4ee5\u652f\u6301\u66f4\u591a\u7684\u8fde\u63a5\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u5904\u7406\u6027\u80fd\u3002 \u76ee\u524d\u4e3b\u6d41web server\u4e00\u822c\u5747\u91c7\u7528\u7684\u90fd\u662f\u201dNon-Block + I/O\u591a\u8def\u590d\u7528\u201d\uff08\u6709\u7684\u4e5f\u7ed3\u5408\u4e86\u591a\u7ebf\u7a0b\u3001\u591a\u8fdb\u7a0b\uff09\u3002\u4e0d\u8fc7I/O\u591a\u8def\u590d\u7528\u4e5f\u7ed9\u4f7f\u7528\u8005\u5e26\u6765\u4e86\u4e0d\u5c0f\u7684\u590d\u6742\u5ea6\uff0c\u4ee5\u81f3\u4e8e\u540e\u7eed\u51fa\u73b0\u4e86\u8bb8\u591a\u9ad8\u6027\u80fd\u7684I/O\u591a\u8def\u590d\u7528\u6846\u67b6\uff0c \u6bd4\u5982libevent\u3001libev\u3001libuv\u7b49\uff0c\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u7b80\u5316\u5f00\u53d1\u590d\u6742\u6027\uff0c\u964d\u4f4e\u5fc3\u667a\u8d1f\u62c5\u3002\u4e0d\u8fc7Go\u7684\u8bbe\u8ba1\u8005\u4f3c\u4e4e\u8ba4\u4e3aI/O\u591a\u8def\u590d\u7528\u7684\u8fd9\u79cd\u901a\u8fc7\u56de\u8c03\u673a\u5236\u5272\u88c2\u63a7\u5236\u6d41 \u7684\u65b9\u5f0f\u4f9d\u65e7\u590d\u6742\uff0c\u4e14\u6709\u6096\u4e8e\u201c\u4e00\u822c\u903b\u8f91\u201d\u8bbe\u8ba1\uff0c\u4e3a\u6b64Go\u8bed\u8a00\u5c06\u8be5\u201c\u590d\u6742\u6027\u201d\u9690\u85cf\u5728Runtime\u4e2d\u4e86\uff1aGo\u5f00\u53d1\u8005\u65e0\u9700\u5173\u6ce8socket\u662f\u5426\u662f non-block\u7684\uff0c\u4e5f\u65e0\u9700\u4eb2\u81ea\u6ce8\u518c\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u56de\u8c03\uff0c\u53ea\u9700\u5728\u6bcf\u4e2a\u8fde\u63a5\u5bf9\u5e94\u7684goroutine\u4e2d\u4ee5\u201cblock I/O\u201d\u7684\u65b9\u5f0f\u5bf9\u5f85socket\u5904\u7406\u5373\u53ef\uff0c\u8fd9\u53ef\u4ee5\u8bf4\u5927\u5927\u964d\u4f4e\u4e86\u5f00\u53d1\u4eba\u5458\u7684\u5fc3\u667a\u8d1f\u62c5\u3002\u4e00\u4e2a\u5178\u578b\u7684Go server\u7aef\u7a0b\u5e8f\u5927\u81f4\u5982\u4e0b\uff1a //go-tcpsock/server.go func handleConn(c net.Conn) { defer c.Close() for { // read from the connection // ... ... // write to the connection //... ... } } func main() { l, err := net.Listen(\"tcp\", \":8888\") if err != nil { fmt.Println(\"listen error:\", err) return } for { c, err := l.Accept() if err != nil { fmt.Println(\"accept error:\", err) break } // start a new goroutine to handle // the new connection. go handleConn(c) } } \u7528\u6237\u5c42\u773c\u4e2d\u770b\u5230\u7684goroutine\u4e2d\u7684\u201cblock socket\u201d\uff0c\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7Go runtime\u4e2d\u7684netpoller\u901a\u8fc7Non-block socket + I/O\u591a\u8def\u590d\u7528\u673a\u5236\u201c\u6a21\u62df\u201d\u51fa\u6765\u7684\uff0c\u771f\u5b9e\u7684underlying socket\u5b9e\u9645\u4e0a\u662fnon-block\u7684\uff0c\u53ea\u662fruntime\u62e6\u622a\u4e86\u5e95\u5c42socket\u7cfb\u7edf\u8c03\u7528\u7684\u9519\u8bef\u7801\uff0c\u5e76\u901a\u8fc7netpoller\u548cgoroutine \u8c03\u5ea6\u8ba9goroutine\u201c\u963b\u585e\u201d\u5728\u7528\u6237\u5c42\u5f97\u5230\u7684Socket fd\u4e0a\u3002\u6bd4\u5982\uff1a\u5f53\u7528\u6237\u5c42\u9488\u5bf9\u67d0\u4e2asocket fd\u53d1\u8d77read\u64cd\u4f5c\u65f6\uff0c\u5982\u679c\u8be5socket fd\u4e2d\u5c1a\u65e0\u6570\u636e\uff0c\u90a3\u4e48runtime\u4f1a\u5c06\u8be5socket fd\u52a0\u5165\u5230netpoller\u4e2d\u76d1\u542c\uff0c\u540c\u65f6\u5bf9\u5e94\u7684goroutine\u88ab\u6302\u8d77\uff0c\u76f4\u5230runtime\u6536\u5230socket fd \u6570\u636eready\u7684\u901a\u77e5\uff0cruntime\u624d\u4f1a\u91cd\u65b0\u5524\u9192\u7b49\u5f85\u5728\u8be5socket fd\u4e0a\u51c6\u5907read\u7684\u90a3\u4e2aGoroutine\u3002\u800c\u8fd9\u4e2a\u8fc7\u7a0b\u4eceGoroutine\u7684\u89c6\u89d2\u6765\u770b\uff0c\u5c31\u50cf\u662fread\u64cd\u4f5c\u4e00\u76f4block\u5728\u90a3\u4e2asocket fd\u4e0a\u4f3c\u7684\u3002\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u5728\u540e\u7eed\u573a\u666f\u4e2d\u4f1a\u6709\u8865\u5145\u63cf\u8ff0\u3002","title":"\u4e00\u3001\u6a21\u578b"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#tcp","text":"\u4f17\u6240\u5468\u77e5\uff0cTCP Socket\u7684\u8fde\u63a5\u7684\u5efa\u7acb\u9700\u8981\u7ecf\u5386\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u4e09\u6b21\u63e1\u624b\u7684\u8fc7\u7a0b\u3002\u8fde\u63a5\u5efa\u7acb\u8fc7\u7a0b\u4e2d\uff0c\u670d\u52a1\u7aef\u662f\u4e00\u4e2a\u6807\u51c6\u7684Listen + Accept\u7684\u7ed3\u6784(\u53ef\u53c2\u8003\u4e0a\u9762\u7684\u4ee3\u7801)\uff0c\u800c\u5728\u5ba2\u6237\u7aefGo\u8bed\u8a00\u4f7f\u7528net.Dial\u6216DialTimeout\u8fdb\u884c\u8fde\u63a5\u5efa\u7acb\uff1a \u963b\u585eDial\uff1a conn, err := net.Dial(\"tcp\", \"google.com:80\") if err != nil { //handle error } // read or write on conn \u6216\u662f\u5e26\u4e0a\u8d85\u65f6\u673a\u5236\u7684Dial\uff1a conn, err := net.DialTimeout(\"tcp\", \":8080\", 2 * time.Second) if err != nil { //handle error } // read or write on conn \u5bf9\u4e8e\u5ba2\u6237\u7aef\u800c\u8a00\uff0c\u8fde\u63a5\u7684\u5efa\u7acb\u4f1a\u9047\u5230\u5982\u4e0b\u51e0\u79cd\u60c5\u5f62\uff1a","title":"\u4e8c\u3001TCP\u8fde\u63a5\u7684\u5efa\u7acb"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#1","text":"\u5982\u679c\u4f20\u7ed9Dial\u7684Addr\u662f\u53ef\u4ee5\u7acb\u5373\u5224\u65ad\u51fa\u7f51\u7edc\u4e0d\u53ef\u8fbe\uff0c\u6216\u8005Addr\u4e2d\u7aef\u53e3\u5bf9\u5e94\u7684\u670d\u52a1\u6ca1\u6709\u542f\u52a8\uff0c\u7aef\u53e3\u672a\u88ab\u76d1\u542c\uff0cDial\u4f1a\u51e0\u4e4e\u7acb\u5373\u8fd4\u56de\u9519\u8bef\uff0c\u6bd4\u5982\uff1a //go-tcpsock/conn_establish/client1.go ... ... func main() { log.Println(\"begin dial...\") conn, err := net.Dial(\"tcp\", \":8888\") if err != nil { log.Println(\"dial error:\", err) return } defer conn.Close() log.Println(\"dial ok\") } \u5982\u679c\u672c\u673a8888\u7aef\u53e3\u672a\u6709\u670d\u52a1\u7a0b\u5e8f\u76d1\u542c\uff0c\u90a3\u4e48\u6267\u884c\u4e0a\u9762\u7a0b\u5e8f\uff0cDial\u4f1a\u5f88\u5feb\u8fd4\u56de\u9519\u8bef\uff1a $go run client1.go 2015/11/16 14:37:41 begin dial... 2015/11/16 14:37:41 dial error: dial tcp :8888: getsockopt: connection refused","title":"1\u3001\u7f51\u7edc\u4e0d\u53ef\u8fbe\u6216\u5bf9\u65b9\u670d\u52a1\u672a\u542f\u52a8"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#2listen-backlog","text":"\u8fd8\u6709\u4e00\u79cd\u573a\u666f\u5c31\u662f\u5bf9\u65b9\u670d\u52a1\u5668\u5f88\u5fd9\uff0c\u77ac\u95f4\u6709\u5927\u91cfclient\u7aef\u8fde\u63a5\u5c1d\u8bd5\u5411server\u5efa\u7acb\uff0cserver\u7aef\u7684listen backlog\u961f\u5217\u6ee1\uff0cserver accept\u4e0d\u53ca\u65f6((\u5373\u4fbf\u4e0daccept\uff0c\u90a3\u4e48\u5728backlog\u6570\u91cf\u8303\u7574\u91cc\u9762\uff0cconnect\u90fd\u4f1a\u662f\u6210\u529f\u7684\uff0c\u56e0\u4e3anew conn\u5df2\u7ecf\u52a0\u5165\u5230server side\u7684listen queue\u4e2d\u4e86\uff0caccept\u53ea\u662f\u4ecequeue\u4e2d\u53d6\u51fa\u4e00\u4e2aconn\u800c\u5df2)\uff0c\u8fd9\u5c06\u5bfc\u81f4client\u7aefDial\u963b\u585e\u3002\u6211\u4eec\u8fd8\u662f\u901a\u8fc7\u4f8b\u5b50\u611f\u53d7Dial\u7684\u884c\u4e3a\u7279\u70b9\uff1a \u670d\u52a1\u7aef\u4ee3\u7801\uff1a //go-tcpsock/conn_establish/server2.go ... ... func main() { l, err := net.Listen(\"tcp\", \":8888\") if err != nil { log.Println(\"error listen:\", err) return } defer l.Close() log.Println(\"listen ok\") var i int for { time.Sleep(time.Second * 10) if _, err := l.Accept(); err != nil { log.Println(\"accept error:\", err) break } i++ log.Printf(\"%d: accept a new connection\\n\", i) } } \u5ba2\u6237\u7aef\u4ee3\u7801\uff1a //go-tcpsock/conn_establish/client2.go ... ... func establishConn(i int) net.Conn { conn, err := net.Dial(\"tcp\", \":8888\") if err != nil { log.Printf(\"%d: dial error: %s\", i, err) return nil } log.Println(i, \":connect to server ok\") return conn } func main() { var sl []net.Conn for i := 1; i < 1000; i++ { conn := establishConn(i) if conn != nil { sl = append(sl, conn) } } time.Sleep(time.Second * 10000) } \u4ece\u7a0b\u5e8f\u53ef\u4ee5\u770b\u51fa\uff0c\u670d\u52a1\u7aef\u5728listen\u6210\u529f\u540e\uff0c\u6bcf\u969410s\u949faccept\u4e00\u6b21\u3002\u5ba2\u6237\u7aef\u5219\u662f\u4e32\u884c\u7684\u5c1d\u8bd5\u5efa\u7acb\u8fde\u63a5\u3002\u8fd9\u4e24\u4e2a\u7a0b\u5e8f\u5728Darwin\u4e0b\u7684\u6267\u884c \u7ed3\u679c\uff1a $go run server2.go 2015/11/16 21:55:41 listen ok 2015/11/16 21:55:51 1: accept a new connection 2015/11/16 21:56:01 2: accept a new connection ... ... $go run client2.go 2015/11/16 21:55:44 1 :connect to server ok 2015/11/16 21:55:44 2 :connect to server ok 2015/11/16 21:55:44 3 :connect to server ok ... ... 2015/11/16 21:55:44 126 :connect to server ok 2015/11/16 21:55:44 127 :connect to server ok 2015/11/16 21:55:44 128 :connect to server ok 2015/11/16 21:55:52 129 :connect to server ok 2015/11/16 21:56:03 130 :connect to server ok 2015/11/16 21:56:14 131 :connect to server ok ... ... \u53ef\u4ee5\u770b\u51faClient\u521d\u59cb\u65f6\u6210\u529f\u5730\u4e00\u6b21\u6027\u5efa\u7acb\u4e86128\u4e2a\u8fde\u63a5\uff0c\u7136\u540e\u540e\u7eed\u6bcf\u963b\u585e\u8fd110s\u624d\u80fd\u6210\u529f\u5efa\u7acb\u4e00\u6761\u8fde\u63a5\u3002\u4e5f\u5c31\u662f\u8bf4\u5728server\u7aef backlog\u6ee1\u65f6(\u672a\u53ca\u65f6accept)\uff0c\u5ba2\u6237\u7aef\u5c06\u963b\u585e\u5728Dial\u4e0a\uff0c\u76f4\u5230server\u7aef\u8fdb\u884c\u4e00\u6b21accept\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u662f128\uff0c\u8fd9\u4e0edarwin \u4e0b\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u6709\u5173\uff1a $sysctl -a|grep kern.ipc.somaxconn kern.ipc.somaxconn: 128 \u5982\u679c\u6211\u5728ubuntu 14.04\u4e0a\u8fd0\u884c\u4e0a\u8ff0server\u7a0b\u5e8f\uff0c\u6211\u4eec\u7684client\u7aef\u521d\u59cb\u53ef\u4ee5\u6210\u529f\u5efa\u7acb499\u6761\u8fde\u63a5\u3002 \u5982\u679cserver\u4e00\u76f4\u4e0daccept\uff0cclient\u7aef\u4f1a\u4e00\u76f4\u963b\u585e\u4e48\uff1f\u6211\u4eec\u53bb\u6389accept\u540e\u7684\u7ed3\u679c\u662f\uff1a\u5728Darwin\u4e0b\uff0cclient\u7aef\u4f1a\u963b\u585e\u5927 \u7ea61\u5206\u591a\u949f\u624d\u4f1a\u8fd4\u56detimeout\uff1a 2015/11/16 22:03:31 128 :connect to server ok 2015/11/16 22:04:48 129: dial error: dial tcp :8888: getsockopt: operation timed out \u800c\u5982\u679cserver\u8fd0\u884c\u5728ubuntu 14.04\u4e0a\uff0cclient\u4f3c\u4e4e\u4e00\u76f4\u963b\u585e\uff0c\u6211\u7b49\u4e8610\u591a\u5206\u949f\u4f9d\u65e7\u6ca1\u6709\u8fd4\u56de\u3002 \u963b\u585e\u4e0e\u5426\u770b\u6765\u4e0eserver\u7aef\u7684\u7f51\u7edc\u5b9e\u73b0\u548c\u8bbe\u7f6e\u6709\u5173\u3002","title":"2\u3001\u5bf9\u65b9\u670d\u52a1\u7684listen backlog\u6ee1"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#3dial","text":"\u5982\u679c\u7f51\u7edc\u5ef6\u8fdf\u8f83\u5927\uff0cTCP\u63e1\u624b\u8fc7\u7a0b\u5c06\u66f4\u52a0\u8270\u96be\u574e\u5777\uff08\u5404\u79cd\u4e22\u5305\uff09\uff0c\u65f6\u95f4\u6d88\u8017\u7684\u81ea\u7136\u4e5f\u4f1a\u66f4\u957f\u3002Dial\u8fd9\u65f6\u4f1a\u963b\u585e\uff0c\u5982\u679c\u957f\u65f6\u95f4\u4f9d\u65e7\u65e0\u6cd5\u5efa\u7acb\u8fde\u63a5\uff0c\u5219Dial\u4e5f\u4f1a\u8fd4\u56de\u201c getsockopt: operation timed out\u201d\u9519\u8bef\u3002 \u5728\u8fde\u63a5\u5efa\u7acb\u9636\u6bb5\uff0c\u591a\u6570\u60c5\u51b5\u4e0b\uff0cDial\u662f\u53ef\u4ee5\u6ee1\u8db3\u9700\u6c42\u7684\uff0c\u5373\u4fbf\u963b\u585e\u4e00\u5c0f\u4f1a\u513f\u3002\u4f46\u5bf9\u4e8e\u67d0\u4e9b\u7a0b\u5e8f\u800c\u8a00\uff0c\u9700\u8981\u6709\u4e25\u683c\u7684\u8fde\u63a5\u65f6\u95f4\u9650\u5b9a\uff0c\u5982\u679c\u4e00\u5b9a\u65f6\u95f4\u5185\u6ca1\u80fd\u6210\u529f\u5efa\u7acb\u8fde\u63a5\uff0c\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u9700\u8981\u6267\u884c\u4e00\u6bb5\u201c\u5f02\u5e38\u201d\u5904\u7406\u903b\u8f91\uff0c\u4e3a\u6b64\u6211\u4eec\u5c31\u9700\u8981DialTimeout\u4e86\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u5c06Dial\u7684\u6700\u957f\u963b\u585e\u65f6\u95f4\u9650\u5236\u57282s\u5185\uff0c\u8d85\u51fa\u8fd9\u4e2a\u65f6\u957f\uff0cDial\u5c06\u8fd4\u56detimeout error\uff1a //go-tcpsock/conn_establish/client3.go ... ... func main() { log.Println(\"begin dial...\") conn, err := net.DialTimeout(\"tcp\", \"104.236.176.96:80\", 2*time.Second) if err != nil { log.Println(\"dial error:\", err) return } defer conn.Close() log.Println(\"dial ok\") } \u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff08\u9700\u8981\u6a21\u62df\u4e00\u4e2a\u5ef6\u8fdf\u8f83\u5927\u7684\u7f51\u7edc\u73af\u5883\uff09\uff1a $go run client3.go 2015/11/17 09:28:34 begin dial... 2015/11/17 09:28:36 dial error: dial tcp 104.236.176.96:80: i/o timeout","title":"3\u3001\u7f51\u7edc\u5ef6\u8fdf\u8f83\u5927\uff0cDial\u963b\u585e\u5e76\u8d85\u65f6"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#socket","text":"\u8fde\u63a5\u5efa\u7acb\u8d77\u6765\u540e\uff0c\u6211\u4eec\u5c31\u8981\u5728conn\u4e0a\u8fdb\u884c\u8bfb\u5199\uff0c\u4ee5\u5b8c\u6210\u4e1a\u52a1\u903b\u8f91\u3002\u524d\u9762\u8bf4\u8fc7Go runtime\u9690\u85cf\u4e86I/O\u591a\u8def\u590d\u7528\u7684\u590d\u6742\u6027\u3002\u8bed\u8a00\u4f7f\u7528\u8005\u53ea\u9700\u91c7\u7528goroutine+Block I/O\u7684\u6a21\u5f0f\u5373\u53ef\u6ee1\u8db3\u5927\u90e8\u5206\u573a\u666f\u9700\u6c42\u3002Dial\u6210\u529f\u540e\uff0c\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2anet.Conn\u63a5\u53e3\u7c7b\u578b\u53d8\u91cf\u503c\uff0c\u8fd9\u4e2a\u63a5\u53e3\u53d8\u91cf\u7684\u52a8\u6001\u7c7b\u578b\u4e3a\u4e00\u4e2a*TCPConn\uff1a //$GOROOT/src/net/tcpsock_posix.go type TCPConn struct { conn } TCPConn\u5185\u5d4c\u4e86\u4e00\u4e2aunexported\u7c7b\u578b\uff1aconn\uff0c\u56e0\u6b64TCPConn\u201d\u7ee7\u627f\u201d\u4e86conn\u7684Read\u548cWrite\u65b9\u6cd5\uff0c\u540e\u7eed\u901a\u8fc7Dial\u8fd4\u56de\u503c\u8c03\u7528\u7684Write\u548cRead\u65b9\u6cd5\u5747\u662fnet.conn\u7684\u65b9\u6cd5\uff1a //$GOROOT/src/net/net.go type conn struct { fd *netFD } func (c *conn) ok() bool { return c != nil && c.fd != nil } // Implementation of the Conn interface. // Read implements the Conn Read method. func (c *conn) Read(b []byte) (int, error) { if !c.ok() { return 0, syscall.EINVAL } n, err := c.fd.Read(b) if err != nil && err != io.EOF { err = &OpError{Op: \"read\", Net: c.fd.net, Source: c.fd.laddr, Addr: c.fd.raddr, Err: err} } return n, err } // Write implements the Conn Write method. func (c *conn) Write(b []byte) (int, error) { if !c.ok() { return 0, syscall.EINVAL } n, err := c.fd.Write(b) if err != nil { err = &OpError{Op: \"write\", Net: c.fd.net, Source: c.fd.laddr, Addr: c.fd.raddr, Err: err} } return n, err } \u4e0b\u9762\u6211\u4eec\u5148\u6765\u901a\u8fc7\u51e0\u4e2a\u573a\u666f\u6765\u603b\u7ed3\u4e00\u4e0bconn.Read\u7684\u884c\u4e3a\u7279\u70b9\u3002","title":"\u4e09\u3001Socket\u8bfb\u5199"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#1socket","text":"\u8fde\u63a5\u5efa\u7acb\u540e\uff0c\u5982\u679c\u5bf9\u65b9\u672a\u53d1\u9001\u6570\u636e\u5230socket\uff0c\u63a5\u6536\u65b9(Server)\u4f1a\u963b\u585e\u5728Read\u64cd\u4f5c\u4e0a\uff0c\u8fd9\u548c\u524d\u9762\u63d0\u5230\u7684\u201c\u6a21\u578b\u201d\u539f\u7406\u662f\u4e00\u81f4\u7684\u3002\u6267\u884c\u8be5Read\u64cd\u4f5c\u7684goroutine\u4e5f\u4f1a\u88ab\u6302\u8d77\u3002runtime\u4f1a\u76d1\u89c6\u8be5socket\uff0c\u76f4\u5230\u5176\u6709\u6570\u636e\u624d\u4f1a\u91cd\u65b0 \u8c03\u5ea6\u8be5socket\u5bf9\u5e94\u7684Goroutine\u5b8c\u6210read\u3002\u7531\u4e8e\u7bc7\u5e45\u539f\u56e0\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5217\u4ee3\u7801\u4e86\uff0c\u4f8b\u5b50\u5bf9\u5e94\u7684\u4ee3\u7801\u6587\u4ef6\uff1ago-tcpsock/read_write\u4e0b\u7684client1.go\u548cserver1.go\u3002","title":"1\u3001Socket\u4e2d\u65e0\u6570\u636e"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#2socket","text":"\u5982\u679csocket\u4e2d\u6709\u90e8\u5206\u6570\u636e\uff0c\u4e14\u957f\u5ea6\u5c0f\u4e8e\u4e00\u6b21Read\u64cd\u4f5c\u6240\u671f\u671b\u8bfb\u51fa\u7684\u6570\u636e\u957f\u5ea6\uff0c\u90a3\u4e48Read\u5c06\u4f1a\u6210\u529f\u8bfb\u51fa\u8fd9\u90e8\u5206\u6570\u636e\u5e76\u8fd4\u56de\uff0c\u800c\u4e0d\u662f\u7b49\u5f85\u6240\u6709\u671f\u671b\u6570\u636e\u5168\u90e8\u8bfb\u53d6\u540e\u518d\u8fd4\u56de\u3002 Client\u7aef\uff1a //go-tcpsock/read_write/client2.go ... ... func main() { if len(os.Args) <= 1 { fmt.Println(\"usage: go run client2.go YOUR_CONTENT\") return } log.Println(\"begin dial...\") conn, err := net.Dial(\"tcp\", \":8888\") if err != nil { log.Println(\"dial error:\", err) return } defer conn.Close() log.Println(\"dial ok\") time.Sleep(time.Second * 2) data := os.Args[1] conn.Write([]byte(data)) time.Sleep(time.Second * 10000) } Server\u7aef\uff1a //go-tcpsock/read_write/server2.go ... ... func handleConn(c net.Conn) { defer c.Close() for { // read from the connection var buf = make([]byte, 10) log.Println(\"start to read from conn\") n, err := c.Read(buf) if err != nil { log.Println(\"conn read error:\", err) return } log.Printf(\"read %d bytes, content is %s\\n\", n, string(buf[:n])) } } ... ... \u6211\u4eec\u901a\u8fc7client2.go\u53d1\u9001\u201dhi\u201d\u5230Server\u7aef\uff1a \u8fd0\u884c\u7ed3\u679c: $go run client2.go hi 2015/11/17 13:30:53 begin dial... 2015/11/17 13:30:53 dial ok $go run server2.go 2015/11/17 13:33:45 accept a new connection 2015/11/17 13:33:45 start to read from conn 2015/11/17 13:33:47 read 2 bytes, content is hi ... Client\u5411socket\u4e2d\u5199\u5165\u4e24\u4e2a\u5b57\u8282\u6570\u636e(\u201chi\u201d)\uff0cServer\u7aef\u521b\u5efa\u4e00\u4e2alen = 10\u7684slice\uff0c\u7b49\u5f85Read\u5c06\u8bfb\u53d6\u7684\u6570\u636e\u653e\u5165slice\uff1bServer\u968f\u540e\u8bfb\u53d6\u5230\u90a3\u4e24\u4e2a\u5b57\u8282\uff1a\u201dhi\u201d\u3002Read\u6210\u529f\u8fd4\u56de\uff0cn =2 \uff0cerr = nil\u3002","title":"2\u3001Socket\u4e2d\u6709\u90e8\u5206\u6570\u636e"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#3socket","text":"\u5982\u679csocket\u4e2d\u6709\u6570\u636e\uff0c\u4e14\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e\u4e00\u6b21Read\u64cd\u4f5c\u6240\u671f\u671b\u8bfb\u51fa\u7684\u6570\u636e\u957f\u5ea6\uff0c\u90a3\u4e48Read\u5c06\u4f1a\u6210\u529f\u8bfb\u51fa\u8fd9\u90e8\u5206\u6570\u636e\u5e76\u8fd4\u56de\u3002\u8fd9\u4e2a\u60c5\u666f\u662f\u6700\u7b26\u5408\u6211\u4eec\u5bf9Read\u7684\u671f\u5f85\u7684\u4e86\uff1aRead\u5c06\u7528Socket\u4e2d\u7684\u6570\u636e\u5c06\u6211\u4eec\u4f20\u5165\u7684slice\u586b\u6ee1\u540e\u8fd4\u56de\uff1an = 10, err = nil\u3002 \u6211\u4eec\u901a\u8fc7client2.go\u5411Server2\u53d1\u9001\u5982\u4e0b\u5185\u5bb9\uff1aabcdefghij12345\uff0c\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $go run client2.go abcdefghij12345 2015/11/17 13:38:00 begin dial... 2015/11/17 13:38:00 dial ok $go run server2.go 2015/11/17 13:38:00 accept a new connection 2015/11/17 13:38:00 start to read from conn 2015/11/17 13:38:02 read 10 bytes, content is abcdefghij 2015/11/17 13:38:02 start to read from conn 2015/11/17 13:38:02 read 5 bytes, content is 12345 client\u7aef\u53d1\u9001\u7684\u5185\u5bb9\u957f\u5ea6\u4e3a15\u4e2a\u5b57\u8282\uff0cServer\u7aefRead buffer\u7684\u957f\u5ea6\u4e3a10\uff0c\u56e0\u6b64Server Read\u7b2c\u4e00\u6b21\u8fd4\u56de\u65f6\u53ea\u4f1a\u8bfb\u53d610\u4e2a\u5b57\u8282\uff1bSocket\u4e2d\u8fd8\u5269\u4f595\u4e2a\u5b57\u8282\u6570\u636e\uff0cServer\u518d\u6b21Read\u65f6\u4f1a\u628a\u5269\u4f59\u6570\u636e\u8bfb\u51fa\uff08\u5982\uff1a\u60c5\u5f622\uff09\u3002","title":"3\u3001Socket\u4e2d\u6709\u8db3\u591f\u6570\u636e"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#4socket","text":"\u5982\u679cclient\u7aef\u4e3b\u52a8\u5173\u95ed\u4e86socket\uff0c\u90a3\u4e48Server\u7684Read\u5c06\u4f1a\u8bfb\u5230\u4ec0\u4e48\u5462\uff1f\u8fd9\u91cc\u5206\u4e3a\u201c\u6709\u6570\u636e\u5173\u95ed\u201d\u548c\u201c\u65e0\u6570\u636e\u5173\u95ed\u201d\u3002 \u201c\u6709\u6570\u636e\u5173\u95ed\u201d\u662f\u6307\u5728client\u5173\u95ed\u65f6\uff0csocket\u4e2d\u8fd8\u6709server\u7aef\u672a\u8bfb\u53d6\u7684\u6570\u636e\uff0c\u6211\u4eec\u5728go-tcpsock/read_write/client3.go\u548cserver3.go\u4e2d\u6a21\u62df\u8fd9\u79cd\u60c5\u51b5\uff1a $go run client3.go hello 2015/11/17 13:50:57 begin dial... 2015/11/17 13:50:57 dial ok $go run server3.go 2015/11/17 13:50:57 accept a new connection 2015/11/17 13:51:07 start to read from conn 2015/11/17 13:51:07 read 5 bytes, content is hello 2015/11/17 13:51:17 start to read from conn 2015/11/17 13:51:17 conn read error: EOF \u4ece\u8f93\u51fa\u7ed3\u679c\u6765\u770b\uff0c\u5f53client\u7aefclose socket\u9000\u51fa\u540e\uff0cserver3\u4f9d\u65e7\u6ca1\u6709\u5f00\u59cbRead\uff0c10s\u540e\u7b2c\u4e00\u6b21Read\u6210\u529f\u8bfb\u51fa\u4e865\u4e2a\u5b57\u8282\u7684\u6570\u636e\uff0c\u5f53\u7b2c\u4e8c\u6b21Read\u65f6\uff0c\u7531\u4e8eclient\u7aef socket\u5173\u95ed\uff0cRead\u8fd4\u56deEOF error\u3002 \u901a\u8fc7\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u731c\u6d4b\u51fa\u201c\u65e0\u6570\u636e\u5173\u95ed\u201d\u60c5\u5f62\u4e0b\u7684\u7ed3\u679c\uff0c\u90a3\u5c31\u662fRead\u76f4\u63a5\u8fd4\u56deEOF error\u3002","title":"4\u3001Socket\u5173\u95ed"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#5","text":"\u6709\u4e9b\u573a\u5408\u5bf9Read\u7684\u963b\u585e\u65f6\u95f4\u6709\u4e25\u683c\u9650\u5236\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cRead\u7684\u884c\u4e3a\u5230\u5e95\u662f\u4ec0\u4e48\u6837\u7684\u5462\uff1f\u5728\u8fd4\u56de\u8d85\u65f6\u9519\u8bef\u65f6\uff0c\u662f\u5426\u4e5f\u540c\u65f6Read\u4e86\u4e00\u90e8\u5206\u6570\u636e\u4e86\u5462\uff1f\u8fd9\u4e2a\u5b9e\u9a8c\u6bd4\u8f83\u96be\u4e8e\u6a21\u62df\uff0c\u4e0b\u9762\u7684\u6d4b\u8bd5\u7ed3\u679c\u4e5f\u672a\u5fc5\u80fd\u53cd\u6620\u51fa\u6240\u6709\u53ef\u80fd\u7ed3\u679c\u3002\u6211\u4eec\u7f16\u5199\u4e86client4.go\u548cserver4.go\u6765\u6a21\u62df\u8fd9\u4e00\u60c5\u5f62\u3002 //go-tcpsock/read_write/client4.go ... ... func main() { log.Println(\"begin dial...\") conn, err := net.Dial(\"tcp\", \":8888\") if err != nil { log.Println(\"dial error:\", err) return } defer conn.Close() log.Println(\"dial ok\") data := make([]byte, 65536) conn.Write(data) time.Sleep(time.Second * 10000) } //go-tcpsock/read_write/server4.go ... ... func handleConn(c net.Conn) { defer c.Close() for { // read from the connection time.Sleep(10 * time.Second) var buf = make([]byte, 65536) log.Println(\"start to read from conn\") c.SetReadDeadline(time.Now().Add(time.Microsecond * 10)) n, err := c.Read(buf) if err != nil { log.Printf(\"conn read %d bytes, error: %s\", n, err) if nerr, ok := err.(net.Error); ok && nerr.Timeout() { continue } return } log.Printf(\"read %d bytes, content is %s\\n\", n, string(buf[:n])) } } \u5728Server\u7aef\u6211\u4eec\u901a\u8fc7Conn\u7684SetReadDeadline\u65b9\u6cd5\u8bbe\u7f6e\u4e8610\u5fae\u79d2\u7684\u8bfb\u8d85\u65f6\u65f6\u95f4\uff0cServer\u7684\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $go run server4.go 2015/11/17 14:21:17 accept a new connection 2015/11/17 14:21:27 start to read from conn 2015/11/17 14:21:27 conn read 0 bytes, error: read tcp 127.0.0.1:8888->127.0.0.1:60970: i/o timeout 2015/11/17 14:21:37 start to read from conn 2015/11/17 14:21:37 read 65536 bytes, content is \u867d\u7136\u6bcf\u6b21\u90fd\u662f10\u5fae\u79d2\u8d85\u65f6\uff0c\u4f46\u7ed3\u679c\u4e0d\u540c\uff0c\u7b2c\u4e00\u6b21Read\u8d85\u65f6\uff0c\u8bfb\u51fa\u6570\u636e\u957f\u5ea6\u4e3a0\uff1b\u7b2c\u4e8c\u6b21\u8bfb\u53d6\u6240\u6709\u6570\u636e\u6210\u529f\uff0c\u6ca1\u6709\u8d85\u65f6\u3002\u53cd\u590d\u6267\u884c\u4e86\u591a\u6b21\uff0c\u6ca1\u80fd\u51fa\u73b0\u201c\u8bfb\u51fa\u90e8\u5206\u6570\u636e\u4e14\u8fd4\u56de\u8d85\u65f6\u9519\u8bef\u201d\u7684\u60c5\u51b5\u3002 \u548c\u8bfb\u76f8\u6bd4\uff0cWrite\u9047\u5230\u7684\u60c5\u5f62\u4e00\u6837\u4e0d\u5c11\uff0c\u6211\u4eec\u4e5f\u9010\u4e00\u770b\u4e00\u4e0b\u3002","title":"5\u3001\u8bfb\u53d6\u64cd\u4f5c\u8d85\u65f6"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#1_1","text":"\u524d\u9762\u4f8b\u5b50\u7740\u91cd\u4e8eRead\uff0cclient\u7aef\u5728Write\u65f6\u5e76\u672a\u5224\u65adWrite\u7684\u8fd4\u56de\u503c\u3002\u6240\u8c13\u201c\u6210\u529f\u5199\u201d\u6307\u7684\u5c31\u662fWrite\u8c03\u7528\u8fd4\u56de\u7684n\u4e0e\u9884\u671f\u8981\u5199\u5165\u7684\u6570\u636e\u957f\u5ea6\u76f8\u7b49\uff0c\u4e14error = nil\u3002\u8fd9\u662f\u6211\u4eec\u5728\u8c03\u7528Write\u65f6\u9047\u5230\u7684\u6700\u5e38\u89c1\u7684\u60c5\u5f62\uff0c\u8fd9\u91cc\u4e0d\u518d\u4e3e\u4f8b\u4e86\u3002","title":"1\u3001\u6210\u529f\u5199"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#2","text":"TCP\u8fde\u63a5\u901a\u4fe1\u4e24\u7aef\u7684OS\u90fd\u4f1a\u4e3a\u8be5\u8fde\u63a5\u4fdd\u7559\u6570\u636e\u7f13\u51b2\uff0c\u4e00\u7aef\u8c03\u7528Write\u540e\uff0c\u5b9e\u9645\u4e0a\u6570\u636e\u662f\u5199\u5165\u5230OS\u7684\u534f\u8bae\u6808\u7684\u6570\u636e\u7f13\u51b2\u7684\u3002TCP\u662f\u5168\u53cc\u5de5\u901a\u4fe1\uff0c\u56e0\u6b64\u6bcf\u4e2a\u65b9\u5411\u90fd\u6709\u72ec\u7acb\u7684\u6570\u636e\u7f13\u51b2\u3002\u5f53\u53d1\u9001\u65b9\u5c06\u5bf9\u65b9\u7684\u63a5\u6536\u7f13\u51b2\u533a\u4ee5\u53ca\u81ea\u8eab\u7684\u53d1\u9001\u7f13\u51b2\u533a\u5199\u6ee1\u540e\uff0cWrite\u5c31\u4f1a\u963b\u585e\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1aclient5.go\u548cserver.go\u3002 //go-tcpsock/read_write/client5.go ... ... func main() { log.Println(\"begin dial...\") conn, err := net.Dial(\"tcp\", \":8888\") if err != nil { log.Println(\"dial error:\", err) return } defer conn.Close() log.Println(\"dial ok\") data := make([]byte, 65536) var total int for { n, err := conn.Write(data) if err != nil { total += n log.Printf(\"write %d bytes, error:%s\\n\", n, err) break } total += n log.Printf(\"write %d bytes this time, %d bytes in total\\n\", n, total) } log.Printf(\"write %d bytes in total\\n\", total) time.Sleep(time.Second * 10000) } //go-tcpsock/read_write/server5.go ... ... func handleConn(c net.Conn) { defer c.Close() time.Sleep(time.Second * 10) for { // read from the connection time.Sleep(5 * time.Second) var buf = make([]byte, 60000) log.Println(\"start to read from conn\") n, err := c.Read(buf) if err != nil { log.Printf(\"conn read %d bytes, error: %s\", n, err) if nerr, ok := err.(net.Error); ok && nerr.Timeout() { continue } } log.Printf(\"read %d bytes, content is %s\\n\", n, string(buf[:n])) } } ... ... Server5\u5728\u524d10s\u4e2d\u5e76\u4e0dRead\u6570\u636e\uff0c\u56e0\u6b64\u5f53client5\u4e00\u76f4\u5c1d\u8bd5\u5199\u5165\u65f6\uff0c\u5199\u5230\u4e00\u5b9a\u91cf\u540e\u5c31\u4f1a\u53d1\u751f\u963b\u585e\uff1a $go run client5.go 2015/11/17 14:57:33 begin dial... 2015/11/17 14:57:33 dial ok 2015/11/17 14:57:33 write 65536 bytes this time, 65536 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 131072 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 196608 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 262144 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 327680 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 393216 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 458752 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 524288 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 589824 bytes in total 2015/11/17 14:57:33 write 65536 bytes this time, 655360 bytes in total \u5728Darwin\u4e0a\uff0c\u8fd9\u4e2asize\u5927\u7ea6\u5728679468bytes\u3002\u540e\u7eed\u5f53server5\u6bcf\u96945s\u8fdb\u884cRead\u65f6\uff0cOS socket\u7f13\u51b2\u533a\u817e\u51fa\u4e86\u7a7a\u95f4\uff0cclient5\u5c31\u53c8\u53ef\u4ee5\u5199\u5165\u4e86\uff1a $go run server5.go 2015/11/17 15:07:01 accept a new connection 2015/11/17 15:07:16 start to read from conn 2015/11/17 15:07:16 read 60000 bytes, content is 2015/11/17 15:07:21 start to read from conn 2015/11/17 15:07:21 read 60000 bytes, content is 2015/11/17 15:07:26 start to read from conn 2015/11/17 15:07:26 read 60000 bytes, content is .... client\u7aef\uff1a 2015/11/17 15:07:01 write 65536 bytes this time, 720896 bytes in total 2015/11/17 15:07:06 write 65536 bytes this time, 786432 bytes in total 2015/11/17 15:07:16 write 65536 bytes this time, 851968 bytes in total 2015/11/17 15:07:16 write 65536 bytes this time, 917504 bytes in total 2015/11/17 15:07:27 write 65536 bytes this time, 983040 bytes in total 2015/11/17 15:07:27 write 65536 bytes this time, 1048576 bytes in total .... ...","title":"2\u3001\u5199\u963b\u585e"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#3","text":"Write\u64cd\u4f5c\u5b58\u5728\u5199\u5165\u90e8\u5206\u6570\u636e\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u4e0a\u9762\u4f8b\u5b50\u4e2d\uff0c\u5f53client\u7aef\u8f93\u51fa\u65e5\u5fd7\u505c\u7559\u5728\u201cwrite 65536 bytes this time, 655360 bytes in total\u201d\u65f6\uff0c\u6211\u4eec\u6740\u6389server5\uff0c\u8fd9\u65f6\u6211\u4eec\u4f1a\u770b\u5230client5\u8f93\u51fa\u4ee5\u4e0b\u65e5\u5fd7\uff1a ... 2015/11/17 15:19:14 write 65536 bytes this time, 655360 bytes in total 2015/11/17 15:19:16 write 24108 bytes, error:write tcp 127.0.0.1:62245->127.0.0.1:8888: write: broken pipe 2015/11/17 15:19:16 write 679468 bytes in total \u663e\u7136Write\u5e76\u975e\u5728655360\u8fd9\u4e2a\u5730\u65b9\u963b\u585e\u7684\uff0c\u800c\u662f\u540e\u7eed\u53c8\u5199\u516524108\u540e\u53d1\u751f\u4e86\u963b\u585e\uff0cserver\u7aefsocket\u5173\u95ed\u540e\uff0c\u6211\u4eec\u770b\u5230Wrote\u8fd4\u56deer != nil\u4e14n = 24108\uff0c\u7a0b\u5e8f\u9700\u8981\u5bf9\u8fd9\u90e8\u5206\u5199\u5165\u768424108\u5b57\u8282\u505a\u7279\u5b9a\u5904\u7406\u3002","title":"3\u3001\u5199\u5165\u90e8\u5206\u6570\u636e"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#4","text":"\u5982\u679c\u975e\u8981\u7ed9Write\u589e\u52a0\u4e00\u4e2a\u671f\u9650\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u8c03\u7528SetWriteDeadline\u65b9\u6cd5\u3002\u6211\u4eeccopy\u4e00\u4efdclient5.go\uff0c\u5f62\u6210client6.go\uff0c\u5728client6.go\u7684Write\u4e4b\u524d\u589e\u52a0\u4e00\u884ctimeout\u8bbe\u7f6e\u4ee3\u7801\uff1a conn.SetWriteDeadline(time.Now().Add(time.Microsecond * 10)) \u542f\u52a8server6.go\uff0c\u542f\u52a8client6.go\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5199\u5165\u8d85\u65f6\u7684\u60c5\u51b5\u4e0b\uff0cWrite\u7684\u8fd4\u56de\u7ed3\u679c\uff1a $go run client6.go 2015/11/17 15:26:34 begin dial... 2015/11/17 15:26:34 dial ok 2015/11/17 15:26:34 write 65536 bytes this time, 65536 bytes in total ... ... 2015/11/17 15:26:34 write 65536 bytes this time, 655360 bytes in total 2015/11/17 15:26:34 write 24108 bytes, error:write tcp 127.0.0.1:62325->127.0.0.1:8888: i/o timeout 2015/11/17 15:26:34 write 679468 bytes in total \u53ef\u4ee5\u770b\u5230\u5728\u5199\u5165\u8d85\u65f6\u65f6\uff0c\u4f9d\u65e7\u5b58\u5728\u90e8\u5206\u6570\u636e\u5199\u5165\u7684\u60c5\u51b5\u3002 \u7efc\u4e0a\u4f8b\u5b50\uff0c\u867d\u7136Go\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u963b\u585eI/O\u7684\u4fbf\u5229\uff0c\u4f46\u5728\u8c03\u7528Read\u548cWrite\u65f6\u4f9d\u65e7\u8981\u7efc\u5408\u9700\u8981\u65b9\u6cd5\u8fd4\u56de\u7684n\u548cerr\u7684\u7ed3\u679c\uff0c\u4ee5\u505a\u51fa\u6b63\u786e\u5904\u7406\u3002net.conn\u5b9e\u73b0\u4e86io.Reader\u548cio.Writer\u63a5\u53e3\uff0c\u56e0\u6b64\u53ef\u4ee5\u8bd5\u7528\u4e00\u4e9bwrapper\u5305\u8fdb\u884csocket\u8bfb\u5199\uff0c\u6bd4\u5982bufio\u5305\u4e0b\u9762\u7684Writer\u548cReader\u3001io/ioutil\u4e0b\u7684\u51fd\u6570\u7b49\u3002 Goroutine safe \u57fa\u4e8egoroutine\u7684\u7f51\u7edc\u67b6\u6784\u6a21\u578b\uff0c\u5b58\u5728\u5728\u4e0d\u540cgoroutine\u95f4\u5171\u4eabconn\u7684\u60c5\u51b5\uff0c\u90a3\u4e48conn\u7684\u8bfb\u5199\u662f\u5426\u662fgoroutine safe\u7684\u5462\uff1f\u5728\u6df1\u5165\u8fd9\u4e2a\u95ee\u9898\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u4ece\u5e94\u7528\u610f\u4e49\u4e0a\u6765\u770bread\u64cd\u4f5c\u548cwrite\u64cd\u4f5c\u7684goroutine-safe\u5fc5\u8981\u6027\u3002 \u5bf9\u4e8eread\u64cd\u4f5c\u800c\u8a00\uff0c\u7531\u4e8eTCP\u662f\u9762\u5411\u5b57\u8282\u6d41\uff0cconn.Read\u65e0\u6cd5\u6b63\u786e\u533a\u5206\u6570\u636e\u7684\u4e1a\u52a1\u8fb9\u754c\uff0c\u56e0\u6b64\u591a\u4e2agoroutine\u5bf9\u540c\u4e00\u4e2aconn\u8fdb\u884cread\u7684\u610f\u4e49\u4e0d\u5927\uff0cgoroutine\u8bfb\u5230\u4e0d\u5b8c\u6574\u7684\u4e1a\u52a1\u5305\u53cd\u5012\u662f\u589e\u52a0\u4e86\u4e1a\u52a1\u5904\u7406\u7684\u96be\u5ea6\u3002\u5bf9\u4e0eWrite\u64cd\u4f5c\u800c\u8a00\uff0c\u5012\u662f\u6709\u591a\u4e2agoroutine\u5e76\u53d1\u5199\u7684\u60c5\u51b5\u3002\u4e0d\u8fc7conn\u8bfb\u5199\u662f\u5426goroutine-safe\u7684\u6d4b\u8bd5\u4e0d\u662f\u5f88\u597d\u505a\uff0c\u6211\u4eec\u5148\u6df1\u5165\u4e00\u4e0bruntime\u4ee3\u7801\uff0c\u5148\u4ece\u7406\u8bba\u4e0a\u7ed9\u8fd9\u4e2a\u95ee\u9898\u5b9a\u4e2a\u6027\uff1a net.conn\u53ea\u662fnetFD\u7684wrapper\u7ed3\u6784\uff0c\u6700\u7ec8Write\u548cRead\u90fd\u4f1a\u843d\u5728\u5176\u4e2d\u7684fd\u4e0a\uff1a type conn struct { fd *netFD } netFD\u5728\u4e0d\u540c\u5e73\u53f0\u4e0a\u6709\u7740\u4e0d\u540c\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u4ee5net/fd_unix.go\u4e2d\u7684netFD\u4e3a\u4f8b\uff1a // Network file descriptor. type netFD struct { // locking/lifetime of sysfd + serialize access to Read and Write methods fdmu fdMutex // immutable until Close sysfd int family int sotype int isConnected bool net string laddr Addr raddr Addr // wait server pd pollDesc } \u6211\u4eec\u770b\u5230netFD\u4e2d\u5305\u542b\u4e86\u4e00\u4e2aruntime\u5b9e\u73b0\u7684fdMutex\u7c7b\u578b\u5b57\u6bb5\uff0c\u4ece\u6ce8\u91ca\u4e0a\u6765\u770b\uff0c\u8be5fdMutex\u7528\u6765\u4e32\u884c\u5316\u5bf9\u8be5netFD\u5bf9\u5e94\u7684sysfd\u7684Write\u548cRead\u64cd\u4f5c\u3002\u4ece\u8fd9\u4e2a\u6ce8\u91ca\u4e0a\u6765\u770b\uff0c\u6240\u6709\u5bf9conn\u7684Read\u548cWrite\u64cd\u4f5c\u90fd\u662f\u6709fdMutex\u4e92\u65a5\u7684\uff0c\u4ecenetFD\u7684Read\u548cWrite\u65b9\u6cd5\u7684\u5b9e\u73b0\u4e5f\u8bc1\u5b9e\u4e86\u8fd9\u4e00\u70b9\uff1a func (fd *netFD) Read(p []byte) (n int, err error) { if err := fd.readLock(); err != nil { return 0, err } defer fd.readUnlock() if err := fd.pd.PrepareRead(); err != nil { return 0, err } for { n, err = syscall.Read(fd.sysfd, p) if err != nil { n = 0 if err == syscall.EAGAIN { if err = fd.pd.WaitRead(); err == nil { continue } } } err = fd.eofError(n, err) break } if _, ok := err.(syscall.Errno); ok { err = os.NewSyscallError(\"read\", err) } return } func (fd *netFD) Write(p []byte) (nn int, err error) { if err := fd.writeLock(); err != nil { return 0, err } defer fd.writeUnlock() if err := fd.pd.PrepareWrite(); err != nil { return 0, err } for { var n int n, err = syscall.Write(fd.sysfd, p[nn:]) if n > 0 { nn += n } if nn == len(p) { break } if err == syscall.EAGAIN { if err = fd.pd.WaitWrite(); err == nil { continue } } if err != nil { break } if n == 0 { err = io.ErrUnexpectedEOF break } } if _, ok := err.(syscall.Errno); ok { err = os.NewSyscallError(\"write\", err) } return nn, err } \u6bcf\u6b21Write\u64cd\u4f5c\u90fd\u662f\u53d7lock\u4fdd\u62a4\uff0c\u76f4\u5230\u6b64\u6b21\u6570\u636e\u5168\u90e8write\u5b8c\u3002\u56e0\u6b64\u5728\u5e94\u7528\u5c42\u9762\uff0c\u8981\u60f3\u4fdd\u8bc1\u591a\u4e2agoroutine\u5728\u4e00\u4e2aconn\u4e0awrite\u64cd\u4f5c\u7684Safe\uff0c\u9700\u8981\u4e00\u6b21write\u5b8c\u6574\u5199\u5165\u4e00\u4e2a\u201c\u4e1a\u52a1\u5305\u201d\uff1b\u4e00\u65e6\u5c06\u4e1a\u52a1\u5305\u7684\u5199\u5165\u62c6\u5206\u4e3a\u591a\u6b21write\uff0c\u90a3\u5c31\u65e0\u6cd5\u4fdd\u8bc1\u67d0\u4e2aGoroutine\u7684\u67d0\u201c\u4e1a\u52a1\u5305\u201d\u6570\u636e\u5728conn\u53d1\u9001\u7684\u8fde\u7eed\u6027\u3002 \u540c\u65f6\u4e5f\u53ef\u4ee5\u770b\u51fa\u5373\u4fbf\u662fRead\u64cd\u4f5c\uff0c\u4e5f\u662flock\u4fdd\u62a4\u7684\u3002\u591a\u4e2aGoroutine\u5bf9\u540c\u4e00conn\u7684\u5e76\u53d1\u8bfb\u4e0d\u4f1a\u51fa\u73b0\u8bfb\u51fa\u5185\u5bb9\u91cd\u53e0\u7684\u60c5\u51b5\uff0c\u4f46\u5185\u5bb9\u65ad\u70b9\u662f\u4f9d runtime\u8c03\u5ea6\u6765\u968f\u673a\u786e\u5b9a\u7684\u3002\u5b58\u5728\u4e00\u4e2a\u4e1a\u52a1\u5305\u6570\u636e\uff0c1/3\u5185\u5bb9\u88abgoroutine-1\u8bfb\u8d70\uff0c\u53e6\u59162/3\u88ab\u53e6\u5916\u4e00\u4e2agoroutine-2\u8bfb \u8d70\u7684\u60c5\u51b5\u3002\u6bd4\u5982\u4e00\u4e2a\u5b8c\u6574\u5305\uff1aworld\uff0c\u5f53goroutine\u7684read slice size < 5\u65f6\uff0c\u5b58\u5728\u53ef\u80fd\uff1a\u4e00\u4e2agoroutine\u8bfb\u5230 \u201cworl\u201d,\u53e6\u5916\u4e00\u4e2agoroutine\u8bfb\u51fa\u201dd\u201d\u3002","title":"4\u3001\u5199\u5165\u8d85\u65f6"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#socket_1","text":"\u539f\u751fSocket API\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684sockopt\u8bbe\u7f6e\u63a5\u53e3\uff0c\u4f46Golang\u6709\u81ea\u5df1\u7684\u7f51\u7edc\u67b6\u6784\u6a21\u578b\uff0cgolang\u63d0\u4f9b\u7684socket options\u63a5\u53e3\u4e5f\u662f\u57fa\u4e8e\u4e0a\u8ff0\u6a21\u578b\u7684\u5fc5\u8981\u7684\u5c5e\u6027\u8bbe\u7f6e\u3002\u5305\u62ec SetKeepAlive SetKeepAlivePeriod SetLinger SetNoDelay \uff08\u9ed8\u8ba4no delay\uff09 SetWriteBuffer SetReadBuffer \u4e0d\u8fc7\u4e0a\u9762\u7684Method\u662fTCPConn\u7684\uff0c\u800c\u4e0d\u662fConn\u7684\uff0c\u8981\u4f7f\u7528\u4e0a\u9762\u7684Method\u7684\uff0c\u9700\u8981type assertion\uff1a tcpConn, ok := c.(*TCPConn) if !ok { //error handle } tcpConn.SetNoDelay(true) \u5bf9\u4e8elistener socket, golang\u9ed8\u8ba4\u91c7\u7528\u4e86 SO_REUSEADDR\uff0c\u8fd9\u6837\u5f53\u4f60\u91cd\u542f listener\u7a0b\u5e8f\u65f6\uff0c\u4e0d\u4f1a\u56e0\u4e3aaddress in use\u7684\u9519\u8bef\u800c\u542f\u52a8\u5931\u8d25\u3002\u800clisten backlog\u7684\u9ed8\u8ba4\u503c\u662f\u901a\u8fc7\u83b7\u53d6\u7cfb\u7edf\u7684\u8bbe\u7f6e\u503c\u5f97\u5230\u7684\u3002\u4e0d\u540c\u7cfb\u7edf\u4e0d\u540c\uff1amac 128, linux 512\u7b49\u3002","title":"\u56db\u3001Socket\u5c5e\u6027"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#_2","text":"\u548c\u524d\u9762\u7684\u65b9\u6cd5\u76f8\u6bd4\uff0c\u5173\u95ed\u8fde\u63a5\u7b97\u662f\u6700\u7b80\u5355\u7684\u64cd\u4f5c\u4e86\u3002\u7531\u4e8esocket\u662f\u5168\u53cc\u5de5\u7684\uff0cclient\u548cserver\u7aef\u5728\u5df1\u65b9\u5df2\u5173\u95ed\u7684socket\u548c\u5bf9\u65b9\u5173\u95ed\u7684socket\u4e0a\u64cd\u4f5c\u7684\u7ed3\u679c\u6709\u4e0d\u540c\u3002\u770b\u4e0b\u9762\u4f8b\u5b50\uff1a //go-tcpsock/conn_close/client1.go ... ... func main() { log.Println(\"begin dial...\") conn, err := net.Dial(\"tcp\", \":8888\") if err != nil { log.Println(\"dial error:\", err) return } conn.Close() log.Println(\"close ok\") var buf = make([]byte, 32) n, err := conn.Read(buf) if err != nil { log.Println(\"read error:\", err) } else { log.Printf(\"read % bytes, content is %s\\n\", n, string(buf[:n])) } n, err = conn.Write(buf) if err != nil { log.Println(\"write error:\", err) } else { log.Printf(\"write % bytes, content is %s\\n\", n, string(buf[:n])) } time.Sleep(time.Second * 1000) } //go-tcpsock/conn_close/server1.go ... ... func handleConn(c net.Conn) { defer c.Close() // read from the connection var buf = make([]byte, 10) log.Println(\"start to read from conn\") n, err := c.Read(buf) if err != nil { log.Println(\"conn read error:\", err) } else { log.Printf(\"read %d bytes, content is %s\\n\", n, string(buf[:n])) } n, err = c.Write(buf) if err != nil { log.Println(\"conn write error:\", err) } else { log.Printf(\"write %d bytes, content is %s\\n\", n, string(buf[:n])) } } ... ... \u4e0a\u8ff0\u4f8b\u5b50\u7684\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $go run server1.go 2015/11/17 17:00:51 accept a new connection 2015/11/17 17:00:51 start to read from conn 2015/11/17 17:00:51 conn read error: EOF 2015/11/17 17:00:51 write 10 bytes, content is $go run client1.go 2015/11/17 17:00:51 begin dial... 2015/11/17 17:00:51 close ok 2015/11/17 17:00:51 read error: read tcp 127.0.0.1:64195->127.0.0.1:8888: use of closed network connection 2015/11/17 17:00:51 write error: write tcp 127.0.0.1:64195->127.0.0.1:8888: use of closed network connection \u4ececlient1\u7684\u7ed3\u679c\u6765\u770b\uff0c\u5728\u5df1\u65b9\u5df2\u7ecf\u5173\u95ed\u7684socket\u4e0a\u518d\u8fdb\u884cread\u548cwrite\u64cd\u4f5c\uff0c\u4f1a\u5f97\u5230\u201duse of closed network connection\u201d error\uff1b \u4eceserver1\u7684\u6267\u884c\u7ed3\u679c\u6765\u770b\uff0c\u5728\u5bf9\u65b9\u5173\u95ed\u7684socket\u4e0a\u6267\u884cread\u64cd\u4f5c\u4f1a\u5f97\u5230EOF error\uff0c\u4f46write\u64cd\u4f5c\u4f1a\u6210\u529f\uff0c\u56e0\u4e3a\u6570\u636e\u4f1a\u6210\u529f\u5199\u5165\u5df1\u65b9\u7684\u5185\u6838socket\u7f13\u51b2\u533a\u4e2d\uff0c\u5373\u4fbf\u6700\u7ec8\u53d1\u4e0d\u5230\u5bf9\u65b9socket\u7f13\u51b2\u533a\u4e86\uff0c\u56e0\u4e3a\u5df1\u65b9socket\u5e76\u672a\u5173\u95ed\u3002\u56e0\u6b64\u5f53\u53d1\u73b0\u5bf9\u65b9socket\u5173\u95ed\u540e\uff0c\u5df1\u65b9\u5e94\u8be5\u6b63\u786e\u5408\u7406\u5904\u7406\u81ea\u5df1\u7684socket\uff0c\u518d\u7ee7\u7eedwrite\u5df2\u7ecf\u65e0\u4efb\u4f55\u610f\u4e49\u4e86\u3002","title":"\u4e94\u3001\u5173\u95ed\u8fde\u63a5"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80TCP%20Socket%E7%BC%96%E7%A8%8B/#_3","text":"\u672c\u6587\u6bd4\u8f83\u57fa\u7840\uff0c\u4f46\u5374\u5f88\u91cd\u8981\uff0c\u6bd5\u7adfgolang\u662f\u9762\u5411\u5927\u89c4\u6a21\u670d\u52a1\u540e\u7aef\u7684\uff0c\u5bf9\u901a\u4fe1\u73af\u8282\u7684\u7ec6\u8282\u7684\u6df1\u5165\u7406\u89e3\u4f1a\u5927\u6709\u88e8\u76ca\u3002\u53e6\u5916Go\u7684goroutine+\u963b\u585e\u901a\u4fe1\u7684\u7f51\u7edc\u901a\u4fe1\u6a21\u578b\u964d\u4f4e\u4e86\u5f00\u53d1\u8005\u5fc3\u667a\u8d1f\u62c5\uff0c\u7b80\u5316\u4e86\u901a\u4fe1\u7684\u590d\u6742\u6027\uff0c\u8fd9\u70b9\u5c24\u4e3a\u91cd\u8981\u3002 \u672c\u6587\u4ee3\u7801\u5b9e\u9a8c\u73af\u5883\uff1ago 1.5.1 on Darwin amd64\u4ee5\u53ca\u90e8\u5206\u5728ubuntu 14.04 amd64\u3002","title":"\u516d\u3001\u5c0f\u7ed3"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80%E4%B9%8Bgoroutine%E5%8D%8F%E7%A8%8B%E8%AF%A6%E8%A7%A3/","text":"\u4ec0\u4e48\u662f\u534f\u7a0b\uff1f Go\u534f\u7a0b\uff08Goroutine\uff09\u662f\u4e0e\u5176\u4ed6\u51fd\u6570\u6216\u65b9\u6cd5\u540c\u65f6\u8fd0\u884c\u7684\u51fd\u6570\u6216\u65b9\u6cd5\u3002\u53ef\u4ee5\u8ba4\u4e3aGo\u534f\u7a0b\u662f\u8f7b\u91cf\u7ea7\u7684\u7ebf\u7a0b\u3002\u4e0e\u521b\u5efa\u7ebf\u7a0b\u76f8\u6bd4\uff0c\u521b\u5efaGo\u534f\u7a0b\u7684\u6210\u672c\u5f88\u5c0f\u3002\u56e0\u6b64\u5728Go\u4e2d\u540c\u65f6\u8fd0\u884c\u4e0a\u5343\u4e2a\u534f\u7a0b\u662f\u5f88\u5e38\u89c1\u7684\u3002 Go\u534f\u7a0b\u5bf9\u6bd4\u7ebf\u7a0b\u7684\u4f18\u70b9 \u4e0e\u7ebf\u7a0b\u76f8\u6bd4\uff0cGo\u534f\u7a0b\u7684\u5f00\u9500\u975e\u5e38\u5c0f\u3002Go\u534f\u7a0b\u7684\u5806\u6808\u5927\u5c0f\u53ea\u6709\u51e0kb\uff0c\u5b83\u53ef\u4ee5\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u7684\u9700\u8981\u800c\u589e\u957f\u548c\u7f29\u5c0f\uff0c\u800c\u7ebf\u7a0b\u5fc5\u987b\u6307\u5b9a\u5806\u6808\u7684\u5927\u5c0f\uff0c\u5e76\u4e14\u5806\u6808\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\u3002 Go\u534f\u7a0b\u88ab\u591a\u8def\u590d\u7528\u5230\u8f83\u5c11\u7684OS\u7ebf\u7a0b\u3002\u5728\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u6570\u5343\u4e2aGo\u534f\u7a0b\u53ef\u80fd\u53ea\u8fd0\u884c\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u3002\u5982\u679c\u8be5\u7ebf\u7a0b\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2aGo\u534f\u7a0b\u963b\u585e\uff08\u6bd4\u5982\u7b49\u5f85\u7528\u6237\u8f93\u5165\uff09\uff0c\u90a3\u4e48Go\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684OS\u7ebf\u7a0b\u5e76\u5c06\u5176\u4f59\u7684Go\u534f\u7a0b\u79fb\u52a8\u5230\u8fd9\u4e2a\u65b0\u7684OS\u7ebf\u7a0b\u3002\u6240\u6709\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u662f runtime \u6765\u5b8c\u6210\u7684\uff0c\u800c\u6211\u4eec\u7a0b\u5e8f\u5458\u4e0d\u5fc5\u5173\u5fc3\u8fd9\u4e9b\u590d\u6742\u7684\u7ec6\u8282\uff0c\u53ea\u9700\u8981\u5229\u7528 Go \u63d0\u4f9b\u7684\u7b80\u6d01\u7684 API \u6765\u5904\u7406\u5e76\u53d1\u5c31\u53ef\u4ee5\u4e86\u3002 Go \u534f\u7a0b\u4e4b\u95f4\u901a\u8fc7\u4fe1\u9053\uff08channel\uff09\u8fdb\u884c\u901a\u4fe1\u3002\u4fe1\u9053\u53ef\u4ee5\u9632\u6b62\u591a\u4e2a\u534f\u7a0b\u8bbf\u95ee\u5171\u4eab\u5185\u5b58\u65f6\u53d1\u751f\u7adf\u9669\uff08race condition\uff09\u3002\u4fe1\u9053\u53ef\u4ee5\u60f3\u8c61\u6210\u591a\u4e2a\u534f\u7a0b\u4e4b\u95f4\u901a\u4fe1\u7684\u7ba1\u9053\u3002\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u7bc7\u6559\u7a0b\u4e2d\u4ecb\u7ecd\u4fe1\u9053\u3002 \u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\uff1f \u5728\u51fd\u6570\u6216\u65b9\u6cd5\u8c03\u7528\u4e4b\u524d\u52a0\u4e0a\u5173\u952e\u5b57 go\uff0c\u8fd9\u6837\u4fbf\u5f00\u542f\u4e86\u4e00\u4e2a\u5e76\u53d1\u7684Go\u534f\u7a0b\u3002 \u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\uff1a package main import ( \"fmt\" ) func hello() { fmt.Println(\"Hello world goroutine\") } func main() { go hello() fmt.Println(\"main function\") } ```` \u7b2c11\u884c\uff0cgo hello() \u5f00\u542f\u4e86\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\u3002\u73b0\u5728 hello() \u51fd\u6570\u5c06\u548c main() \u51fd\u6570\u4e00\u8d77\u8fd0\u884c\u3002main \u51fd\u6570\u5728\u5355\u72ec\u7684\u534f\u7a0b\u4e2d\u8fd0\u884c\uff0c\u8fd9\u4e2a\u534f\u7a0b\u79f0\u4e3a\u4e3b\u534f\u7a0b\u3002 \u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u4f60\u5c06\u5f97\u5230\u4e00\u4e2a\u60ca\u559c\u3002\u7a0b\u5e8f\u4ec5\u8f93\u51fa\u4e86\u4e00\u884c\u6587\u672c\uff1a main function\u3002 **\u6211\u4eec\u521b\u5efa\u7684\u534f\u7a0b\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u6211\u4eec\u9700\u8981\u4e86\u89e3Go\u534f\u7a0b\u7684\u4e24\u4e2a\u5c5e\u6027\uff0c\u4ee5\u4e86\u89e3\u4e3a\u4ec0\u4e48\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002** \u5f53\u521b\u5efa\u4e00\u4e2aGo\u534f\u7a0b\u65f6\uff0c\u521b\u5efa\u8fd9\u4e2aGo\u534f\u7a0b\u7684\u8bed\u53e5\u7acb\u5373\u8fd4\u56de\u3002\u4e0e\u51fd\u6570\u4e0d\u540c\uff0c\u7a0b\u5e8f\u6d41\u7a0b\u4e0d\u4f1a\u7b49\u5f85Go\u534f\u7a0b\u7ed3\u675f\u518d\u7ee7\u7eed\u6267\u884c\u3002\u7a0b\u5e8f\u6d41\u7a0b\u5728\u5f00\u542fGo\u534f\u7a0b\u540e\u7acb\u5373\u8fd4\u56de\u5e76\u5f00\u59cb\u6267\u884c\u4e0b\u4e00\u884c\u4ee3\u7801\uff0c\u5ffd\u7565Go\u534f\u7a0b\u7684\u4efb\u4f55\u8fd4\u56de\u503c\u3002<br> \u5728\u4e3b\u534f\u7a0b\u5b58\u5728\u65f6\u624d\u80fd\u8fd0\u884c\u5176\u4ed6\u534f\u7a0b\uff0c\u4e3b\u534f\u7a0b\u7ec8\u6b62\u5219\u7a0b\u5e8f\u7ec8\u6b62\uff0c\u5176\u4ed6\u534f\u7a0b\u4e5f\u5c06\u7ec8\u6b62\u3002<br> \u6211\u60f3\u4f60\u5df2\u7ecf\u77e5\u9053\u4e86\u4e3a\u4ec0\u4e48\u6211\u4eec\u7684\u534f\u7a0b\u4e3a\u4ec0\u4e48\u6ca1\u6709\u8fd0\u884c\u3002\u572811\u884c\u8c03\u7528 go hello()\u540e\uff0c\u7a0b\u5e8f\u7684\u6d41\u7a0b\u76f4\u63a5\u8c03\u8f6c\u5230\u4e0b\u4e00\u6761\u8bed\u53e5\u6267\u884c\uff0c\u5e76\u6ca1\u6709\u7b49\u5f85 hello \u534f\u7a0b\u9000\u51fa\uff0c\u7136\u540e\u6253\u5370 main function\u3002<br> \u63a5\u7740\u4e3b\u534f\u7a0b\u7ed3\u675f\u8fd0\u884c\uff0c\u4e0d\u4f1a\u518d\u6267\u884c\u4efb\u4f55\u4ee3\u7801\uff0c\u56e0\u6b64 hello \u534f\u7a0b\u6ca1\u6709\u5f97\u5230\u8fd0\u884c\u7684\u673a\u4f1a\u3002 \u8ba9\u6211\u4eec\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\uff1a ```go package main import ( \"fmt\" \"time\" ) func hello() { fmt.Println(\"Hello world goroutine\") } func main() { go hello() time.Sleep(1 * time.Second) fmt.Println(\"main function\") } \u4e0a\u9762\u7684\u7a0b\u5e8f\u4e2d\uff0c\u7b2c13\u884c\uff0c\u6211\u4eec\u8c03\u7528 time \u5305\u7684 Sleep \u51fd\u6570\u6765\u4f7f\u8c03\u7528\u8be5\u51fd\u6570\u6240\u5728\u7684\u534f\u7a0b\u4f11\u7720\u3002\u5728\u8fd9\u91cc\u662f\u8ba9\u4e3b\u534f\u7a0b\u4f11\u77201\u79d2\u949f\u3002\u73b0\u5728\u8c03\u7528 go hello() \u6709\u4e86\u8db3\u591f\u7684\u65f6\u95f4\u5f97\u4ee5\u5728\u4e3b\u534f\u7a0b\u9000\u51fa\u4e4b\u524d\u6267\u884c\u3002\u8be5\u7a0b\u5e8f\u9996\u5148\u6253\u5370 Hello world goroutine\uff0c\u7b49\u5f851\u79d2\u949f\u4e4b\u540e\u6253\u5370 main function\u3002 \u5728\u4e3b\u534f\u7a0b\u4e2d\u4f7f\u7528 Sleep \u51fd\u6570\u7b49\u5f85\u5176\u4ed6\u534f\u7a0b\u7ed3\u675f\u7684\u65b9\u6cd5\u662f\u4e0d\u6b63\u89c4\u7684\uff0c\u6211\u4eec\u7528\u5728\u8fd9\u91cc\u53ea\u662f\u4e3a\u4e86\u8bf4\u660eGo\u534f\u7a0b\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u4fe1\u9053\u53ef\u4ee5\u7528\u4e8e\u963b\u585e\u4e3b\u534f\u7a0b\uff0c\u76f4\u5230\u5176\u4ed6\u534f\u7a0b\u6267\u884c\u5b8c\u6bd5\u3002\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u7bc7\u6559\u7a0b\u4e2d\u8ba8\u8bba\u4fe1\u9053\u3002 \u5f00\u542f\u591a\u4e2a\u534f\u7a0b \u8ba9\u6211\u4eec\u5199\u4e00\u4e2a\u7a0b\u5e8f\u5f00\u542f\u591a\u4e2a\u534f\u7a0b\u6765\u66f4\u597d\u7684\u7406\u89e3\u534f\u7a0b\u3002 package main import ( \"fmt\" \"time\" ) func numbers() { for i := 1; i <= 5; i++ { time.Sleep(250 * time.Millisecond) fmt.Printf(\"%d \", i) } } func alphabets() { for i := 'a'; i <= 'e'; i++ { time.Sleep(400 * time.Millisecond) fmt.Printf(\"%c \", i) } } func main() { go numbers() go alphabets() time.Sleep(3000 * time.Millisecond) fmt.Println(\"main terminated\") } \u4e0a\u9762\u7684\u7a0b\u5e8f\u5728\u7b2c21\u548c22\u884c\u5f00\u542f\u4e86\u4e24\u4e2a\u534f\u7a0b\u3002\u73b0\u5728\u8fd9\u4e24\u4e2a\u534f\u7a0b\u540c\u65f6\u6267\u884c\u3002numbers \u534f\u7a0b\u6700\u521d\u7761\u7720 250 \u6beb\u79d2\uff0c\u7136\u540e\u6253\u5370 1\uff0c\u63a5\u7740\u518d\u6b21\u7761\u7720\u7136\u540e\u6253\u53702\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u6253\u5370\u5230 5\u3002\u7c7b\u4f3c\u5730\uff0calphabets \u534f\u7a0b\u6253\u5370\u4ece a \u5230 e \u7684\u5b57\u6bcd\uff0c\u6bcf\u4e2a\u5b57\u6bcd\u4e4b\u95f4\u76f8\u9694 400 \u6beb\u79d2\u3002\u4e3b\u534f\u7a0b\u5f00\u542f numbers \u548c alphabets \u534f\u7a0b\uff0c\u7b49\u5f85 3000 \u6beb\u79d2\uff0c\u6700\u540e\u7ec8\u6b62\u3002 \u7a0b\u5e8f\u7684\u8f93\u51fa\u4e3a\uff1a 1 a 2 3 b 4 c 5 d e main terminated \u4e0b\u9762\u7684\u56fe\u7247\u63cf\u8ff0\u4e86\u8fd9\u4e2a\u7a0b\u5e8f\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u8bf7\u5728\u65b0\u7684\u6807\u7b7e\u4e2d\u6253\u5f00\u56fe\u50cf\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u6548\u679c\uff1a \u4e0a\u56fe\u4e2d\uff0c\u84dd\u8272\u7684\u7ebf\u6846\u8868\u793a numbers \u534f\u7a0b\uff0c\u6817\u8272\u7684\u7ebf\u6846\u8868\u793a alphabets \u534f\u7a0b\u3002\u7eff\u8272\u7684\u7ebf\u6846\u8868\u793a\u4e3b\u534f\u7a0b\u3002\u9ed1\u8272\u7684\u7ebf\u6846\u5408\u5e76\u4e86\u4e0a\u8ff0\u4e09\u4e2a\u534f\u7a0b\uff0c\u5411\u6211\u4eec\u5c55\u793a\u4e86\u8be5\u7a0b\u5e8f\u7684\u5de5\u4f5c\u539f\u7406\u3002\u6bcf\u4e2a\u6846\u9876\u90e8\u7684 0ms\uff0c250 ms \u7684\u5b57\u7b26\u4e32\u8868\u793a\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\uff0c\u5728\u6bcf\u4e2a\u6846\u5e95\u90e8\u7684 1\uff0c2\uff0c3 \u8868\u793a\u8f93\u51fa\u3002 \u84dd\u8272\u7684\u7ebf\u6846\u544a\u8bc9\u6211\u4eec\u5728 250ms \u7684\u65f6\u5019\u6253\u5370\u4e861\uff0c\u5728 500ms \u7684\u65f6\u5019\u6253\u5370\u4e862\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u56e0\u6b64\u6700\u540e\u4e00\u4e2a\u7ebf\u6846\u5e95\u90e8\u7684\u8f93\u51fa\uff1a1 a 2 3 b 4 c 5 d e main terminated \u4e5f\u662f\u6574\u4e2a\u7a0b\u5e8f\u7684\u8f93\u51fa\u3002\u4e0a\u9762\u7684\u56fe\u50cf\u662f\u5f88\u597d\u7406\u89e3\u7684\uff0c\u60a8\u5c06\u80fd\u591f\u4e86\u89e3\u8be5\u7a0b\u5e8f\u7684\u5de5\u4f5c\u539f\u7406\u3002","title":"\u4ec0\u4e48\u662f\u534f\u7a0b\uff1f"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80%E4%B9%8Bgoroutine%E5%8D%8F%E7%A8%8B%E8%AF%A6%E8%A7%A3/#_1","text":"Go\u534f\u7a0b\uff08Goroutine\uff09\u662f\u4e0e\u5176\u4ed6\u51fd\u6570\u6216\u65b9\u6cd5\u540c\u65f6\u8fd0\u884c\u7684\u51fd\u6570\u6216\u65b9\u6cd5\u3002\u53ef\u4ee5\u8ba4\u4e3aGo\u534f\u7a0b\u662f\u8f7b\u91cf\u7ea7\u7684\u7ebf\u7a0b\u3002\u4e0e\u521b\u5efa\u7ebf\u7a0b\u76f8\u6bd4\uff0c\u521b\u5efaGo\u534f\u7a0b\u7684\u6210\u672c\u5f88\u5c0f\u3002\u56e0\u6b64\u5728Go\u4e2d\u540c\u65f6\u8fd0\u884c\u4e0a\u5343\u4e2a\u534f\u7a0b\u662f\u5f88\u5e38\u89c1\u7684\u3002","title":"\u4ec0\u4e48\u662f\u534f\u7a0b\uff1f"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80%E4%B9%8Bgoroutine%E5%8D%8F%E7%A8%8B%E8%AF%A6%E8%A7%A3/#go","text":"\u4e0e\u7ebf\u7a0b\u76f8\u6bd4\uff0cGo\u534f\u7a0b\u7684\u5f00\u9500\u975e\u5e38\u5c0f\u3002Go\u534f\u7a0b\u7684\u5806\u6808\u5927\u5c0f\u53ea\u6709\u51e0kb\uff0c\u5b83\u53ef\u4ee5\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u7684\u9700\u8981\u800c\u589e\u957f\u548c\u7f29\u5c0f\uff0c\u800c\u7ebf\u7a0b\u5fc5\u987b\u6307\u5b9a\u5806\u6808\u7684\u5927\u5c0f\uff0c\u5e76\u4e14\u5806\u6808\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\u3002 Go\u534f\u7a0b\u88ab\u591a\u8def\u590d\u7528\u5230\u8f83\u5c11\u7684OS\u7ebf\u7a0b\u3002\u5728\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u6570\u5343\u4e2aGo\u534f\u7a0b\u53ef\u80fd\u53ea\u8fd0\u884c\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u3002\u5982\u679c\u8be5\u7ebf\u7a0b\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2aGo\u534f\u7a0b\u963b\u585e\uff08\u6bd4\u5982\u7b49\u5f85\u7528\u6237\u8f93\u5165\uff09\uff0c\u90a3\u4e48Go\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684OS\u7ebf\u7a0b\u5e76\u5c06\u5176\u4f59\u7684Go\u534f\u7a0b\u79fb\u52a8\u5230\u8fd9\u4e2a\u65b0\u7684OS\u7ebf\u7a0b\u3002\u6240\u6709\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u662f runtime \u6765\u5b8c\u6210\u7684\uff0c\u800c\u6211\u4eec\u7a0b\u5e8f\u5458\u4e0d\u5fc5\u5173\u5fc3\u8fd9\u4e9b\u590d\u6742\u7684\u7ec6\u8282\uff0c\u53ea\u9700\u8981\u5229\u7528 Go \u63d0\u4f9b\u7684\u7b80\u6d01\u7684 API \u6765\u5904\u7406\u5e76\u53d1\u5c31\u53ef\u4ee5\u4e86\u3002 Go \u534f\u7a0b\u4e4b\u95f4\u901a\u8fc7\u4fe1\u9053\uff08channel\uff09\u8fdb\u884c\u901a\u4fe1\u3002\u4fe1\u9053\u53ef\u4ee5\u9632\u6b62\u591a\u4e2a\u534f\u7a0b\u8bbf\u95ee\u5171\u4eab\u5185\u5b58\u65f6\u53d1\u751f\u7adf\u9669\uff08race condition\uff09\u3002\u4fe1\u9053\u53ef\u4ee5\u60f3\u8c61\u6210\u591a\u4e2a\u534f\u7a0b\u4e4b\u95f4\u901a\u4fe1\u7684\u7ba1\u9053\u3002\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u7bc7\u6559\u7a0b\u4e2d\u4ecb\u7ecd\u4fe1\u9053\u3002","title":"Go\u534f\u7a0b\u5bf9\u6bd4\u7ebf\u7a0b\u7684\u4f18\u70b9"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80%E4%B9%8Bgoroutine%E5%8D%8F%E7%A8%8B%E8%AF%A6%E8%A7%A3/#_2","text":"\u5728\u51fd\u6570\u6216\u65b9\u6cd5\u8c03\u7528\u4e4b\u524d\u52a0\u4e0a\u5173\u952e\u5b57 go\uff0c\u8fd9\u6837\u4fbf\u5f00\u542f\u4e86\u4e00\u4e2a\u5e76\u53d1\u7684Go\u534f\u7a0b\u3002 \u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\uff1a package main import ( \"fmt\" ) func hello() { fmt.Println(\"Hello world goroutine\") } func main() { go hello() fmt.Println(\"main function\") } ```` \u7b2c11\u884c\uff0cgo hello() \u5f00\u542f\u4e86\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\u3002\u73b0\u5728 hello() \u51fd\u6570\u5c06\u548c main() \u51fd\u6570\u4e00\u8d77\u8fd0\u884c\u3002main \u51fd\u6570\u5728\u5355\u72ec\u7684\u534f\u7a0b\u4e2d\u8fd0\u884c\uff0c\u8fd9\u4e2a\u534f\u7a0b\u79f0\u4e3a\u4e3b\u534f\u7a0b\u3002 \u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u4f60\u5c06\u5f97\u5230\u4e00\u4e2a\u60ca\u559c\u3002\u7a0b\u5e8f\u4ec5\u8f93\u51fa\u4e86\u4e00\u884c\u6587\u672c\uff1a main function\u3002 **\u6211\u4eec\u521b\u5efa\u7684\u534f\u7a0b\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u6211\u4eec\u9700\u8981\u4e86\u89e3Go\u534f\u7a0b\u7684\u4e24\u4e2a\u5c5e\u6027\uff0c\u4ee5\u4e86\u89e3\u4e3a\u4ec0\u4e48\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002** \u5f53\u521b\u5efa\u4e00\u4e2aGo\u534f\u7a0b\u65f6\uff0c\u521b\u5efa\u8fd9\u4e2aGo\u534f\u7a0b\u7684\u8bed\u53e5\u7acb\u5373\u8fd4\u56de\u3002\u4e0e\u51fd\u6570\u4e0d\u540c\uff0c\u7a0b\u5e8f\u6d41\u7a0b\u4e0d\u4f1a\u7b49\u5f85Go\u534f\u7a0b\u7ed3\u675f\u518d\u7ee7\u7eed\u6267\u884c\u3002\u7a0b\u5e8f\u6d41\u7a0b\u5728\u5f00\u542fGo\u534f\u7a0b\u540e\u7acb\u5373\u8fd4\u56de\u5e76\u5f00\u59cb\u6267\u884c\u4e0b\u4e00\u884c\u4ee3\u7801\uff0c\u5ffd\u7565Go\u534f\u7a0b\u7684\u4efb\u4f55\u8fd4\u56de\u503c\u3002<br> \u5728\u4e3b\u534f\u7a0b\u5b58\u5728\u65f6\u624d\u80fd\u8fd0\u884c\u5176\u4ed6\u534f\u7a0b\uff0c\u4e3b\u534f\u7a0b\u7ec8\u6b62\u5219\u7a0b\u5e8f\u7ec8\u6b62\uff0c\u5176\u4ed6\u534f\u7a0b\u4e5f\u5c06\u7ec8\u6b62\u3002<br> \u6211\u60f3\u4f60\u5df2\u7ecf\u77e5\u9053\u4e86\u4e3a\u4ec0\u4e48\u6211\u4eec\u7684\u534f\u7a0b\u4e3a\u4ec0\u4e48\u6ca1\u6709\u8fd0\u884c\u3002\u572811\u884c\u8c03\u7528 go hello()\u540e\uff0c\u7a0b\u5e8f\u7684\u6d41\u7a0b\u76f4\u63a5\u8c03\u8f6c\u5230\u4e0b\u4e00\u6761\u8bed\u53e5\u6267\u884c\uff0c\u5e76\u6ca1\u6709\u7b49\u5f85 hello \u534f\u7a0b\u9000\u51fa\uff0c\u7136\u540e\u6253\u5370 main function\u3002<br> \u63a5\u7740\u4e3b\u534f\u7a0b\u7ed3\u675f\u8fd0\u884c\uff0c\u4e0d\u4f1a\u518d\u6267\u884c\u4efb\u4f55\u4ee3\u7801\uff0c\u56e0\u6b64 hello \u534f\u7a0b\u6ca1\u6709\u5f97\u5230\u8fd0\u884c\u7684\u673a\u4f1a\u3002 \u8ba9\u6211\u4eec\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\uff1a ```go package main import ( \"fmt\" \"time\" ) func hello() { fmt.Println(\"Hello world goroutine\") } func main() { go hello() time.Sleep(1 * time.Second) fmt.Println(\"main function\") } \u4e0a\u9762\u7684\u7a0b\u5e8f\u4e2d\uff0c\u7b2c13\u884c\uff0c\u6211\u4eec\u8c03\u7528 time \u5305\u7684 Sleep \u51fd\u6570\u6765\u4f7f\u8c03\u7528\u8be5\u51fd\u6570\u6240\u5728\u7684\u534f\u7a0b\u4f11\u7720\u3002\u5728\u8fd9\u91cc\u662f\u8ba9\u4e3b\u534f\u7a0b\u4f11\u77201\u79d2\u949f\u3002\u73b0\u5728\u8c03\u7528 go hello() \u6709\u4e86\u8db3\u591f\u7684\u65f6\u95f4\u5f97\u4ee5\u5728\u4e3b\u534f\u7a0b\u9000\u51fa\u4e4b\u524d\u6267\u884c\u3002\u8be5\u7a0b\u5e8f\u9996\u5148\u6253\u5370 Hello world goroutine\uff0c\u7b49\u5f851\u79d2\u949f\u4e4b\u540e\u6253\u5370 main function\u3002 \u5728\u4e3b\u534f\u7a0b\u4e2d\u4f7f\u7528 Sleep \u51fd\u6570\u7b49\u5f85\u5176\u4ed6\u534f\u7a0b\u7ed3\u675f\u7684\u65b9\u6cd5\u662f\u4e0d\u6b63\u89c4\u7684\uff0c\u6211\u4eec\u7528\u5728\u8fd9\u91cc\u53ea\u662f\u4e3a\u4e86\u8bf4\u660eGo\u534f\u7a0b\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u4fe1\u9053\u53ef\u4ee5\u7528\u4e8e\u963b\u585e\u4e3b\u534f\u7a0b\uff0c\u76f4\u5230\u5176\u4ed6\u534f\u7a0b\u6267\u884c\u5b8c\u6bd5\u3002\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u7bc7\u6559\u7a0b\u4e2d\u8ba8\u8bba\u4fe1\u9053\u3002","title":"\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\uff1f"},{"location":"golang/docs/Go%E8%AF%AD%E8%A8%80%E4%B9%8Bgoroutine%E5%8D%8F%E7%A8%8B%E8%AF%A6%E8%A7%A3/#_3","text":"\u8ba9\u6211\u4eec\u5199\u4e00\u4e2a\u7a0b\u5e8f\u5f00\u542f\u591a\u4e2a\u534f\u7a0b\u6765\u66f4\u597d\u7684\u7406\u89e3\u534f\u7a0b\u3002 package main import ( \"fmt\" \"time\" ) func numbers() { for i := 1; i <= 5; i++ { time.Sleep(250 * time.Millisecond) fmt.Printf(\"%d \", i) } } func alphabets() { for i := 'a'; i <= 'e'; i++ { time.Sleep(400 * time.Millisecond) fmt.Printf(\"%c \", i) } } func main() { go numbers() go alphabets() time.Sleep(3000 * time.Millisecond) fmt.Println(\"main terminated\") } \u4e0a\u9762\u7684\u7a0b\u5e8f\u5728\u7b2c21\u548c22\u884c\u5f00\u542f\u4e86\u4e24\u4e2a\u534f\u7a0b\u3002\u73b0\u5728\u8fd9\u4e24\u4e2a\u534f\u7a0b\u540c\u65f6\u6267\u884c\u3002numbers \u534f\u7a0b\u6700\u521d\u7761\u7720 250 \u6beb\u79d2\uff0c\u7136\u540e\u6253\u5370 1\uff0c\u63a5\u7740\u518d\u6b21\u7761\u7720\u7136\u540e\u6253\u53702\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u6253\u5370\u5230 5\u3002\u7c7b\u4f3c\u5730\uff0calphabets \u534f\u7a0b\u6253\u5370\u4ece a \u5230 e \u7684\u5b57\u6bcd\uff0c\u6bcf\u4e2a\u5b57\u6bcd\u4e4b\u95f4\u76f8\u9694 400 \u6beb\u79d2\u3002\u4e3b\u534f\u7a0b\u5f00\u542f numbers \u548c alphabets \u534f\u7a0b\uff0c\u7b49\u5f85 3000 \u6beb\u79d2\uff0c\u6700\u540e\u7ec8\u6b62\u3002 \u7a0b\u5e8f\u7684\u8f93\u51fa\u4e3a\uff1a 1 a 2 3 b 4 c 5 d e main terminated \u4e0b\u9762\u7684\u56fe\u7247\u63cf\u8ff0\u4e86\u8fd9\u4e2a\u7a0b\u5e8f\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u8bf7\u5728\u65b0\u7684\u6807\u7b7e\u4e2d\u6253\u5f00\u56fe\u50cf\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u6548\u679c\uff1a \u4e0a\u56fe\u4e2d\uff0c\u84dd\u8272\u7684\u7ebf\u6846\u8868\u793a numbers \u534f\u7a0b\uff0c\u6817\u8272\u7684\u7ebf\u6846\u8868\u793a alphabets \u534f\u7a0b\u3002\u7eff\u8272\u7684\u7ebf\u6846\u8868\u793a\u4e3b\u534f\u7a0b\u3002\u9ed1\u8272\u7684\u7ebf\u6846\u5408\u5e76\u4e86\u4e0a\u8ff0\u4e09\u4e2a\u534f\u7a0b\uff0c\u5411\u6211\u4eec\u5c55\u793a\u4e86\u8be5\u7a0b\u5e8f\u7684\u5de5\u4f5c\u539f\u7406\u3002\u6bcf\u4e2a\u6846\u9876\u90e8\u7684 0ms\uff0c250 ms \u7684\u5b57\u7b26\u4e32\u8868\u793a\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\uff0c\u5728\u6bcf\u4e2a\u6846\u5e95\u90e8\u7684 1\uff0c2\uff0c3 \u8868\u793a\u8f93\u51fa\u3002 \u84dd\u8272\u7684\u7ebf\u6846\u544a\u8bc9\u6211\u4eec\u5728 250ms \u7684\u65f6\u5019\u6253\u5370\u4e861\uff0c\u5728 500ms \u7684\u65f6\u5019\u6253\u5370\u4e862\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u56e0\u6b64\u6700\u540e\u4e00\u4e2a\u7ebf\u6846\u5e95\u90e8\u7684\u8f93\u51fa\uff1a1 a 2 3 b 4 c 5 d e main terminated \u4e5f\u662f\u6574\u4e2a\u7a0b\u5e8f\u7684\u8f93\u51fa\u3002\u4e0a\u9762\u7684\u56fe\u50cf\u662f\u5f88\u597d\u7406\u89e3\u7684\uff0c\u60a8\u5c06\u80fd\u591f\u4e86\u89e3\u8be5\u7a0b\u5e8f\u7684\u5de5\u4f5c\u539f\u7406\u3002","title":"\u5f00\u542f\u591a\u4e2a\u534f\u7a0b"},{"location":"golang/docs/Protobuf%E5%85%A5%E9%97%A8/","text":"\u5728Kafka\u4e2d\uff0c\u53d1\u9001\u7684\u6d88\u606f\u662f\u5b57\u8282\u6570\u7ec4\uff0c\u56e0\u6b64\u5c31\u9700\u8981\u4e00\u4e2a\u65b9\u6cd5\u6765\u5c06\u6d88\u606f\u5bf9\u8c61\u5e8f\u5217\u5316\u4e3a\u5b57\u8282\u6570\u7ec4\uff0c\u5728\u6d88\u8d39\u8005\u7aef\u518d\u53cd\u5e8f\u5217\u5316\u4e3a\u5bf9\u8c61\u3002\u6700\u5e38\u7528\u7684\u5e8f\u5217\u5316\u683c\u5f0f\u5c31\u662fJSON\u4e86\u3002\u867d\u7136JSON\u5bf9\u4eba\u7c7b\u975e\u5e38\u53cb\u597d\uff0c\u4f46\u662f\u5bf9\u4e8e\u673a\u5668\u6765\u8bf4\uff0c\u66f4\u5bb9\u6613\u8fdb\u884c\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7684\u683c\u5f0f\u8fd8\u662f\u4e8c\u8fdb\u5236\u7684\u683c\u5f0f\u3002 Protobuf\uff08Protocol buffers\uff09\u662f\u7531Google\u5f00\u53d1\u7684\u4e00\u79cd\u4e8c\u8fdb\u5236\u534f\u8bae\uff0c\u7528\u4e8e\u5bf9\u7ed3\u6784\u5316\u6570\u636e\u8fdb\u884c\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002\u8fd9\u79cd\u683c\u5f0f\u5360\u7528\u7a7a\u95f4\u66f4\u5c11\uff0c\u66f4\u52a0\u7b80\u5355\u6613\u4e8e\u7ef4\u62a4\uff0c\u540c\u65f6\u62e5\u6709\u66f4\u597d\u7684\u6027\u80fd\u3002\u5bf9\u4e8e\u673a\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\uff0cProtobuf\u662f\u6bd4XML\u548cJSON\u7b49\u683c\u5f0f\u66f4\u597d\u7684\u4e00\u79cd\u9009\u62e9\u3002 Protobuf\u7684\u4f7f\u7528\u76f8\u6bd4\u4e4b\u4e0b\u66f4\u52a0\u590d\u6742\uff0c\u9700\u8981\u7f16\u5199.proto\u683c\u5f0f\u7684\u6587\u4ef6\u6765\u5b9a\u4e49\u6570\u636e\u683c\u5f0f\uff0c\u4e4b\u540e\u901a\u8fc7protoc\u7f16\u8bd1\u5668\u5c06\u5176\u7f16\u8bd1\u5230\u5bf9\u5e94\u7684\u8bed\u8a00\uff0c\u4e4b\u540e\u518d\u5728\u7a0b\u5e8f\u4e2d\u5f15\u7528\u3002 \u4f7f\u7528 \u5b89\u88c5 \u9996\u5148\u5c31\u662f\u5b89\u88c5protoc\u7f16\u8bd1\u5668\uff0c\u8fd9\u4e2a\u7f16\u8bd1\u5668\u53ef\u4ee5\u76f4\u63a5\u5230github\u4e0a\u4e0b\u8f7d\u4e8c\u8fdb\u5236\u5305\uff0c\u89e3\u538b\u5230\u5bf9\u5e94\u4f4d\u7f6e\u5e76\u8bbe\u7f6ePATH\u5373\u53ef\u3002 \u4e4b\u540e\u5c31\u662f\u5b89\u88c5\u5bf9\u5e94\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\uff0c\u5bf9\u4e8egolang\uff0c\u6267\u884c\u4e0b\u9762\u4e24\u6761\u8bed\u53e5\u5b89\u88c5\u5c31\u53ef\u4ee5\u4e86\uff1a go get github.com/golang/protobuf/proto go get github.com/golang/protobuf/protoc-gen-go \u7f16\u8bd1 \u4e4b\u540e\u65b0\u5efa\u4e00\u4e2a.proto\u6587\u4ef6\uff0c\u5728\u5176\u4e2d\u5b9a\u4e49\u6d88\u606f\u7684\u683c\u5f0f\uff1a syntax = \"proto3\"; package test; option go_package = \"proto/test\"; message Award { int64 uid = 1; int64 awardId = 2; string userName = 3; } \u7136\u540e\u4f7f\u7528protoc\u7f16\u8bd1\u5668\u5c06\u5176\u7f16\u8bd1\u5230go\u6587\u4ef6\u5c31\u884c\u4e86\uff1a protoc --go_out=. proto/*.proto \u5728go\u7a0b\u5e8f\u4e2d\u5f15\u5165\u751f\u6210\u7684\u5305\u5c31\u53ef\u4ee5\u8fdb\u884c\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u4e86\uff1a import pb \"proto/test\" func marshal() { award := &pb.Award{ Uid: 628, AwardId: 1, UserName: \"Haruka\", } msg, err := proto.Marshal(award) } func unmarshal() { award := &pb.Award{} if err := proto.Unmarshal(msg.Value, award); err != nil { panic(err) } } proto3\u8bed\u8a00 \u5728.proto\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u5c31\u662fsyntax = \"proto3\";\uff0c\u7528\u4e8e\u58f0\u660e\u8be5\u6587\u4ef6\u662fproto3\u7248\u672c\u7684\u3002\u4e4b\u540e\u53ef\u4ee5\u58f0\u660epackage\u7528\u4e8e\u907f\u514d\u547d\u540d\u51b2\u7a81\uff0c\u6700\u540e\u5c31\u53ef\u4ee5\u5b9a\u4e49message\u4e86\u3002 \u5b57\u6bb5ID message\u7684\u6bcf\u4e2a\u5b57\u6bb5\u90fd\u8981\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684ID\uff0c\u6700\u5c0f\u662f1\u6700\u5927\u662f2^29 - 1\uff0c\u540c\u65f6\u4e0d\u80fd\u4f7f\u7528 1900019999\u7684ID\u3002ID\u53ef\u4ee5\u4efb\u610f\u5206\u914d\uff0c\u4f46\u662f115\u53ea\u4f1a\u5360\u75281\u4e2a\u5b57\u8282\uff0c\u800c16~2047\u4f1a\u5360\u75282\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u5e94\u5c3d\u91cf\u4ece\u5c0f\u5f00\u59cb\u5206\u914d\uff0c\u5e76\u5c06\u5c0f\u7684\u5206\u914d\u7ed9\u6700\u7ecf\u5e38\u51fa\u73b0\u7684\u5b57\u6bb5\u3002 \u53ef\u4ee5\u4f7f\u7528reserved\u6765\u5bf9\u5b57\u6bb5\u540d\u548cID\u8fdb\u884c\u4fdd\u7559\uff0c\u4e00\u822c\u7528\u4e8e\u4e3a\u672a\u6765\u65b0\u589e\u5b57\u6bb5\u4fdd\u7559\uff0c\u6216\u8005\u4fdd\u7559\u5220\u9664\u5b57\u6bb5\u6765\u907f\u514d\u4e4b\u540e\u7684\u5b57\u6bb5\u4f7f\u7528\uff0c\u9632\u6b62\u53d1\u751f\u51b2\u7a81\uff1a message Foo { reserved 2, 15, 9 to 11; reserved \"foo\", \"bar\"; } \u5b57\u6bb5\u7c7b\u578b \u5b57\u6bb5\u7684\u7c7b\u578b\u9ed8\u8ba4\u662fsingular\uff0c\u4e5f\u5c31\u662f\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u62160\u6b21\uff0c\u5982\u679c\u5728\u5b57\u6bb5\u58f0\u660e\u524d\u52a0\u4e0arepeated\u7684\u8bdd\u5c31\u53ef\u4ee5\u51fa\u73b0\u591a\u6b21\u3002 protobuf\u7684\u6807\u91cf\u7c7b\u578b\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1adouble float int32 int64 uint32 uint64 sint32 sint64 fixed32 fixed64 sfixed32 sfixed64 bool string bytes\u3002 protobuf\u4e2d\u8fd8\u53ef\u4ee5\u4f7f\u7528\u679a\u4e3e\u548c\u590d\u5408\u7c7b\u578b\u3002\u4f8b\u5982\u53ef\u4ee5\u901a\u8fc7import \"google/protobuf/timestamp.proto\"\u6765\u4f7f\u7528timestamp\u7c7b\u578b\u3002 protobuf\u6570\u636e\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c\u89c4\u5219\u5982\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u5b57\u6bb5\u88ab\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\uff0c\u5219\u5176\u4e0d\u4f1a\u88ab\u5e8f\u5217\u5316\uff1a string bytes\u7c7b\u578b\u9ed8\u8ba4\u4e3a\u7a7a bool\u7c7b\u578b\u9ed8\u8ba4\u4e3afalse \u6570\u503c\u7c7b\u578b\u9ed8\u8ba4\u4e3a0 \u679a\u4e3e\u7c7b\u578b\u9ed8\u8ba4\u4e3a\u7b2c\u4e00\u4e2a\uff0c\u53730 \u590d\u5408\u7c7b\u578b\u53d6\u51b3\u4e8e\u8bed\u8a00 \u679a\u4e3e\u7c7b\u578b message SearchRequest { enum Corpus { option allow_alias = true; UNIVERSAL = 0; WEB = 1; TEST = 1; IMAGES = 2; } Corpus corpus = 4; } \u901a\u8fc7enum\u6765\u58f0\u660e\u4e00\u4e2a\u679a\u4e3e\uff0c\u6ce8\u610f\u679a\u4e3e\u4e2d\u5fc5\u987b\u8981\u67090\u503c\u7528\u6765\u4f5c\u4e3a\u9ed8\u8ba4\u503c\uff0c\u540c\u65f60\u503c\u5e94\u8be5\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u4ee5\u4e0eproto2\u517c\u5bb9\u3002\u901a\u8fc7option allow_alias = true;\u6765\u5141\u8bb8\u4e24\u4e2a\u679a\u4e3e\u5143\u7d20\u6709\u76f8\u540c\u7684\u503c\uff0c\u5373\u8fd9\u4e24\u4e2a\u5143\u7d20\u53ef\u4ee5\u76f8\u4e92\u66ff\u4ee3\u3002 \u590d\u5408\u7c7b\u578b \u5728\u4e00\u4e2amessage\u4e2d\uff0c\u53ef\u4ee5\u5d4c\u5165\u5176\u4ed6\u7684message\u4f5c\u4e3a\u590d\u5408\u7c7b\u578b\uff1a message SearchResponse { repeated Result results = 1; } message Result { string url = 1; string title = 2; repeated string snippets = 3; } \u5728protobuf\u4e2d\u8fd8\u6709\u5176\u4ed6\u9ad8\u7ea7\u7c7b\u578b\uff0c\u5982Any oneof map\u7b49\uff0c\u5c31\u4e0d\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u3002","title":"Protobuf\u5165\u95e8"},{"location":"golang/docs/Protobuf%E5%85%A5%E9%97%A8/#_1","text":"","title":"\u4f7f\u7528"},{"location":"golang/docs/Protobuf%E5%85%A5%E9%97%A8/#_2","text":"\u9996\u5148\u5c31\u662f\u5b89\u88c5protoc\u7f16\u8bd1\u5668\uff0c\u8fd9\u4e2a\u7f16\u8bd1\u5668\u53ef\u4ee5\u76f4\u63a5\u5230github\u4e0a\u4e0b\u8f7d\u4e8c\u8fdb\u5236\u5305\uff0c\u89e3\u538b\u5230\u5bf9\u5e94\u4f4d\u7f6e\u5e76\u8bbe\u7f6ePATH\u5373\u53ef\u3002 \u4e4b\u540e\u5c31\u662f\u5b89\u88c5\u5bf9\u5e94\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\uff0c\u5bf9\u4e8egolang\uff0c\u6267\u884c\u4e0b\u9762\u4e24\u6761\u8bed\u53e5\u5b89\u88c5\u5c31\u53ef\u4ee5\u4e86\uff1a go get github.com/golang/protobuf/proto go get github.com/golang/protobuf/protoc-gen-go","title":"\u5b89\u88c5"},{"location":"golang/docs/Protobuf%E5%85%A5%E9%97%A8/#_3","text":"\u4e4b\u540e\u65b0\u5efa\u4e00\u4e2a.proto\u6587\u4ef6\uff0c\u5728\u5176\u4e2d\u5b9a\u4e49\u6d88\u606f\u7684\u683c\u5f0f\uff1a syntax = \"proto3\"; package test; option go_package = \"proto/test\"; message Award { int64 uid = 1; int64 awardId = 2; string userName = 3; } \u7136\u540e\u4f7f\u7528protoc\u7f16\u8bd1\u5668\u5c06\u5176\u7f16\u8bd1\u5230go\u6587\u4ef6\u5c31\u884c\u4e86\uff1a protoc --go_out=. proto/*.proto \u5728go\u7a0b\u5e8f\u4e2d\u5f15\u5165\u751f\u6210\u7684\u5305\u5c31\u53ef\u4ee5\u8fdb\u884c\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u4e86\uff1a import pb \"proto/test\" func marshal() { award := &pb.Award{ Uid: 628, AwardId: 1, UserName: \"Haruka\", } msg, err := proto.Marshal(award) } func unmarshal() { award := &pb.Award{} if err := proto.Unmarshal(msg.Value, award); err != nil { panic(err) } }","title":"\u7f16\u8bd1"},{"location":"golang/docs/Protobuf%E5%85%A5%E9%97%A8/#proto3","text":"\u5728.proto\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u5c31\u662fsyntax = \"proto3\";\uff0c\u7528\u4e8e\u58f0\u660e\u8be5\u6587\u4ef6\u662fproto3\u7248\u672c\u7684\u3002\u4e4b\u540e\u53ef\u4ee5\u58f0\u660epackage\u7528\u4e8e\u907f\u514d\u547d\u540d\u51b2\u7a81\uff0c\u6700\u540e\u5c31\u53ef\u4ee5\u5b9a\u4e49message\u4e86\u3002","title":"proto3\u8bed\u8a00"},{"location":"golang/docs/Protobuf%E5%85%A5%E9%97%A8/#id","text":"message\u7684\u6bcf\u4e2a\u5b57\u6bb5\u90fd\u8981\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684ID\uff0c\u6700\u5c0f\u662f1\u6700\u5927\u662f2^29 - 1\uff0c\u540c\u65f6\u4e0d\u80fd\u4f7f\u7528 1900019999\u7684ID\u3002ID\u53ef\u4ee5\u4efb\u610f\u5206\u914d\uff0c\u4f46\u662f115\u53ea\u4f1a\u5360\u75281\u4e2a\u5b57\u8282\uff0c\u800c16~2047\u4f1a\u5360\u75282\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u5e94\u5c3d\u91cf\u4ece\u5c0f\u5f00\u59cb\u5206\u914d\uff0c\u5e76\u5c06\u5c0f\u7684\u5206\u914d\u7ed9\u6700\u7ecf\u5e38\u51fa\u73b0\u7684\u5b57\u6bb5\u3002 \u53ef\u4ee5\u4f7f\u7528reserved\u6765\u5bf9\u5b57\u6bb5\u540d\u548cID\u8fdb\u884c\u4fdd\u7559\uff0c\u4e00\u822c\u7528\u4e8e\u4e3a\u672a\u6765\u65b0\u589e\u5b57\u6bb5\u4fdd\u7559\uff0c\u6216\u8005\u4fdd\u7559\u5220\u9664\u5b57\u6bb5\u6765\u907f\u514d\u4e4b\u540e\u7684\u5b57\u6bb5\u4f7f\u7528\uff0c\u9632\u6b62\u53d1\u751f\u51b2\u7a81\uff1a message Foo { reserved 2, 15, 9 to 11; reserved \"foo\", \"bar\"; }","title":"\u5b57\u6bb5ID"},{"location":"golang/docs/Protobuf%E5%85%A5%E9%97%A8/#_4","text":"\u5b57\u6bb5\u7684\u7c7b\u578b\u9ed8\u8ba4\u662fsingular\uff0c\u4e5f\u5c31\u662f\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u62160\u6b21\uff0c\u5982\u679c\u5728\u5b57\u6bb5\u58f0\u660e\u524d\u52a0\u4e0arepeated\u7684\u8bdd\u5c31\u53ef\u4ee5\u51fa\u73b0\u591a\u6b21\u3002 protobuf\u7684\u6807\u91cf\u7c7b\u578b\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1adouble float int32 int64 uint32 uint64 sint32 sint64 fixed32 fixed64 sfixed32 sfixed64 bool string bytes\u3002 protobuf\u4e2d\u8fd8\u53ef\u4ee5\u4f7f\u7528\u679a\u4e3e\u548c\u590d\u5408\u7c7b\u578b\u3002\u4f8b\u5982\u53ef\u4ee5\u901a\u8fc7import \"google/protobuf/timestamp.proto\"\u6765\u4f7f\u7528timestamp\u7c7b\u578b\u3002 protobuf\u6570\u636e\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c\u89c4\u5219\u5982\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u5b57\u6bb5\u88ab\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\uff0c\u5219\u5176\u4e0d\u4f1a\u88ab\u5e8f\u5217\u5316\uff1a string bytes\u7c7b\u578b\u9ed8\u8ba4\u4e3a\u7a7a bool\u7c7b\u578b\u9ed8\u8ba4\u4e3afalse \u6570\u503c\u7c7b\u578b\u9ed8\u8ba4\u4e3a0 \u679a\u4e3e\u7c7b\u578b\u9ed8\u8ba4\u4e3a\u7b2c\u4e00\u4e2a\uff0c\u53730 \u590d\u5408\u7c7b\u578b\u53d6\u51b3\u4e8e\u8bed\u8a00","title":"\u5b57\u6bb5\u7c7b\u578b"},{"location":"golang/docs/Protobuf%E5%85%A5%E9%97%A8/#_5","text":"message SearchRequest { enum Corpus { option allow_alias = true; UNIVERSAL = 0; WEB = 1; TEST = 1; IMAGES = 2; } Corpus corpus = 4; } \u901a\u8fc7enum\u6765\u58f0\u660e\u4e00\u4e2a\u679a\u4e3e\uff0c\u6ce8\u610f\u679a\u4e3e\u4e2d\u5fc5\u987b\u8981\u67090\u503c\u7528\u6765\u4f5c\u4e3a\u9ed8\u8ba4\u503c\uff0c\u540c\u65f60\u503c\u5e94\u8be5\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u4ee5\u4e0eproto2\u517c\u5bb9\u3002\u901a\u8fc7option allow_alias = true;\u6765\u5141\u8bb8\u4e24\u4e2a\u679a\u4e3e\u5143\u7d20\u6709\u76f8\u540c\u7684\u503c\uff0c\u5373\u8fd9\u4e24\u4e2a\u5143\u7d20\u53ef\u4ee5\u76f8\u4e92\u66ff\u4ee3\u3002","title":"\u679a\u4e3e\u7c7b\u578b"},{"location":"golang/docs/Protobuf%E5%85%A5%E9%97%A8/#_6","text":"\u5728\u4e00\u4e2amessage\u4e2d\uff0c\u53ef\u4ee5\u5d4c\u5165\u5176\u4ed6\u7684message\u4f5c\u4e3a\u590d\u5408\u7c7b\u578b\uff1a message SearchResponse { repeated Result results = 1; } message Result { string url = 1; string title = 2; repeated string snippets = 3; } \u5728protobuf\u4e2d\u8fd8\u6709\u5176\u4ed6\u9ad8\u7ea7\u7c7b\u578b\uff0c\u5982Any oneof map\u7b49\uff0c\u5c31\u4e0d\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u3002","title":"\u590d\u5408\u7c7b\u578b"},{"location":"golang/docs/etcd%E7%9A%84%E4%BD%BF%E7%94%A8/","text":"\u4ec0\u4e48\u662fetcd ETCD\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u3001\u53ef\u9760\u7684key-value\u5b58\u50a8\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u7528\u4e8e\u5b58\u50a8\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684\u5173\u952e\u6570\u636e\uff1b\u5f53\u7136\uff0c\u5b83\u4e0d\u4ec5\u4ec5\u7528\u4e8e\u5b58\u50a8\uff0c\u8fd8\u63d0\u4f9b\u914d\u7f6e\u5171\u4eab\u53ca\u670d\u52a1\u53d1\u73b0\uff1b\u57fa\u4e8eGo\u8bed\u8a00\u5b9e\u73b0 \u3002 etcd\u7684\u7279\u70b9 \u5b8c\u5168\u590d\u5236\uff1a\u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u4f7f\u7528\u5b8c\u6574\u7684\u5b58\u6863 \u9ad8\u53ef\u7528\u6027\uff1aEtcd\u53ef\u7528\u4e8e\u907f\u514d\u786c\u4ef6\u7684\u5355\u70b9\u6545\u969c\u6216\u7f51\u7edc\u95ee\u9898 \u4e00\u81f4\u6027\uff1a\u6bcf\u6b21\u8bfb\u53d6\u90fd\u4f1a\u8fd4\u56de\u8de8\u591a\u4e3b\u673a\u7684\u6700\u65b0\u5199\u5165 \u7b80\u5355\uff1a\u5305\u62ec\u4e00\u4e2a\u5b9a\u4e49\u826f\u597d\u3001\u9762\u5411\u7528\u6237\u7684API\uff08gRPC\uff09 \u5b89\u5168\uff1a\u5b9e\u73b0\u4e86\u5e26\u6709\u53ef\u9009\u7684\u5ba2\u6237\u7aef\u8bc1\u4e66\u8eab\u4efd\u9a8c\u8bc1\u7684\u81ea\u52a8\u5316TLS \u53ef\u9760\uff1a\u4f7f\u7528Raft\u7b97\u6cd5\u5b9e\u73b0\u4e86\u5f3a\u4e00\u81f4\u3001\u9ad8\u53ef\u7528\u7684\u670d\u52a1\u5b58\u50a8\u76ee\u5f55 etcd\u7684\u5e94\u7528\u573a\u666f \u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0 \u670d\u52a1\u53d1\u73b0\u8fd8\u80fd\u6ce8\u518c \u670d\u52a1\u6ce8\u518c\u53d1\u73b0\u89e3\u51b3\u7684\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u6700\u5e38\u89c1\u7684\u95ee\u9898\u4e4b\u4e00\uff0c\u5373\u5728\u540c\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\u76ee\u6807\u670d\u52a1\uff0c\u5efa\u7acb\u8fde\u63a5\uff0c\u7136\u540e\u5b8c\u6210\u6574\u4e2a\u94fe\u8def\u7684\u8c03\u5ea6\u3002 \u672c\u8d28\u4e0a\u6765\u8bf4\uff0c\u670d\u52a1\u53d1\u73b0\u5c31\u662f\u60f3\u8981\u4e86\u89e3\u96c6\u7fa4\u4e2d\u662f\u5426\u6709\u8fdb\u7a0b\u5728\u76d1\u542c udp \u6216 tcp \u7aef\u53e3\uff0c\u5e76\u4e14\u901a\u8fc7\u540d\u5b57\u5c31\u53ef\u4ee5\u67e5\u627e\u548c\u8fde\u63a5\u3002\u8981\u89e3\u51b3\u670d\u52a1\u53d1\u73b0\u7684\u95ee\u9898\uff0c\u9700\u8981\u6709\u4e0b\u9762\u4e09\u5927\u652f\u67f1\uff0c\u7f3a\u4e00\u4e0d\u53ef\u3002 1\u3001\u4e00\u4e2a\u5f3a\u4e00\u81f4\u6027\u3001\u9ad8\u53ef\u7528\u7684\u670d\u52a1\u5b58\u50a8\u76ee\u5f55\u3002\u57fa\u4e8eRaft\u7b97\u6cd5\u7684etcd\u5929\u751f\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u5f3a\u4e00\u81f4\u6027\u9ad8\u53ef\u7528\u7684\u670d\u52a1\u5b58\u50a8\u76ee\u5f55\u3002 2\u3001\u4e00\u79cd\u6ce8\u518c\u670d\u52a1\u548c\u76d1\u63a7\u670d\u52a1\u5065\u5eb7\u72b6\u6001\u7684\u673a\u5236\u3002\u7528\u6237\u53ef\u4ee5\u5728etcd\u4e2d\u6ce8\u518c\u670d\u52a1\uff0c\u5e76\u4e14\u5bf9\u6ce8\u518c\u7684\u670d\u52a1\u8bbe\u7f6ekey TTL\uff0c\u5b9a\u65f6\u4fdd\u6301\u670d\u52a1\u7684\u5fc3\u8df3\u4ee5\u8fbe\u5230\u76d1\u63a7\u5065\u5eb7\u72b6\u6001\u7684\u6548\u679c\u3002 3\u3001\u4e00\u79cd\u67e5\u627e\u548c\u8fde\u63a5\u670d\u52a1\u7684\u673a\u5236\u3002\u901a\u8fc7\u5728 etcd \u6307\u5b9a\u7684\u4e3b\u9898\u4e0b\u6ce8\u518c\u7684\u670d\u52a1\u4e5f\u80fd\u5728\u5bf9\u5e94\u7684\u4e3b\u9898\u4e0b\u67e5\u627e\u5230\u3002\u4e3a\u4e86\u786e\u4fdd\u8fde\u63a5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u670d\u52a1\u673a\u5668\u4e0a\u90fd\u90e8\u7f72\u4e00\u4e2aProxy\u6a21\u5f0f\u7684etcd\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u786e\u4fdd\u80fd\u8bbf\u95eeetcd\u96c6\u7fa4\u7684\u670d\u52a1\u90fd\u80fd\u4e92\u76f8\u8fde\u63a5\u3002 \u4e00\u4e2a\u7528\u6237\u7684api\u8bf7\u6c42\uff0c\u53ef\u80fd\u8c03\u7528\u591a\u4e2a\u5fae\u670d\u52a1\u8d44\u6e90\uff0c\u8fd9\u4e9b\u670d\u52a1\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528etcd\u8fdb\u884c\u670d\u52a1\u6ce8\u518c\u548c\u670d\u52a1\u53d1\u73b0\uff0c\u5f53\u6bcf\u4e2a\u670d\u52a1\u542f\u52a8\u7684\u65f6\u5019\u5c31\u6ce8\u518c\u5230etcd\u4e2d\uff0c\u5f53\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5728etcd\u4e2d\u5bfb\u627e\uff0c\u8c03\u7528\u5373\u53ef\u3002 \u5f53\u7136\uff0c\u6bcf\u4e2a\u670d\u52a1\u7684\u5b9e\u4f8b\u4e0d\u6b62\u4e00\u4e2a\uff0c\u6bd4\u5982\u6211\u4eec\u7684\u7528\u6237\u670d\u52a1\uff0c\u6211\u4eec\u53ef\u80fd\u542f\u52a8\u4e86\u591a\u4e2a\u5b9e\u4f8b\uff0c\u8fd9\u4e9b\u5b9e\u4f8b\u5728\u670d\u52a1\u542f\u52a8\u8fc7\u7a0b\u4e2d\u5168\u90e8\u6ce8\u518c\u5230\u4e86etcd\u4e2d\uff0c\u4f46\u662f\u67d0\u4e2a\u5b9e\u4f8b\u53ef\u80fd\u51fa\u73b0\u6545\u969c\u91cd\u542f\uff0c\u8fd9\u65f6\u5019\u5c31etcd\u5728\u8fdb\u884c\u8f6c\u53d1\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5c4f\u853d\u5230\u6545\u969c\u7684\u5b9e\u4f8b\u8282\u70b9\uff0c\u53ea\u5411\u6b63\u5e38\u8fd0\u884c\u7684\u5b9e\u4f8b\uff0c\u8fdb\u884c\u8bf7\u6c42\u8f6c\u53d1\u3002 \u6765\u770b\u4e2a\u670d\u52a1\u6ce8\u518c\u53d1\u73b0\u7684demo \u8fd9\u91cc\u653e\u4e00\u6bb5\u6bd4\u8f83\u6838\u5fc3\u7684\u4ee3\u7801\uff0c\u8fd9\u91cc\u6458\u5f55\u4e86\u6211\u4eec\u7ebf\u4e0a\u6b63\u5728\u4f7f\u7528\u7684etcd\u5b9e\u73b0grpc\u670d\u52a1\u6ce8\u518c\u548c\u53d1\u73b0\u7684\u5b9e\u73b0\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u53ef\u53c2\u8003\uff0cetcd\u5b9e\u73b0grpc\u7684\u670d\u52a1\u6ce8\u518c\u548c\u670d\u52a1\u53d1\u73b0 \u5bf9\u4e8eetcd\u4e2d\u7684\u8fde\u63a5\uff0c\u6211\u4eec\u6bcf\u4e2a\u90fd\u7ef4\u62a4\u4e00\u4e2a\u79df\u7ea6\uff0c\u901a\u8fc7KeepAlive\u81ea\u52a8\u7eed\u4fdd\u3002\u5982\u679c\u79df\u7ea6\u8fc7\u671f\u5219\u6240\u6709\u9644\u52a0\u5728\u79df\u7ea6\u4e0a\u7684key\u5c06\u8fc7\u671f\u5e76\u88ab\u5220\u9664\uff0c\u5373\u6240\u5bf9\u5e94\u7684\u670d\u52a1\u88ab\u62ff\u6389\u3002 package discovery import ( \"context\" \"encoding/json\" \"errors\" \"net/http\" \"strconv\" \"strings\" \"time\" clientv3 \"go.etcd.io/etcd/client/v3\" \"go.uber.org/zap\" ) // Register for grpc server type Register struct { EtcdAddrs []string DialTimeout int closeCh chan struct{} leasesID clientv3.LeaseID keepAliveCh <-chan *clientv3.LeaseKeepAliveResponse srvInfo Server srvTTL int64 cli *clientv3.Client logger *zap.Logger } // NewRegister create a register base on etcd func NewRegister(etcdAddrs []string, logger *zap.Logger) *Register { return &Register{ EtcdAddrs: etcdAddrs, DialTimeout: 3, logger: logger, } } // Register a service func (r *Register) Register(srvInfo Server, ttl int64) (chan<- struct{}, error) { var err error if strings.Split(srvInfo.Addr, \":\")[0] == \"\" { return nil, errors.New(\"invalid ip\") } if r.cli, err = clientv3.New(clientv3.Config{ Endpoints: r.EtcdAddrs, DialTimeout: time.Duration(r.DialTimeout) * time.Second, }); err != nil { return nil, err } r.srvInfo = srvInfo r.srvTTL = ttl if err = r.register(); err != nil { return nil, err } r.closeCh = make(chan struct{}) go r.keepAlive() return r.closeCh, nil } // Stop stop register func (r *Register) Stop() { r.closeCh <- struct{}{} } // register \u6ce8\u518c\u8282\u70b9 func (r *Register) register() error { leaseCtx, cancel := context.WithTimeout(context.Background(), time.Duration(r.DialTimeout)*time.Second) defer cancel() leaseResp, err := r.cli.Grant(leaseCtx, r.srvTTL) if err != nil { return err } r.leasesID = leaseResp.ID if r.keepAliveCh, err = r.cli.KeepAlive(context.Background(), leaseResp.ID); err != nil { return err } data, err := json.Marshal(r.srvInfo) if err != nil { return err } _, err = r.cli.Put(context.Background(), BuildRegPath(r.srvInfo), string(data), clientv3.WithLease(r.leasesID)) return err } // unregister \u5220\u9664\u8282\u70b9 func (r *Register) unregister() error { _, err := r.cli.Delete(context.Background(), BuildRegPath(r.srvInfo)) return err } // keepAlive func (r *Register) keepAlive() { ticker := time.NewTicker(time.Duration(r.srvTTL) * time.Second) for { select { case <-r.closeCh: if err := r.unregister(); err != nil { r.logger.Error(\"unregister failed\", zap.Error(err)) } if _, err := r.cli.Revoke(context.Background(), r.leasesID); err != nil { r.logger.Error(\"revoke failed\", zap.Error(err)) } return case res := <-r.keepAliveCh: if res == nil { if err := r.register(); err != nil { r.logger.Error(\"register failed\", zap.Error(err)) } } case <-ticker.C: if r.keepAliveCh == nil { if err := r.register(); err != nil { r.logger.Error(\"register failed\", zap.Error(err)) } } } } } \u6d88\u606f\u53d1\u5e03\u548c\u8ba2\u9605 \u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u6700\u9002\u7528\u7684\u4e00\u79cd\u7ec4\u4ef6\u95f4\u901a\u4fe1\u65b9\u5f0f\u5c31\u662f\u6d88\u606f\u53d1\u5e03\u4e0e\u8ba2\u9605\u3002\u5373\u6784\u5efa\u4e00\u4e2a\u914d\u7f6e\u5171\u4eab\u4e2d\u5fc3\uff0c\u6570\u636e\u63d0\u4f9b\u8005\u5728\u8fd9\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u53d1\u5e03\u6d88\u606f\uff0c\u800c\u6d88\u606f\u4f7f\u7528\u8005\u5219\u8ba2\u9605\u4ed6\u4eec\u5173\u5fc3\u7684\u4e3b\u9898\uff0c\u4e00\u65e6\u4e3b\u9898\u6709\u6d88\u606f\u53d1\u5e03\uff0c\u5c31\u4f1a\u5b9e\u65f6\u901a\u77e5\u8ba2\u9605\u8005\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u505a\u5230\u5206\u5e03\u5f0f\u7cfb\u7edf\u914d\u7f6e\u7684\u96c6\u4e2d\u5f0f\u7ba1\u7406\u4e0e\u52a8\u6001\u66f4\u65b0 \u5e94\u7528\u4e2d\u7528\u5230\u7684\u4e00\u4e9b\u914d\u7f6e\u4fe1\u606f\u653e\u5230 etcd \u4e0a\u8fdb\u884c\u96c6\u4e2d\u7ba1\u7406\u3002\u8fd9\u7c7b\u573a\u666f\u7684\u4f7f\u7528\u65b9\u5f0f\u901a\u5e38\u662f\u8fd9\u6837\uff1a\u5e94\u7528\u5728\u542f\u52a8\u7684\u65f6\u5019\u4e3b\u52a8\u4eceetcd\u83b7\u53d6\u4e00\u6b21\u914d\u7f6e\u4fe1\u606f\uff0c\u540c\u65f6\uff0c\u5728etcd\u8282\u70b9\u4e0a\u6ce8\u518c\u4e00\u4e2aWatcher\u5e76\u7b49\u5f85\uff0c\u4ee5\u540e\u6bcf\u6b21\u914d\u7f6e\u6709\u66f4\u65b0\u7684\u65f6\u5019\uff0cetcd\u90fd\u4f1a\u5b9e\u65f6\u901a\u77e5\u8ba2\u9605\u8005\uff0c\u4ee5\u6b64\u8fbe\u5230\u83b7\u53d6\u6700\u65b0\u914d\u7f6e\u4fe1\u606f\u7684\u76ee\u7684\u3002 \u5206\u5e03\u5f0f\u641c\u7d22\u670d\u52a1\u4e2d\uff0c\u7d22\u5f15\u7684\u5143\u4fe1\u606f\u548c\u670d\u52a1\u5668\u96c6\u7fa4\u673a\u5668\u7684\u8282\u70b9\u72b6\u6001\u5b58\u653e\u5728etcd\u4e2d\uff0c\u4f9b\u5404\u4e2a\u5ba2\u6237\u7aef\u8ba2\u9605\u4f7f\u7528\u3002\u4f7f\u7528etcd\u7684key TTL\u529f\u80fd\u53ef\u4ee5\u786e\u4fdd\u673a\u5668\u72b6\u6001\u662f\u5b9e\u65f6\u66f4\u65b0\u7684\u3002 \u5206\u5e03\u5f0f\u65e5\u5fd7\u6536\u96c6\u7cfb\u7edf\u3002\u8fd9\u4e2a\u7cfb\u7edf\u7684\u6838\u5fc3\u5de5\u4f5c\u662f\u6536\u96c6\u5206\u5e03\u5728\u4e0d\u540c\u673a\u5668\u7684\u65e5\u5fd7\u3002\u6536\u96c6\u5668\u901a\u5e38\u662f\u6309\u7167\u5e94\u7528\uff08\u6216\u4e3b\u9898\uff09\u6765\u5206\u914d\u6536\u96c6\u4efb\u52a1\u5355\u5143\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728 etcd \u4e0a\u521b\u5efa\u4e00\u4e2a\u4ee5\u5e94\u7528\uff08\u4e3b\u9898\uff09\u547d\u540d\u7684\u76ee\u5f55 P\uff0c\u5e76\u5c06\u8fd9\u4e2a\u5e94\u7528\uff08\u4e3b\u9898\u76f8\u5173\uff09\u7684\u6240\u6709\u673a\u5668 ip\uff0c\u4ee5\u5b50\u76ee\u5f55\u7684\u5f62\u5f0f\u5b58\u50a8\u5230\u76ee\u5f55 P \u4e0a\uff0c\u7136\u540e\u8bbe\u7f6e\u4e00\u4e2aetcd\u9012\u5f52\u7684Watcher\uff0c\u9012\u5f52\u5f0f\u7684\u76d1\u63a7\u5e94\u7528\uff08\u4e3b\u9898\uff09\u76ee\u5f55\u4e0b\u6240\u6709\u4fe1\u606f\u7684\u53d8\u52a8\u3002\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u673a\u5668 IP\uff08\u6d88\u606f\uff09\u53d8\u52a8\u7684\u65f6\u5019\uff0c\u80fd\u591f\u5b9e\u65f6\u901a\u77e5\u5230\u6536\u96c6\u5668\u8c03\u6574\u4efb\u52a1\u5206\u914d\u3002 \u7cfb\u7edf\u4e2d\u4fe1\u606f\u9700\u8981\u52a8\u6001\u81ea\u52a8\u83b7\u53d6\u4e0e\u4eba\u5de5\u5e72\u9884\u4fee\u6539\u4fe1\u606f\u8bf7\u6c42\u5185\u5bb9\u7684\u60c5\u51b5\u3002\u901a\u5e38\u662f\u66b4\u9732\u51fa\u63a5\u53e3\uff0c\u4f8b\u5982 JMX \u63a5\u53e3\uff0c\u6765\u83b7\u53d6\u4e00\u4e9b\u8fd0\u884c\u65f6\u7684\u4fe1\u606f\u3002\u5f15\u5165 etcd \u4e4b\u540e\uff0c\u5c31\u4e0d\u7528\u81ea\u5df1\u5b9e\u73b0\u4e00\u5957\u65b9\u6848\u4e86\uff0c\u53ea\u8981\u5c06\u8fd9\u4e9b\u4fe1\u606f\u5b58\u653e\u5230\u6307\u5b9a\u7684 etcd \u76ee\u5f55\u4e2d\u5373\u53ef\uff0cetcd \u7684\u8fd9\u4e9b\u76ee\u5f55\u5c31\u53ef\u4ee5\u901a\u8fc7 HTTP \u7684\u63a5\u53e3\u5728\u5916\u90e8\u8bbf\u95ee\u3002 \u6d88\u606f\u53d1\u5e03\u88ab\u8ba2\u9605\u7684\u5b9e\u9645\u5e94\u7528 \u6211\u4eec\u4e00\u4e2a\u6027\u80fd\u8981\u6c42\u6bd4\u8f83\u9ad8\u7684\u9879\u76ee\uff0c\u6240\u9700\u8981\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u5b58\u653e\u5230\u672c\u5730\u7684localCache\u4e2d\uff0c\u901a\u8fc7etcd\u7684\u6d88\u606f\u53d1\u5e03\u548c\u8ba2\u9605\u5b9e\u73b0\uff0c\u5b9e\u73b0\u914d\u7f6e\u4fe1\u606f\u5728\u4e0d\u540c\u8282\u70b9\u540c\u6b65\u66f4\u65b0\u3002 \u6765\u770b\u4e0b\u5982\u4f55\u5b9e\u73b0 func init() { handleMap = make(map[string]func([]byte) error) } var handleMap map[string]func([]byte) error func RegisterUpdateHandle(key string, f func([]byte) error) { handleMap[key] = f } type PubClient interface { Pub(ctx context.Context, key string, val string) error } var Pub PubClient type PubClientImpl struct { client *clientv3.Client logger *zap.Logger prefix string } // \u76d1\u542c\u53d8\u5316\uff0c\u5b9e\u65f6\u66f4\u65b0\u5230\u672c\u5730\u7684map\u4e2d func (c *PubClientImpl) Watcher() { ctx, cancel := context.WithCancel(context.Background()) rch := c.client.Watch(ctx, c.prefix, clientv3.WithPrefix()) defer cancel() for wresp := range rch { for _, ev := range wresp.Events { switch ev.Type { case mvccpb.PUT: c.logger.Warn(\"Cache Update\", zap.Any(\"value\", ev.Kv)) err := handleCacheUpdate(ev.Kv) if err != nil { c.logger.Error(\"Cache Update\", zap.Error(err)) } case mvccpb.DELETE: c.logger.Error(\"Cache Delete NOT SUPPORT\") } } } } func handleCacheUpdate(val *mvccpb.KeyValue) error { if val == nil { return nil } f := handleMap[string(val.Key)] if f != nil { return f(val.Value) } return nil } func (c *PubClientImpl) Pub(ctx context.Context, key string, val string) error { ctx, _ = context.WithTimeout(ctx, time.Second*10) _, err := c.client.Put(ctx, key, val) if err != nil { return err } return nil } \u8d1f\u8f7d\u5747\u8861 \u5173\u4e8e\u8d1f\u8f7d\u5747\u8861\uff0c\u901a\u5e38\u610f\u4e49\u4e0a\u6709\u4e24\u79cd \u8f6f\u8d1f\u8f7d\uff0c\u987e\u540d\u601d\u4e49\u5c31\u662f\u9760\u8f6f\u4ef6\u624b\u6bb5\u6765\u5b9e\u73b0\u7684\u8d1f\u8f7d\u5747\u8861\u3002\u8f6f\u8d1f\u8f7d\u4e5f\u901a\u5e38\u88ab\u79f0\u4e3a 4\u5c42\u6216 7 \u5c42\u8d1f\u8f7d\uff01 \u786c\u8d1f\u8f7d\uff0c\u5c31\u662f\u9760\u786c\u4ef6\u5b9e\u73b0\u7684\u8d1f\u8f7d\u5747\u8861\uff0c\u6570\u636e\u5305\u8f6c\u53d1\u529f\u80fd\u3002\u5e38\u89c1\u7684\u5c31\u662f F5\u3002 \u901a\u8fc7etcd\u5b9e\u73b0\u7684\u8d1f\u8f7d\u5747\u8861\u5c31\u662f\u8f6f\u8d1f\u8f7d\uff0c\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u9ad8\u5e76\u53d1\u7684\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u6784\u5efa\u670d\u52a1\u7684\u96c6\u7fa4\uff0c\u5f53\u67d0\u4e00\u4e2a\u673a\u5668\u5b95\u673a\u4e86\uff0c\u522b\u7684\u673a\u5668\u53ef\u4ee5\u9a6c\u4e0a\u9876\u66ff\u4e0a\u6765\u3002 etcd\u4e2d\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\uff0c\u4f8b\u5982\u6211\u4eec\u4e0a\u6587\u7684\u4f8b\u5b50\u670d\u52a1\u6ce8\u518c\u548c\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7528\u6237\u670d\u52a1\u6765\u8bb2\uff0c\u540e\u9762\u7684\u7528\u6237\u670d\u52a1\u7684\u5b9e\u4f8b\u53ef\u80fd\u662f\u591a\u4e2a\uff0c\u6bcf\u4e2a\u90fd\u6709\u81ea\u5df1\u7684ip\u548cport\uff0c\u8fd9\u4e9b\u670d\u52a1\u4f1a\u5728\u9879\u76ee\u542f\u52a8\u7684\u65f6\u5019\u5168\u90e8\u6ce8\u518c\u5230etcd\u4e2d\uff0c\u6240\u4ee5\u5f53\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u6bcf\u6b21etcd\u4f1a\u8f6e\u8be2\u51fa\u4e00\u4e2a\u5065\u5eb7\u7684\u670d\u52a1\u5b9e\u4f8b\uff0c\u6765\u5904\u7406\u7528\u6237\u7684\u8bf7\u6c42\u3002 \u5206\u5e03\u5f0f\u901a\u77e5\u4e0e\u534f\u8c03 \u8fd9\u91cc\u8bf4\u5230\u7684\u5206\u5e03\u5f0f\u901a\u77e5\u4e0e\u534f\u8c03\uff0c\u4e0e\u6d88\u606f\u53d1\u5e03\u548c\u8ba2\u9605\u6709\u4e9b\u76f8\u4f3c\u3002\u90fd\u7528\u5230\u4e86etcd\u4e2d\u7684Watcher\u673a\u5236\uff0c\u901a\u8fc7\u6ce8\u518c\u4e0e\u5f02\u6b65\u901a\u77e5\u673a\u5236\uff0c\u5b9e\u73b0\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\u4e0d\u540c\u7cfb\u7edf\u4e4b\u95f4\u7684\u901a\u77e5\u4e0e\u534f\u8c03\uff0c\u4ece\u800c\u5bf9\u6570\u636e\u53d8\u66f4\u505a\u5230\u5b9e\u65f6\u5904\u7406\u3002\u5b9e\u73b0\u65b9\u5f0f\u901a\u5e38\u662f\u8fd9\u6837\uff1a\u4e0d\u540c\u7cfb\u7edf\u90fd\u5728etcd\u4e0a\u5bf9\u540c\u4e00\u4e2a\u76ee\u5f55\u8fdb\u884c\u6ce8\u518c\uff0c\u540c\u65f6\u8bbe\u7f6eWatcher\u89c2\u6d4b\u8be5\u76ee\u5f55\u7684\u53d8\u5316\uff08\u5982\u679c\u5bf9\u5b50\u76ee\u5f55\u7684\u53d8\u5316\u4e5f\u6709\u9700\u8981\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u9012\u5f52\u6a21\u5f0f\uff09\uff0c\u5f53\u67d0\u4e2a\u7cfb\u7edf\u66f4\u65b0\u4e86etcd\u7684\u76ee\u5f55\uff0c\u90a3\u4e48\u8bbe\u7f6e\u4e86Watcher\u7684\u7cfb\u7edf\u5c31\u4f1a\u6536\u5230\u901a\u77e5\uff0c\u5e76\u4f5c\u51fa\u76f8\u5e94\u5904\u7406\u3002 \u901a\u8fc7etcd\u8fdb\u884c\u4f4e\u8026\u5408\u7684\u5fc3\u8df3\u68c0\u6d4b\u3002\u68c0\u6d4b\u7cfb\u7edf\u548c\u88ab\u68c0\u6d4b\u7cfb\u7edf\u901a\u8fc7 etcd \u4e0a\u67d0\u4e2a\u76ee\u5f55\u5173\u8054\u800c\u975e\u76f4\u63a5\u5173\u8054\u8d77\u6765\uff0c\u8fd9\u6837\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u7cfb\u7edf\u7684\u8026\u5408\u6027\u3002 \u901a\u8fc7etcd\u5b8c\u6210\u7cfb\u7edf\u8c03\u5ea6\u3002\u67d0\u7cfb\u7edf\u6709\u63a7\u5236\u53f0\u548c\u63a8\u9001\u7cfb\u7edf\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u63a7\u5236\u53f0\u7684\u804c\u8d23\u662f\u63a7\u5236\u63a8\u9001\u7cfb\u7edf\u8fdb\u884c\u76f8\u5e94\u7684\u63a8\u9001\u5de5\u4f5c\u3002\u7ba1\u7406\u4eba\u5458\u5728\u63a7\u5236\u53f0\u4f5c\u7684\u4e00\u4e9b\u64cd\u4f5c\uff0c\u5b9e\u9645\u4e0a\u662f\u4fee\u6539\u4e86etcd\u4e0a\u67d0\u4e9b\u76ee\u5f55\u8282\u70b9\u7684\u72b6\u6001\uff0c\u800cetcd\u5c31\u628a\u8fd9\u4e9b\u53d8\u5316\u901a\u77e5\u7ed9\u6ce8\u518c\u4e86Watcher\u7684\u63a8\u9001\u7cfb\u7edf\u5ba2\u6237\u7aef\uff0c\u63a8\u9001\u7cfb\u7edf\u518d\u4f5c\u51fa\u76f8\u5e94\u7684\u63a8\u9001\u4efb\u52a1\u3002 \u901a\u8fc7etcd\u5b8c\u6210\u5de5\u4f5c\u6c47\u62a5\u3002\u5927\u90e8\u5206\u7c7b\u4f3c\u7684\u4efb\u52a1\u5206\u53d1\u7cfb\u7edf\uff0c\u5b50\u4efb\u52a1\u542f\u52a8\u540e\uff0c\u5230etcd\u6765\u6ce8\u518c\u4e00\u4e2a\u4e34\u65f6\u5de5\u4f5c\u76ee\u5f55\uff0c\u5e76\u4e14\u5b9a\u65f6\u5c06\u81ea\u5df1\u7684\u8fdb\u5ea6\u8fdb\u884c\u6c47\u62a5\uff08\u5c06\u8fdb\u5ea6\u5199\u5165\u5230\u8fd9\u4e2a\u4e34\u65f6\u76ee\u5f55\uff09\uff0c\u8fd9\u6837\u4efb\u52a1\u7ba1\u7406\u8005\u5c31\u80fd\u591f\u5b9e\u65f6\u77e5\u9053\u4efb\u52a1\u8fdb\u5ea6\u3002 \u5206\u5e03\u5f0f\u9501 \u56e0\u4e3aetcd\u4f7f\u7528Raft\u7b97\u6cd5\u4fdd\u6301\u4e86\u6570\u636e\u7684\u5f3a\u4e00\u81f4\u6027\uff0c\u67d0\u6b21\u64cd\u4f5c\u5b58\u50a8\u5230\u96c6\u7fa4\u4e2d\u7684\u503c\u5fc5\u7136\u662f\u5168\u5c40\u4e00\u81f4\u7684\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u3002\u9501\u670d\u52a1\u6709\u4e24\u79cd\u4f7f\u7528\u65b9\u5f0f\uff0c\u4e00\u662f\u4fdd\u6301\u72ec\u5360\uff0c\u4e8c\u662f\u63a7\u5236\u65f6\u5e8f\u3002 \u9996\u5148\uff0c\u6765\u770b\u4e00\u4e0b\u5206\u5e03\u5f0f\u9501\u5e94\u8be5\u5177\u5907\u54ea\u4e9b\u6761\u4ef6\u3002 \u4e92\u65a5\u6027\uff1a\u5728\u4efb\u610f\u65f6\u523b\uff0c\u5bf9\u4e8e\u540c\u4e00\u4e2a\u9501\uff0c\u53ea\u6709\u4e00\u4e2a\u5ba2\u6237\u7aef\u80fd\u6301\u6709\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e00\u4e2a\u5171\u4eab\u8d44\u6e90\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u88ab\u4e00\u4e2a\u5ba2\u6237\u7aef\u64cd\u4f5c\uff1b \u5b89\u5168\u6027\uff1a\u5373\u4e0d\u4f1a\u5f62\u6210\u6b7b\u9501\uff0c\u5f53\u4e00\u4e2a\u5ba2\u6237\u7aef\u5728\u6301\u6709\u9501\u7684\u671f\u95f4\u5d29\u6e83\u800c\u6ca1\u6709\u4e3b\u52a8\u89e3\u9501\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u6301\u6709\u7684\u9501\u4e5f\u80fd\u591f\u88ab\u6b63\u786e\u91ca\u653e\uff0c\u5e76\u4fdd\u8bc1\u540e\u7eed\u5176\u5b83\u5ba2\u6237\u7aef\u80fd\u52a0\u9501\uff1b \u53ef\u7528\u6027\uff1a\u5f53\u63d0\u4f9b\u9501\u670d\u52a1\u7684\u8282\u70b9\u53d1\u751f\u5b95\u673a\u7b49\u4e0d\u53ef\u6062\u590d\u6027\u6545\u969c\u65f6\uff0c\u201c\u70ed\u5907\u201d \u8282\u70b9\u80fd\u591f\u63a5\u66ff\u6545\u969c\u7684\u8282\u70b9\u7ee7\u7eed\u63d0\u4f9b\u670d\u52a1\uff0c\u5e76\u4fdd\u8bc1\u81ea\u8eab\u6301\u6709\u7684\u6570\u636e\u4e0e\u6545\u969c\u8282\u70b9\u4e00\u81f4\u3002 \u5bf9\u79f0\u6027\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u9501\uff0c\u5176\u52a0\u9501\u548c\u89e3\u9501\u5fc5\u987b\u662f\u540c\u4e00\u4e2a\u5ba2\u6237\u7aef\uff0c\u5373\u5ba2\u6237\u7aef A \u4e0d\u80fd\u628a\u5ba2\u6237\u7aef B \u52a0\u7684\u9501\u7ed9\u89e3\u4e86\u3002 etcd\u7684 Watch \u673a\u5236\u3001Lease \u673a\u5236\u3001Revision \u673a\u5236\u548c Prefix \u673a\u5236\uff0c\u8fd9\u4e9b\u673a\u5236\u8d4b\u4e88\u4e86 Etcd \u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u7684\u80fd\u529b\u3002 Lease \u673a\u5236 \u5373\u79df\u7ea6\u673a\u5236\uff08TTL\uff0cTime To Live\uff09\uff0cEtcd \u53ef\u4ee5\u4e3a\u5b58\u50a8\u7684 Key-Value \u5bf9\u8bbe\u7f6e\u79df\u7ea6\uff0c\u5f53\u79df\u7ea6\u5230\u671f\uff0cKey-Value \u5c06\u5931\u6548\u5220\u9664\uff1b\u540c\u65f6\u4e5f\u652f\u6301\u7eed\u7ea6\uff0c\u901a\u8fc7\u5ba2\u6237\u7aef\u53ef\u4ee5\u5728\u79df\u7ea6\u5230\u671f\u4e4b\u524d\u7eed\u7ea6\uff0c\u4ee5\u907f\u514d Key-Value \u5bf9\u8fc7\u671f\u5931\u6548\u3002Lease \u673a\u5236\u53ef\u4ee5\u4fdd\u8bc1\u5206\u5e03\u5f0f\u9501\u7684\u5b89\u5168\u6027\uff0c\u4e3a\u9501\u5bf9\u5e94\u7684 Key \u914d\u7f6e\u79df\u7ea6\uff0c\u5373\u4f7f\u9501\u7684\u6301\u6709\u8005\u56e0\u6545\u969c\u800c\u4e0d\u80fd\u4e3b\u52a8\u91ca\u653e\u9501\uff0c\u9501\u4e5f\u4f1a\u56e0\u79df\u7ea6\u5230\u671f\u800c\u81ea\u52a8\u91ca\u653e\u3002 Revision \u673a\u5236 \u6bcf\u4e2a Key \u5e26\u6709\u4e00\u4e2a Revision \u53f7\uff0c\u6bcf\u8fdb\u884c\u4e00\u6b21\u4e8b\u52a1\u4fbf\u52a0\u4e00\uff0c\u56e0\u6b64\u5b83\u662f\u5168\u5c40\u552f\u4e00\u7684\uff0c\u5982\u521d\u59cb\u503c\u4e3a 0\uff0c\u8fdb\u884c\u4e00\u6b21 put(key, value)\uff0cKey \u7684 Revision \u53d8\u4e3a 1\uff0c\u540c\u6837\u7684\u64cd\u4f5c\uff0c\u518d\u8fdb\u884c\u4e00\u6b21\uff0cRevision \u53d8\u4e3a 2\uff1b\u6362\u6210 key1 \u8fdb\u884cput(key1, value)\u64cd\u4f5c\uff0cRevision\u5c06\u53d8\u4e3a 3\uff1b\u8fd9\u79cd\u673a\u5236\u6709\u4e00\u4e2a\u4f5c\u7528\uff1a\u901a\u8fc7 Revision \u7684\u5927\u5c0f\u5c31\u53ef\u4ee5\u77e5\u9053\u5199\u64cd\u4f5c\u7684\u987a\u5e8f\u3002\u5728\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u65f6\uff0c\u591a\u4e2a\u5ba2\u6237\u7aef\u540c\u65f6\u62a2\u9501\uff0c\u6839\u636e Revision \u53f7\u5927\u5c0f\u4f9d\u6b21\u83b7\u5f97\u9501\uff0c\u53ef\u4ee5\u907f\u514d \u201c\u7f8a\u7fa4\u6548\u5e94\u201d \uff08\u4e5f\u79f0\u201c\u60ca\u7fa4\u6548\u5e94\u201d\uff09\uff0c\u5b9e\u73b0\u516c\u5e73\u9501\u3002 Prefix \u673a\u5236 \u5373\u524d\u7f00\u673a\u5236\uff0c\u4e5f\u79f0\u76ee\u5f55\u673a\u5236\uff0c\u4f8b\u5982\uff0c\u4e00\u4e2a\u540d\u4e3a /mylock \u7684\u9501\uff0c\u4e24\u4e2a\u4e89\u62a2\u5b83\u7684\u5ba2\u6237\u7aef\u8fdb\u884c\u5199\u64cd\u4f5c\uff0c\u5b9e\u9645\u5199\u5165\u7684Key\u5206\u522b\u4e3a\uff1akey1=\"/mylock/UUID1\",key2=\"/mylock/UUID2\"\uff0c\u5176\u4e2d\uff0cUUID\u8868\u793a\u5168\u5c40\u552f\u4e00\u7684ID\uff0c\u786e\u4fdd\u4e24\u4e2aKey\u7684\u552f\u4e00\u6027\u3002\u5f88\u663e\u7136\uff0c\u5199\u64cd\u4f5c\u90fd\u4f1a\u6210\u529f\uff0c\u4f46\u8fd4\u56de\u7684Revision\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\uff0c\u5982\u4f55\u5224\u65ad\u8c01\u83b7\u5f97\u4e86\u9501\u5462\uff1f\u901a\u8fc7\u524d\u7f00\u201c/mylock\u201d\u67e5\u8be2\uff0c\u8fd4\u56de\u5305\u542b\u4e24\u4e2aKey-Value\u5bf9\u7684Key-Value\u5217\u8868\uff0c\u540c\u65f6\u4e5f\u5305\u542b\u5b83\u4eec\u7684Revision\uff0c\u901a\u8fc7Revision\u5927\u5c0f\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u5224\u65ad\u81ea\u5df1\u662f\u5426\u83b7\u5f97\u9501\uff0c\u5982\u679c\u62a2\u9501\u5931\u8d25\uff0c\u5219\u7b49\u5f85\u9501\u91ca\u653e\uff08\u5bf9\u5e94\u7684 Key \u88ab\u5220\u9664\u6216\u8005\u79df\u7ea6\u8fc7\u671f\uff09\uff0c\u7136\u540e\u518d\u5224\u65ad\u81ea\u5df1\u662f\u5426\u53ef\u4ee5\u83b7\u5f97\u9501\u3002 Watch \u673a\u5236 \u5373\u76d1\u542c\u673a\u5236\uff0cWatch\u673a\u5236\u652f\u6301\u76d1\u542c\u67d0\u4e2a\u56fa\u5b9a\u7684Key\uff0c\u4e5f\u652f\u6301\u76d1\u542c\u4e00\u4e2a\u8303\u56f4\uff08\u524d\u7f00\u673a\u5236\uff09\uff0c\u5f53\u88ab\u76d1\u542c\u7684Key\u6216\u8303\u56f4\u53d1\u751f\u53d8\u5316\uff0c\u5ba2\u6237\u7aef\u5c06\u6536\u5230\u901a\u77e5\uff1b\u5728\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u65f6\uff0c\u5982\u679c\u62a2\u9501\u5931\u8d25\uff0c\u53ef\u901a\u8fc7Prefix\u673a\u5236\u8fd4\u56de\u7684Key-Value\u5217\u8868\u83b7\u5f97Revision\u6bd4\u81ea\u5df1\u5c0f\u4e14\u76f8\u5dee\u6700\u5c0f\u7684 Key\uff08\u79f0\u4e3a Pre-Key\uff09\uff0c\u5bf9Pre-Key\u8fdb\u884c\u76d1\u542c\uff0c\u56e0\u4e3a\u53ea\u6709\u5b83\u91ca\u653e\u9501\uff0c\u81ea\u5df1\u624d\u80fd\u83b7\u5f97\u9501\uff0c\u5982\u679c\u76d1\u542c\u5230Pre-Key\u7684DELETE\u4e8b\u4ef6\uff0c\u5219\u8bf4\u660ePre-Key\u5df2\u7ecf\u91ca\u653e\uff0c\u81ea\u5df1\u5df2\u7ecf\u6301\u6709\u9501\u3002 \u6765\u770b\u4e0betcd\u4e2d\u9501\u662f\u5982\u4f55\u5b9e\u73b0\u7684 // Mutex implements the sync Locker interface with etcd type Mutex struct { s *Session pfx string // \u524d\u7f00 myKey string // key myRev int64 // \u81ea\u589e\u7684Revision hdr *pb.ResponseHeader } // Lock \u4f7f\u7528\u53ef\u53d6\u6d88\u7684context\u9501\u5b9a\u4e92\u65a5\u9501\u3002\u5982\u679ccontext\u88ab\u53d6\u6d88 // \u5728\u5c1d\u8bd5\u83b7\u53d6\u9501\u65f6\uff0c\u4e92\u65a5\u9501\u4f1a\u5c1d\u8bd5\u6e05\u9664\u5176\u8fc7\u65f6\u7684\u9501\u6761\u76ee\u3002 func (m *Mutex) Lock(ctx context.Context) error { resp, err := m.tryAcquire(ctx) if err != nil { return err } // if no key on prefix / the minimum rev is key, already hold the lock ownerKey := resp.Responses[1].GetResponseRange().Kvs if len(ownerKey) == 0 || ownerKey[0].CreateRevision == m.myRev { m.hdr = resp.Header return nil } client := m.s.Client() // waitDeletes \u6709\u6548\u5730\u7b49\u5f85\uff0c\u76f4\u5230\u6240\u6709\u952e\u5339\u914d\u524d\u7f00\u4e14\u4e0d\u5927\u4e8e // \u521b\u5efa\u7684version\u3002 _, werr := waitDeletes(ctx, client, m.pfx, m.myRev-1) // release lock key if wait failed if werr != nil { m.Unlock(client.Ctx()) return werr } // make sure the session is not expired, and the owner key still exists. gresp, werr := client.Get(ctx, m.myKey) if werr != nil { m.Unlock(client.Ctx()) return werr } if len(gresp.Kvs) == 0 { // is the session key lost? return ErrSessionExpired } m.hdr = gresp.Header return nil } func (m *Mutex) tryAcquire(ctx context.Context) (*v3.TxnResponse, error) { s := m.s client := m.s.Client() // s.Lease()\u79df\u7ea6 m.myKey = fmt.Sprintf(\"%s%x\", m.pfx, s.Lease()) // \u6bd4\u8f83Revision, \u8fd9\u91cc\u6784\u5efa\u4e86\u4e00\u4e2a\u6bd4\u8f83\u8868\u8fbe\u5f0f // \u5177\u4f53\u7684\u6bd4\u8f83\u903b\u8f91\u5728\u4e0b\u9762\u7684client.Txn\u7528\u5230 // \u5982\u679c\u7b49\u4e8e0\uff0c\u5199\u5165\u5f53\u524d\u7684key\uff0c\u5e76\u8bbe\u7f6e\u79df\u7ea6\uff0c // \u5426\u5219\u83b7\u53d6\u8fd9\u4e2akey,\u91cd\u7528\u79df\u7ea6\u4e2d\u7684\u9501(\u8fd9\u91cc\u4e3b\u8981\u76ee\u7684\u662f\u5728\u4e8e\u91cd\u5165) // \u901a\u8fc7\u7b2c\u4e8c\u6b21\u83b7\u53d6\u9501,\u5224\u65ad\u9501\u662f\u5426\u5b58\u5728\u6765\u652f\u6301\u91cd\u5165 // \u6240\u4ee5\u53ea\u8981\u79df\u7ea6\u4e00\u81f4,\u90a3\u4e48\u662f\u53ef\u4ee5\u91cd\u5165\u7684. cmp := v3.Compare(v3.CreateRevision(m.myKey), \"=\", 0) // \u901a\u8fc7 myKey \u5c06\u81ea\u5df1\u9501\u5728waiters\uff1b\u6700\u65e9\u7684waiters\u5c06\u83b7\u5f97\u9501 put := v3.OpPut(m.myKey, \"\", v3.WithLease(s.Lease())) // \u83b7\u53d6\u5df2\u7ecf\u62ff\u5230\u9501\u7684key\u7684\u4fe1\u606f get := v3.OpGet(m.myKey) // \u4ec5\u4f7f\u7528\u4e00\u4e2a RPC \u83b7\u53d6\u5f53\u524d\u6301\u6709\u8005\u4ee5\u5b8c\u6210\u65e0\u7ade\u4e89\u8def\u5f84 getOwner := v3.OpGet(m.pfx, v3.WithFirstCreate()...) // \u8fd9\u91cc\u662f\u6bd4\u8f83\u7684\u903b\u8f91\uff0c\u5982\u679c\u7b49\u4e8e0\uff0c\u5199\u5165\u5f53\u524d\u7684key\uff0c\u5426\u5219\u5219\u8bfb\u53d6\u8fd9\u4e2akey // \u5927\u4f6c\u7684\u4ee3\u7801\u5199\u7684\u5c31\u662f\u5947\u5999 resp, err := client.Txn(ctx).If(cmp).Then(put, getOwner).Else(get, getOwner).Commit() if err != nil { return nil, err } // \u6839\u636e\u6bd4\u8f83\u64cd\u4f5c\u7684\u7ed3\u679c\u5199\u5165Revision\u5230m.myRev\u4e2d m.myRev = resp.Header.Revision if !resp.Succeeded { m.myRev = resp.Responses[0].GetResponseRange().Kvs[0].CreateRevision } return resp, nil } // \u62bd\u8c61\u51fa\u4e86\u4e00\u4e2asession\u5bf9\u8c61\u6765\u6301\u7eed\u4fdd\u6301\u79df\u7ea6\u4e0d\u8fc7\u671f func NewSession(client *v3.Client, opts ...SessionOption) (*Session, error) { ... ctx, cancel := context.WithCancel(ops.ctx) // \u4fdd\u8bc1\u9501\uff0c\u5728\u7ebf\u7a0b\u7684\u6d3b\u52a8\u671f\u95f4\uff0c\u5b9e\u73b0\u9501\u7684\u7684\u7eed\u79df keepAlive, err := client.KeepAlive(ctx, id) if err != nil || keepAlive == nil { cancel() return nil, err } ... return s, nil } \u8bbe\u8ba1\u601d\u8def\uff1a 1\u3001\u591a\u4e2a\u8bf7\u6c42\u6765\u524d\u62a2\u5360\u9501\uff0c\u901a\u8fc7Revision\u6765\u5224\u65ad\u9501\u7684\u5148\u540e\u987a\u5e8f\uff1b 2\u3001\u5982\u679c\u6709\u6bd4\u5f53\u524dkey\u7684Revision\u5c0f\u7684Revision\u5b58\u5728\uff0c\u8bf4\u660e\u6709key\u5df2\u7ecf\u83b7\u5f97\u4e86\u9501\uff1b 3\u3001\u7b49\u5f85\u76f4\u5230\u524d\u9762\u7684key\u88ab\u5220\u9664\uff0c\u7136\u540e\u81ea\u5df1\u5c31\u83b7\u5f97\u4e86\u9501\u3002 \u901a\u8fc7etcd\u5b9e\u73b0\u7684\u9501\uff0c\u76f4\u63a5\u5305\u542b\u4e86\u9501\u7684\u7eed\u79df\uff0c\u5982\u679c\u4f7f\u7528Redis\u8fd8\u8981\u81ea\u5df1\u53bb\u5b9e\u73b0\uff0c\u76f8\u6bd4\u8f83\u4f7f\u7528\u66f4\u7b80\u5355\u3002 \u6765\u5b9e\u73b0\u4e00\u4e2aetcd\u7684\u9501 package main import ( \"context\" \"fmt\" \"log\" \"time\" clientv3 \"go.etcd.io/etcd/client/v3\" \"go.etcd.io/etcd/client/v3/concurrency\" ) func main() { cli, err := clientv3.New(clientv3.Config{ Endpoints: []string{\"localhost:2379\"}, DialTimeout: 5 * time.Second, }) if err != nil { log.Fatal(err) } defer cli.Close() // m1\u6765\u62a2\u9501 go func() { s1, err := concurrency.NewSession(cli) if err != nil { log.Fatal(err) } defer s1.Close() m1 := concurrency.NewMutex(s1, \"/my-lock/\") // acquire lock for s1 if err := m1.Lock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\"m1---\u83b7\u5f97\u4e86\u9501\") time.Sleep(time.Second * 3) // \u91ca\u653e\u9501 if err := m1.Unlock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\"m1++\u91ca\u653e\u4e86\u9501\") }() // m2\u6765\u62a2\u9501 go func() { s2, err := concurrency.NewSession(cli) if err != nil { log.Fatal(err) } defer s2.Close() m2 := concurrency.NewMutex(s2, \"/my-lock/\") if err := m2.Lock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\"m2---\u83b7\u5f97\u4e86\u9501\") // mock\u4e1a\u52a1\u6267\u884c\u7684\u65f6\u95f4 time.Sleep(time.Second * 3) // \u91ca\u653e\u9501 if err := m2.Unlock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\"m2++\u91ca\u653e\u4e86\u9501\") }() time.Sleep(time.Second * 10) } \u6253\u5370\u4e0b\u8f93\u51fa m2---\u83b7\u5f97\u4e86\u9501 m2++\u91ca\u653e\u4e86\u9501 m1---\u83b7\u5f97\u4e86\u9501 m1++\u91ca\u653e\u4e86\u9501 \u5206\u5e03\u5f0f\u961f\u5217 \u5373\u521b\u5efa\u4e00\u4e2a\u5148\u8fdb\u5148\u51fa\u7684\u961f\u5217\u4fdd\u6301\u987a\u5e8f\u3002\u53e6\u4e00\u79cd\u6bd4\u8f83\u6709\u610f\u601d\u7684\u5b9e\u73b0\u662f\u5728\u4fdd\u8bc1\u961f\u5217\u8fbe\u5230\u67d0\u4e2a\u6761\u4ef6\u65f6\u518d\u7edf\u4e00\u6309\u987a\u5e8f\u6267\u884c\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u5b9e\u73b0\u53ef\u4ee5\u5728/queue\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u53e6\u5916\u5efa\u7acb\u4e00\u4e2a/queue/condition\u8282\u70b9\u3002 condition \u53ef\u4ee5\u8868\u793a\u961f\u5217\u5927\u5c0f\u3002\u6bd4\u5982\u4e00\u4e2a\u5927\u7684\u4efb\u52a1\u9700\u8981\u5f88\u591a\u5c0f\u4efb\u52a1\u5c31\u7eea\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u6267\u884c\uff0c\u6bcf\u6b21\u6709\u4e00\u4e2a\u5c0f\u4efb\u52a1\u5c31\u7eea\uff0c\u5c31\u7ed9\u8fd9\u4e2a condition \u6570\u5b57\u52a0 1\uff0c\u76f4\u5230\u8fbe\u5230\u5927\u4efb\u52a1\u89c4\u5b9a\u7684\u6570\u5b57\uff0c\u518d\u5f00\u59cb\u6267\u884c\u961f\u5217\u91cc\u7684\u4e00\u7cfb\u5217\u5c0f\u4efb\u52a1\uff0c\u6700\u7ec8\u6267\u884c\u5927\u4efb\u52a1\u3002 condition \u53ef\u4ee5\u8868\u793a\u67d0\u4e2a\u4efb\u52a1\u5728\u4e0d\u5728\u961f\u5217\u3002\u8fd9\u4e2a\u4efb\u52a1\u53ef\u4ee5\u662f\u6240\u6709\u6392\u5e8f\u4efb\u52a1\u7684\u9996\u4e2a\u6267\u884c\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u662f\u62d3\u6251\u7ed3\u6784\u4e2d\u6ca1\u6709\u4f9d\u8d56\u7684\u70b9\u3002\u901a\u5e38\uff0c\u5fc5\u987b\u6267\u884c\u8fd9\u4e9b\u4efb\u52a1\u540e\u624d\u80fd\u6267\u884c\u961f\u5217\u4e2d\u7684\u5176\u4ed6\u4efb\u52a1\u3002 condition \u8fd8\u53ef\u4ee5\u8868\u793a\u5176\u5b83\u7684\u4e00\u7c7b\u5f00\u59cb\u6267\u884c\u4efb\u52a1\u7684\u901a\u77e5\u3002\u53ef\u4ee5\u7531\u63a7\u5236\u7a0b\u5e8f\u6307\u5b9a\uff0c\u5f53 condition \u51fa\u73b0\u53d8\u5316\u65f6\uff0c\u5f00\u59cb\u6267\u884c\u961f\u5217\u4efb\u52a1\u3002 \u6765\u770b\u4e0b\u5b9e\u73b0 \u5165\u961f func newUniqueKV(kv v3.KV, prefix string, val string) (*RemoteKV, error) { for { newKey := fmt.Sprintf(\"%s/%v\", prefix, time.Now().UnixNano()) // \u521b\u5efa\u5bf9\u5e94\u7684key rev, err := putNewKV(kv, newKey, val, v3.NoLease) if err == nil { return &RemoteKV{kv, newKey, rev, val}, nil } // \u5982\u679c\u4e4b\u524d\u5df2\u7ecf\u521b\u5efa\u4e86\uff0c\u5c31\u8fd4\u56de if err != ErrKeyExists { return nil, err } } } // \u53ea\u6709\u5728\u6ca1\u6709\u521b\u5efa\u7684\u65f6\u5019\u624d\u80fd\u521b\u5efa\u6210\u529f func putNewKV(kv v3.KV, key, val string, leaseID v3.LeaseID) (int64, error) { cmp := v3.Compare(v3.Version(key), \"=\", 0) req := v3.OpPut(key, val, v3.WithLease(leaseID)) // \u8fd9\u91cc\u8fd8\u7528\u5230\u4e86\u8fd9\u79cd\u6bd4\u8f83\u7684\u903b\u8f91 txnresp, err := kv.Txn(context.TODO()).If(cmp).Then(req).Commit() if err != nil { return 0, err } // \u5df2\u7ecf\u5b58\u5728\u5219\u8fd4\u56de\u9519\u8bef if !txnresp.Succeeded { return 0, ErrKeyExists } return txnresp.Header.Revision, nil } \u51fa\u961f // Dequeue\u5904\u7406\u7684\u662f\u4e00\u4e2a\u5148\u8fdb\u65b0\u51fa\u7684\u961f\u5217 // \u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0cDequeue\u5c06\u4f1a\u963b\u585e\u76f4\u5230\u91cc\u9762\u6709\u503c\u585e\u5165 func (q *Queue) Dequeue() (string, error) { resp, err := q.client.Get(q.ctx, q.keyPrefix, v3.WithFirstRev()...) if err != nil { return \"\", err } kv, err := claimFirstKey(q.client, resp.Kvs) if err != nil { return \"\", err } else if kv != nil { return string(kv.Value), nil // more \u8868\u793a\u5728\u8bf7\u6c42\u7684\u8303\u56f4\u5185\u662f\u5426\u8fd8\u6709\u66f4\u591a\u7684\u952e\u8981\u8fd4\u56de\u3002 // \u5219\u8fdb\u884cDequeue\u91cd\u8bd5 } else if resp.More { // missed some items, retry to read in more return q.Dequeue() } // nothing yet; wait on elements ev, err := WaitPrefixEvents( q.client, q.keyPrefix, resp.Header.Revision, []mvccpb.Event_EventType{mvccpb.PUT}) if err != nil { return \"\", err } ok, err := deleteRevKey(q.client, string(ev.Kv.Key), ev.Kv.ModRevision) if err != nil { return \"\", err } else if !ok { // \u5982\u679c\u5220\u9664\u5931\u8d25\uff0c\u91cd\u8bd5 return q.Dequeue() } return string(ev.Kv.Value), err } \u603b\u7ed3 1\u3001\u8fd9\u91cc\u7684\u5165\u961f\u662f\u4e00\u4e2a\u5148\u8fdb\u65b0\u51fa\u7684\u961f\u5217\uff1b 2\u3001\u51fa\u961f\u7684\u5b9e\u73b0\u4e5f\u5f88\u7b80\u5355\uff0c\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0cDequeue\u5c06\u4f1a\u963b\u585e\u76f4\u5230\u91cc\u9762\u6709\u503c\u585e\u5165\uff1b \u6765\u4e2ademo package main import ( \"fmt\" \"log\" \"time\" clientv3 \"go.etcd.io/etcd/client/v3\" recipe \"go.etcd.io/etcd/client/v3/experimental/recipes\" ) func main() { cli, err := clientv3.New(clientv3.Config{ Endpoints: []string{\"localhost:2379\"}, }) if err != nil { log.Fatalf(\"error New (%v)\", err) } go func() { q := recipe.NewQueue(cli, \"testq\") for i := 0; i < 5; i++ { if err := q.Enqueue(fmt.Sprintf(\"%d\", i)); err != nil { log.Fatalf(\"error enqueuing (%v)\", err) } } }() go func() { q := recipe.NewQueue(cli, \"testq\") for i := 10; i < 100; i++ { if err := q.Enqueue(fmt.Sprintf(\"%d\", i)); err != nil { log.Fatalf(\"error enqueuing (%v)\", err) } } }() q := recipe.NewQueue(cli, \"testq\") for i := 0; i < 100; i++ { s, err := q.Dequeue() if err != nil { log.Fatalf(\"error dequeueing (%v)\", err) } fmt.Println(s) } time.Sleep(time.Second * 3) } \u96c6\u7fa4\u76d1\u63a7\u4e0eLeader\u7ade\u9009 \u901a\u8fc7etcd\u6765\u8fdb\u884c\u76d1\u63a7\u5b9e\u73b0\u8d77\u6765\u975e\u5e38\u7b80\u5355\u5e76\u4e14\u5b9e\u65f6\u6027\u5f3a 1\u3001\u524d\u9762\u51e0\u4e2a\u573a\u666f\u5df2\u7ecf\u63d0\u5230Watcher\u673a\u5236\uff0c\u5f53\u67d0\u4e2a\u8282\u70b9\u6d88\u5931\u6216\u6709\u53d8\u52a8\u65f6\uff0cWatcher\u4f1a\u7b2c\u4e00\u65f6\u95f4\u53d1\u73b0\u5e76\u544a\u77e5\u7528\u6237\u3002 2\u3001\u8282\u70b9\u53ef\u4ee5\u8bbe\u7f6eTTL key\uff0c\u6bd4\u5982\u6bcf\u9694 30s \u53d1\u9001\u4e00\u6b21\u5fc3\u8df3\u4f7f\u4ee3\u8868\u8be5\u673a\u5668\u5b58\u6d3b\u7684\u8282\u70b9\u7ee7\u7eed\u5b58\u5728\uff0c\u5426\u5219\u8282\u70b9\u6d88\u5931\u3002 \u8fd9\u6837\u5c31\u53ef\u4ee5\u7b2c\u4e00\u65f6\u95f4\u68c0\u6d4b\u5230\u5404\u8282\u70b9\u7684\u5065\u5eb7\u72b6\u6001\uff0c\u4ee5\u5b8c\u6210\u96c6\u7fa4\u7684\u76d1\u63a7\u8981\u6c42 \u53e6\u5916\uff0c\u4f7f\u7528\u5206\u5e03\u5f0f\u9501\uff0c\u53ef\u4ee5\u5b8c\u6210Leader\u7ade\u9009\u3002\u8fd9\u79cd\u573a\u666f\u901a\u5e38\u662f\u4e00\u4e9b\u957f\u65f6\u95f4CPU\u8ba1\u7b97\u6216\u8005\u4f7f\u7528IO\u64cd\u4f5c\u7684\u673a\u5668\uff0c\u53ea\u9700\u8981\u7ade\u9009\u51fa\u7684Leader\u8ba1\u7b97\u6216\u5904\u7406\u4e00\u6b21\uff0c\u5c31\u53ef\u4ee5\u628a\u7ed3\u679c\u590d\u5236\u7ed9\u5176\u4ed6\u7684Follower\u3002\u4ece\u800c\u907f\u514d\u91cd\u590d\u52b3\u52a8\uff0c\u8282\u7701\u8ba1\u7b97\u8d44\u6e90\u3002 \u8fd9\u4e2a\u7684\u7ecf\u5178\u573a\u666f\u662f\u641c\u7d22\u7cfb\u7edf\u4e2d\u5efa\u7acb\u5168\u91cf\u7d22\u5f15\u3002\u5982\u679c\u6bcf\u4e2a\u673a\u5668\u90fd\u8fdb\u884c\u4e00\u904d\u7d22\u5f15\u7684\u5efa\u7acb\uff0c\u4e0d\u4f46\u8017\u65f6\u800c\u4e14\u5efa\u7acb\u7d22\u5f15\u7684\u4e00\u81f4\u6027\u4e0d\u80fd\u4fdd\u8bc1\u3002\u901a\u8fc7\u5728etcd\u7684CAS\u673a\u5236\u540c\u65f6\u521b\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u521b\u5efa\u6210\u529f\u7684\u673a\u5668\u4f5c\u4e3aLeader\uff0c\u8fdb\u884c\u7d22\u5f15\u8ba1\u7b97\uff0c\u7136\u540e\u628a\u8ba1\u7b97\u7ed3\u679c\u5206\u53d1\u5230\u5176\u5b83\u8282\u70b9\u3002","title":"\u4ec0\u4e48\u662fetcd"},{"location":"golang/docs/etcd%E7%9A%84%E4%BD%BF%E7%94%A8/#etcd","text":"ETCD\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u3001\u53ef\u9760\u7684key-value\u5b58\u50a8\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u7528\u4e8e\u5b58\u50a8\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684\u5173\u952e\u6570\u636e\uff1b\u5f53\u7136\uff0c\u5b83\u4e0d\u4ec5\u4ec5\u7528\u4e8e\u5b58\u50a8\uff0c\u8fd8\u63d0\u4f9b\u914d\u7f6e\u5171\u4eab\u53ca\u670d\u52a1\u53d1\u73b0\uff1b\u57fa\u4e8eGo\u8bed\u8a00\u5b9e\u73b0 \u3002","title":"\u4ec0\u4e48\u662fetcd"},{"location":"golang/docs/etcd%E7%9A%84%E4%BD%BF%E7%94%A8/#etcd_1","text":"\u5b8c\u5168\u590d\u5236\uff1a\u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u4f7f\u7528\u5b8c\u6574\u7684\u5b58\u6863 \u9ad8\u53ef\u7528\u6027\uff1aEtcd\u53ef\u7528\u4e8e\u907f\u514d\u786c\u4ef6\u7684\u5355\u70b9\u6545\u969c\u6216\u7f51\u7edc\u95ee\u9898 \u4e00\u81f4\u6027\uff1a\u6bcf\u6b21\u8bfb\u53d6\u90fd\u4f1a\u8fd4\u56de\u8de8\u591a\u4e3b\u673a\u7684\u6700\u65b0\u5199\u5165 \u7b80\u5355\uff1a\u5305\u62ec\u4e00\u4e2a\u5b9a\u4e49\u826f\u597d\u3001\u9762\u5411\u7528\u6237\u7684API\uff08gRPC\uff09 \u5b89\u5168\uff1a\u5b9e\u73b0\u4e86\u5e26\u6709\u53ef\u9009\u7684\u5ba2\u6237\u7aef\u8bc1\u4e66\u8eab\u4efd\u9a8c\u8bc1\u7684\u81ea\u52a8\u5316TLS \u53ef\u9760\uff1a\u4f7f\u7528Raft\u7b97\u6cd5\u5b9e\u73b0\u4e86\u5f3a\u4e00\u81f4\u3001\u9ad8\u53ef\u7528\u7684\u670d\u52a1\u5b58\u50a8\u76ee\u5f55","title":"etcd\u7684\u7279\u70b9"},{"location":"golang/docs/etcd%E7%9A%84%E4%BD%BF%E7%94%A8/#etcd_2","text":"","title":"etcd\u7684\u5e94\u7528\u573a\u666f"},{"location":"golang/docs/etcd%E7%9A%84%E4%BD%BF%E7%94%A8/#_1","text":"\u670d\u52a1\u53d1\u73b0\u8fd8\u80fd\u6ce8\u518c \u670d\u52a1\u6ce8\u518c\u53d1\u73b0\u89e3\u51b3\u7684\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u6700\u5e38\u89c1\u7684\u95ee\u9898\u4e4b\u4e00\uff0c\u5373\u5728\u540c\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\u76ee\u6807\u670d\u52a1\uff0c\u5efa\u7acb\u8fde\u63a5\uff0c\u7136\u540e\u5b8c\u6210\u6574\u4e2a\u94fe\u8def\u7684\u8c03\u5ea6\u3002 \u672c\u8d28\u4e0a\u6765\u8bf4\uff0c\u670d\u52a1\u53d1\u73b0\u5c31\u662f\u60f3\u8981\u4e86\u89e3\u96c6\u7fa4\u4e2d\u662f\u5426\u6709\u8fdb\u7a0b\u5728\u76d1\u542c udp \u6216 tcp \u7aef\u53e3\uff0c\u5e76\u4e14\u901a\u8fc7\u540d\u5b57\u5c31\u53ef\u4ee5\u67e5\u627e\u548c\u8fde\u63a5\u3002\u8981\u89e3\u51b3\u670d\u52a1\u53d1\u73b0\u7684\u95ee\u9898\uff0c\u9700\u8981\u6709\u4e0b\u9762\u4e09\u5927\u652f\u67f1\uff0c\u7f3a\u4e00\u4e0d\u53ef\u3002 1\u3001\u4e00\u4e2a\u5f3a\u4e00\u81f4\u6027\u3001\u9ad8\u53ef\u7528\u7684\u670d\u52a1\u5b58\u50a8\u76ee\u5f55\u3002\u57fa\u4e8eRaft\u7b97\u6cd5\u7684etcd\u5929\u751f\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u5f3a\u4e00\u81f4\u6027\u9ad8\u53ef\u7528\u7684\u670d\u52a1\u5b58\u50a8\u76ee\u5f55\u3002 2\u3001\u4e00\u79cd\u6ce8\u518c\u670d\u52a1\u548c\u76d1\u63a7\u670d\u52a1\u5065\u5eb7\u72b6\u6001\u7684\u673a\u5236\u3002\u7528\u6237\u53ef\u4ee5\u5728etcd\u4e2d\u6ce8\u518c\u670d\u52a1\uff0c\u5e76\u4e14\u5bf9\u6ce8\u518c\u7684\u670d\u52a1\u8bbe\u7f6ekey TTL\uff0c\u5b9a\u65f6\u4fdd\u6301\u670d\u52a1\u7684\u5fc3\u8df3\u4ee5\u8fbe\u5230\u76d1\u63a7\u5065\u5eb7\u72b6\u6001\u7684\u6548\u679c\u3002 3\u3001\u4e00\u79cd\u67e5\u627e\u548c\u8fde\u63a5\u670d\u52a1\u7684\u673a\u5236\u3002\u901a\u8fc7\u5728 etcd \u6307\u5b9a\u7684\u4e3b\u9898\u4e0b\u6ce8\u518c\u7684\u670d\u52a1\u4e5f\u80fd\u5728\u5bf9\u5e94\u7684\u4e3b\u9898\u4e0b\u67e5\u627e\u5230\u3002\u4e3a\u4e86\u786e\u4fdd\u8fde\u63a5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u670d\u52a1\u673a\u5668\u4e0a\u90fd\u90e8\u7f72\u4e00\u4e2aProxy\u6a21\u5f0f\u7684etcd\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u786e\u4fdd\u80fd\u8bbf\u95eeetcd\u96c6\u7fa4\u7684\u670d\u52a1\u90fd\u80fd\u4e92\u76f8\u8fde\u63a5\u3002 \u4e00\u4e2a\u7528\u6237\u7684api\u8bf7\u6c42\uff0c\u53ef\u80fd\u8c03\u7528\u591a\u4e2a\u5fae\u670d\u52a1\u8d44\u6e90\uff0c\u8fd9\u4e9b\u670d\u52a1\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528etcd\u8fdb\u884c\u670d\u52a1\u6ce8\u518c\u548c\u670d\u52a1\u53d1\u73b0\uff0c\u5f53\u6bcf\u4e2a\u670d\u52a1\u542f\u52a8\u7684\u65f6\u5019\u5c31\u6ce8\u518c\u5230etcd\u4e2d\uff0c\u5f53\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5728etcd\u4e2d\u5bfb\u627e\uff0c\u8c03\u7528\u5373\u53ef\u3002 \u5f53\u7136\uff0c\u6bcf\u4e2a\u670d\u52a1\u7684\u5b9e\u4f8b\u4e0d\u6b62\u4e00\u4e2a\uff0c\u6bd4\u5982\u6211\u4eec\u7684\u7528\u6237\u670d\u52a1\uff0c\u6211\u4eec\u53ef\u80fd\u542f\u52a8\u4e86\u591a\u4e2a\u5b9e\u4f8b\uff0c\u8fd9\u4e9b\u5b9e\u4f8b\u5728\u670d\u52a1\u542f\u52a8\u8fc7\u7a0b\u4e2d\u5168\u90e8\u6ce8\u518c\u5230\u4e86etcd\u4e2d\uff0c\u4f46\u662f\u67d0\u4e2a\u5b9e\u4f8b\u53ef\u80fd\u51fa\u73b0\u6545\u969c\u91cd\u542f\uff0c\u8fd9\u65f6\u5019\u5c31etcd\u5728\u8fdb\u884c\u8f6c\u53d1\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5c4f\u853d\u5230\u6545\u969c\u7684\u5b9e\u4f8b\u8282\u70b9\uff0c\u53ea\u5411\u6b63\u5e38\u8fd0\u884c\u7684\u5b9e\u4f8b\uff0c\u8fdb\u884c\u8bf7\u6c42\u8f6c\u53d1\u3002 \u6765\u770b\u4e2a\u670d\u52a1\u6ce8\u518c\u53d1\u73b0\u7684demo \u8fd9\u91cc\u653e\u4e00\u6bb5\u6bd4\u8f83\u6838\u5fc3\u7684\u4ee3\u7801\uff0c\u8fd9\u91cc\u6458\u5f55\u4e86\u6211\u4eec\u7ebf\u4e0a\u6b63\u5728\u4f7f\u7528\u7684etcd\u5b9e\u73b0grpc\u670d\u52a1\u6ce8\u518c\u548c\u53d1\u73b0\u7684\u5b9e\u73b0\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u53ef\u53c2\u8003\uff0cetcd\u5b9e\u73b0grpc\u7684\u670d\u52a1\u6ce8\u518c\u548c\u670d\u52a1\u53d1\u73b0 \u5bf9\u4e8eetcd\u4e2d\u7684\u8fde\u63a5\uff0c\u6211\u4eec\u6bcf\u4e2a\u90fd\u7ef4\u62a4\u4e00\u4e2a\u79df\u7ea6\uff0c\u901a\u8fc7KeepAlive\u81ea\u52a8\u7eed\u4fdd\u3002\u5982\u679c\u79df\u7ea6\u8fc7\u671f\u5219\u6240\u6709\u9644\u52a0\u5728\u79df\u7ea6\u4e0a\u7684key\u5c06\u8fc7\u671f\u5e76\u88ab\u5220\u9664\uff0c\u5373\u6240\u5bf9\u5e94\u7684\u670d\u52a1\u88ab\u62ff\u6389\u3002 package discovery import ( \"context\" \"encoding/json\" \"errors\" \"net/http\" \"strconv\" \"strings\" \"time\" clientv3 \"go.etcd.io/etcd/client/v3\" \"go.uber.org/zap\" ) // Register for grpc server type Register struct { EtcdAddrs []string DialTimeout int closeCh chan struct{} leasesID clientv3.LeaseID keepAliveCh <-chan *clientv3.LeaseKeepAliveResponse srvInfo Server srvTTL int64 cli *clientv3.Client logger *zap.Logger } // NewRegister create a register base on etcd func NewRegister(etcdAddrs []string, logger *zap.Logger) *Register { return &Register{ EtcdAddrs: etcdAddrs, DialTimeout: 3, logger: logger, } } // Register a service func (r *Register) Register(srvInfo Server, ttl int64) (chan<- struct{}, error) { var err error if strings.Split(srvInfo.Addr, \":\")[0] == \"\" { return nil, errors.New(\"invalid ip\") } if r.cli, err = clientv3.New(clientv3.Config{ Endpoints: r.EtcdAddrs, DialTimeout: time.Duration(r.DialTimeout) * time.Second, }); err != nil { return nil, err } r.srvInfo = srvInfo r.srvTTL = ttl if err = r.register(); err != nil { return nil, err } r.closeCh = make(chan struct{}) go r.keepAlive() return r.closeCh, nil } // Stop stop register func (r *Register) Stop() { r.closeCh <- struct{}{} } // register \u6ce8\u518c\u8282\u70b9 func (r *Register) register() error { leaseCtx, cancel := context.WithTimeout(context.Background(), time.Duration(r.DialTimeout)*time.Second) defer cancel() leaseResp, err := r.cli.Grant(leaseCtx, r.srvTTL) if err != nil { return err } r.leasesID = leaseResp.ID if r.keepAliveCh, err = r.cli.KeepAlive(context.Background(), leaseResp.ID); err != nil { return err } data, err := json.Marshal(r.srvInfo) if err != nil { return err } _, err = r.cli.Put(context.Background(), BuildRegPath(r.srvInfo), string(data), clientv3.WithLease(r.leasesID)) return err } // unregister \u5220\u9664\u8282\u70b9 func (r *Register) unregister() error { _, err := r.cli.Delete(context.Background(), BuildRegPath(r.srvInfo)) return err } // keepAlive func (r *Register) keepAlive() { ticker := time.NewTicker(time.Duration(r.srvTTL) * time.Second) for { select { case <-r.closeCh: if err := r.unregister(); err != nil { r.logger.Error(\"unregister failed\", zap.Error(err)) } if _, err := r.cli.Revoke(context.Background(), r.leasesID); err != nil { r.logger.Error(\"revoke failed\", zap.Error(err)) } return case res := <-r.keepAliveCh: if res == nil { if err := r.register(); err != nil { r.logger.Error(\"register failed\", zap.Error(err)) } } case <-ticker.C: if r.keepAliveCh == nil { if err := r.register(); err != nil { r.logger.Error(\"register failed\", zap.Error(err)) } } } } }","title":"\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0"},{"location":"golang/docs/etcd%E7%9A%84%E4%BD%BF%E7%94%A8/#_2","text":"\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u6700\u9002\u7528\u7684\u4e00\u79cd\u7ec4\u4ef6\u95f4\u901a\u4fe1\u65b9\u5f0f\u5c31\u662f\u6d88\u606f\u53d1\u5e03\u4e0e\u8ba2\u9605\u3002\u5373\u6784\u5efa\u4e00\u4e2a\u914d\u7f6e\u5171\u4eab\u4e2d\u5fc3\uff0c\u6570\u636e\u63d0\u4f9b\u8005\u5728\u8fd9\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u53d1\u5e03\u6d88\u606f\uff0c\u800c\u6d88\u606f\u4f7f\u7528\u8005\u5219\u8ba2\u9605\u4ed6\u4eec\u5173\u5fc3\u7684\u4e3b\u9898\uff0c\u4e00\u65e6\u4e3b\u9898\u6709\u6d88\u606f\u53d1\u5e03\uff0c\u5c31\u4f1a\u5b9e\u65f6\u901a\u77e5\u8ba2\u9605\u8005\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u505a\u5230\u5206\u5e03\u5f0f\u7cfb\u7edf\u914d\u7f6e\u7684\u96c6\u4e2d\u5f0f\u7ba1\u7406\u4e0e\u52a8\u6001\u66f4\u65b0 \u5e94\u7528\u4e2d\u7528\u5230\u7684\u4e00\u4e9b\u914d\u7f6e\u4fe1\u606f\u653e\u5230 etcd \u4e0a\u8fdb\u884c\u96c6\u4e2d\u7ba1\u7406\u3002\u8fd9\u7c7b\u573a\u666f\u7684\u4f7f\u7528\u65b9\u5f0f\u901a\u5e38\u662f\u8fd9\u6837\uff1a\u5e94\u7528\u5728\u542f\u52a8\u7684\u65f6\u5019\u4e3b\u52a8\u4eceetcd\u83b7\u53d6\u4e00\u6b21\u914d\u7f6e\u4fe1\u606f\uff0c\u540c\u65f6\uff0c\u5728etcd\u8282\u70b9\u4e0a\u6ce8\u518c\u4e00\u4e2aWatcher\u5e76\u7b49\u5f85\uff0c\u4ee5\u540e\u6bcf\u6b21\u914d\u7f6e\u6709\u66f4\u65b0\u7684\u65f6\u5019\uff0cetcd\u90fd\u4f1a\u5b9e\u65f6\u901a\u77e5\u8ba2\u9605\u8005\uff0c\u4ee5\u6b64\u8fbe\u5230\u83b7\u53d6\u6700\u65b0\u914d\u7f6e\u4fe1\u606f\u7684\u76ee\u7684\u3002 \u5206\u5e03\u5f0f\u641c\u7d22\u670d\u52a1\u4e2d\uff0c\u7d22\u5f15\u7684\u5143\u4fe1\u606f\u548c\u670d\u52a1\u5668\u96c6\u7fa4\u673a\u5668\u7684\u8282\u70b9\u72b6\u6001\u5b58\u653e\u5728etcd\u4e2d\uff0c\u4f9b\u5404\u4e2a\u5ba2\u6237\u7aef\u8ba2\u9605\u4f7f\u7528\u3002\u4f7f\u7528etcd\u7684key TTL\u529f\u80fd\u53ef\u4ee5\u786e\u4fdd\u673a\u5668\u72b6\u6001\u662f\u5b9e\u65f6\u66f4\u65b0\u7684\u3002 \u5206\u5e03\u5f0f\u65e5\u5fd7\u6536\u96c6\u7cfb\u7edf\u3002\u8fd9\u4e2a\u7cfb\u7edf\u7684\u6838\u5fc3\u5de5\u4f5c\u662f\u6536\u96c6\u5206\u5e03\u5728\u4e0d\u540c\u673a\u5668\u7684\u65e5\u5fd7\u3002\u6536\u96c6\u5668\u901a\u5e38\u662f\u6309\u7167\u5e94\u7528\uff08\u6216\u4e3b\u9898\uff09\u6765\u5206\u914d\u6536\u96c6\u4efb\u52a1\u5355\u5143\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728 etcd \u4e0a\u521b\u5efa\u4e00\u4e2a\u4ee5\u5e94\u7528\uff08\u4e3b\u9898\uff09\u547d\u540d\u7684\u76ee\u5f55 P\uff0c\u5e76\u5c06\u8fd9\u4e2a\u5e94\u7528\uff08\u4e3b\u9898\u76f8\u5173\uff09\u7684\u6240\u6709\u673a\u5668 ip\uff0c\u4ee5\u5b50\u76ee\u5f55\u7684\u5f62\u5f0f\u5b58\u50a8\u5230\u76ee\u5f55 P \u4e0a\uff0c\u7136\u540e\u8bbe\u7f6e\u4e00\u4e2aetcd\u9012\u5f52\u7684Watcher\uff0c\u9012\u5f52\u5f0f\u7684\u76d1\u63a7\u5e94\u7528\uff08\u4e3b\u9898\uff09\u76ee\u5f55\u4e0b\u6240\u6709\u4fe1\u606f\u7684\u53d8\u52a8\u3002\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u673a\u5668 IP\uff08\u6d88\u606f\uff09\u53d8\u52a8\u7684\u65f6\u5019\uff0c\u80fd\u591f\u5b9e\u65f6\u901a\u77e5\u5230\u6536\u96c6\u5668\u8c03\u6574\u4efb\u52a1\u5206\u914d\u3002 \u7cfb\u7edf\u4e2d\u4fe1\u606f\u9700\u8981\u52a8\u6001\u81ea\u52a8\u83b7\u53d6\u4e0e\u4eba\u5de5\u5e72\u9884\u4fee\u6539\u4fe1\u606f\u8bf7\u6c42\u5185\u5bb9\u7684\u60c5\u51b5\u3002\u901a\u5e38\u662f\u66b4\u9732\u51fa\u63a5\u53e3\uff0c\u4f8b\u5982 JMX \u63a5\u53e3\uff0c\u6765\u83b7\u53d6\u4e00\u4e9b\u8fd0\u884c\u65f6\u7684\u4fe1\u606f\u3002\u5f15\u5165 etcd \u4e4b\u540e\uff0c\u5c31\u4e0d\u7528\u81ea\u5df1\u5b9e\u73b0\u4e00\u5957\u65b9\u6848\u4e86\uff0c\u53ea\u8981\u5c06\u8fd9\u4e9b\u4fe1\u606f\u5b58\u653e\u5230\u6307\u5b9a\u7684 etcd \u76ee\u5f55\u4e2d\u5373\u53ef\uff0cetcd \u7684\u8fd9\u4e9b\u76ee\u5f55\u5c31\u53ef\u4ee5\u901a\u8fc7 HTTP \u7684\u63a5\u53e3\u5728\u5916\u90e8\u8bbf\u95ee\u3002 \u6d88\u606f\u53d1\u5e03\u88ab\u8ba2\u9605\u7684\u5b9e\u9645\u5e94\u7528 \u6211\u4eec\u4e00\u4e2a\u6027\u80fd\u8981\u6c42\u6bd4\u8f83\u9ad8\u7684\u9879\u76ee\uff0c\u6240\u9700\u8981\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u5b58\u653e\u5230\u672c\u5730\u7684localCache\u4e2d\uff0c\u901a\u8fc7etcd\u7684\u6d88\u606f\u53d1\u5e03\u548c\u8ba2\u9605\u5b9e\u73b0\uff0c\u5b9e\u73b0\u914d\u7f6e\u4fe1\u606f\u5728\u4e0d\u540c\u8282\u70b9\u540c\u6b65\u66f4\u65b0\u3002 \u6765\u770b\u4e0b\u5982\u4f55\u5b9e\u73b0 func init() { handleMap = make(map[string]func([]byte) error) } var handleMap map[string]func([]byte) error func RegisterUpdateHandle(key string, f func([]byte) error) { handleMap[key] = f } type PubClient interface { Pub(ctx context.Context, key string, val string) error } var Pub PubClient type PubClientImpl struct { client *clientv3.Client logger *zap.Logger prefix string } // \u76d1\u542c\u53d8\u5316\uff0c\u5b9e\u65f6\u66f4\u65b0\u5230\u672c\u5730\u7684map\u4e2d func (c *PubClientImpl) Watcher() { ctx, cancel := context.WithCancel(context.Background()) rch := c.client.Watch(ctx, c.prefix, clientv3.WithPrefix()) defer cancel() for wresp := range rch { for _, ev := range wresp.Events { switch ev.Type { case mvccpb.PUT: c.logger.Warn(\"Cache Update\", zap.Any(\"value\", ev.Kv)) err := handleCacheUpdate(ev.Kv) if err != nil { c.logger.Error(\"Cache Update\", zap.Error(err)) } case mvccpb.DELETE: c.logger.Error(\"Cache Delete NOT SUPPORT\") } } } } func handleCacheUpdate(val *mvccpb.KeyValue) error { if val == nil { return nil } f := handleMap[string(val.Key)] if f != nil { return f(val.Value) } return nil } func (c *PubClientImpl) Pub(ctx context.Context, key string, val string) error { ctx, _ = context.WithTimeout(ctx, time.Second*10) _, err := c.client.Put(ctx, key, val) if err != nil { return err } return nil }","title":"\u6d88\u606f\u53d1\u5e03\u548c\u8ba2\u9605"},{"location":"golang/docs/etcd%E7%9A%84%E4%BD%BF%E7%94%A8/#_3","text":"\u5173\u4e8e\u8d1f\u8f7d\u5747\u8861\uff0c\u901a\u5e38\u610f\u4e49\u4e0a\u6709\u4e24\u79cd \u8f6f\u8d1f\u8f7d\uff0c\u987e\u540d\u601d\u4e49\u5c31\u662f\u9760\u8f6f\u4ef6\u624b\u6bb5\u6765\u5b9e\u73b0\u7684\u8d1f\u8f7d\u5747\u8861\u3002\u8f6f\u8d1f\u8f7d\u4e5f\u901a\u5e38\u88ab\u79f0\u4e3a 4\u5c42\u6216 7 \u5c42\u8d1f\u8f7d\uff01 \u786c\u8d1f\u8f7d\uff0c\u5c31\u662f\u9760\u786c\u4ef6\u5b9e\u73b0\u7684\u8d1f\u8f7d\u5747\u8861\uff0c\u6570\u636e\u5305\u8f6c\u53d1\u529f\u80fd\u3002\u5e38\u89c1\u7684\u5c31\u662f F5\u3002 \u901a\u8fc7etcd\u5b9e\u73b0\u7684\u8d1f\u8f7d\u5747\u8861\u5c31\u662f\u8f6f\u8d1f\u8f7d\uff0c\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u9ad8\u5e76\u53d1\u7684\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u6784\u5efa\u670d\u52a1\u7684\u96c6\u7fa4\uff0c\u5f53\u67d0\u4e00\u4e2a\u673a\u5668\u5b95\u673a\u4e86\uff0c\u522b\u7684\u673a\u5668\u53ef\u4ee5\u9a6c\u4e0a\u9876\u66ff\u4e0a\u6765\u3002 etcd\u4e2d\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\uff0c\u4f8b\u5982\u6211\u4eec\u4e0a\u6587\u7684\u4f8b\u5b50\u670d\u52a1\u6ce8\u518c\u548c\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7528\u6237\u670d\u52a1\u6765\u8bb2\uff0c\u540e\u9762\u7684\u7528\u6237\u670d\u52a1\u7684\u5b9e\u4f8b\u53ef\u80fd\u662f\u591a\u4e2a\uff0c\u6bcf\u4e2a\u90fd\u6709\u81ea\u5df1\u7684ip\u548cport\uff0c\u8fd9\u4e9b\u670d\u52a1\u4f1a\u5728\u9879\u76ee\u542f\u52a8\u7684\u65f6\u5019\u5168\u90e8\u6ce8\u518c\u5230etcd\u4e2d\uff0c\u6240\u4ee5\u5f53\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u6bcf\u6b21etcd\u4f1a\u8f6e\u8be2\u51fa\u4e00\u4e2a\u5065\u5eb7\u7684\u670d\u52a1\u5b9e\u4f8b\uff0c\u6765\u5904\u7406\u7528\u6237\u7684\u8bf7\u6c42\u3002","title":"\u8d1f\u8f7d\u5747\u8861"},{"location":"golang/docs/etcd%E7%9A%84%E4%BD%BF%E7%94%A8/#_4","text":"\u8fd9\u91cc\u8bf4\u5230\u7684\u5206\u5e03\u5f0f\u901a\u77e5\u4e0e\u534f\u8c03\uff0c\u4e0e\u6d88\u606f\u53d1\u5e03\u548c\u8ba2\u9605\u6709\u4e9b\u76f8\u4f3c\u3002\u90fd\u7528\u5230\u4e86etcd\u4e2d\u7684Watcher\u673a\u5236\uff0c\u901a\u8fc7\u6ce8\u518c\u4e0e\u5f02\u6b65\u901a\u77e5\u673a\u5236\uff0c\u5b9e\u73b0\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\u4e0d\u540c\u7cfb\u7edf\u4e4b\u95f4\u7684\u901a\u77e5\u4e0e\u534f\u8c03\uff0c\u4ece\u800c\u5bf9\u6570\u636e\u53d8\u66f4\u505a\u5230\u5b9e\u65f6\u5904\u7406\u3002\u5b9e\u73b0\u65b9\u5f0f\u901a\u5e38\u662f\u8fd9\u6837\uff1a\u4e0d\u540c\u7cfb\u7edf\u90fd\u5728etcd\u4e0a\u5bf9\u540c\u4e00\u4e2a\u76ee\u5f55\u8fdb\u884c\u6ce8\u518c\uff0c\u540c\u65f6\u8bbe\u7f6eWatcher\u89c2\u6d4b\u8be5\u76ee\u5f55\u7684\u53d8\u5316\uff08\u5982\u679c\u5bf9\u5b50\u76ee\u5f55\u7684\u53d8\u5316\u4e5f\u6709\u9700\u8981\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u9012\u5f52\u6a21\u5f0f\uff09\uff0c\u5f53\u67d0\u4e2a\u7cfb\u7edf\u66f4\u65b0\u4e86etcd\u7684\u76ee\u5f55\uff0c\u90a3\u4e48\u8bbe\u7f6e\u4e86Watcher\u7684\u7cfb\u7edf\u5c31\u4f1a\u6536\u5230\u901a\u77e5\uff0c\u5e76\u4f5c\u51fa\u76f8\u5e94\u5904\u7406\u3002 \u901a\u8fc7etcd\u8fdb\u884c\u4f4e\u8026\u5408\u7684\u5fc3\u8df3\u68c0\u6d4b\u3002\u68c0\u6d4b\u7cfb\u7edf\u548c\u88ab\u68c0\u6d4b\u7cfb\u7edf\u901a\u8fc7 etcd \u4e0a\u67d0\u4e2a\u76ee\u5f55\u5173\u8054\u800c\u975e\u76f4\u63a5\u5173\u8054\u8d77\u6765\uff0c\u8fd9\u6837\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u7cfb\u7edf\u7684\u8026\u5408\u6027\u3002 \u901a\u8fc7etcd\u5b8c\u6210\u7cfb\u7edf\u8c03\u5ea6\u3002\u67d0\u7cfb\u7edf\u6709\u63a7\u5236\u53f0\u548c\u63a8\u9001\u7cfb\u7edf\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u63a7\u5236\u53f0\u7684\u804c\u8d23\u662f\u63a7\u5236\u63a8\u9001\u7cfb\u7edf\u8fdb\u884c\u76f8\u5e94\u7684\u63a8\u9001\u5de5\u4f5c\u3002\u7ba1\u7406\u4eba\u5458\u5728\u63a7\u5236\u53f0\u4f5c\u7684\u4e00\u4e9b\u64cd\u4f5c\uff0c\u5b9e\u9645\u4e0a\u662f\u4fee\u6539\u4e86etcd\u4e0a\u67d0\u4e9b\u76ee\u5f55\u8282\u70b9\u7684\u72b6\u6001\uff0c\u800cetcd\u5c31\u628a\u8fd9\u4e9b\u53d8\u5316\u901a\u77e5\u7ed9\u6ce8\u518c\u4e86Watcher\u7684\u63a8\u9001\u7cfb\u7edf\u5ba2\u6237\u7aef\uff0c\u63a8\u9001\u7cfb\u7edf\u518d\u4f5c\u51fa\u76f8\u5e94\u7684\u63a8\u9001\u4efb\u52a1\u3002 \u901a\u8fc7etcd\u5b8c\u6210\u5de5\u4f5c\u6c47\u62a5\u3002\u5927\u90e8\u5206\u7c7b\u4f3c\u7684\u4efb\u52a1\u5206\u53d1\u7cfb\u7edf\uff0c\u5b50\u4efb\u52a1\u542f\u52a8\u540e\uff0c\u5230etcd\u6765\u6ce8\u518c\u4e00\u4e2a\u4e34\u65f6\u5de5\u4f5c\u76ee\u5f55\uff0c\u5e76\u4e14\u5b9a\u65f6\u5c06\u81ea\u5df1\u7684\u8fdb\u5ea6\u8fdb\u884c\u6c47\u62a5\uff08\u5c06\u8fdb\u5ea6\u5199\u5165\u5230\u8fd9\u4e2a\u4e34\u65f6\u76ee\u5f55\uff09\uff0c\u8fd9\u6837\u4efb\u52a1\u7ba1\u7406\u8005\u5c31\u80fd\u591f\u5b9e\u65f6\u77e5\u9053\u4efb\u52a1\u8fdb\u5ea6\u3002","title":"\u5206\u5e03\u5f0f\u901a\u77e5\u4e0e\u534f\u8c03"},{"location":"golang/docs/etcd%E7%9A%84%E4%BD%BF%E7%94%A8/#_5","text":"\u56e0\u4e3aetcd\u4f7f\u7528Raft\u7b97\u6cd5\u4fdd\u6301\u4e86\u6570\u636e\u7684\u5f3a\u4e00\u81f4\u6027\uff0c\u67d0\u6b21\u64cd\u4f5c\u5b58\u50a8\u5230\u96c6\u7fa4\u4e2d\u7684\u503c\u5fc5\u7136\u662f\u5168\u5c40\u4e00\u81f4\u7684\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u3002\u9501\u670d\u52a1\u6709\u4e24\u79cd\u4f7f\u7528\u65b9\u5f0f\uff0c\u4e00\u662f\u4fdd\u6301\u72ec\u5360\uff0c\u4e8c\u662f\u63a7\u5236\u65f6\u5e8f\u3002 \u9996\u5148\uff0c\u6765\u770b\u4e00\u4e0b\u5206\u5e03\u5f0f\u9501\u5e94\u8be5\u5177\u5907\u54ea\u4e9b\u6761\u4ef6\u3002 \u4e92\u65a5\u6027\uff1a\u5728\u4efb\u610f\u65f6\u523b\uff0c\u5bf9\u4e8e\u540c\u4e00\u4e2a\u9501\uff0c\u53ea\u6709\u4e00\u4e2a\u5ba2\u6237\u7aef\u80fd\u6301\u6709\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e00\u4e2a\u5171\u4eab\u8d44\u6e90\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u88ab\u4e00\u4e2a\u5ba2\u6237\u7aef\u64cd\u4f5c\uff1b \u5b89\u5168\u6027\uff1a\u5373\u4e0d\u4f1a\u5f62\u6210\u6b7b\u9501\uff0c\u5f53\u4e00\u4e2a\u5ba2\u6237\u7aef\u5728\u6301\u6709\u9501\u7684\u671f\u95f4\u5d29\u6e83\u800c\u6ca1\u6709\u4e3b\u52a8\u89e3\u9501\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u6301\u6709\u7684\u9501\u4e5f\u80fd\u591f\u88ab\u6b63\u786e\u91ca\u653e\uff0c\u5e76\u4fdd\u8bc1\u540e\u7eed\u5176\u5b83\u5ba2\u6237\u7aef\u80fd\u52a0\u9501\uff1b \u53ef\u7528\u6027\uff1a\u5f53\u63d0\u4f9b\u9501\u670d\u52a1\u7684\u8282\u70b9\u53d1\u751f\u5b95\u673a\u7b49\u4e0d\u53ef\u6062\u590d\u6027\u6545\u969c\u65f6\uff0c\u201c\u70ed\u5907\u201d \u8282\u70b9\u80fd\u591f\u63a5\u66ff\u6545\u969c\u7684\u8282\u70b9\u7ee7\u7eed\u63d0\u4f9b\u670d\u52a1\uff0c\u5e76\u4fdd\u8bc1\u81ea\u8eab\u6301\u6709\u7684\u6570\u636e\u4e0e\u6545\u969c\u8282\u70b9\u4e00\u81f4\u3002 \u5bf9\u79f0\u6027\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u9501\uff0c\u5176\u52a0\u9501\u548c\u89e3\u9501\u5fc5\u987b\u662f\u540c\u4e00\u4e2a\u5ba2\u6237\u7aef\uff0c\u5373\u5ba2\u6237\u7aef A \u4e0d\u80fd\u628a\u5ba2\u6237\u7aef B \u52a0\u7684\u9501\u7ed9\u89e3\u4e86\u3002 etcd\u7684 Watch \u673a\u5236\u3001Lease \u673a\u5236\u3001Revision \u673a\u5236\u548c Prefix \u673a\u5236\uff0c\u8fd9\u4e9b\u673a\u5236\u8d4b\u4e88\u4e86 Etcd \u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u7684\u80fd\u529b\u3002 Lease \u673a\u5236 \u5373\u79df\u7ea6\u673a\u5236\uff08TTL\uff0cTime To Live\uff09\uff0cEtcd \u53ef\u4ee5\u4e3a\u5b58\u50a8\u7684 Key-Value \u5bf9\u8bbe\u7f6e\u79df\u7ea6\uff0c\u5f53\u79df\u7ea6\u5230\u671f\uff0cKey-Value \u5c06\u5931\u6548\u5220\u9664\uff1b\u540c\u65f6\u4e5f\u652f\u6301\u7eed\u7ea6\uff0c\u901a\u8fc7\u5ba2\u6237\u7aef\u53ef\u4ee5\u5728\u79df\u7ea6\u5230\u671f\u4e4b\u524d\u7eed\u7ea6\uff0c\u4ee5\u907f\u514d Key-Value \u5bf9\u8fc7\u671f\u5931\u6548\u3002Lease \u673a\u5236\u53ef\u4ee5\u4fdd\u8bc1\u5206\u5e03\u5f0f\u9501\u7684\u5b89\u5168\u6027\uff0c\u4e3a\u9501\u5bf9\u5e94\u7684 Key \u914d\u7f6e\u79df\u7ea6\uff0c\u5373\u4f7f\u9501\u7684\u6301\u6709\u8005\u56e0\u6545\u969c\u800c\u4e0d\u80fd\u4e3b\u52a8\u91ca\u653e\u9501\uff0c\u9501\u4e5f\u4f1a\u56e0\u79df\u7ea6\u5230\u671f\u800c\u81ea\u52a8\u91ca\u653e\u3002 Revision \u673a\u5236 \u6bcf\u4e2a Key \u5e26\u6709\u4e00\u4e2a Revision \u53f7\uff0c\u6bcf\u8fdb\u884c\u4e00\u6b21\u4e8b\u52a1\u4fbf\u52a0\u4e00\uff0c\u56e0\u6b64\u5b83\u662f\u5168\u5c40\u552f\u4e00\u7684\uff0c\u5982\u521d\u59cb\u503c\u4e3a 0\uff0c\u8fdb\u884c\u4e00\u6b21 put(key, value)\uff0cKey \u7684 Revision \u53d8\u4e3a 1\uff0c\u540c\u6837\u7684\u64cd\u4f5c\uff0c\u518d\u8fdb\u884c\u4e00\u6b21\uff0cRevision \u53d8\u4e3a 2\uff1b\u6362\u6210 key1 \u8fdb\u884cput(key1, value)\u64cd\u4f5c\uff0cRevision\u5c06\u53d8\u4e3a 3\uff1b\u8fd9\u79cd\u673a\u5236\u6709\u4e00\u4e2a\u4f5c\u7528\uff1a\u901a\u8fc7 Revision \u7684\u5927\u5c0f\u5c31\u53ef\u4ee5\u77e5\u9053\u5199\u64cd\u4f5c\u7684\u987a\u5e8f\u3002\u5728\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u65f6\uff0c\u591a\u4e2a\u5ba2\u6237\u7aef\u540c\u65f6\u62a2\u9501\uff0c\u6839\u636e Revision \u53f7\u5927\u5c0f\u4f9d\u6b21\u83b7\u5f97\u9501\uff0c\u53ef\u4ee5\u907f\u514d \u201c\u7f8a\u7fa4\u6548\u5e94\u201d \uff08\u4e5f\u79f0\u201c\u60ca\u7fa4\u6548\u5e94\u201d\uff09\uff0c\u5b9e\u73b0\u516c\u5e73\u9501\u3002 Prefix \u673a\u5236 \u5373\u524d\u7f00\u673a\u5236\uff0c\u4e5f\u79f0\u76ee\u5f55\u673a\u5236\uff0c\u4f8b\u5982\uff0c\u4e00\u4e2a\u540d\u4e3a /mylock \u7684\u9501\uff0c\u4e24\u4e2a\u4e89\u62a2\u5b83\u7684\u5ba2\u6237\u7aef\u8fdb\u884c\u5199\u64cd\u4f5c\uff0c\u5b9e\u9645\u5199\u5165\u7684Key\u5206\u522b\u4e3a\uff1akey1=\"/mylock/UUID1\",key2=\"/mylock/UUID2\"\uff0c\u5176\u4e2d\uff0cUUID\u8868\u793a\u5168\u5c40\u552f\u4e00\u7684ID\uff0c\u786e\u4fdd\u4e24\u4e2aKey\u7684\u552f\u4e00\u6027\u3002\u5f88\u663e\u7136\uff0c\u5199\u64cd\u4f5c\u90fd\u4f1a\u6210\u529f\uff0c\u4f46\u8fd4\u56de\u7684Revision\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\uff0c\u5982\u4f55\u5224\u65ad\u8c01\u83b7\u5f97\u4e86\u9501\u5462\uff1f\u901a\u8fc7\u524d\u7f00\u201c/mylock\u201d\u67e5\u8be2\uff0c\u8fd4\u56de\u5305\u542b\u4e24\u4e2aKey-Value\u5bf9\u7684Key-Value\u5217\u8868\uff0c\u540c\u65f6\u4e5f\u5305\u542b\u5b83\u4eec\u7684Revision\uff0c\u901a\u8fc7Revision\u5927\u5c0f\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u5224\u65ad\u81ea\u5df1\u662f\u5426\u83b7\u5f97\u9501\uff0c\u5982\u679c\u62a2\u9501\u5931\u8d25\uff0c\u5219\u7b49\u5f85\u9501\u91ca\u653e\uff08\u5bf9\u5e94\u7684 Key \u88ab\u5220\u9664\u6216\u8005\u79df\u7ea6\u8fc7\u671f\uff09\uff0c\u7136\u540e\u518d\u5224\u65ad\u81ea\u5df1\u662f\u5426\u53ef\u4ee5\u83b7\u5f97\u9501\u3002 Watch \u673a\u5236 \u5373\u76d1\u542c\u673a\u5236\uff0cWatch\u673a\u5236\u652f\u6301\u76d1\u542c\u67d0\u4e2a\u56fa\u5b9a\u7684Key\uff0c\u4e5f\u652f\u6301\u76d1\u542c\u4e00\u4e2a\u8303\u56f4\uff08\u524d\u7f00\u673a\u5236\uff09\uff0c\u5f53\u88ab\u76d1\u542c\u7684Key\u6216\u8303\u56f4\u53d1\u751f\u53d8\u5316\uff0c\u5ba2\u6237\u7aef\u5c06\u6536\u5230\u901a\u77e5\uff1b\u5728\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u65f6\uff0c\u5982\u679c\u62a2\u9501\u5931\u8d25\uff0c\u53ef\u901a\u8fc7Prefix\u673a\u5236\u8fd4\u56de\u7684Key-Value\u5217\u8868\u83b7\u5f97Revision\u6bd4\u81ea\u5df1\u5c0f\u4e14\u76f8\u5dee\u6700\u5c0f\u7684 Key\uff08\u79f0\u4e3a Pre-Key\uff09\uff0c\u5bf9Pre-Key\u8fdb\u884c\u76d1\u542c\uff0c\u56e0\u4e3a\u53ea\u6709\u5b83\u91ca\u653e\u9501\uff0c\u81ea\u5df1\u624d\u80fd\u83b7\u5f97\u9501\uff0c\u5982\u679c\u76d1\u542c\u5230Pre-Key\u7684DELETE\u4e8b\u4ef6\uff0c\u5219\u8bf4\u660ePre-Key\u5df2\u7ecf\u91ca\u653e\uff0c\u81ea\u5df1\u5df2\u7ecf\u6301\u6709\u9501\u3002 \u6765\u770b\u4e0betcd\u4e2d\u9501\u662f\u5982\u4f55\u5b9e\u73b0\u7684 // Mutex implements the sync Locker interface with etcd type Mutex struct { s *Session pfx string // \u524d\u7f00 myKey string // key myRev int64 // \u81ea\u589e\u7684Revision hdr *pb.ResponseHeader } // Lock \u4f7f\u7528\u53ef\u53d6\u6d88\u7684context\u9501\u5b9a\u4e92\u65a5\u9501\u3002\u5982\u679ccontext\u88ab\u53d6\u6d88 // \u5728\u5c1d\u8bd5\u83b7\u53d6\u9501\u65f6\uff0c\u4e92\u65a5\u9501\u4f1a\u5c1d\u8bd5\u6e05\u9664\u5176\u8fc7\u65f6\u7684\u9501\u6761\u76ee\u3002 func (m *Mutex) Lock(ctx context.Context) error { resp, err := m.tryAcquire(ctx) if err != nil { return err } // if no key on prefix / the minimum rev is key, already hold the lock ownerKey := resp.Responses[1].GetResponseRange().Kvs if len(ownerKey) == 0 || ownerKey[0].CreateRevision == m.myRev { m.hdr = resp.Header return nil } client := m.s.Client() // waitDeletes \u6709\u6548\u5730\u7b49\u5f85\uff0c\u76f4\u5230\u6240\u6709\u952e\u5339\u914d\u524d\u7f00\u4e14\u4e0d\u5927\u4e8e // \u521b\u5efa\u7684version\u3002 _, werr := waitDeletes(ctx, client, m.pfx, m.myRev-1) // release lock key if wait failed if werr != nil { m.Unlock(client.Ctx()) return werr } // make sure the session is not expired, and the owner key still exists. gresp, werr := client.Get(ctx, m.myKey) if werr != nil { m.Unlock(client.Ctx()) return werr } if len(gresp.Kvs) == 0 { // is the session key lost? return ErrSessionExpired } m.hdr = gresp.Header return nil } func (m *Mutex) tryAcquire(ctx context.Context) (*v3.TxnResponse, error) { s := m.s client := m.s.Client() // s.Lease()\u79df\u7ea6 m.myKey = fmt.Sprintf(\"%s%x\", m.pfx, s.Lease()) // \u6bd4\u8f83Revision, \u8fd9\u91cc\u6784\u5efa\u4e86\u4e00\u4e2a\u6bd4\u8f83\u8868\u8fbe\u5f0f // \u5177\u4f53\u7684\u6bd4\u8f83\u903b\u8f91\u5728\u4e0b\u9762\u7684client.Txn\u7528\u5230 // \u5982\u679c\u7b49\u4e8e0\uff0c\u5199\u5165\u5f53\u524d\u7684key\uff0c\u5e76\u8bbe\u7f6e\u79df\u7ea6\uff0c // \u5426\u5219\u83b7\u53d6\u8fd9\u4e2akey,\u91cd\u7528\u79df\u7ea6\u4e2d\u7684\u9501(\u8fd9\u91cc\u4e3b\u8981\u76ee\u7684\u662f\u5728\u4e8e\u91cd\u5165) // \u901a\u8fc7\u7b2c\u4e8c\u6b21\u83b7\u53d6\u9501,\u5224\u65ad\u9501\u662f\u5426\u5b58\u5728\u6765\u652f\u6301\u91cd\u5165 // \u6240\u4ee5\u53ea\u8981\u79df\u7ea6\u4e00\u81f4,\u90a3\u4e48\u662f\u53ef\u4ee5\u91cd\u5165\u7684. cmp := v3.Compare(v3.CreateRevision(m.myKey), \"=\", 0) // \u901a\u8fc7 myKey \u5c06\u81ea\u5df1\u9501\u5728waiters\uff1b\u6700\u65e9\u7684waiters\u5c06\u83b7\u5f97\u9501 put := v3.OpPut(m.myKey, \"\", v3.WithLease(s.Lease())) // \u83b7\u53d6\u5df2\u7ecf\u62ff\u5230\u9501\u7684key\u7684\u4fe1\u606f get := v3.OpGet(m.myKey) // \u4ec5\u4f7f\u7528\u4e00\u4e2a RPC \u83b7\u53d6\u5f53\u524d\u6301\u6709\u8005\u4ee5\u5b8c\u6210\u65e0\u7ade\u4e89\u8def\u5f84 getOwner := v3.OpGet(m.pfx, v3.WithFirstCreate()...) // \u8fd9\u91cc\u662f\u6bd4\u8f83\u7684\u903b\u8f91\uff0c\u5982\u679c\u7b49\u4e8e0\uff0c\u5199\u5165\u5f53\u524d\u7684key\uff0c\u5426\u5219\u5219\u8bfb\u53d6\u8fd9\u4e2akey // \u5927\u4f6c\u7684\u4ee3\u7801\u5199\u7684\u5c31\u662f\u5947\u5999 resp, err := client.Txn(ctx).If(cmp).Then(put, getOwner).Else(get, getOwner).Commit() if err != nil { return nil, err } // \u6839\u636e\u6bd4\u8f83\u64cd\u4f5c\u7684\u7ed3\u679c\u5199\u5165Revision\u5230m.myRev\u4e2d m.myRev = resp.Header.Revision if !resp.Succeeded { m.myRev = resp.Responses[0].GetResponseRange().Kvs[0].CreateRevision } return resp, nil } // \u62bd\u8c61\u51fa\u4e86\u4e00\u4e2asession\u5bf9\u8c61\u6765\u6301\u7eed\u4fdd\u6301\u79df\u7ea6\u4e0d\u8fc7\u671f func NewSession(client *v3.Client, opts ...SessionOption) (*Session, error) { ... ctx, cancel := context.WithCancel(ops.ctx) // \u4fdd\u8bc1\u9501\uff0c\u5728\u7ebf\u7a0b\u7684\u6d3b\u52a8\u671f\u95f4\uff0c\u5b9e\u73b0\u9501\u7684\u7684\u7eed\u79df keepAlive, err := client.KeepAlive(ctx, id) if err != nil || keepAlive == nil { cancel() return nil, err } ... return s, nil } \u8bbe\u8ba1\u601d\u8def\uff1a 1\u3001\u591a\u4e2a\u8bf7\u6c42\u6765\u524d\u62a2\u5360\u9501\uff0c\u901a\u8fc7Revision\u6765\u5224\u65ad\u9501\u7684\u5148\u540e\u987a\u5e8f\uff1b 2\u3001\u5982\u679c\u6709\u6bd4\u5f53\u524dkey\u7684Revision\u5c0f\u7684Revision\u5b58\u5728\uff0c\u8bf4\u660e\u6709key\u5df2\u7ecf\u83b7\u5f97\u4e86\u9501\uff1b 3\u3001\u7b49\u5f85\u76f4\u5230\u524d\u9762\u7684key\u88ab\u5220\u9664\uff0c\u7136\u540e\u81ea\u5df1\u5c31\u83b7\u5f97\u4e86\u9501\u3002 \u901a\u8fc7etcd\u5b9e\u73b0\u7684\u9501\uff0c\u76f4\u63a5\u5305\u542b\u4e86\u9501\u7684\u7eed\u79df\uff0c\u5982\u679c\u4f7f\u7528Redis\u8fd8\u8981\u81ea\u5df1\u53bb\u5b9e\u73b0\uff0c\u76f8\u6bd4\u8f83\u4f7f\u7528\u66f4\u7b80\u5355\u3002 \u6765\u5b9e\u73b0\u4e00\u4e2aetcd\u7684\u9501 package main import ( \"context\" \"fmt\" \"log\" \"time\" clientv3 \"go.etcd.io/etcd/client/v3\" \"go.etcd.io/etcd/client/v3/concurrency\" ) func main() { cli, err := clientv3.New(clientv3.Config{ Endpoints: []string{\"localhost:2379\"}, DialTimeout: 5 * time.Second, }) if err != nil { log.Fatal(err) } defer cli.Close() // m1\u6765\u62a2\u9501 go func() { s1, err := concurrency.NewSession(cli) if err != nil { log.Fatal(err) } defer s1.Close() m1 := concurrency.NewMutex(s1, \"/my-lock/\") // acquire lock for s1 if err := m1.Lock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\"m1---\u83b7\u5f97\u4e86\u9501\") time.Sleep(time.Second * 3) // \u91ca\u653e\u9501 if err := m1.Unlock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\"m1++\u91ca\u653e\u4e86\u9501\") }() // m2\u6765\u62a2\u9501 go func() { s2, err := concurrency.NewSession(cli) if err != nil { log.Fatal(err) } defer s2.Close() m2 := concurrency.NewMutex(s2, \"/my-lock/\") if err := m2.Lock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\"m2---\u83b7\u5f97\u4e86\u9501\") // mock\u4e1a\u52a1\u6267\u884c\u7684\u65f6\u95f4 time.Sleep(time.Second * 3) // \u91ca\u653e\u9501 if err := m2.Unlock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\"m2++\u91ca\u653e\u4e86\u9501\") }() time.Sleep(time.Second * 10) } \u6253\u5370\u4e0b\u8f93\u51fa m2---\u83b7\u5f97\u4e86\u9501 m2++\u91ca\u653e\u4e86\u9501 m1---\u83b7\u5f97\u4e86\u9501 m1++\u91ca\u653e\u4e86\u9501","title":"\u5206\u5e03\u5f0f\u9501"},{"location":"golang/docs/etcd%E7%9A%84%E4%BD%BF%E7%94%A8/#_6","text":"\u5373\u521b\u5efa\u4e00\u4e2a\u5148\u8fdb\u5148\u51fa\u7684\u961f\u5217\u4fdd\u6301\u987a\u5e8f\u3002\u53e6\u4e00\u79cd\u6bd4\u8f83\u6709\u610f\u601d\u7684\u5b9e\u73b0\u662f\u5728\u4fdd\u8bc1\u961f\u5217\u8fbe\u5230\u67d0\u4e2a\u6761\u4ef6\u65f6\u518d\u7edf\u4e00\u6309\u987a\u5e8f\u6267\u884c\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u5b9e\u73b0\u53ef\u4ee5\u5728/queue\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u53e6\u5916\u5efa\u7acb\u4e00\u4e2a/queue/condition\u8282\u70b9\u3002 condition \u53ef\u4ee5\u8868\u793a\u961f\u5217\u5927\u5c0f\u3002\u6bd4\u5982\u4e00\u4e2a\u5927\u7684\u4efb\u52a1\u9700\u8981\u5f88\u591a\u5c0f\u4efb\u52a1\u5c31\u7eea\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u6267\u884c\uff0c\u6bcf\u6b21\u6709\u4e00\u4e2a\u5c0f\u4efb\u52a1\u5c31\u7eea\uff0c\u5c31\u7ed9\u8fd9\u4e2a condition \u6570\u5b57\u52a0 1\uff0c\u76f4\u5230\u8fbe\u5230\u5927\u4efb\u52a1\u89c4\u5b9a\u7684\u6570\u5b57\uff0c\u518d\u5f00\u59cb\u6267\u884c\u961f\u5217\u91cc\u7684\u4e00\u7cfb\u5217\u5c0f\u4efb\u52a1\uff0c\u6700\u7ec8\u6267\u884c\u5927\u4efb\u52a1\u3002 condition \u53ef\u4ee5\u8868\u793a\u67d0\u4e2a\u4efb\u52a1\u5728\u4e0d\u5728\u961f\u5217\u3002\u8fd9\u4e2a\u4efb\u52a1\u53ef\u4ee5\u662f\u6240\u6709\u6392\u5e8f\u4efb\u52a1\u7684\u9996\u4e2a\u6267\u884c\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u662f\u62d3\u6251\u7ed3\u6784\u4e2d\u6ca1\u6709\u4f9d\u8d56\u7684\u70b9\u3002\u901a\u5e38\uff0c\u5fc5\u987b\u6267\u884c\u8fd9\u4e9b\u4efb\u52a1\u540e\u624d\u80fd\u6267\u884c\u961f\u5217\u4e2d\u7684\u5176\u4ed6\u4efb\u52a1\u3002 condition \u8fd8\u53ef\u4ee5\u8868\u793a\u5176\u5b83\u7684\u4e00\u7c7b\u5f00\u59cb\u6267\u884c\u4efb\u52a1\u7684\u901a\u77e5\u3002\u53ef\u4ee5\u7531\u63a7\u5236\u7a0b\u5e8f\u6307\u5b9a\uff0c\u5f53 condition \u51fa\u73b0\u53d8\u5316\u65f6\uff0c\u5f00\u59cb\u6267\u884c\u961f\u5217\u4efb\u52a1\u3002 \u6765\u770b\u4e0b\u5b9e\u73b0 \u5165\u961f func newUniqueKV(kv v3.KV, prefix string, val string) (*RemoteKV, error) { for { newKey := fmt.Sprintf(\"%s/%v\", prefix, time.Now().UnixNano()) // \u521b\u5efa\u5bf9\u5e94\u7684key rev, err := putNewKV(kv, newKey, val, v3.NoLease) if err == nil { return &RemoteKV{kv, newKey, rev, val}, nil } // \u5982\u679c\u4e4b\u524d\u5df2\u7ecf\u521b\u5efa\u4e86\uff0c\u5c31\u8fd4\u56de if err != ErrKeyExists { return nil, err } } } // \u53ea\u6709\u5728\u6ca1\u6709\u521b\u5efa\u7684\u65f6\u5019\u624d\u80fd\u521b\u5efa\u6210\u529f func putNewKV(kv v3.KV, key, val string, leaseID v3.LeaseID) (int64, error) { cmp := v3.Compare(v3.Version(key), \"=\", 0) req := v3.OpPut(key, val, v3.WithLease(leaseID)) // \u8fd9\u91cc\u8fd8\u7528\u5230\u4e86\u8fd9\u79cd\u6bd4\u8f83\u7684\u903b\u8f91 txnresp, err := kv.Txn(context.TODO()).If(cmp).Then(req).Commit() if err != nil { return 0, err } // \u5df2\u7ecf\u5b58\u5728\u5219\u8fd4\u56de\u9519\u8bef if !txnresp.Succeeded { return 0, ErrKeyExists } return txnresp.Header.Revision, nil } \u51fa\u961f // Dequeue\u5904\u7406\u7684\u662f\u4e00\u4e2a\u5148\u8fdb\u65b0\u51fa\u7684\u961f\u5217 // \u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0cDequeue\u5c06\u4f1a\u963b\u585e\u76f4\u5230\u91cc\u9762\u6709\u503c\u585e\u5165 func (q *Queue) Dequeue() (string, error) { resp, err := q.client.Get(q.ctx, q.keyPrefix, v3.WithFirstRev()...) if err != nil { return \"\", err } kv, err := claimFirstKey(q.client, resp.Kvs) if err != nil { return \"\", err } else if kv != nil { return string(kv.Value), nil // more \u8868\u793a\u5728\u8bf7\u6c42\u7684\u8303\u56f4\u5185\u662f\u5426\u8fd8\u6709\u66f4\u591a\u7684\u952e\u8981\u8fd4\u56de\u3002 // \u5219\u8fdb\u884cDequeue\u91cd\u8bd5 } else if resp.More { // missed some items, retry to read in more return q.Dequeue() } // nothing yet; wait on elements ev, err := WaitPrefixEvents( q.client, q.keyPrefix, resp.Header.Revision, []mvccpb.Event_EventType{mvccpb.PUT}) if err != nil { return \"\", err } ok, err := deleteRevKey(q.client, string(ev.Kv.Key), ev.Kv.ModRevision) if err != nil { return \"\", err } else if !ok { // \u5982\u679c\u5220\u9664\u5931\u8d25\uff0c\u91cd\u8bd5 return q.Dequeue() } return string(ev.Kv.Value), err } \u603b\u7ed3 1\u3001\u8fd9\u91cc\u7684\u5165\u961f\u662f\u4e00\u4e2a\u5148\u8fdb\u65b0\u51fa\u7684\u961f\u5217\uff1b 2\u3001\u51fa\u961f\u7684\u5b9e\u73b0\u4e5f\u5f88\u7b80\u5355\uff0c\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0cDequeue\u5c06\u4f1a\u963b\u585e\u76f4\u5230\u91cc\u9762\u6709\u503c\u585e\u5165\uff1b \u6765\u4e2ademo package main import ( \"fmt\" \"log\" \"time\" clientv3 \"go.etcd.io/etcd/client/v3\" recipe \"go.etcd.io/etcd/client/v3/experimental/recipes\" ) func main() { cli, err := clientv3.New(clientv3.Config{ Endpoints: []string{\"localhost:2379\"}, }) if err != nil { log.Fatalf(\"error New (%v)\", err) } go func() { q := recipe.NewQueue(cli, \"testq\") for i := 0; i < 5; i++ { if err := q.Enqueue(fmt.Sprintf(\"%d\", i)); err != nil { log.Fatalf(\"error enqueuing (%v)\", err) } } }() go func() { q := recipe.NewQueue(cli, \"testq\") for i := 10; i < 100; i++ { if err := q.Enqueue(fmt.Sprintf(\"%d\", i)); err != nil { log.Fatalf(\"error enqueuing (%v)\", err) } } }() q := recipe.NewQueue(cli, \"testq\") for i := 0; i < 100; i++ { s, err := q.Dequeue() if err != nil { log.Fatalf(\"error dequeueing (%v)\", err) } fmt.Println(s) } time.Sleep(time.Second * 3) }","title":"\u5206\u5e03\u5f0f\u961f\u5217"},{"location":"golang/docs/etcd%E7%9A%84%E4%BD%BF%E7%94%A8/#leader","text":"\u901a\u8fc7etcd\u6765\u8fdb\u884c\u76d1\u63a7\u5b9e\u73b0\u8d77\u6765\u975e\u5e38\u7b80\u5355\u5e76\u4e14\u5b9e\u65f6\u6027\u5f3a 1\u3001\u524d\u9762\u51e0\u4e2a\u573a\u666f\u5df2\u7ecf\u63d0\u5230Watcher\u673a\u5236\uff0c\u5f53\u67d0\u4e2a\u8282\u70b9\u6d88\u5931\u6216\u6709\u53d8\u52a8\u65f6\uff0cWatcher\u4f1a\u7b2c\u4e00\u65f6\u95f4\u53d1\u73b0\u5e76\u544a\u77e5\u7528\u6237\u3002 2\u3001\u8282\u70b9\u53ef\u4ee5\u8bbe\u7f6eTTL key\uff0c\u6bd4\u5982\u6bcf\u9694 30s \u53d1\u9001\u4e00\u6b21\u5fc3\u8df3\u4f7f\u4ee3\u8868\u8be5\u673a\u5668\u5b58\u6d3b\u7684\u8282\u70b9\u7ee7\u7eed\u5b58\u5728\uff0c\u5426\u5219\u8282\u70b9\u6d88\u5931\u3002 \u8fd9\u6837\u5c31\u53ef\u4ee5\u7b2c\u4e00\u65f6\u95f4\u68c0\u6d4b\u5230\u5404\u8282\u70b9\u7684\u5065\u5eb7\u72b6\u6001\uff0c\u4ee5\u5b8c\u6210\u96c6\u7fa4\u7684\u76d1\u63a7\u8981\u6c42 \u53e6\u5916\uff0c\u4f7f\u7528\u5206\u5e03\u5f0f\u9501\uff0c\u53ef\u4ee5\u5b8c\u6210Leader\u7ade\u9009\u3002\u8fd9\u79cd\u573a\u666f\u901a\u5e38\u662f\u4e00\u4e9b\u957f\u65f6\u95f4CPU\u8ba1\u7b97\u6216\u8005\u4f7f\u7528IO\u64cd\u4f5c\u7684\u673a\u5668\uff0c\u53ea\u9700\u8981\u7ade\u9009\u51fa\u7684Leader\u8ba1\u7b97\u6216\u5904\u7406\u4e00\u6b21\uff0c\u5c31\u53ef\u4ee5\u628a\u7ed3\u679c\u590d\u5236\u7ed9\u5176\u4ed6\u7684Follower\u3002\u4ece\u800c\u907f\u514d\u91cd\u590d\u52b3\u52a8\uff0c\u8282\u7701\u8ba1\u7b97\u8d44\u6e90\u3002 \u8fd9\u4e2a\u7684\u7ecf\u5178\u573a\u666f\u662f\u641c\u7d22\u7cfb\u7edf\u4e2d\u5efa\u7acb\u5168\u91cf\u7d22\u5f15\u3002\u5982\u679c\u6bcf\u4e2a\u673a\u5668\u90fd\u8fdb\u884c\u4e00\u904d\u7d22\u5f15\u7684\u5efa\u7acb\uff0c\u4e0d\u4f46\u8017\u65f6\u800c\u4e14\u5efa\u7acb\u7d22\u5f15\u7684\u4e00\u81f4\u6027\u4e0d\u80fd\u4fdd\u8bc1\u3002\u901a\u8fc7\u5728etcd\u7684CAS\u673a\u5236\u540c\u65f6\u521b\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u521b\u5efa\u6210\u529f\u7684\u673a\u5668\u4f5c\u4e3aLeader\uff0c\u8fdb\u884c\u7d22\u5f15\u8ba1\u7b97\uff0c\u7136\u540e\u628a\u8ba1\u7b97\u7ed3\u679c\u5206\u53d1\u5230\u5176\u5b83\u8282\u70b9\u3002","title":"\u96c6\u7fa4\u76d1\u63a7\u4e0eLeader\u7ade\u9009"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%B8%80%EF%BC%9A%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/","text":"\u4ecb\u7ecd \u8981\u641e\u660e\u767d Go \u8bed\u8a00\u7684\u5185\u5b58\u7ba1\u7406\uff0c\u5c31\u5fc5\u987b\u5148\u7406\u89e3\u64cd\u4f5c\u7cfb\u7edf\u4ee5\u53ca\u673a\u5668\u786c\u4ef6\u662f\u5982\u4f55\u7ba1\u7406\u5185\u5b58\u7684\u3002\u56e0\u4e3a Go \u8bed\u8a00\u7684\u5185\u90e8\u673a\u5236\u662f\u5efa\u7acb\u5728\u8fd9\u4e2a\u57fa\u7840\u4e4b\u4e0a\u7684\uff0c\u5b83\u7684\u8bbe\u8ba1\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u5c3d\u53ef\u80fd\u7684\u4f1a\u53d1\u6325\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u7684\u4f18\u52bf\uff0c\u800c\u907f\u5f00\u5bfc\u81f4\u4f4e\u6548\u60c5\u51b5\u3002 \u64cd\u4f5c\u7cfb\u7edf\u5185\u5b58\u7ba1\u7406 \u5176\u5b9e\u73b0\u5728\u8ba1\u7b97\u673a\u5185\u5b58\u7ba1\u7406\u7684\u65b9\u5f0f\u90fd\u662f\u4e00\u6b65\u6b65\u6f14\u53d8\u6765\u7684\uff0c\u6700\u5f00\u59cb\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u540e\u6765\u4e3a\u4e86\u6ee1\u8db3\u5404\u79cd\u9700\u6c42\u800c\u589e\u52a0\u4e86\u5404\u79cd\u5404\u6837\u7684\u673a\u5236\uff0c\u8d8a\u6765\u8d8a\u590d\u6742\u3002\u8fd9\u91cc\u6211\u4eec\u53ea\u4ecb\u7ecd\u548c\u5f00\u53d1\u8005\u606f\u606f\u76f8\u5173\u7684\u51e0\u4e2a\u673a\u5236\u3002 \u6700\u539f\u59cb\u7684\u65b9\u5f0f \u6211\u4eec\u53ef\u4ee5\u628a\u5185\u5b58\u770b\u6210\u4e00\u4e2a\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6570\u7ec4\u5143\u7d20\u7684\u5927\u5c0f\u662f 1B\uff0c\u4e5f\u5c31\u662f 8 \u4f4d(bit)\u3002CPU \u901a\u8fc7\u5185\u5b58\u5730\u5740\u6765\u83b7\u53d6\u5185\u5b58\u4e2d\u7684\u6570\u636e\uff0c\u5185\u5b58\u5730\u5740\u53ef\u4ee5\u770b\u505a\u6210\u6570\u7ec4\u7684\u6e38\u6807\uff08index\uff09\u3002 CPU \u5728\u6267\u884c\u6307\u4ee4\u7684\u65f6\u5019\uff0c\u5c31\u662f\u901a\u8fc7\u5185\u5b58\u5730\u5740\uff0c\u5c06\u7269\u7406\u5185\u5b58\u4e0a\u7684\u6570\u636e\u8f7d\u5165\u5230\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u6267\u884c\u673a\u5668\u6307\u4ee4\u3002\u4f46\u968f\u7740\u53d1\u5c55\uff0c\u51fa\u73b0\u4e86\u591a\u4efb\u52a1\u7684\u9700\u6c42\uff0c\u4e5f\u5c31\u662f\u5e0c\u671b\u591a\u4e2a\u4efb\u52a1\u80fd\u540c\u65f6\u5728\u7cfb\u7edf\u4e0a\u8fd0\u884c\u3002\u8fd9\u5c31\u51fa\u73b0\u4e86\u4e00\u4e9b\u95ee\u9898\uff1a 1\u3001\u5185\u5b58\u8bbf\u95ee\u51b2\u7a81:\u7a0b\u5e8f\u5f88\u5bb9\u6613\u51fa\u73b0 bug\uff0c\u5c31\u662f 2 \u6216\u66f4\u591a\u7684\u7a0b\u5e8f\u4f7f\u7528\u4e86\u540c\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u5bfc\u81f4\u6570\u636e\u8bfb\u5199\u9519\u4e71\uff0c\u7a0b\u5e8f\u5d29\u6e83\u3002\u66f4\u6709\u4e00\u4e9b\u9ed1\u5ba2\u5229\u7528\u8fd9\u4e2a\u7f3a\u9677\u6765\u5236\u4f5c\u75c5\u6bd2\u3002 2\u3001\u5185\u5b58\u4e0d\u591f\u7528\uff1a\u56e0\u4e3a\u6bcf\u4e2a\u7a0b\u5e8f\u90fd\u9700\u8981\u81ea\u5df1\u5355\u72ec\u4f7f\u7528\u7684\u4e00\u5757\u5185\u5b58\uff0c\u5185\u5b58\u7684\u5927\u5c0f\u5c31\u6210\u4e86\u4efb\u52a1\u6570\u91cf\u7684\u74f6\u9888\u3002 3\u3001\u7a0b\u5e8f\u5f00\u53d1\u6210\u672c\u9ad8\uff1a**\u4f60\u7684\u7a0b\u5e8f\u8981\u4f7f\u7528\u591a\u5c11\u5185\u5b58\uff0c\u5185\u5b58\u5730\u5740\u662f\u591a\u5c11\uff0c\u8fd9\u4e9b\u90fd\u4e0d\u80fd\u641e\u9519\uff0c\u5bf9\u4e8e\u4eba\u6765\u8bf4\uff0c\u5f00\u53d1\u6b63\u786e\u7684\u7a0b\u5e8f\u5f88\u8d39\u8111\u5b50\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5f53\u4ee3\u7801\u8fd0\u884c\u5230\u67d0\u5904\u65f6\uff0c\u9700\u8981\u4f7f\u7528 100M \u5185\u5b58\uff0c\u5176\u4ed6\u65f6\u5019 1M \u5185\u5b58\u5c31\u591f\uff1b\u4e3a\u4e86\u907f\u514d\u548c\u5176\u4ed6\u7a0b\u5e8f\u51b2\u7a81\uff0c\u7a0b\u5e8f\u521d\u59cb\u5316\u65f6\uff0c\u5c31\u5fc5\u987b\u7533\u8bf7\u72ec\u7acb 100M \u5185\u5b58\u4ee5\u4fdd\u8bc1\u6b63\u5e38\u8fd0\u884c\uff0c\u8fd9\u5c31\u662f\u4e00\u79cd\u5f88\u5927\u7684\u6d6a\u8d39\uff0c\u56e0\u4e3a\u8fd9 100M \u5b83\u5927\u591a\u6570\u65f6\u5019\u7528\u4e0d\u4e0a\uff0c\u5176\u4ed6\u7a0b\u5e8f\u8fd8\u4e0d\u80fd\u7528\u3002 \u865a\u62df\u5185\u5b58 \u865a\u62df\u5185\u5b58\u7684\u51fa\u73b0\uff0c\u5f88\u597d\u7684\u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u7684\u4e00\u4e9b\u5217\u95ee\u9898\u3002\u7528\u6237\u7a0b\u5e8f\u53ea\u80fd\u4f7f\u7528\u865a\u62df\u7684\u5185\u5b58\u5730\u5740\u6765\u83b7\u53d6\u6570\u636e\uff0c\u7cfb\u7edf\u4f1a\u5c06\u8fd9\u4e2a\u865a\u62df\u5730\u5740\u7ffb\u8bd1\u6210\u5b9e\u9645\u7684\u7269\u7406\u5730\u5740\u3002 \u6240\u6709\u7a0b\u5e8f\u7edf\u4e00\u4f7f\u7528\u4e00\u5957\u8fde\u7eed\u865a\u62df\u5730\u5740\uff0c\u6bd4\u5982 0x0000 ~ 0xffff\u3002\u4ece\u7a0b\u5e8f\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5b83\u89c9\u5f97\u81ea\u5df1\u72ec\u4eab\u4e86\u4e00\u6574\u5757\u5185\u5b58\u3002\u4e0d\u7528\u8003\u8651\u8bbf\u95ee\u51b2\u7a81\u7684\u95ee\u9898\u3002\u7cfb\u7edf\u4f1a\u5c06\u865a\u62df\u5730\u5740\u7ffb\u8bd1\u6210\u7269\u7406\u5730\u5740\uff0c\u4ece\u5185\u5b58\u4e0a\u52a0\u8f7d\u6570\u636e\u3002 \u5bf9\u4e8e\u5185\u5b58\u4e0d\u591f\u7528\u7684\u95ee\u9898\uff0c\u865a\u62df\u5185\u5b58\u672c\u8d28\u4e0a\u662f\u5c06\u78c1\u76d8\u5f53\u6210\u6700\u7ec8\u5b58\u50a8\uff0c\u800c\u4e3b\u5b58\u4f5c\u4e3a\u4e86\u4e00\u4e2a cache\u3002\u7a0b\u5e8f\u53ef\u4ee5\u4ece\u865a\u62df\u5185\u5b58\u4e0a\u7533\u8bf7\u5f88\u5927\u7684\u7a7a\u95f4\u4f7f\u7528\uff0c\u6bd4\u5982 1G \uff1b\u4f46\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u4f1a\u771f\u7684\u5728\u7269\u7406\u5185\u5b58\u4e0a\u5f00\u8f9f 1G \u7684\u7a7a\u95f4\uff0c\u5b83\u53ea\u662f\u5f00\u8f9f\u4e86\u5f88\u5c0f\u4e00\u5757\uff0c\u6bd4\u5982 1M \u7ed9\u7a0b\u5e8f\u4f7f\u7528\u3002 \u8fd9\u6837\u7a0b\u5e8f\u5728\u8bbf\u95ee\u5185\u5b58\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u770b\u8bbf\u95ee\u7684\u5730\u5740\u662f\u5426\u80fd\u8f6c\u6362\u6210\u7269\u7406\u5185\u5b58\u5730\u5740\u3002\u80fd\u5219\u6b63\u5e38\u8bbf\u95ee\uff0c\u4e0d\u80fd\u5219\u518d\u5f00\u8f9f\u3002\u8fd9\u4f7f\u5f97\u5185\u5b58\u5f97\u5230\u4e86\u66f4\u9ad8\u6548\u7684\u5229\u7528\u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u6240\u4f7f\u7528\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4f46\u4ed6\u4eec\u7684\u865a\u62df\u5730\u5740\u4f1a\u88ab\u6620\u5c04\u5230\u4e3b\u5b58\u4e0a\u7684\u4e0d\u540c\u533a\u57df\uff0c\u751a\u81f3\u6620\u5c04\u5230\u78c1\u76d8\u4e0a\uff08\u5f53\u5185\u5b58\u4e0d\u591f\u7528\u65f6\uff09\u3002 \u865a\u62df\u5730\u5740 \u5176\u5b9e\u672c\u8d28\u4e0a\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u5c06\u7a0b\u5e8f\u5e38\u7528\u7684\u6570\u636e\u653e\u5230\u5185\u5b58\u91cc\u52a0\u901f\u8bbf\u95ee\uff0c\u4e0d\u5e38\u7528\u7684\u6570\u636e\u653e\u5728\u78c1\u76d8\u4e0a\u3002\u8fd9\u4e00\u5207\u5bf9\u7528\u6237\u7a0b\u5e8f\u6765\u8bf4\u5b8c\u5168\u662f\u900f\u660e\u7684\uff0c\u7528\u6237\u7a0b\u5e8f\u53ef\u4ee5\u5047\u88c5\u6240\u6709\u6570\u636e\u90fd\u5728\u5185\u5b58\u91cc\uff0c\u7136\u540e\u901a\u8fc7\u865a\u62df\u5185\u5b58\u5730\u5740\u53bb\u8bbf\u95ee\u6570\u636e\u3002\u5728\u8fd9\u80cc\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5c06\u6570\u636e\u5728\u4e3b\u5b58\u548c\u78c1\u76d8\u4e4b\u95f4\u8fdb\u884c\u4ea4\u6362\u3002 \u865a\u62df\u5730\u5740\u7ffb\u8bd1 \u865a\u62df\u5185\u5b58\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5927\u591a\u6570\u90fd\u662f\u901a\u8fc7\u9875\u8868\u6765\u5b9e\u73b0\u7684\u3002\u64cd\u4f5c\u7cfb\u7edf\u865a\u62df\u5185\u5b58\u7a7a\u95f4\u5206\u6210\u4e00\u9875\u4e00\u9875\u7684\u6765\u7ba1\u7406\uff0c\u6bcf\u9875\u7684\u5927\u5c0f\u4e3a 4K \uff08\u5f53\u7136\u8fd9\u662f\u53ef\u4ee5\u914d\u7f6e\u7684\uff0c\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u4e00\u6837\uff09\u3002\u78c1\u76d8\u548c\u4e3b\u5185\u5b58\u4e4b\u95f4\u7684\u7f6e\u6362\u4e5f\u662f\u4ee5\u9875\u4e3a\u5355\u4f4d\u6765\u64cd\u4f5c\u7684\u30024K \u7b97\u662f\u901a\u8fc7\u5b9e\u8df5\u6298\u4e2d\u51fa\u6765\u7684\u901a\u7528\u503c\uff0c\u592a\u5c0f\u4e86\u4f1a\u51fa\u73b0\u9891\u7e41\u7684\u7f6e\u6362\uff0c\u592a\u5927\u4e86\u53c8\u6d6a\u8d39\u5185\u5b58\u3002 \u865a\u62df\u5730\u5740 -> \u7269\u7406\u5730\u5740 \u7684\u6620\u5c04\u5173\u7cfb\u7531 \u9875\u8868\uff08Page Table\uff09 \u8bb0\u5f55\uff0c\u5b83\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u53eb\u505a \u9875\u8868\u6761\u76ee\uff08Page Table Entry\uff0c\u7b80\u79f0 PTE\uff09 \uff0cPTE \u7531\u4e00\u4e2a\u6709\u6548\u4f4d\u548c n \u4f4d\u5730\u5740\u5b57\u6bb5\u6784\u6210\uff0c\u6709\u6548\u4f4d\u6807\u8bc6\u8fd9\u4e2a\u865a\u62df\u5730\u5740\u662f\u5426\u5206\u914d\u4e86\u7269\u7406\u5185\u5b58\u3002 \u9875\u8868\u88ab\u64cd\u4f5c\u7cfb\u7edf\u653e\u5728\u7269\u7406\u5185\u5b58\u7684\u6307\u5b9a\u4f4d\u7f6e\uff0cCPU \u4e0a\u6709\u4e2a Memory Management Unit\uff08MMU\uff09 \u5355\u5143\uff0cCPU \u628a\u865a\u62df\u5730\u5740\u7ed9 MMU\uff0cMMU \u53bb\u7269\u7406\u5185\u5b58\u4e2d\u67e5\u8be2\u9875\u8868\uff0c\u5f97\u5230\u5b9e\u9645\u7684\u7269\u7406\u5730\u5740\u3002\u5f53\u7136 MMU \u4e0d\u4f1a\u6bcf\u6b21\u90fd\u53bb\u67e5\u7684\uff0c\u5b83\u81ea\u5df1\u4e5f\u6709\u4e00\u4efd\u7f13\u5b58\u53ebTranslation Lookaside Buffer (TLB)\uff0c\u662f\u4e3a\u4e86\u52a0\u901f\u5730\u5740\u7ffb\u8bd1\u3002 \u865a\u62df\u5730\u5740\u7ffb\u8bd1 \u4f60\u6162\u6162\u4f1a\u53d1\u73b0\u6574\u4e2a\u8ba1\u7b97\u673a\u4f53\u7cfb\u91cc\u9762\uff0c\u7f13\u5b58\u662f\u65e0\u5904\u4e0d\u5728\u7684\uff0c\u6574\u4e2a\u8ba1\u7b97\u673a\u4f53\u7cfb\u5c31\u662f\u5efa\u7acb\u5728\u4e00\u7ea7\u7ea7\u7684\u7f13\u5b58\u4e4b\u4e0a\u7684\uff0c\u65e0\u8bba\u8f6f\u786c\u4ef6\u3002 \u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b CPU \u5185\u5b58\u8bbf\u95ee\u7684\u5b8c\u6574\u8fc7\u7a0b\uff1a CPU \u4f7f\u7528\u865a\u62df\u5730\u5740\u8bbf\u95ee\u6570\u636e\uff0c\u6bd4\u5982\u6267\u884c\u4e86 MOV \u6307\u4ee4\u52a0\u8f7d\u6570\u636e\u5230\u5bc4\u5b58\u5668\uff0c\u628a\u5730\u5740\u4f20\u9012\u7ed9 MMU\u3002 MMU \u751f\u6210 PTE \u5730\u5740\uff0c\u5e76\u4ece\u4e3b\u5b58\uff08\u6216\u81ea\u5df1\u7684 Cache\uff09\u4e2d\u5f97\u5230\u5b83\u3002 \u5982\u679c MMU \u6839\u636e PTE \u5f97\u5230\u771f\u5b9e\u7684\u7269\u7406\u5730\u5740\uff0c\u6b63\u5e38\u8bfb\u53d6\u6570\u636e\u3002\u6d41\u7a0b\u5230\u6b64\u7ed3\u675f\u3002 \u5982\u679c PTE \u4fe1\u606f\u8868\u793a\u6ca1\u6709\u5173\u8054\u7684\u7269\u7406\u5730\u5740\uff0cMMU \u5219\u89e6\u53d1\u4e00\u4e2a\u7f3a\u9875\u5f02\u5e38\u3002 \u64cd\u4f5c\u7cfb\u7edf\u6355\u83b7\u5230\u8fd9\u4e2a\u5f02\u5e38\uff0c\u5f00\u59cb\u6267\u884c\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u3002\u5728\u7269\u7406\u5185\u5b58\u4e0a\u521b\u5efa\u4e00\u9875\u5185\u5b58\uff0c\u5e76\u66f4\u65b0\u9875\u8868\u3002 \u7f3a\u9875\u5904\u7406\u7a0b\u5e8f\u5728\u7269\u7406\u5185\u5b58\u4e2d\u786e\u5b9a\u4e00\u4e2a \u727a\u7272\u9875 \uff0c\u5982\u679c\u8fd9\u4e2a\u727a\u7272\u9875\u4e0a\u6709\u6570\u636e\uff0c\u5219\u628a\u6570\u636e\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\u3002 \u7f3a\u9875\u5904\u7406\u7a0b\u5e8f\u66f4\u65b0 PTE\u3002 \u7f3a\u9875\u5904\u7406\u7a0b\u5e8f\u7ed3\u675f\uff0c\u518d\u56de\u53bb\u6267\u884c\u4e0a\u4e00\u6761\u6307\u4ee4\uff08\u5bfc\u81f4\u7f3a\u9875\u5f02\u5e38\u7684\u90a3\u4e2a\u6307\u4ee4\uff0c\u4e5f\u5c31\u662f MOV \u6307\u4ee4\uff09\u3002\u8fd9\u6b21\u80af\u5b9a\u547d\u4e2d\u4e86\u3002 \u5185\u5b58\u547d\u4e2d\u7387 \u4f60\u53ef\u80fd\u5df2\u7ecf\u53d1\u73b0\uff0c\u4e0a\u8ff0\u7684\u8bbf\u95ee\u6b65\u9aa4\u4e2d\uff0c\u4ece\u7b2c 4 \u6b65\u5f00\u59cb\u90fd\u662f\u4e9b\u5f88\u7e41\u7410\u7684\u64cd\u4f5c\uff0c\u9891\u7e41\u7684\u6267\u884c\u5bf9\u6027\u80fd\u5f71\u54cd\u5f88\u5927\u3002\u6bd5\u7adf\u8bbf\u95ee\u78c1\u76d8\u662f\u975e\u5e38\u6162\u7684\uff0c\u5b83\u4f1a\u5f15\u53d1\u7a0b\u5e8f\u6027\u80fd\u7684\u6025\u5267\u4e0b\u964d\u3002\u5982\u679c\u5185\u5b58\u8bbf\u95ee\u5230\u7b2c 3 \u6b65\u6210\u529f\u7ed3\u675f\u4e86\uff0c\u6211\u4eec\u5c31\u8bf4 \u9875\u547d\u4e2d \u4e86\uff1b\u53cd\u4e4b\u5c31\u662f \u672a\u547d\u4e2d \uff0c\u6216\u8005\u8bf4 \u7f3a\u9875 \uff0c\u8868\u793a\u5b83\u5f00\u59cb\u6267\u884c\u7b2c 4 \u6b65\u4e86\u3002 \u5047\u8bbe\u5728 n \u6b21\u5185\u5b58\u8bbf\u95ee\u4e2d\uff0c\u51fa\u73b0\u547d\u4e2d\u7684\u6b21\u6570\u662f m\uff0c\u90a3\u4e48 m / n * 100% \u5c31\u8868\u793a\u547d\u4e2d\u7387\uff0c\u8fd9\u662f\u8861\u91cf\u5185\u5b58\u7ba1\u7406\u7a0b\u5e8f\u597d\u574f\u7684\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u6307\u6807\u3002 \u5982\u679c\u7269\u7406\u5185\u5b58\u4e0d\u8db3\u4e86\uff0c\u6570\u636e\u4f1a\u5728\u4e3b\u5b58\u548c\u78c1\u76d8\u4e4b\u95f4\u9891\u7e41\u4ea4\u6362\uff0c\u547d\u4e2d\u7387\u5f88\u4f4e\uff0c\u6027\u80fd\u51fa\u73b0\u6025\u5267\u4e0b\u964d\uff0c\u6211\u4eec\u79f0\u8fd9\u79cd\u73b0\u8c61\u53eb \u5185\u5b58\u98a0\u7c38 \u3002\u8fd9\u65f6\u4f60\u4f1a\u53d1\u73b0\u7cfb\u7edf\u7684 swap \u7a7a\u95f4\u5229\u7528\u7387\u5f00\u59cb\u589e\u9ad8\uff0c CPU \u5229\u7528\u7387\u4e2d iowait \u5360\u6bd4\u5f00\u59cb\u589e\u9ad8\u3002 \u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u53ea\u8981\u7269\u7406\u5185\u5b58\u591f\u7528\uff0c\u9875\u547d\u4e2d\u7387\u4e0d\u4f1a\u975e\u5e38\u4f4e\uff0c\u4e0d\u4f1a\u51fa\u73b0\u5185\u5b58\u98a0\u7c38\u7684\u60c5\u51b5\u3002\u56e0\u4e3a\u5927\u591a\u6570\u7a0b\u5e8f\u90fd\u6709\u4e00\u4e2a\u7279\u70b9\uff0c\u5c31\u662f \u5c40\u90e8\u6027 \u3002 \u5c40\u90e8\u6027\u5c31\u662f\u8bf4\u88ab\u5f15\u7528\u8fc7\u4e00\u6b21\u7684\u5b58\u50a8\u5668\u4f4d\u7f6e\uff0c\u5f88\u53ef\u80fd\u5728\u540e\u7eed\u518d\u88ab\u5f15\u7528\u591a\u6b21\uff1b\u800c\u4e14\u5728\u8be5\u4f4d\u7f6e\u9644\u8fd1\u7684\u5176\u4ed6\u4f4d\u7f6e\uff0c\u4e5f\u5f88\u53ef\u80fd\u4f1a\u5728\u540e\u7eed\u4e00\u6bb5\u65f6\u95f4\u5185\u88ab\u5f15\u7528\u3002 \u524d\u9762\u8bf4\u8fc7\u8ba1\u7b97\u673a\u5230\u5904\u4f7f\u7528\u4e00\u7ea7\u7ea7\u7684\u7f13\u5b58\u6765\u63d0\u5347\u6027\u80fd\uff0c\u5f52\u6839\u7ed3\u5e95\u5c31\u662f\u5229\u7528\u4e86\u5c40\u90e8\u6027\u7684\u7279\u5f81\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u7279\u6027\uff0c\u4e00\u7ea7\u7ea7\u7684\u7f13\u5b58\u4e0d\u4f1a\u6709\u90a3\u4e48\u5927\u7684\u4f5c\u7528\u3002\u6240\u4ee5\u4e00\u4e2a\u5c40\u90e8\u6027\u5f88\u597d\u7684\u7a0b\u5e8f\u8fd0\u884c\u901f\u5ea6\u4f1a\u66f4\u5feb\u3002 CPU Cache \u968f\u7740\u6280\u672f\u53d1\u5c55\uff0cCPU \u7684\u8fd0\u7b97\u901f\u5ea6\u8d8a\u6765\u8d8a\u5feb\uff0c\u4f46\u5185\u5b58\u8bbf\u95ee\u7684\u901f\u5ea6\u5374\u4e00\u76f4\u6ca1\u4ec0\u4e48\u7a81\u7834\u3002\u6700\u7ec8\u5bfc\u81f4\u4e86 CPU \u8bbf\u95ee\u4e3b\u5b58\u5c31\u6210\u4e86\u6574\u4e2a\u673a\u5668\u7684\u6027\u80fd\u74f6\u9888\u3002CPU Cache \u7684\u51fa\u73b0\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728 CPU \u548c \u4e3b\u5b58\u4e4b\u95f4\u518d\u52a0\u4e86 Cache\uff0c\u7528\u6765\u7f13\u5b58\u4e00\u5757\u5185\u5b58\u4e2d\u7684\u6570\u636e\uff0c\u800c\u4e14\u8fd8\u4e0d\u53ea\u4e00\u4e2a\uff0c\u73b0\u4ee3\u8ba1\u7b97\u673a\u4e00\u822c\u90fd\u6709 3 \u7ea7 Cache\uff0c\u5176\u4e2d L1 Cache \u7684\u8bbf\u95ee\u901f\u5ea6\u548c\u5bc4\u5b58\u5668\u5dee\u4e0d\u591a\u3002 \u73b0\u5728\u8bbf\u95ee\u6570\u636e\u7684\u5927\u81f4\u7684\u987a\u5e8f\u662f CPU --> L1 Cache --> L2 Cache --> L3 Cache --> \u4e3b\u5b58 --> \u78c1\u76d8 \u3002\u4ece\u5de6\u5230\u53f3\uff0c\u8bbf\u95ee\u901f\u5ea6\u8d8a\u6765\u8d8a\u6162\uff0c\u7a7a\u95f4\u8d8a\u6765\u8d8a\u5927\uff0c\u5355\u4f4d\u7a7a\u95f4\uff08\u6bd4\u5982\u6bcf\u5b57\u8282\uff09\u7684\u4ef7\u683c\u8d8a\u6765\u8d8a\u4f4e\u3002 \u73b0\u5728\u5b58\u50a8\u5668\u7684\u6574\u4f53\u5c42\u6b21\u7ed3\u6784\u5927\u81f4\u5982\u4e0b\u56fe\uff1a \u5b58\u50a8\u5668\u5c42\u6b21\u7ed3\u6784 \u5728\u8fd9\u79cd\u67b6\u6784\u4e0b\uff0c\u7f13\u5b58\u7684\u547d\u4e2d\u7387\u5c31\u66f4\u52a0\u91cd\u8981\u4e86\uff0c\u56e0\u4e3a\u7cfb\u7edf\u4f1a\u5047\u5b9a\u6240\u6709\u7a0b\u5e8f\u90fd\u662f\u6709\u5c40\u90e8\u6027\u7279\u5f81\u7684\u3002\u5982\u679c\u67d0\u4e00\u7ea7\u51fa\u73b0\u4e86\u672a\u547d\u4e2d\uff0c\u4ed6\u5c31\u4f1a\u5c06\u8be5\u7ea7\u5b58\u50a8\u7684\u6570\u636e\u66f4\u65b0\u6210\u6700\u8fd1\u4f7f\u7528\u7684\u6570\u636e\u3002 \u4e3b\u5b58\u4e0e\u5b58\u50a8\u5668\u4e4b\u95f4\u4ee5 page\uff08\u901a\u5e38\u662f 4K\uff09 \u4e3a\u5355\u4f4d\u8fdb\u884c\u4ea4\u6362\uff0ccache \u4e0e \u4e3b\u5b58\u4e4b\u95f4\u662f\u4ee5 cache line\uff08\u901a\u5e38 64 byte\uff09 \u4e3a\u5355\u4f4d\u4ea4\u6362\u7684\u3002 \u4e3e\u4e2a\u4f8b\u5b50 \u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u9a8c\u8bc1\u4e0b\u547d\u4e2d\u7387\u7684\u95ee\u9898\uff0c\u4e0b\u9762\u7684\u51fd\u6570\u662f\u5faa\u73af\u4e00\u4e2a\u6570\u7ec4\u4e3a\u6bcf\u4e2a\u5143\u7d20\u8d4b\u503c\u3002 func Loop(nums []int, step int){ l :=len(nums) for i :=0; i < step; i++{ for j := i; j < l; j += step { nums[j]=4 } } } \u53c2\u6570 step \u4e3a 1 \u65f6\uff0c\u548c\u666e\u901a\u4e00\u5c42\u5faa\u73af\u4e00\u6837\u3002\u5047\u8bbe step \u4e3a 2 \uff0c\u5219\u6548\u679c\u5c31\u662f\u8df3\u8dc3\u5f0f\u904d\u5386\u6570\u7ec4\uff0c\u5982 1,3,5,7,9,2,4,6,8,10 \u8fd9\u6837\uff0cstep \u8d8a\u5927\uff0c\u8bbf\u95ee\u8de8\u5ea6\u4e5f\u5c31\u8d8a\u5927\uff0c\u7a0b\u5e8f\u7684\u5c40\u90e8\u6027\u4e5f\u5c31\u8d8a\u4e0d\u597d\u3002 \u4e0b\u9762\u662f nums \u957f\u5ea6\u4e3a 10000 \uff0c step = 1 \u548c step = 16 \u65f6\u7684\u538b\u6d4b\u7ed3\u679c\uff1a goos: darwin goarch: amd64 BenchmarkLoopStep1-43000005241 ns/op BenchmarkLoopStep16-410000022670 ns/op \u53ef\u4ee5\u770b\u51fa\uff0c2 \u79cd\u904d\u5386\u65b9\u5f0f\u4f1a\u51fa\u73b0 3 \u500d\u7684\u6027\u80fd\u5dee\u8ddd\u3002\u8fd9\u79cd\u95ee\u9898\u6700\u5bb9\u6613\u51fa\u73b0\u5728\u591a\u7ef4\u6570\u7ec4\u7684\u5904\u7406\u4e0a\uff0c\u6bd4\u5982\u904d\u5386\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u5f88\u5bb9\u6613\u5c31\u5199\u51fa\u5c40\u90e8\u6027\u5f88\u5dee\u7684\u4ee3\u7801\u3002 \u7a0b\u5e8f\u7684\u5185\u5b58\u5e03\u5c40 \u6700\u540e\u770b\u4e00\u4e0b\u7a0b\u5e8f\u7684\u5185\u5b58\u5e03\u5c40\u3002\u73b0\u5728\u6211\u4eec\u77e5\u9053\u4e86\u6bcf\u4e2a\u7a0b\u5e8f\u90fd\u6709\u81ea\u5df1\u4e00\u5957\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\u53ef\u4ee5\u4f7f\u7528\uff0c\u6bd4\u5982 0x0000 ~ 0xffff \uff0c\u4f46\u6211\u4eec\u5728\u7528\u9ad8\u7ea7\u8bed\u8a00\uff0c\u65e0\u8bba\u662f C \u8fd8\u662f Go \u5199\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u5f88\u5c11\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e9b\u5730\u5740\u3002\u6211\u4eec\u90fd\u662f\u901a\u8fc7\u53d8\u91cf\u540d\u6765\u8bbf\u95ee\u6570\u636e\u7684\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5c06\u6211\u4eec\u7684\u53d8\u91cf\u540d\u8f6c\u6362\u6210\u771f\u6b63\u7684\u865a\u62df\u5730\u5740\u3002 \u90a3\u6700\u7ec8\u7f16\u8bd1\u51fa\u6765\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u662f\u5982\u4f55\u88ab\u64cd\u4f5c\u7cfb\u7edf\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u5e76\u6267\u884c\u7684\u5462\uff1f \u5176\u5b9e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5df2\u7ecf\u5c06\u4e00\u6574\u5757\u5185\u5b58\u5212\u5206\u597d\u4e86\u533a\u57df\uff0c\u6bcf\u4e2a\u533a\u57df\u7528\u6765\u505a\u4e0d\u540c\u7684\u4e8b\u60c5\u3002\u5982\u56fe\uff1a \u5185\u5b58\u5e03\u5c40 text \u6bb5 \uff1a\u5b58\u50a8\u7a0b\u5e8f\u7684\u4e8c\u8fdb\u5236\u6307\u4ee4\uff0c\u53ca\u5176\u4ed6\u7684\u4e00\u4e9b\u9759\u6001\u5185\u5bb9 data \u6bb5 \uff1a\u7528\u6765\u5b58\u50a8\u5df2\u88ab\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u3002\u6bd4\u5982\u5e38\u91cf\uff08const\uff09\u3002 bss \u6bb5 \uff1a\u7528\u6765\u5b58\u653e\u672a\u88ab\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u3002\u548c .data \u6bb5\u4e00\u6837\u90fd\u5c5e\u4e8e\u9759\u6001\u5206\u914d\uff0c\u5728\u8fd9\u91cc\u9762\u7684\u53d8\u91cf\u6570\u636e\u5728\u7f16\u8bd1\u5c31\u786e\u5b9a\u4e86\u5927\u5c0f\uff0c\u4e0d\u91ca\u653e\u3002 stack \u6bb5 \uff1a\u6808\u7a7a\u95f4\uff0c\u4e3b\u8981\u7528\u4e8e\u51fd\u6570\u8c03\u7528\u65f6\u5b58\u50a8\u4e34\u65f6\u53d8\u91cf\u7684\u3002\u8fd9\u90e8\u5206\u7684\u5185\u5b58\u662f\u81ea\u52a8\u5206\u914d\u81ea\u52a8\u91ca\u653e\u7684\u3002 heap \u6bb5 \uff1a\u5806\u7a7a\u95f4\uff0c\u7528\u4e8e\u52a8\u6001\u5206\u914d\uff0cC \u8bed\u8a00\u4e2d malloc \u548c free \u64cd\u4f5c\u7684\u5185\u5b58\u5c31\u5728\u8fd9\u91cc\uff1bGo \u8bed\u8a00\u4e3b\u8981\u9760 GC \u81ea\u52a8\u7ba1\u7406\u8fd9\u90e8\u5206\u3002 \u5176\u5b9e\u73b0\u5728\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u8fdb\u7a0b\u5185\u90e8\u7684\u5185\u5b58\u533a\u57df\u6ca1\u8fd9\u4e48\u7b80\u5355\uff0c\u8981\u6bd4\u8fd9\u590d\u6742\u591a\u4e86\uff0c\u6bd4\u5982\u5185\u6838\u533a\u57df\uff0c\u5171\u4eab\u5e93\u533a\u57df\u3002\u56e0\u4e3a\u6211\u4eec\u4e0d\u662f\u8981\u771f\u7684\u5f00\u53d1\u4e00\u5957\u64cd\u4f5c\u7cfb\u7edf\uff0c\u7ec6\u8282\u53ef\u4ee5\u5ffd\u7565\u3002\u8fd9\u91cc\u53ea\u9700\u8981\u8bb0\u4f4f \u5806\u7a7a\u95f4 \u548c \u6808\u7a7a\u95f4 \u5373\u53ef\u3002 \u6808\u7a7a\u95f4 \u662f\u901a\u8fc7\u538b\u6808\u51fa\u6808\u65b9\u5f0f\u81ea\u52a8\u5206\u914d\u91ca\u653e\u7684\uff0c\u7531\u7cfb\u7edf\u7ba1\u7406\uff0c\u4f7f\u7528\u8d77\u6765\u9ad8\u6548\u65e0\u611f\u77e5\u3002 \u5806\u7a7a\u95f4 \u662f\u7528\u4ee5\u52a8\u6001\u5206\u914d\u7684\uff0c\u7531\u7a0b\u5e8f\u81ea\u5df1\u7ba1\u7406\u5206\u914d\u548c\u91ca\u653e\u3002Go \u8bed\u8a00\u867d\u7136\u53ef\u4ee5\u5e2e\u6211\u4eec\u81ea\u52a8\u7ba1\u7406\u5206\u914d\u548c\u91ca\u653e\uff0c\u4f46\u662f\u4ee3\u4ef7\u4e5f\u662f\u5f88\u9ad8\u7684\u3002 \u7ed3\u8bba \u5c40\u90e8\u6027\u597d\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u63d0\u9ad8\u7f13\u5b58\u547d\u4e2d\u7387\uff0c\u8fd9\u5bf9\u5e95\u5c42\u7cfb\u7edf\u7684\u5185\u5b58\u7ba1\u7406\u662f\u5f88\u53cb\u597d\u7684\uff0c\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\u3002CPU Cache \u5c42\u9762\u7684\u4f4e\u547d\u4e2d\u7387\u5bfc\u81f4\u7684\u662f\u7a0b\u5e8f\u8fd0\u884c\u7f13\u6162\uff0c\u5185\u5b58\u5c42\u9762\u7684\u4f4e\u547d\u4e2d\u7387\u4f1a\u51fa\u73b0\u5185\u5b58\u98a0\u7c38\uff0c\u51fa\u73b0\u8fd9\u79cd\u73b0\u8c61\u65f6\u4f60\u7684\u670d\u52a1\u57fa\u672c\u4e0a\u5df2\u7ecf\u762b\u75ea\u4e86\u3002Go \u8bed\u8a00\u7684\u5185\u5b58\u7ba1\u7406\u662f\u53c2\u8003 tcmalloc \u5b9e\u73b0\u7684\uff0c\u5b83\u5176\u5b9e\u5c31\u662f\u5229\u7528\u597d\u4e86 OS \u7ba1\u7406\u5185\u5b58\u7684\u8fd9\u4e9b\u7279\u70b9\uff0c\u6765\u6700\u5927\u5316\u5185\u5b58\u5206\u914d\u6027\u80fd\u7684\u3002 \u53c2\u8003 1\u3001Go Memory Management 2\u3001\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b","title":"Go\u5185\u5b58\u7ba1\u7406\u4e00\uff1a\u7cfb\u7edf\u5185\u5b58\u7ba1\u7406"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%B8%80%EF%BC%9A%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_1","text":"\u8981\u641e\u660e\u767d Go \u8bed\u8a00\u7684\u5185\u5b58\u7ba1\u7406\uff0c\u5c31\u5fc5\u987b\u5148\u7406\u89e3\u64cd\u4f5c\u7cfb\u7edf\u4ee5\u53ca\u673a\u5668\u786c\u4ef6\u662f\u5982\u4f55\u7ba1\u7406\u5185\u5b58\u7684\u3002\u56e0\u4e3a Go \u8bed\u8a00\u7684\u5185\u90e8\u673a\u5236\u662f\u5efa\u7acb\u5728\u8fd9\u4e2a\u57fa\u7840\u4e4b\u4e0a\u7684\uff0c\u5b83\u7684\u8bbe\u8ba1\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u5c3d\u53ef\u80fd\u7684\u4f1a\u53d1\u6325\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u7684\u4f18\u52bf\uff0c\u800c\u907f\u5f00\u5bfc\u81f4\u4f4e\u6548\u60c5\u51b5\u3002","title":"\u4ecb\u7ecd"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%B8%80%EF%BC%9A%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_2","text":"\u5176\u5b9e\u73b0\u5728\u8ba1\u7b97\u673a\u5185\u5b58\u7ba1\u7406\u7684\u65b9\u5f0f\u90fd\u662f\u4e00\u6b65\u6b65\u6f14\u53d8\u6765\u7684\uff0c\u6700\u5f00\u59cb\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u540e\u6765\u4e3a\u4e86\u6ee1\u8db3\u5404\u79cd\u9700\u6c42\u800c\u589e\u52a0\u4e86\u5404\u79cd\u5404\u6837\u7684\u673a\u5236\uff0c\u8d8a\u6765\u8d8a\u590d\u6742\u3002\u8fd9\u91cc\u6211\u4eec\u53ea\u4ecb\u7ecd\u548c\u5f00\u53d1\u8005\u606f\u606f\u76f8\u5173\u7684\u51e0\u4e2a\u673a\u5236\u3002","title":"\u64cd\u4f5c\u7cfb\u7edf\u5185\u5b58\u7ba1\u7406"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%B8%80%EF%BC%9A%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_3","text":"\u6211\u4eec\u53ef\u4ee5\u628a\u5185\u5b58\u770b\u6210\u4e00\u4e2a\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6570\u7ec4\u5143\u7d20\u7684\u5927\u5c0f\u662f 1B\uff0c\u4e5f\u5c31\u662f 8 \u4f4d(bit)\u3002CPU \u901a\u8fc7\u5185\u5b58\u5730\u5740\u6765\u83b7\u53d6\u5185\u5b58\u4e2d\u7684\u6570\u636e\uff0c\u5185\u5b58\u5730\u5740\u53ef\u4ee5\u770b\u505a\u6210\u6570\u7ec4\u7684\u6e38\u6807\uff08index\uff09\u3002 CPU \u5728\u6267\u884c\u6307\u4ee4\u7684\u65f6\u5019\uff0c\u5c31\u662f\u901a\u8fc7\u5185\u5b58\u5730\u5740\uff0c\u5c06\u7269\u7406\u5185\u5b58\u4e0a\u7684\u6570\u636e\u8f7d\u5165\u5230\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u6267\u884c\u673a\u5668\u6307\u4ee4\u3002\u4f46\u968f\u7740\u53d1\u5c55\uff0c\u51fa\u73b0\u4e86\u591a\u4efb\u52a1\u7684\u9700\u6c42\uff0c\u4e5f\u5c31\u662f\u5e0c\u671b\u591a\u4e2a\u4efb\u52a1\u80fd\u540c\u65f6\u5728\u7cfb\u7edf\u4e0a\u8fd0\u884c\u3002\u8fd9\u5c31\u51fa\u73b0\u4e86\u4e00\u4e9b\u95ee\u9898\uff1a 1\u3001\u5185\u5b58\u8bbf\u95ee\u51b2\u7a81:\u7a0b\u5e8f\u5f88\u5bb9\u6613\u51fa\u73b0 bug\uff0c\u5c31\u662f 2 \u6216\u66f4\u591a\u7684\u7a0b\u5e8f\u4f7f\u7528\u4e86\u540c\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u5bfc\u81f4\u6570\u636e\u8bfb\u5199\u9519\u4e71\uff0c\u7a0b\u5e8f\u5d29\u6e83\u3002\u66f4\u6709\u4e00\u4e9b\u9ed1\u5ba2\u5229\u7528\u8fd9\u4e2a\u7f3a\u9677\u6765\u5236\u4f5c\u75c5\u6bd2\u3002 2\u3001\u5185\u5b58\u4e0d\u591f\u7528\uff1a\u56e0\u4e3a\u6bcf\u4e2a\u7a0b\u5e8f\u90fd\u9700\u8981\u81ea\u5df1\u5355\u72ec\u4f7f\u7528\u7684\u4e00\u5757\u5185\u5b58\uff0c\u5185\u5b58\u7684\u5927\u5c0f\u5c31\u6210\u4e86\u4efb\u52a1\u6570\u91cf\u7684\u74f6\u9888\u3002 3\u3001\u7a0b\u5e8f\u5f00\u53d1\u6210\u672c\u9ad8\uff1a**\u4f60\u7684\u7a0b\u5e8f\u8981\u4f7f\u7528\u591a\u5c11\u5185\u5b58\uff0c\u5185\u5b58\u5730\u5740\u662f\u591a\u5c11\uff0c\u8fd9\u4e9b\u90fd\u4e0d\u80fd\u641e\u9519\uff0c\u5bf9\u4e8e\u4eba\u6765\u8bf4\uff0c\u5f00\u53d1\u6b63\u786e\u7684\u7a0b\u5e8f\u5f88\u8d39\u8111\u5b50\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5f53\u4ee3\u7801\u8fd0\u884c\u5230\u67d0\u5904\u65f6\uff0c\u9700\u8981\u4f7f\u7528 100M \u5185\u5b58\uff0c\u5176\u4ed6\u65f6\u5019 1M \u5185\u5b58\u5c31\u591f\uff1b\u4e3a\u4e86\u907f\u514d\u548c\u5176\u4ed6\u7a0b\u5e8f\u51b2\u7a81\uff0c\u7a0b\u5e8f\u521d\u59cb\u5316\u65f6\uff0c\u5c31\u5fc5\u987b\u7533\u8bf7\u72ec\u7acb 100M \u5185\u5b58\u4ee5\u4fdd\u8bc1\u6b63\u5e38\u8fd0\u884c\uff0c\u8fd9\u5c31\u662f\u4e00\u79cd\u5f88\u5927\u7684\u6d6a\u8d39\uff0c\u56e0\u4e3a\u8fd9 100M \u5b83\u5927\u591a\u6570\u65f6\u5019\u7528\u4e0d\u4e0a\uff0c\u5176\u4ed6\u7a0b\u5e8f\u8fd8\u4e0d\u80fd\u7528\u3002","title":"\u6700\u539f\u59cb\u7684\u65b9\u5f0f"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%B8%80%EF%BC%9A%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_4","text":"\u865a\u62df\u5185\u5b58\u7684\u51fa\u73b0\uff0c\u5f88\u597d\u7684\u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u7684\u4e00\u4e9b\u5217\u95ee\u9898\u3002\u7528\u6237\u7a0b\u5e8f\u53ea\u80fd\u4f7f\u7528\u865a\u62df\u7684\u5185\u5b58\u5730\u5740\u6765\u83b7\u53d6\u6570\u636e\uff0c\u7cfb\u7edf\u4f1a\u5c06\u8fd9\u4e2a\u865a\u62df\u5730\u5740\u7ffb\u8bd1\u6210\u5b9e\u9645\u7684\u7269\u7406\u5730\u5740\u3002 \u6240\u6709\u7a0b\u5e8f\u7edf\u4e00\u4f7f\u7528\u4e00\u5957\u8fde\u7eed\u865a\u62df\u5730\u5740\uff0c\u6bd4\u5982 0x0000 ~ 0xffff\u3002\u4ece\u7a0b\u5e8f\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5b83\u89c9\u5f97\u81ea\u5df1\u72ec\u4eab\u4e86\u4e00\u6574\u5757\u5185\u5b58\u3002\u4e0d\u7528\u8003\u8651\u8bbf\u95ee\u51b2\u7a81\u7684\u95ee\u9898\u3002\u7cfb\u7edf\u4f1a\u5c06\u865a\u62df\u5730\u5740\u7ffb\u8bd1\u6210\u7269\u7406\u5730\u5740\uff0c\u4ece\u5185\u5b58\u4e0a\u52a0\u8f7d\u6570\u636e\u3002 \u5bf9\u4e8e\u5185\u5b58\u4e0d\u591f\u7528\u7684\u95ee\u9898\uff0c\u865a\u62df\u5185\u5b58\u672c\u8d28\u4e0a\u662f\u5c06\u78c1\u76d8\u5f53\u6210\u6700\u7ec8\u5b58\u50a8\uff0c\u800c\u4e3b\u5b58\u4f5c\u4e3a\u4e86\u4e00\u4e2a cache\u3002\u7a0b\u5e8f\u53ef\u4ee5\u4ece\u865a\u62df\u5185\u5b58\u4e0a\u7533\u8bf7\u5f88\u5927\u7684\u7a7a\u95f4\u4f7f\u7528\uff0c\u6bd4\u5982 1G \uff1b\u4f46\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u4f1a\u771f\u7684\u5728\u7269\u7406\u5185\u5b58\u4e0a\u5f00\u8f9f 1G \u7684\u7a7a\u95f4\uff0c\u5b83\u53ea\u662f\u5f00\u8f9f\u4e86\u5f88\u5c0f\u4e00\u5757\uff0c\u6bd4\u5982 1M \u7ed9\u7a0b\u5e8f\u4f7f\u7528\u3002 \u8fd9\u6837\u7a0b\u5e8f\u5728\u8bbf\u95ee\u5185\u5b58\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u770b\u8bbf\u95ee\u7684\u5730\u5740\u662f\u5426\u80fd\u8f6c\u6362\u6210\u7269\u7406\u5185\u5b58\u5730\u5740\u3002\u80fd\u5219\u6b63\u5e38\u8bbf\u95ee\uff0c\u4e0d\u80fd\u5219\u518d\u5f00\u8f9f\u3002\u8fd9\u4f7f\u5f97\u5185\u5b58\u5f97\u5230\u4e86\u66f4\u9ad8\u6548\u7684\u5229\u7528\u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u6240\u4f7f\u7528\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4f46\u4ed6\u4eec\u7684\u865a\u62df\u5730\u5740\u4f1a\u88ab\u6620\u5c04\u5230\u4e3b\u5b58\u4e0a\u7684\u4e0d\u540c\u533a\u57df\uff0c\u751a\u81f3\u6620\u5c04\u5230\u78c1\u76d8\u4e0a\uff08\u5f53\u5185\u5b58\u4e0d\u591f\u7528\u65f6\uff09\u3002 \u865a\u62df\u5730\u5740 \u5176\u5b9e\u672c\u8d28\u4e0a\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u5c06\u7a0b\u5e8f\u5e38\u7528\u7684\u6570\u636e\u653e\u5230\u5185\u5b58\u91cc\u52a0\u901f\u8bbf\u95ee\uff0c\u4e0d\u5e38\u7528\u7684\u6570\u636e\u653e\u5728\u78c1\u76d8\u4e0a\u3002\u8fd9\u4e00\u5207\u5bf9\u7528\u6237\u7a0b\u5e8f\u6765\u8bf4\u5b8c\u5168\u662f\u900f\u660e\u7684\uff0c\u7528\u6237\u7a0b\u5e8f\u53ef\u4ee5\u5047\u88c5\u6240\u6709\u6570\u636e\u90fd\u5728\u5185\u5b58\u91cc\uff0c\u7136\u540e\u901a\u8fc7\u865a\u62df\u5185\u5b58\u5730\u5740\u53bb\u8bbf\u95ee\u6570\u636e\u3002\u5728\u8fd9\u80cc\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5c06\u6570\u636e\u5728\u4e3b\u5b58\u548c\u78c1\u76d8\u4e4b\u95f4\u8fdb\u884c\u4ea4\u6362\u3002","title":"\u865a\u62df\u5185\u5b58"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%B8%80%EF%BC%9A%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_5","text":"\u865a\u62df\u5185\u5b58\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5927\u591a\u6570\u90fd\u662f\u901a\u8fc7\u9875\u8868\u6765\u5b9e\u73b0\u7684\u3002\u64cd\u4f5c\u7cfb\u7edf\u865a\u62df\u5185\u5b58\u7a7a\u95f4\u5206\u6210\u4e00\u9875\u4e00\u9875\u7684\u6765\u7ba1\u7406\uff0c\u6bcf\u9875\u7684\u5927\u5c0f\u4e3a 4K \uff08\u5f53\u7136\u8fd9\u662f\u53ef\u4ee5\u914d\u7f6e\u7684\uff0c\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u4e00\u6837\uff09\u3002\u78c1\u76d8\u548c\u4e3b\u5185\u5b58\u4e4b\u95f4\u7684\u7f6e\u6362\u4e5f\u662f\u4ee5\u9875\u4e3a\u5355\u4f4d\u6765\u64cd\u4f5c\u7684\u30024K \u7b97\u662f\u901a\u8fc7\u5b9e\u8df5\u6298\u4e2d\u51fa\u6765\u7684\u901a\u7528\u503c\uff0c\u592a\u5c0f\u4e86\u4f1a\u51fa\u73b0\u9891\u7e41\u7684\u7f6e\u6362\uff0c\u592a\u5927\u4e86\u53c8\u6d6a\u8d39\u5185\u5b58\u3002 \u865a\u62df\u5730\u5740 -> \u7269\u7406\u5730\u5740 \u7684\u6620\u5c04\u5173\u7cfb\u7531 \u9875\u8868\uff08Page Table\uff09 \u8bb0\u5f55\uff0c\u5b83\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u53eb\u505a \u9875\u8868\u6761\u76ee\uff08Page Table Entry\uff0c\u7b80\u79f0 PTE\uff09 \uff0cPTE \u7531\u4e00\u4e2a\u6709\u6548\u4f4d\u548c n \u4f4d\u5730\u5740\u5b57\u6bb5\u6784\u6210\uff0c\u6709\u6548\u4f4d\u6807\u8bc6\u8fd9\u4e2a\u865a\u62df\u5730\u5740\u662f\u5426\u5206\u914d\u4e86\u7269\u7406\u5185\u5b58\u3002 \u9875\u8868\u88ab\u64cd\u4f5c\u7cfb\u7edf\u653e\u5728\u7269\u7406\u5185\u5b58\u7684\u6307\u5b9a\u4f4d\u7f6e\uff0cCPU \u4e0a\u6709\u4e2a Memory Management Unit\uff08MMU\uff09 \u5355\u5143\uff0cCPU \u628a\u865a\u62df\u5730\u5740\u7ed9 MMU\uff0cMMU \u53bb\u7269\u7406\u5185\u5b58\u4e2d\u67e5\u8be2\u9875\u8868\uff0c\u5f97\u5230\u5b9e\u9645\u7684\u7269\u7406\u5730\u5740\u3002\u5f53\u7136 MMU \u4e0d\u4f1a\u6bcf\u6b21\u90fd\u53bb\u67e5\u7684\uff0c\u5b83\u81ea\u5df1\u4e5f\u6709\u4e00\u4efd\u7f13\u5b58\u53ebTranslation Lookaside Buffer (TLB)\uff0c\u662f\u4e3a\u4e86\u52a0\u901f\u5730\u5740\u7ffb\u8bd1\u3002 \u865a\u62df\u5730\u5740\u7ffb\u8bd1 \u4f60\u6162\u6162\u4f1a\u53d1\u73b0\u6574\u4e2a\u8ba1\u7b97\u673a\u4f53\u7cfb\u91cc\u9762\uff0c\u7f13\u5b58\u662f\u65e0\u5904\u4e0d\u5728\u7684\uff0c\u6574\u4e2a\u8ba1\u7b97\u673a\u4f53\u7cfb\u5c31\u662f\u5efa\u7acb\u5728\u4e00\u7ea7\u7ea7\u7684\u7f13\u5b58\u4e4b\u4e0a\u7684\uff0c\u65e0\u8bba\u8f6f\u786c\u4ef6\u3002 \u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b CPU \u5185\u5b58\u8bbf\u95ee\u7684\u5b8c\u6574\u8fc7\u7a0b\uff1a CPU \u4f7f\u7528\u865a\u62df\u5730\u5740\u8bbf\u95ee\u6570\u636e\uff0c\u6bd4\u5982\u6267\u884c\u4e86 MOV \u6307\u4ee4\u52a0\u8f7d\u6570\u636e\u5230\u5bc4\u5b58\u5668\uff0c\u628a\u5730\u5740\u4f20\u9012\u7ed9 MMU\u3002 MMU \u751f\u6210 PTE \u5730\u5740\uff0c\u5e76\u4ece\u4e3b\u5b58\uff08\u6216\u81ea\u5df1\u7684 Cache\uff09\u4e2d\u5f97\u5230\u5b83\u3002 \u5982\u679c MMU \u6839\u636e PTE \u5f97\u5230\u771f\u5b9e\u7684\u7269\u7406\u5730\u5740\uff0c\u6b63\u5e38\u8bfb\u53d6\u6570\u636e\u3002\u6d41\u7a0b\u5230\u6b64\u7ed3\u675f\u3002 \u5982\u679c PTE \u4fe1\u606f\u8868\u793a\u6ca1\u6709\u5173\u8054\u7684\u7269\u7406\u5730\u5740\uff0cMMU \u5219\u89e6\u53d1\u4e00\u4e2a\u7f3a\u9875\u5f02\u5e38\u3002 \u64cd\u4f5c\u7cfb\u7edf\u6355\u83b7\u5230\u8fd9\u4e2a\u5f02\u5e38\uff0c\u5f00\u59cb\u6267\u884c\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u3002\u5728\u7269\u7406\u5185\u5b58\u4e0a\u521b\u5efa\u4e00\u9875\u5185\u5b58\uff0c\u5e76\u66f4\u65b0\u9875\u8868\u3002 \u7f3a\u9875\u5904\u7406\u7a0b\u5e8f\u5728\u7269\u7406\u5185\u5b58\u4e2d\u786e\u5b9a\u4e00\u4e2a \u727a\u7272\u9875 \uff0c\u5982\u679c\u8fd9\u4e2a\u727a\u7272\u9875\u4e0a\u6709\u6570\u636e\uff0c\u5219\u628a\u6570\u636e\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\u3002 \u7f3a\u9875\u5904\u7406\u7a0b\u5e8f\u66f4\u65b0 PTE\u3002 \u7f3a\u9875\u5904\u7406\u7a0b\u5e8f\u7ed3\u675f\uff0c\u518d\u56de\u53bb\u6267\u884c\u4e0a\u4e00\u6761\u6307\u4ee4\uff08\u5bfc\u81f4\u7f3a\u9875\u5f02\u5e38\u7684\u90a3\u4e2a\u6307\u4ee4\uff0c\u4e5f\u5c31\u662f MOV \u6307\u4ee4\uff09\u3002\u8fd9\u6b21\u80af\u5b9a\u547d\u4e2d\u4e86\u3002","title":"\u865a\u62df\u5730\u5740\u7ffb\u8bd1"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%B8%80%EF%BC%9A%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_6","text":"\u4f60\u53ef\u80fd\u5df2\u7ecf\u53d1\u73b0\uff0c\u4e0a\u8ff0\u7684\u8bbf\u95ee\u6b65\u9aa4\u4e2d\uff0c\u4ece\u7b2c 4 \u6b65\u5f00\u59cb\u90fd\u662f\u4e9b\u5f88\u7e41\u7410\u7684\u64cd\u4f5c\uff0c\u9891\u7e41\u7684\u6267\u884c\u5bf9\u6027\u80fd\u5f71\u54cd\u5f88\u5927\u3002\u6bd5\u7adf\u8bbf\u95ee\u78c1\u76d8\u662f\u975e\u5e38\u6162\u7684\uff0c\u5b83\u4f1a\u5f15\u53d1\u7a0b\u5e8f\u6027\u80fd\u7684\u6025\u5267\u4e0b\u964d\u3002\u5982\u679c\u5185\u5b58\u8bbf\u95ee\u5230\u7b2c 3 \u6b65\u6210\u529f\u7ed3\u675f\u4e86\uff0c\u6211\u4eec\u5c31\u8bf4 \u9875\u547d\u4e2d \u4e86\uff1b\u53cd\u4e4b\u5c31\u662f \u672a\u547d\u4e2d \uff0c\u6216\u8005\u8bf4 \u7f3a\u9875 \uff0c\u8868\u793a\u5b83\u5f00\u59cb\u6267\u884c\u7b2c 4 \u6b65\u4e86\u3002 \u5047\u8bbe\u5728 n \u6b21\u5185\u5b58\u8bbf\u95ee\u4e2d\uff0c\u51fa\u73b0\u547d\u4e2d\u7684\u6b21\u6570\u662f m\uff0c\u90a3\u4e48 m / n * 100% \u5c31\u8868\u793a\u547d\u4e2d\u7387\uff0c\u8fd9\u662f\u8861\u91cf\u5185\u5b58\u7ba1\u7406\u7a0b\u5e8f\u597d\u574f\u7684\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u6307\u6807\u3002 \u5982\u679c\u7269\u7406\u5185\u5b58\u4e0d\u8db3\u4e86\uff0c\u6570\u636e\u4f1a\u5728\u4e3b\u5b58\u548c\u78c1\u76d8\u4e4b\u95f4\u9891\u7e41\u4ea4\u6362\uff0c\u547d\u4e2d\u7387\u5f88\u4f4e\uff0c\u6027\u80fd\u51fa\u73b0\u6025\u5267\u4e0b\u964d\uff0c\u6211\u4eec\u79f0\u8fd9\u79cd\u73b0\u8c61\u53eb \u5185\u5b58\u98a0\u7c38 \u3002\u8fd9\u65f6\u4f60\u4f1a\u53d1\u73b0\u7cfb\u7edf\u7684 swap \u7a7a\u95f4\u5229\u7528\u7387\u5f00\u59cb\u589e\u9ad8\uff0c CPU \u5229\u7528\u7387\u4e2d iowait \u5360\u6bd4\u5f00\u59cb\u589e\u9ad8\u3002 \u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u53ea\u8981\u7269\u7406\u5185\u5b58\u591f\u7528\uff0c\u9875\u547d\u4e2d\u7387\u4e0d\u4f1a\u975e\u5e38\u4f4e\uff0c\u4e0d\u4f1a\u51fa\u73b0\u5185\u5b58\u98a0\u7c38\u7684\u60c5\u51b5\u3002\u56e0\u4e3a\u5927\u591a\u6570\u7a0b\u5e8f\u90fd\u6709\u4e00\u4e2a\u7279\u70b9\uff0c\u5c31\u662f \u5c40\u90e8\u6027 \u3002 \u5c40\u90e8\u6027\u5c31\u662f\u8bf4\u88ab\u5f15\u7528\u8fc7\u4e00\u6b21\u7684\u5b58\u50a8\u5668\u4f4d\u7f6e\uff0c\u5f88\u53ef\u80fd\u5728\u540e\u7eed\u518d\u88ab\u5f15\u7528\u591a\u6b21\uff1b\u800c\u4e14\u5728\u8be5\u4f4d\u7f6e\u9644\u8fd1\u7684\u5176\u4ed6\u4f4d\u7f6e\uff0c\u4e5f\u5f88\u53ef\u80fd\u4f1a\u5728\u540e\u7eed\u4e00\u6bb5\u65f6\u95f4\u5185\u88ab\u5f15\u7528\u3002 \u524d\u9762\u8bf4\u8fc7\u8ba1\u7b97\u673a\u5230\u5904\u4f7f\u7528\u4e00\u7ea7\u7ea7\u7684\u7f13\u5b58\u6765\u63d0\u5347\u6027\u80fd\uff0c\u5f52\u6839\u7ed3\u5e95\u5c31\u662f\u5229\u7528\u4e86\u5c40\u90e8\u6027\u7684\u7279\u5f81\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u7279\u6027\uff0c\u4e00\u7ea7\u7ea7\u7684\u7f13\u5b58\u4e0d\u4f1a\u6709\u90a3\u4e48\u5927\u7684\u4f5c\u7528\u3002\u6240\u4ee5\u4e00\u4e2a\u5c40\u90e8\u6027\u5f88\u597d\u7684\u7a0b\u5e8f\u8fd0\u884c\u901f\u5ea6\u4f1a\u66f4\u5feb\u3002","title":"\u5185\u5b58\u547d\u4e2d\u7387"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%B8%80%EF%BC%9A%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#cpu-cache","text":"\u968f\u7740\u6280\u672f\u53d1\u5c55\uff0cCPU \u7684\u8fd0\u7b97\u901f\u5ea6\u8d8a\u6765\u8d8a\u5feb\uff0c\u4f46\u5185\u5b58\u8bbf\u95ee\u7684\u901f\u5ea6\u5374\u4e00\u76f4\u6ca1\u4ec0\u4e48\u7a81\u7834\u3002\u6700\u7ec8\u5bfc\u81f4\u4e86 CPU \u8bbf\u95ee\u4e3b\u5b58\u5c31\u6210\u4e86\u6574\u4e2a\u673a\u5668\u7684\u6027\u80fd\u74f6\u9888\u3002CPU Cache \u7684\u51fa\u73b0\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728 CPU \u548c \u4e3b\u5b58\u4e4b\u95f4\u518d\u52a0\u4e86 Cache\uff0c\u7528\u6765\u7f13\u5b58\u4e00\u5757\u5185\u5b58\u4e2d\u7684\u6570\u636e\uff0c\u800c\u4e14\u8fd8\u4e0d\u53ea\u4e00\u4e2a\uff0c\u73b0\u4ee3\u8ba1\u7b97\u673a\u4e00\u822c\u90fd\u6709 3 \u7ea7 Cache\uff0c\u5176\u4e2d L1 Cache \u7684\u8bbf\u95ee\u901f\u5ea6\u548c\u5bc4\u5b58\u5668\u5dee\u4e0d\u591a\u3002 \u73b0\u5728\u8bbf\u95ee\u6570\u636e\u7684\u5927\u81f4\u7684\u987a\u5e8f\u662f CPU --> L1 Cache --> L2 Cache --> L3 Cache --> \u4e3b\u5b58 --> \u78c1\u76d8 \u3002\u4ece\u5de6\u5230\u53f3\uff0c\u8bbf\u95ee\u901f\u5ea6\u8d8a\u6765\u8d8a\u6162\uff0c\u7a7a\u95f4\u8d8a\u6765\u8d8a\u5927\uff0c\u5355\u4f4d\u7a7a\u95f4\uff08\u6bd4\u5982\u6bcf\u5b57\u8282\uff09\u7684\u4ef7\u683c\u8d8a\u6765\u8d8a\u4f4e\u3002 \u73b0\u5728\u5b58\u50a8\u5668\u7684\u6574\u4f53\u5c42\u6b21\u7ed3\u6784\u5927\u81f4\u5982\u4e0b\u56fe\uff1a \u5b58\u50a8\u5668\u5c42\u6b21\u7ed3\u6784 \u5728\u8fd9\u79cd\u67b6\u6784\u4e0b\uff0c\u7f13\u5b58\u7684\u547d\u4e2d\u7387\u5c31\u66f4\u52a0\u91cd\u8981\u4e86\uff0c\u56e0\u4e3a\u7cfb\u7edf\u4f1a\u5047\u5b9a\u6240\u6709\u7a0b\u5e8f\u90fd\u662f\u6709\u5c40\u90e8\u6027\u7279\u5f81\u7684\u3002\u5982\u679c\u67d0\u4e00\u7ea7\u51fa\u73b0\u4e86\u672a\u547d\u4e2d\uff0c\u4ed6\u5c31\u4f1a\u5c06\u8be5\u7ea7\u5b58\u50a8\u7684\u6570\u636e\u66f4\u65b0\u6210\u6700\u8fd1\u4f7f\u7528\u7684\u6570\u636e\u3002 \u4e3b\u5b58\u4e0e\u5b58\u50a8\u5668\u4e4b\u95f4\u4ee5 page\uff08\u901a\u5e38\u662f 4K\uff09 \u4e3a\u5355\u4f4d\u8fdb\u884c\u4ea4\u6362\uff0ccache \u4e0e \u4e3b\u5b58\u4e4b\u95f4\u662f\u4ee5 cache line\uff08\u901a\u5e38 64 byte\uff09 \u4e3a\u5355\u4f4d\u4ea4\u6362\u7684\u3002","title":"CPU Cache"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%B8%80%EF%BC%9A%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_7","text":"\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u9a8c\u8bc1\u4e0b\u547d\u4e2d\u7387\u7684\u95ee\u9898\uff0c\u4e0b\u9762\u7684\u51fd\u6570\u662f\u5faa\u73af\u4e00\u4e2a\u6570\u7ec4\u4e3a\u6bcf\u4e2a\u5143\u7d20\u8d4b\u503c\u3002 func Loop(nums []int, step int){ l :=len(nums) for i :=0; i < step; i++{ for j := i; j < l; j += step { nums[j]=4 } } } \u53c2\u6570 step \u4e3a 1 \u65f6\uff0c\u548c\u666e\u901a\u4e00\u5c42\u5faa\u73af\u4e00\u6837\u3002\u5047\u8bbe step \u4e3a 2 \uff0c\u5219\u6548\u679c\u5c31\u662f\u8df3\u8dc3\u5f0f\u904d\u5386\u6570\u7ec4\uff0c\u5982 1,3,5,7,9,2,4,6,8,10 \u8fd9\u6837\uff0cstep \u8d8a\u5927\uff0c\u8bbf\u95ee\u8de8\u5ea6\u4e5f\u5c31\u8d8a\u5927\uff0c\u7a0b\u5e8f\u7684\u5c40\u90e8\u6027\u4e5f\u5c31\u8d8a\u4e0d\u597d\u3002 \u4e0b\u9762\u662f nums \u957f\u5ea6\u4e3a 10000 \uff0c step = 1 \u548c step = 16 \u65f6\u7684\u538b\u6d4b\u7ed3\u679c\uff1a goos: darwin goarch: amd64 BenchmarkLoopStep1-43000005241 ns/op BenchmarkLoopStep16-410000022670 ns/op \u53ef\u4ee5\u770b\u51fa\uff0c2 \u79cd\u904d\u5386\u65b9\u5f0f\u4f1a\u51fa\u73b0 3 \u500d\u7684\u6027\u80fd\u5dee\u8ddd\u3002\u8fd9\u79cd\u95ee\u9898\u6700\u5bb9\u6613\u51fa\u73b0\u5728\u591a\u7ef4\u6570\u7ec4\u7684\u5904\u7406\u4e0a\uff0c\u6bd4\u5982\u904d\u5386\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u5f88\u5bb9\u6613\u5c31\u5199\u51fa\u5c40\u90e8\u6027\u5f88\u5dee\u7684\u4ee3\u7801\u3002","title":"\u4e3e\u4e2a\u4f8b\u5b50"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%B8%80%EF%BC%9A%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_8","text":"\u6700\u540e\u770b\u4e00\u4e0b\u7a0b\u5e8f\u7684\u5185\u5b58\u5e03\u5c40\u3002\u73b0\u5728\u6211\u4eec\u77e5\u9053\u4e86\u6bcf\u4e2a\u7a0b\u5e8f\u90fd\u6709\u81ea\u5df1\u4e00\u5957\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\u53ef\u4ee5\u4f7f\u7528\uff0c\u6bd4\u5982 0x0000 ~ 0xffff \uff0c\u4f46\u6211\u4eec\u5728\u7528\u9ad8\u7ea7\u8bed\u8a00\uff0c\u65e0\u8bba\u662f C \u8fd8\u662f Go \u5199\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u5f88\u5c11\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e9b\u5730\u5740\u3002\u6211\u4eec\u90fd\u662f\u901a\u8fc7\u53d8\u91cf\u540d\u6765\u8bbf\u95ee\u6570\u636e\u7684\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5c06\u6211\u4eec\u7684\u53d8\u91cf\u540d\u8f6c\u6362\u6210\u771f\u6b63\u7684\u865a\u62df\u5730\u5740\u3002 \u90a3\u6700\u7ec8\u7f16\u8bd1\u51fa\u6765\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u662f\u5982\u4f55\u88ab\u64cd\u4f5c\u7cfb\u7edf\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u5e76\u6267\u884c\u7684\u5462\uff1f \u5176\u5b9e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5df2\u7ecf\u5c06\u4e00\u6574\u5757\u5185\u5b58\u5212\u5206\u597d\u4e86\u533a\u57df\uff0c\u6bcf\u4e2a\u533a\u57df\u7528\u6765\u505a\u4e0d\u540c\u7684\u4e8b\u60c5\u3002\u5982\u56fe\uff1a \u5185\u5b58\u5e03\u5c40 text \u6bb5 \uff1a\u5b58\u50a8\u7a0b\u5e8f\u7684\u4e8c\u8fdb\u5236\u6307\u4ee4\uff0c\u53ca\u5176\u4ed6\u7684\u4e00\u4e9b\u9759\u6001\u5185\u5bb9 data \u6bb5 \uff1a\u7528\u6765\u5b58\u50a8\u5df2\u88ab\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u3002\u6bd4\u5982\u5e38\u91cf\uff08const\uff09\u3002 bss \u6bb5 \uff1a\u7528\u6765\u5b58\u653e\u672a\u88ab\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u3002\u548c .data \u6bb5\u4e00\u6837\u90fd\u5c5e\u4e8e\u9759\u6001\u5206\u914d\uff0c\u5728\u8fd9\u91cc\u9762\u7684\u53d8\u91cf\u6570\u636e\u5728\u7f16\u8bd1\u5c31\u786e\u5b9a\u4e86\u5927\u5c0f\uff0c\u4e0d\u91ca\u653e\u3002 stack \u6bb5 \uff1a\u6808\u7a7a\u95f4\uff0c\u4e3b\u8981\u7528\u4e8e\u51fd\u6570\u8c03\u7528\u65f6\u5b58\u50a8\u4e34\u65f6\u53d8\u91cf\u7684\u3002\u8fd9\u90e8\u5206\u7684\u5185\u5b58\u662f\u81ea\u52a8\u5206\u914d\u81ea\u52a8\u91ca\u653e\u7684\u3002 heap \u6bb5 \uff1a\u5806\u7a7a\u95f4\uff0c\u7528\u4e8e\u52a8\u6001\u5206\u914d\uff0cC \u8bed\u8a00\u4e2d malloc \u548c free \u64cd\u4f5c\u7684\u5185\u5b58\u5c31\u5728\u8fd9\u91cc\uff1bGo \u8bed\u8a00\u4e3b\u8981\u9760 GC \u81ea\u52a8\u7ba1\u7406\u8fd9\u90e8\u5206\u3002 \u5176\u5b9e\u73b0\u5728\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u8fdb\u7a0b\u5185\u90e8\u7684\u5185\u5b58\u533a\u57df\u6ca1\u8fd9\u4e48\u7b80\u5355\uff0c\u8981\u6bd4\u8fd9\u590d\u6742\u591a\u4e86\uff0c\u6bd4\u5982\u5185\u6838\u533a\u57df\uff0c\u5171\u4eab\u5e93\u533a\u57df\u3002\u56e0\u4e3a\u6211\u4eec\u4e0d\u662f\u8981\u771f\u7684\u5f00\u53d1\u4e00\u5957\u64cd\u4f5c\u7cfb\u7edf\uff0c\u7ec6\u8282\u53ef\u4ee5\u5ffd\u7565\u3002\u8fd9\u91cc\u53ea\u9700\u8981\u8bb0\u4f4f \u5806\u7a7a\u95f4 \u548c \u6808\u7a7a\u95f4 \u5373\u53ef\u3002 \u6808\u7a7a\u95f4 \u662f\u901a\u8fc7\u538b\u6808\u51fa\u6808\u65b9\u5f0f\u81ea\u52a8\u5206\u914d\u91ca\u653e\u7684\uff0c\u7531\u7cfb\u7edf\u7ba1\u7406\uff0c\u4f7f\u7528\u8d77\u6765\u9ad8\u6548\u65e0\u611f\u77e5\u3002 \u5806\u7a7a\u95f4 \u662f\u7528\u4ee5\u52a8\u6001\u5206\u914d\u7684\uff0c\u7531\u7a0b\u5e8f\u81ea\u5df1\u7ba1\u7406\u5206\u914d\u548c\u91ca\u653e\u3002Go \u8bed\u8a00\u867d\u7136\u53ef\u4ee5\u5e2e\u6211\u4eec\u81ea\u52a8\u7ba1\u7406\u5206\u914d\u548c\u91ca\u653e\uff0c\u4f46\u662f\u4ee3\u4ef7\u4e5f\u662f\u5f88\u9ad8\u7684\u3002","title":"\u7a0b\u5e8f\u7684\u5185\u5b58\u5e03\u5c40"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%B8%80%EF%BC%9A%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_9","text":"\u5c40\u90e8\u6027\u597d\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u63d0\u9ad8\u7f13\u5b58\u547d\u4e2d\u7387\uff0c\u8fd9\u5bf9\u5e95\u5c42\u7cfb\u7edf\u7684\u5185\u5b58\u7ba1\u7406\u662f\u5f88\u53cb\u597d\u7684\uff0c\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\u3002CPU Cache \u5c42\u9762\u7684\u4f4e\u547d\u4e2d\u7387\u5bfc\u81f4\u7684\u662f\u7a0b\u5e8f\u8fd0\u884c\u7f13\u6162\uff0c\u5185\u5b58\u5c42\u9762\u7684\u4f4e\u547d\u4e2d\u7387\u4f1a\u51fa\u73b0\u5185\u5b58\u98a0\u7c38\uff0c\u51fa\u73b0\u8fd9\u79cd\u73b0\u8c61\u65f6\u4f60\u7684\u670d\u52a1\u57fa\u672c\u4e0a\u5df2\u7ecf\u762b\u75ea\u4e86\u3002Go \u8bed\u8a00\u7684\u5185\u5b58\u7ba1\u7406\u662f\u53c2\u8003 tcmalloc \u5b9e\u73b0\u7684\uff0c\u5b83\u5176\u5b9e\u5c31\u662f\u5229\u7528\u597d\u4e86 OS \u7ba1\u7406\u5185\u5b58\u7684\u8fd9\u4e9b\u7279\u70b9\uff0c\u6765\u6700\u5927\u5316\u5185\u5b58\u5206\u914d\u6027\u80fd\u7684\u3002","title":"\u7ed3\u8bba"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%B8%80%EF%BC%9A%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_10","text":"1\u3001Go Memory Management 2\u3001\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b","title":"\u53c2\u8003"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/","text":"\u4ecb\u7ecd \u4e86\u89e3\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u5185\u5b58\u7684\u7ba1\u7406\u673a\u5236\u540e\uff0c\u73b0\u5728\u53ef\u4ee5\u53bb\u770b\u4e0b Go \u8bed\u8a00\u662f\u5982\u4f55\u5229\u7528\u5e95\u5c42\u7684\u8fd9\u4e9b\u7279\u6027\u6765\u4f18\u5316\u5185\u5b58\u7684\u3002Go \u7684\u5185\u5b58\u7ba1\u7406\u57fa\u672c\u4e0a\u53c2\u8003 tcmalloc \u6765\u5b9e\u73b0\u7684\uff0c\u53ea\u662f\u7ec6\u8282\u4e0a\u6839\u636e\u81ea\u8eab\u7684\u9700\u8981\u505a\u4e86\u4e00\u4e9b\u5c0f\u7684\u4f18\u5316\u8c03\u6574\u3002 Go \u7684\u5185\u5b58\u662f\u81ea\u52a8\u7ba1\u7406\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u968f\u610f\u5b9a\u4e49\u53d8\u91cf\u76f4\u63a5\u4f7f\u7528\uff0c\u4e0d\u9700\u8981\u8003\u8651\u53d8\u91cf\u80cc\u540e\u7684\u5185\u5b58\u7533\u8bf7\u548c\u91ca\u653e\u7684\u95ee\u9898\u3002\u672c\u6587\u610f\u5728\u641e\u6e05\u695a Go \u5728\u65b9\u9762\u5e2e\u6211\u4eec\u505a\u4e86\u4ec0\u4e48\uff0c\u4f7f\u6211\u4eec\u4e0d\u7528\u5173\u5fc3\u90a3\u4e9b\u590d\u6742\u5185\u5b58\u7684\u95ee\u9898\uff0c\u8fd8\u4f9d\u65e7\u80fd\u5199\u51fa\u8f83\u4e3a\u9ad8\u6548\u7684\u7a0b\u5e8f\u3002 \u672c\u7bc7\u53ea\u4ecb\u7ecd Go \u7684\u5185\u5b58\u7ba1\u7406\u6a21\u578b\uff0c\u4e0e\u5176\u76f8\u5173\u7684\u8fd8\u6709\u9003\u9038\u5206\u6790\u548c\u5783\u573e\u56de\u6536\u5185\u5bb9\u3002 \u6c60 \u7a0b\u5e8f\u52a8\u6001\u7533\u8bf7\u5185\u5b58\u7a7a\u95f4\uff0c\u662f\u8981\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528\u7684\uff0c\u6bd4\u5982 Linux \u7cfb\u7edf\u4e0a\u662f\u8c03\u7528 mmap \u65b9\u6cd5\u5b9e\u73b0\u7684\u3002\u4f46\u5bf9\u4e8e\u5927\u578b\u7cfb\u7edf\u670d\u52a1\u6765\u8bf4\uff0c\u76f4\u63a5\u8c03\u7528 mmap \u7533\u8bf7\u5185\u5b58\uff0c\u4f1a\u6709\u4e00\u5b9a\u7684\u4ee3\u4ef7\u3002\u6bd4\u5982\uff1a 1\u3001\u7cfb\u7edf\u8c03\u7528\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u8fdb\u5165\u5185\u6838\u6001\uff0c\u5185\u6838\u5206\u914d\u5b8c\u5185\u5b58\u540e\uff08\u4e5f\u5c31\u662f\u4e0a\u7bc7\u6240\u8bb2\u7684\uff0c\u5bf9\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u8fdb\u884c\u6620\u5c04\u7b49\u64cd\u4f5c\uff09\uff0c\u518d\u8fd4\u56de\u5230\u7528\u6237\u6001\u3002 2\u3001\u9891\u7e41\u7533\u8bf7\u5f88\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5bb9\u6613\u51fa\u73b0\u5927\u91cf\u5185\u5b58\u788e\u7247\uff0c\u589e\u5927\u64cd\u4f5c\u7cfb\u7edf\u6574\u7406\u788e\u7247\u7684\u538b\u529b\u3002 3\u3001\u4e3a\u4e86\u4fdd\u8bc1\u5185\u5b58\u8bbf\u95ee\u5177\u6709\u826f\u597d\u7684\u5c40\u90e8\u6027\uff0c\u5f00\u53d1\u8005\u9700\u8981\u6295\u5165\u5927\u91cf\u7684\u7cbe\u529b\u53bb\u505a\u4f18\u5316\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u91cd\u7684\u8d1f\u62c5\u3002 \u5982\u4f55\u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898\u5462\uff1f\u6709\u7ecf\u9a8c\u7684\u4eba\uff0c\u53ef\u80fd\u5f88\u5feb\u5c31\u60f3\u5230\u89e3\u51b3\u65b9\u6848\uff0c\u90a3\u5c31\u662f\u6211\u4eec\u5e38\u8bf4\u7684 \u5bf9\u8c61\u6c60 \uff08\u4e5f\u53ef\u4ee5\u8bf4\u662f\u7f13\u5b58\uff09\u3002 \u5047\u8bbe\u7cfb\u7edf\u9700\u8981\u9891\u7e41\u52a8\u6001\u7533\u8bf7\u5185\u5b58\u6765\u5b58\u653e\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u6bd4\u5982 [10]int \u3002\u90a3\u4e48\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5728\u7a0b\u5e8f\u542f\u52a8\u4e4b\u521d\uff0c\u4e00\u6b21\u6027\u7533\u8bf7\u51e0\u767e\u751a\u81f3\u4e0a\u5343\u4e2a [10]int \u3002\u8fd9\u6837\u5b8c\u7f8e\u7684\u89e3\u51b3\u4e86\u4e0a\u9762\u9047\u5230\u7684\u95ee\u9898\uff1a 1\u3001\u4e0d\u9700\u8981\u9891\u7e41\u7533\u8bf7\u5185\u5b58\u4e86\uff0c\u800c\u662f\u4ece\u5bf9\u8c61\u6c60\u91cc\u62ff\uff0c\u7a0b\u5e8f\u4e0d\u4f1a\u9891\u7e41\u8fdb\u5165\u5185\u6838\u6001 2\u3001\u56e0\u4e3a\u4e00\u6b21\u6027\u7533\u8bf7\u4e00\u4e2a\u8fde\u7eed\u7684\u5927\u7a7a\u95f4\uff0c\u5bf9\u8c61\u6c60\u4f1a\u88ab\u91cd\u590d\u5229\u7528\uff0c\u4e0d\u4f1a\u51fa\u73b0\u788e\u7247\u3002 3\u3001\u7a0b\u5e8f\u9891\u7e41\u8bbf\u95ee\u7684\u5c31\u662f\u5bf9\u8c61\u6c60\u80cc\u540e\u7684\u540c\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u5c40\u90e8\u6027\u826f\u597d\u3002 \u8fd9\u6837\u505a\u4f1a\u9020\u6210\u4e00\u5b9a\u7684\u5185\u5b58\u6d6a\u8d39\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u65f6\u68c0\u6d4b\u5bf9\u8c61\u6c60\u7684\u5927\u5c0f\uff0c\u4fdd\u8bc1\u53ef\u7528\u5bf9\u8c61\u7684\u6570\u91cf\u5728\u4e00\u4e2a\u5408\u7406\u7684\u8303\u56f4\uff0c\u5c11\u4e86\u5c31\u63d0\u524d\u7533\u8bf7\uff0c\u591a\u4e86\u5c31\u81ea\u52a8\u91ca\u653e\u3002 \u5982\u679c\u67d0\u79cd\u8d44\u6e90\u7684\u7533\u8bf7\u548c\u56de\u6536\u662f\u6602\u8d35\u7684\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u901a\u8fc7\u5efa\u7acb\u8d44\u6e90\u6c60\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\uff0c\u5176\u4ed6\u6bd4\u5982 \u8fde\u63a5\u6c60\uff0c\u5185\u5b58\u6c60 \u7b49\u7b49\uff0c\u90fd\u662f\u4e00\u4e2a\u601d\u8def\u3002 Golang \u5185\u5b58\u7ba1\u7406 Golang \u7684\u5185\u5b58\u7ba1\u7406\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u5185\u5b58\u6c60\uff0c\u53ea\u4e0d\u8fc7\u5185\u90e8\u505a\u4e86\u5f88\u591a\u7684\u4f18\u5316\u3002\u6bd4\u5982\u81ea\u52a8\u4f38\u7f29\u5185\u5b58\u6c60\u5927\u5c0f\uff0c\u5408\u7406\u7684\u5207\u5272\u5185\u5b58\u5757\u7b49\u7b49\u3002 \u5185\u5b58\u6c60 mheap Golang \u7684\u7a0b\u5e8f\u5728\u542f\u52a8\u4e4b\u521d\uff0c\u4f1a\u4e00\u6b21\u6027\u4ece\u64cd\u4f5c\u7cfb\u7edf\u90a3\u91cc\u7533\u8bf7\u4e00\u5927\u5757\u5185\u5b58\u4f5c\u4e3a\u5185\u5b58\u6c60\u3002\u8fd9\u5757\u5185\u5b58\u7a7a\u95f4\u4f1a\u653e\u5728\u4e00\u4e2a\u53eb mheap \u7684 struct \u4e2d\u7ba1\u7406\uff0cmheap \u8d1f\u8d23\u5c06\u8fd9\u4e00\u6574\u5757\u5185\u5b58\u5207\u5272\u6210\u4e0d\u540c\u7684\u533a\u57df\uff0c\u5e76\u5c06\u5176\u4e2d\u4e00\u90e8\u5206\u7684\u5185\u5b58\u5207\u5272\u6210\u5408\u9002\u7684\u5927\u5c0f\uff0c\u5206\u914d\u7ed9\u7528\u6237\u4f7f\u7528\u3002 \u6211\u4eec\u9700\u8981\u5148\u77e5\u9053\u51e0\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff1a page : \u5185\u5b58\u9875\uff0c\u4e00\u5757 8K \u5927\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4\u3002Go \u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u7684\u5185\u5b58\u7533\u8bf7\u548c\u91ca\u653e\uff0c\u90fd\u662f\u4ee5 page \u4e3a\u5355\u4f4d\u7684\u3002 span : \u5185\u5b58\u5757\uff0c\u4e00\u4e2a\u6216\u591a\u4e2a\u8fde\u7eed\u7684 page \u7ec4\u6210\u4e00\u4e2a span \u3002\u5982\u679c\u628a page \u6bd4\u55bb\u6210\u5de5\u4eba\uff0c span \u53ef\u770b\u6210\u662f\u5c0f\u961f\uff0c\u5de5\u4eba\u88ab\u5206\u6210\u82e5\u5e72\u4e2a\u961f\u4f0d\uff0c\u4e0d\u540c\u7684\u961f\u4f0d\u5e72\u4e0d\u540c\u7684\u6d3b\u3002 sizeclass : \u7a7a\u95f4\u89c4\u683c\uff0c\u6bcf\u4e2a span \u90fd\u5e26\u6709\u4e00\u4e2a sizeclass \uff0c\u6807\u8bb0\u7740\u8be5 span \u4e2d\u7684 page \u5e94\u8be5\u5982\u4f55\u4f7f\u7528\u3002\u4f7f\u7528\u4e0a\u9762\u7684\u6bd4\u55bb\uff0c\u5c31\u662f sizeclass \u6807\u5fd7\u7740 span \u662f\u4e00\u4e2a\u4ec0\u4e48\u6837\u7684\u961f\u4f0d\u3002 object : \u5bf9\u8c61\uff0c\u7528\u6765\u5b58\u50a8\u4e00\u4e2a\u53d8\u91cf\u6570\u636e\u5185\u5b58\u7a7a\u95f4\uff0c\u4e00\u4e2a span \u5728\u521d\u59cb\u5316\u65f6\uff0c\u4f1a\u88ab\u5207\u5272\u6210\u4e00\u5806\u7b49\u5927\u7684 object \u3002\u5047\u8bbe object \u7684\u5927\u5c0f\u662f 16B \uff0c span \u5927\u5c0f\u662f 8K \uff0c\u90a3\u4e48\u5c31\u4f1a\u628a span \u4e2d\u7684 page \u5c31\u4f1a\u88ab\u521d\u59cb\u5316 8K / 16B = 512 \u4e2a object \u3002\u6240\u8c13\u5185\u5b58\u5206\u914d\uff0c\u5c31\u662f\u5206\u914d\u4e00\u4e2a object \u51fa\u53bb\u3002 \u793a\u610f\u56fe\uff1a \u4e0a\u56fe\u4e2d\uff0c\u4e0d\u540c\u989c\u8272\u4ee3\u8868\u4e0d\u540c\u7684 span \uff0c\u4e0d\u540c span \u7684 sizeclass \u4e0d\u540c\uff0c\u8868\u793a\u91cc\u9762\u7684 page \u5c06\u4f1a\u6309\u7167\u4e0d\u540c\u7684\u89c4\u683c\u5207\u5272\u6210\u4e00\u4e2a\u4e2a\u7b49\u5927\u7684 object \u7528\u4f5c\u5206\u914d\u3002 \u4f7f\u7528 Go1.11.5 \u7248\u672c\u6d4b\u8bd5\u4e86\u4e0b\u521d\u59cb\u5806\u5185\u5b58\u5e94\u8be5\u662f 64M \u5de6\u53f3\uff0c\u4f4e\u7248\u672c\u4f1a\u5c11\u70b9\u3002 \u6d4b\u8bd5\u4ee3\u7801\uff1a package main import \"runtime\" var stat runtime.MemStats func main(){ runtime.ReadMemStats(&stat) println(stat.HeapSys) } \u5185\u90e8\u7684\u6574\u4f53\u5185\u5b58\u5e03\u5c40\u5982\u4e0b\u56fe\u6240\u793a\uff1a mheap.spans \uff1a\u7528\u6765\u5b58\u50a8 page \u548c span \u4fe1\u606f\uff0c\u6bd4\u5982\u4e00\u4e2a span \u7684\u8d77\u59cb\u5730\u5740\u662f\u591a\u5c11\uff0c\u6709\u51e0\u4e2a page\uff0c\u5df2\u4f7f\u7528\u4e86\u591a\u5927\u7b49\u7b49\u3002 mheap.bitmap \u5b58\u50a8\u7740\u5404\u4e2a span \u4e2d\u5bf9\u8c61\u7684\u6807\u8bb0\u4fe1\u606f\uff0c\u6bd4\u5982\u5bf9\u8c61\u662f\u5426\u53ef\u56de\u6536\u7b49\u7b49\u3002 mheap.arena_start : \u5c06\u8981\u5206\u914d\u7ed9\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684\u7a7a\u95f4\u3002 \u518d\u8bf4\u660e\u4e0b\uff0c\u56fe\u4e2d\u7684\u7a7a\u95f4\u5927\u5c0f\uff0c\u662f Go \u5411\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u7684\u865a\u62df\u5185\u5b58\u5730\u5740\u7a7a\u95f4\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u8be5\u6bb5\u5730\u5740\u7a7a\u95f4\u9884\u7559\u51fa\u6765\u4e0d\u505a\u5b83\u7528\uff1b\u800c\u4e0d\u662f\u771f\u7684\u521b\u5efa\u51fa\u8fd9\u4e48\u5927\u7684\u865a\u62df\u5185\u5b58\uff0c\u5728\u9875\u8868\u4e2d\u521b\u5efa\u51fa\u8fd9\u4e48\u5927\u7684\u6620\u5c04\u5173\u7cfb\u3002 mcentral \u7528\u9014\u76f8\u540c \u7684 span \u4f1a\u4ee5\u94fe\u8868\u7684\u5f62\u5f0f\u7ec4\u7ec7\u5728\u4e00\u8d77\u3002 \u8fd9\u91cc\u7684\u7528\u9014\u7528 sizeclass \u6765\u8868\u793a\uff0c\u5c31\u662f\u6307\u8be5 span \u7528\u6765\u5b58\u50a8\u54ea\u79cd\u5927\u5c0f\u7684\u5bf9\u8c61\u3002\u6bd4\u5982\u5f53\u5206\u914d\u4e00\u5757\u5927\u5c0f\u4e3a n \u7684\u5185\u5b58\u65f6\uff0c\u7cfb\u7edf\u8ba1\u7b97 n \u5e94\u8be5\u4f7f\u7528\u54ea\u79cd sizeclass \uff0c\u7136\u540e\u6839\u636e sizeclass \u7684\u503c\u53bb\u627e\u5230\u4e00\u4e2a\u53ef\u7528\u7684 span \u6765\u7528\u4f5c\u5206\u914d\u3002\u5176\u4e2d sizeclass \u4e00\u5171\u6709 67 \u79cd\uff08Go1.5 \u7248\u672c\uff0c\u540e\u7eed\u7248\u672c\u53ef\u80fd\u4f1a\u4e0d\u4f1a\u6539\u53d8\u4e0d\u597d\u8bf4\uff09\uff0c\u5982\u56fe\u6240\u793a\uff1a \u627e\u5230\u5408\u9002\u7684 span \u540e\uff0c\u4f1a\u4ece\u4e2d\u53d6\u4e00\u4e2a object \u8fd4\u56de\u7ed9\u4e0a\u5c42\u4f7f\u7528\u3002\u8fd9\u4e9b span \u88ab\u653e\u5728\u4e00\u4e2a\u53eb\u505a mcentral \u7684\u7ed3\u6784\u4e2d\u7ba1\u7406\u3002 mheap \u5c06\u4ece OS \u90a3\u91cc\u7533\u8bf7\u8fc7\u6765\u7684\u5185\u5b58\u521d\u59cb\u5316\u6210\u4e00\u4e2a\u5927 span (sizeclass=0)\u3002\u7136\u540e\u6839\u636e\u9700\u8981\u4ece\u8fd9\u4e2a\u5927 span \u4e2d\u5207\u51fa\u5c0f span \uff0c\u653e\u5728 mcentral \u4e2d\u6765\u7ba1\u7406\u3002\u5927 span \u7531 mheap.freelarge \u548c mheap.busylarge \u7b49\u7ba1\u7406\u3002\u5982\u679c mcentral \u4e2d\u7684 span \u4e0d\u591f\u7528\u4e86\uff0c\u4f1a\u4ece mheap.freelarge \u4e0a\u518d\u5207\u4e00\u5757\uff0c\u5982\u679c mheap.freelarge \u7a7a\u95f4\u4e0d\u591f\uff0c\u4f1a\u518d\u6b21\u4ece OS \u90a3\u91cc\u7533\u8bf7\u5185\u5b58\u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\u3002\u4e0b\u9762\u662f mheap \u548c mcentral \u7684\u6570\u636e\u7ed3\u6784\uff1a type mheap struct { // other fields lock mutex free [_MaxMHeapList]mspan // free lists of given length\uff0c 1M \u4ee5\u4e0b freelarge mspan // free lists length >= _MaxMHeapList, >= 1M busy [_MaxMHeapList]mspan // busy lists of large objects of given length busylarge mspan // busy lists of large objects length >= _MaxMHeapList central [_NumSizeClasses]struct {// _NumSizeClasses = 67 \u200b mcentral mcentral // other fields } // other fields } // Central list of free objects of a given size. type mcentral struct { lock mutex // \u5206\u914d\u65f6\u9700\u8981\u52a0\u9501 sizeclass int32 // \u54ea\u79cd sizeclass nonempty mspan // \u8fd8\u6709\u53ef\u7528\u7684\u7a7a\u95f4\u7684 span \u94fe\u8868 empty mspan // \u6ca1\u6709\u53ef\u7528\u7684\u7a7a\u95f4\u7684 span \u5217\u8868 } \u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u907f\u514d\u51fa\u73b0\u5916\u90e8\u788e\u7247\uff08\u6587\u7ae0\u6700\u540e\u9762\u6709\u5916\u90e8\u788e\u7247\u7684\u4ecb\u7ecd\uff09\uff0c\u56e0\u4e3a\u540c\u4e00\u4e2a span \u662f\u6309\u7167\u56fa\u5b9a\u5927\u5c0f\u5206\u914d\u548c\u56de\u6536\u7684\uff0c\u4e0d\u4f1a\u51fa\u73b0\u4e0d\u53ef\u5229\u7528\u7684\u4e00\u5c0f\u5757\u5185\u5b58\u628a\u5185\u5b58\u5206\u5272\u6389\u3002\u8fd9\u4e2a\u8bbe\u8ba1\u65b9\u5f0f\u4e0e\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4f19\u4f34\u7cfb\u7edf\u6709\u70b9\u7c7b\u4f3c\u3002 mcache \u5982\u679c\u4f60\u9605\u8bfb\u7684\u6bd4\u8f83\u4ed4\u7ec6\uff0c\u4f1a\u53d1\u73b0\u4e0a\u9762\u7684 mcentral \u7ed3\u6784\u4e2d\u6709\u4e00\u4e2a lock \u5b57\u6bb5\uff1b\u56e0\u4e3a\u5e76\u53d1\u60c5\u51b5\u4e0b\uff0c\u5f88\u6709\u53ef\u80fd\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u4ece mcentral \u90a3\u91cc\u7533\u8bf7\u5185\u5b58\u7684\uff0c\u5fc5\u987b\u8981\u7528\u9501\u6765\u907f\u514d\u51b2\u7a81\u3002 \u4f46\u9501\u662f\u4f4e\u6548\u7684\uff0c\u5728\u9ad8\u5e76\u53d1\u7684\u670d\u52a1\u4e2d\uff0c\u5b83\u4f1a\u4f7f\u5185\u5b58\u7533\u8bf7\u6210\u4e3a\u6574\u4e2a\u7cfb\u7edf\u7684\u74f6\u9888\uff1b\u6240\u4ee5\u5728 mcentral \u7684\u524d\u9762\u53c8\u589e\u52a0\u4e86\u4e00\u5c42 mcache\u3002 \u6bcf\u4e00\u4e2a mcache \u548c\u6bcf\u4e00\u4e2a\u5904\u7406\u5668(P) \u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e00\u4e2a P \u90fd\u6709\u4e00\u4e2a mcache \u6210\u5458\u3002 Goroutine \u7533\u8bf7\u5185\u5b58\u65f6\uff0c\u9996\u5148\u4ece\u5176\u6240\u5728\u7684 P \u7684 mcache \u4e2d\u5206\u914d\uff0c\u5982\u679c mcache \u6ca1\u6709\u53ef\u7528 span \uff0c\u518d\u4ece mcentral \u4e2d\u83b7\u53d6\uff0c\u5e76\u586b\u5145\u5230 mcache \u4e2d\u3002 \u4ece mcache \u4e0a\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u662f\u4e0d\u9700\u8981\u52a0\u9501\u7684\uff0c\u56e0\u4e3a\u5728\u540c\u4e00\u65f6\u95f4\u91cc\uff0c\u4e00\u4e2a P \u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u5176\u4e0a\u9762\u8fd0\u884c\uff0c\u4e0d\u53ef\u80fd\u51fa\u73b0\u7ade\u4e89\u3002\u6ca1\u6709\u4e86\u9501\u7684\u9650\u5236\uff0c\u5927\u5927\u52a0\u901f\u4e86\u5185\u5b58\u5206\u914d\u3002 \u6240\u4ee5\u6574\u4f53\u7684\u5185\u5b58\u5206\u914d\u6a21\u578b\u5927\u81f4\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5176\u4ed6\u4f18\u5316 zero size \u6709\u4e00\u4e9b\u5bf9\u8c61\u6240\u9700\u7684\u5185\u5b58\u5927\u5c0f\u662f0\uff0c\u6bd4\u5982 [0]int, struct{}\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u6570\u636e\u6839\u672c\u5c31\u4e0d\u9700\u8981\u5185\u5b58\uff0c\u6240\u4ee5\u6ca1\u5fc5\u8981\u8d70\u4e0a\u9762\u90a3\u4e48\u590d\u6742\u7684\u903b\u8f91\u3002 \u7cfb\u7edf\u4f1a\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u56fa\u5b9a\u7684\u5185\u5b58\u5730\u5740\u3002\u6e90\u7801\u5982\u4e0b\uff1a func mallocgc(size uintptr, typ *_type, flags uint32) unsafe.Pointer { // \u7533\u8bf7\u7684 0 \u5927\u5c0f\u7a7a\u95f4\u7684\u5185\u5b58 if size ==0{ return unsafe.Pointer(&zerobase) } //..... } \u6d4b\u8bd5\u4ee3\u7801\uff1a package main import( \"fmt\" ) func main(){ var( a struct{} b [0]int c [100]struct{} d =make([]struct{},1024) ) fmt.Printf(\"%p\\n\",&a) fmt.Printf(\"%p\\n\",&b) fmt.Printf(\"%p\\n\",&c) fmt.Printf(\"%p\\n\",&(d[0])) fmt.Printf(\"%p\\n\",&(d[1])) fmt.Printf(\"%p\\n\",&(d[1000])) } 21// \u8fd0\u884c\u7ed3\u679c\uff0c6 \u4e2a\u53d8\u91cf\u7684\u5185\u5b58\u5730\u5740\u662f\u76f8\u540c\u7684: 220x1180f88 230x1180f88 240x1180f88 250x1180f88 260x1180f88 270x1180f88 Tiny\u5bf9\u8c61 \u4e0a\u9762\u63d0\u5230\u7684 sizeclass=1 \u7684 span\uff0c\u7528\u6765\u7ed9 <= 8B \u7684\u5bf9\u8c61\u4f7f\u7528\uff0c\u6240\u4ee5\u50cf int32 , byte , bool \u4ee5\u53ca\u5c0f\u5b57\u7b26\u4e32\u7b49\u5e38\u7528\u7684\u5fae\u5c0f\u5bf9\u8c61\uff0c\u90fd\u4f1a\u4f7f\u7528 sizeclass=1 \u7684 span\uff0c\u4f46\u5206\u914d\u7ed9\u4ed6\u4eec 8B \u7684\u7a7a\u95f4\uff0c\u5927\u90e8\u5206\u662f\u7528\u4e0d\u4e0a\u7684\u3002\u5e76\u4e14\u8fd9\u4e9b\u7c7b\u578b\u4f7f\u7528\u9891\u7387\u975e\u5e38\u9ad8\uff0c\u5c31\u4f1a\u5bfc\u81f4\u51fa\u73b0\u5927\u91cf\u7684\u5185\u90e8\u788e\u7247\u3002 \u6240\u4ee5 Go \u5c3d\u91cf\u4e0d\u4f7f\u7528 sizeclass=1 \u7684 span\uff0c \u800c\u662f\u5c06 < 16B \u7684\u5bf9\u8c61\u4e3a\u7edf\u4e00\u89c6\u4e3a tiny \u5bf9\u8c61(tinysize)\u3002\u5206\u914d\u65f6\uff0c\u4ece sizeclass=2 \u7684 span \u4e2d\u83b7\u53d6\u4e00\u4e2a 16B \u7684 object \u7528\u4ee5\u5206\u914d\u3002\u5982\u679c\u5b58\u50a8\u7684\u5bf9\u8c61\u5c0f\u4e8e 16B \uff0c\u8fd9\u4e2a\u7a7a\u95f4\u4f1a\u88ab\u6682\u65f6\u4fdd\u5b58\u8d77\u6765 (mcache.tiny \u5b57\u6bb5)\uff0c\u4e0b\u6b21\u5206\u914d\u65f6\u4f1a\u590d\u7528\u8fd9\u4e2a\u7a7a\u95f4\uff0c\u76f4\u5230\u8fd9\u4e2a object \u7528\u5b8c\u4e3a\u6b62\u3002 \u5982\u56fe\u6240\u793a\uff1a \u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff0c\u8fd9\u6837\u7684\u65b9\u5f0f\u7a7a\u95f4\u5229\u7528\u7387\u662f (1+2+8) / 16 * 100% = 68.75% \uff0c\u800c\u5982\u679c\u6309\u7167\u539f\u59cb\u7684\u7ba1\u7406\u65b9\u5f0f\uff0c\u5229\u7528\u7387\u662f (1+2+8) / (8 * 3) = 45.83% \u3002 \u6e90\u7801\u4e2d\u6ce8\u91ca\u63cf\u8ff0\uff0c\u8bf4\u662f\u5bf9 tiny \u5bf9\u8c61\u7684\u7279\u6b8a\u5904\u7406\uff0c\u5e73\u5747\u4f1a\u8282\u7701 20% \u5de6\u53f3\u7684\u5185\u5b58\u3002 \u5982\u679c\u8981\u5b58\u50a8\u7684\u6570\u636e\u91cc\u6709\u6307\u9488\uff0c\u5373\u4f7f <= 8B \u4e5f\u4e0d\u4f1a\u4f5c\u4e3a tiny \u5bf9\u8c61\u5bf9\u5f85\uff0c\u800c\u662f\u6b63\u5e38\u4f7f\u7528 sizeclass=1 \u7684 span \u3002 \u5927\u5bf9\u8c61 \u5982\u4e0a\u9762\u6240\u8ff0\uff0c\u6700\u5927\u7684 sizeclass \u6700\u5927\u53ea\u80fd\u5b58\u653e 32K \u7684\u5bf9\u8c61\u3002\u5982\u679c\u4e00\u6b21\u6027\u7533\u8bf7\u8d85\u8fc7 32K \u7684\u5185\u5b58\uff0c\u7cfb\u7edf\u4f1a\u76f4\u63a5\u7ed5\u8fc7 mcache \u548c mcentral\uff0c\u76f4\u63a5\u4ece mheap \u4e0a\u83b7\u53d6\uff0cmheap \u4e2d\u6709\u4e00\u4e2a freelarge \u5b57\u6bb5\u7ba1\u7406\u7740\u8d85\u5927 span\u3002 \u603b\u7ed3 \u5185\u5b58\u7684\u91ca\u653e\u8fc7\u7a0b\uff0c\u6ca1\u4ec0\u4e48\u7279\u522b\u4e4b\u5904\u3002\u5c31\u662f\u5206\u914d\u7684\u8fd4\u8fc7\u7a0b\uff0c\u5f53 mcache \u4e2d\u5b58\u5728\u8f83\u591a\u7a7a\u95f2 span \u65f6\uff0c\u4f1a\u5f52\u8fd8\u7ed9 mcentral\uff1b\u800c mcentral \u4e2d\u5b58\u5728\u8f83\u591a\u7a7a\u95f2 span \u65f6\uff0c\u4f1a\u5f52\u8fd8\u7ed9 mheap\uff1bmheap \u518d\u5f52\u8fd8\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u3002\u8fd9\u91cc\u5c31\u4e0d\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u3002 \u603b\u7ed3\u4e00\u4e0b\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u4e4b\u6240\u4ee5\u5feb\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u4f18\u52bf\uff1a 1\u3001\u5185\u5b58\u5206\u914d\u5927\u591a\u65f6\u5019\u90fd\u662f\u5728\u7528\u6237\u6001\u5b8c\u6210\u7684\uff0c\u4e0d\u9700\u8981\u9891\u7e41\u8fdb\u5165\u5185\u6838\u6001\u3002 2\u3001\u6bcf\u4e2a P \u90fd\u6709\u72ec\u7acb\u7684 span cache\uff0c\u591a\u4e2a CPU \u4e0d\u4f1a\u5e76\u53d1\u8bfb\u5199\u540c\u4e00\u5757\u5185\u5b58\uff0c\u8fdb\u800c\u51cf\u5c11 CPU L1 cache \u7684 cacheline \u51fa\u73b0 dirty \u60c5\u51b5\uff0c\u589e\u5927 cpu cache \u547d\u4e2d\u7387\u3002 3\u3001\u5185\u5b58\u788e\u7247\u7684\u95ee\u9898\uff0cGo \u662f\u81ea\u5df1\u5728\u7528\u6237\u6001\u7ba1\u7406\u7684\uff0c\u5728 OS \u5c42\u9762\u770b\u662f\u6ca1\u6709\u788e\u7247\u7684\uff0c\u4f7f\u5f97\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u5bf9\u788e\u7247\u7684\u7ba1\u7406\u538b\u529b\u4e5f\u4f1a\u964d\u4f4e\u3002 4\u3001mcache \u7684\u5b58\u5728\u4f7f\u5f97\u5185\u5b58\u5206\u914d\u4e0d\u9700\u8981\u52a0\u9501\u3002 \u5f53\u7136\u8fd9\u4e0d\u662f\u6ca1\u6709\u4ee3\u4ef7\u7684\uff0cGo \u9700\u8981\u9884\u7533\u8bf7\u5927\u5757\u5185\u5b58\uff0c\u8fd9\u5fc5\u7136\u4f1a\u51fa\u73b0\u4e00\u5b9a\u7684\u6d6a\u8d39\uff0c\u4e0d\u8fc7\u597d\u5728\u73b0\u5728\u5185\u5b58\u6bd4\u8f83\u5ec9\u4ef7\uff0c\u4e0d\u7528\u592a\u5728\u610f\u3002 \u603b\u4f53\u4e0a\u6765\u770b\uff0cGo \u5185\u5b58\u7ba1\u7406\u4e5f\u662f\u4e00\u4e2a\u91d1\u5b57\u5854\u7ed3\u6784\uff1a \u8fd9\u79cd\u8bbe\u8ba1\u6bd4\u8f83\u901a\u7528\uff0c\u6bd4\u5982\u73b0\u5728\u5e38\u89c1\u7684 web \u670d\u52a1\u8bbe\u8ba1\uff0c\u4e3a\u63d0\u5347\u7cfb\u7edf\u6027\u80fd\uff0c\u4e00\u822c\u90fd\u4f1a\u8bbe\u8ba1\u6210 \u5ba2\u6237\u7aef cache -> \u670d\u52a1\u7aef cache -> \u670d\u52a1\u7aef db \u8fd9\u51e0\u5c42\uff08\u5f53\u7136\u4e5f\u53ef\u80fd\u4f1a\u52a0\u5165\u66f4\u591a\u5c42\uff09\uff0c\u4e5f\u662f\u91d1\u5b57\u5854\u7ed3\u6784\u3002 \u5c06\u6709\u9650\u7684\u8ba1\u7b97\u8d44\u6e90\u5e03\u5c40\u6210\u91d1\u5b57\u5854\u7ed3\u6784\uff0c\u518d\u5c06\u6570\u636e\u4ece\u70ed\u5230\u51b7\u5206\u4e3a\u51e0\u4e2a\u5c42\u7ea7\uff0c\u653e\u7f6e\u5728\u91d1\u5b57\u5854\u7ed3\u6784\u4e0a\u3002\u8c03\u5ea6\u5668\u4e0d\u65ad\u505a\u8c03\u6574\uff0c\u5c06\u70ed\u6570\u636e\u653e\u5728\u91d1\u5b57\u5854\u9876\u5c42\uff0c\u51b7\u6570\u636e\u653e\u5728\u91d1\u5b57\u5854\u5e95\u5c42\u3002 \u8fd9\u79cd\u8bbe\u8ba1\u5229\u7528\u4e86\u8ba1\u7b97\u7684\u5c40\u90e8\u6027\u7279\u5f81\uff0c\u8ba4\u4e3a\u51b7\u70ed\u6570\u636e\u7684\u4ea4\u66ff\u662f\u7f13\u6162\u7684\u3002\u6240\u4ee5\u6700\u6015\u7684\u5c31\u662f\uff0c\u6570\u636e\u8bbf\u95ee\u51fa\u73b0\u51b7\u70ed\u9aa4\u53d8\u3002\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u6211\u4eec\u79f0\u8fd9\u79cd\u73b0\u8c61\u4e3a\u5185\u5b58\u98a0\u7c38\uff0c\u7cfb\u7edf\u67b6\u6784\u4e0a\u901a\u5e38\u88ab\u8bf4\u6210\u662f\u7f13\u5b58\u7a7f\u900f\u3002\u5176\u5b9e\u90fd\u662f\u4e00\u4e2a\u610f\u601d\uff0c\u5c31\u662f\u8fc7\u5ea6\u7684\u4f7f\u7528\u4e86\u91d1\u5b57\u5854\u4f4e\u7aef\u7684\u8d44\u6e90\u3002 \u8fd9\u5957\u5185\u90e8\u673a\u5236\uff0c\u4f7f\u5f97\u5f00\u53d1\u9ad8\u6027\u80fd\u670d\u52a1\u5bb9\u6613\u5f88\u591a\uff0c\u901a\u4fd7\u6765\u8bb2\u5c31\u662f\u5751\u5c11\u4e86\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\u4f60\u968f\u4fbf\u5199\u5199\u6027\u80fd\u90fd\u4e0d\u4f1a\u592a\u5dee\u3002\u6211\u9047\u5230\u8fc7\u7684\u5bfc\u81f4\u5185\u5b58\u5206\u914d\u51fa\u73b0\u538b\u529b\u7684\u4e3b\u8981\u6709 2 \u4e2d\u60c5\u51b5\uff1a 1\u3001\u9891\u7e41\u7533\u8bf7\u5927\u5bf9\u8c61\uff0c\u5e38\u89c1\u4e8e\u6587\u672c\u5904\u7406\uff0c\u6bd4\u5982\u5199\u4e00\u4e2a\u6d77\u91cf\u65e5\u5fd7\u5206\u6790\u7684\u670d\u52a1\uff0c\u5f88\u591a\u65e5\u5fd7\u5185\u5bb9\u90fd\u5f88\u957f\u3002\u8fd9\u79cd\u60c5\u51b5\u5efa\u8bae\u81ea\u5df1\u7ef4\u62a4\u4e00\u4e2a\u5bf9\u8c61([]byte)\u6c60\uff0c\u907f\u514d\u6bcf\u6b21\u90fd\u8981\u53bb mheap \u4e0a\u5206\u914d\u3002 2\u3001\u6ee5\u7528\u6307\u9488\uff0c\u6307\u9488\u7684\u5b58\u5728\u4e0d\u4ec5\u5bb9\u6613\u9020\u6210\u5185\u5b58\u6d6a\u8d39\uff0c\u5bf9 GC \u4e5f\u4f1a\u9020\u6210\u989d\u5916\u7684\u538b\u529b\uff0c\u6240\u4ee5\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u6307\u9488\u3002 \u9644 \u5185\u5b58\u788e\u7247 \u5185\u5b58\u788e\u7247\u662f\u7cfb\u7edf\u5728\u5185\u5b58\u7ba1\u7406\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u4e0d\u53ef\u907f\u514d\u7684\u51fa\u73b0\u4e00\u5757\u5757\u65e0\u6cd5\u88ab\u4f7f\u7528\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd9\u662f\u5185\u5b58\u7ba1\u7406\u7684\u4ea7\u7269\u3002 \u5185\u90e8\u788e\u7247 \u4e00\u822c\u90fd\u662f\u56e0\u4e3a\u5b57\u8282\u5bf9\u9f50\uff0c\u5982\u4e0a\u9762\u4ecb\u7ecd Tiny \u5bf9\u8c61\u5206\u914d\u7684\u90e8\u5206\uff1b\u4e3a\u4e86\u5b57\u8282\u5bf9\u9f50\uff0c\u4f1a\u5bfc\u81f4\u4e00\u90e8\u5206\u5185\u5b58\u7a7a\u95f4\u76f4\u63a5\u88ab\u653e\u5f03\u6389\uff0c\u4e0d\u505a\u5206\u914d\u4f7f\u7528\u3002 \u518d\u6bd4\u5982\u7533\u8bf7 28B \u5927\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u7cfb\u7edf\u4f1a\u5206\u914d 32B \u7684\u7a7a\u95f4\u7ed9\u5b83\uff0c\u8fd9\u4e5f\u5bfc\u81f4\u4e86\u5176\u4e2d 4B \u7a7a\u95f4\u662f\u88ab\u6d6a\u8d39\u6389\u7684\u3002\u8fd9\u5c31\u662f\u5185\u90e8\u788e\u7247\u3002 \u5916\u90e8\u788e\u7247 \u4e00\u822c\u662f\u56e0\u4e3a\u5185\u5b58\u7684\u4e0d\u65ad\u5206\u914d\u91ca\u653e\uff0c\u5bfc\u81f4\u4e00\u4e9b\u91ca\u653e\u7684\u5c0f\u5185\u5b58\u5757\u5206\u6563\u5728\u5185\u5b58\u5404\u5904\uff0c\u65e0\u6cd5\u88ab\u7528\u4ee5\u5206\u914d\u3002\u5982\u56fe\uff1a \u4e0a\u9762\u7684 8B \u548c 16B \u7684\u5c0f\u7a7a\u95f4\uff0c\u5f88\u96be\u518d\u88ab\u5229\u7528\u8d77\u6765\u3002\u4e0d\u8fc7 Go \u7684\u5185\u5b58\u7ba1\u7406\u673a\u5236\u4e0d\u4f1a\u5f15\u8d77\u5927\u91cf\u5916\u90e8\u788e\u7247\u3002 \u6e90\u4ee3\u7801\u8c03\u7528\u6d41\u7a0b\u56fe \u9488\u5bf9 Go1.5 \u6e90\u7801 runtime.MemStats \u90e8\u5206\u6ce8\u91ca type MemStats struct { // heap \u5206\u914d\u51fa\u53bb\u7684\u5b57\u8282\u603b\u6570\uff0c\u548c HeapAlloc \u503c\u76f8\u540c Alloc uint64 // TotalAlloc \u662f heap \u7d2f\u8ba1\u5206\u914d\u51fa\u53bb\u5b57\u8282\u6570\uff0c\u6bcf\u6b21\u5206\u914d // \u90fd\u4f1a\u7d2f\u52a0\u8fd9\u4e2a\u503c\uff0c\u4f46\u662f\u91ca\u653e\u65f6\u5019\u4e0d\u4f1a\u51cf\u5c11 TotalAlloc uint64 // Sys \u662f\u6307\u7a0b\u5e8f\u4ece OS \u90a3\u91cc\u4e00\u5171\u7533\u8bf7\u4e86\u591a\u5c11\u5185\u5b58 // \u56e0\u4e3a\u9664\u4e86 heap\uff0c\u7a0b\u5e8f\u6808\u53ca\u5176\u4ed6\u5185\u90e8\u7ed3\u6784\u90fd\u4f7f\u7528\u7740\u4ece OS \u7533\u8bf7\u8fc7\u6765\u7684\u5185\u5b58 Sys uint64 // Mallocs heap \u7d2f\u79ef\u5206\u914d\u51fa\u53bb\u7684\u5bf9\u8c61\u6570 // \u6d3b\u52a8\u4e2d\u7684\u5bf9\u8c61\u603b\u6570\uff0c\u5373\u662f Mallocs - Frees Mallocs uint64 // Frees \u503c heap \u7d2f\u79ef\u91ca\u653e\u6389\u7684\u5bf9\u8c61\u603b\u6570 Frees uint64 // HeapAlloc \u662f\u5206\u914d\u51fa\u53bb\u7684\u5806\u5bf9\u8c61\u603b\u548c\u5927\u5c0f\uff0c\u5355\u4f4d\u5b57\u8282 // object \u7684\u58f0\u660e\u5468\u671f\u662f \u5f85\u5206\u914d -> \u5206\u914d\u4f7f\u7528 -> \u5f85\u56de\u6536 -> \u5f85\u5206\u914d // \u53ea\u8981\u4e0d\u662f\u5f85\u5206\u914d\u7684\u72b6\u6001\uff0c\u90fd\u4f1a\u52a0\u5230 HeapAlloc \u4e2d // \u5b83\u548c HeapInuse \u4e0d\u540c\uff0cHeapInuse \u7b97\u7684\u662f\u4f7f\u7528\u4e2d\u7684 span\uff0c // \u4f7f\u7528\u4e2d\u7684 span \u91cc\u9762\u53ef\u80fd\u8fd8\u6709\u5f88\u591a object \u95f2\u7f6e HeapAlloc uint64 // HeapSys \u662f heap \u4ece OS \u90a3\u91cc\u7533\u8bf7\u6765\u7684\u5806\u5185\u5b58\u5927\u5c0f\uff0c\u5355\u4f4d\u5b57\u8282 // \u6307\u7684\u662f\u865a\u62df\u5185\u5b58\u7684\u5927\u5c0f\uff0c\u4e0d\u662f\u7269\u7406\u5185\u5b58\uff0c\u7269\u7406\u5185\u5b58\u5927\u5c0f Go \u8bed\u8a00\u5c42\u9762\u662f\u770b\u4e0d\u5230\u7684\u3002 // \u7b49\u4e8e HeapIdle + HeapInuse HeapSys uint64 // HeapIdle \u8868\u793a\u6240\u6709 span \u4e2d\u8fd8\u6709\u591a\u5c11\u5185\u5b58\u662f\u6ca1\u4f7f\u7528\u7684 // \u8fd9\u4e9b span \u4e0a\u9762\u6ca1\u6709 object\uff0c\u4e5f\u5c31\u662f\u5b8c\u5168\u95f2\u7f6e\u7684\uff0c\u53ef\u4ee5\u968f\u65f6\u5f52\u8fd8\u7ed9 OS // \u4e5f\u53ef\u4ee5\u7528\u4e8e\u5806\u6808\u5206\u914d HeapIdle uint64 // HeapInuse \u662f\u5904\u5728\u4f7f\u7528\u4e2d\u7684\u6240\u6709 span \u4e2d\u7684\u603b\u5b57\u8282\u6570 // \u53ea\u8981\u4e00\u4e2a span \u4e2d\u6709\u81f3\u5c11\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90a3\u4e48\u5c31\u8868\u793a\u5b83\u88ab\u4f7f\u7528\u4e86 // HeapInuse - HeapAlloc \u5c31\u8868\u793a\u5df2\u7ecf\u88ab\u5207\u5272\u6210\u56fa\u5b9a sizeclass \u7684 span \u91cc HeapInuse uint64 // HeapReleased \u662f\u8fd4\u56de\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u7684\u7269\u7406\u5185\u5b58\u603b\u6570 HeapReleased uint64 // HeapObjects \u662f\u5206\u914d\u51fa\u53bb\u7684\u5bf9\u8c61\u603b\u6570 // \u5982\u540c HeapAlloc \u4e00\u6837\uff0c\u5206\u914d\u65f6\u589e\u52a0\uff0c\u88ab\u6e05\u7406\u6216\u88ab\u91ca\u653e\u65f6\u51cf\u5c11 HeapObjects uint64 // NextGC is the target heap size of the next GC cycle. // NextGC \u8868\u793a\u5f53 HeapAlloc \u589e\u957f\u5230\u8fd9\u4e2a\u503c\u65f6\uff0c\u4f1a\u6267\u884c\u4e00\u6b21 GC // \u5783\u573e\u56de\u6536\u7684\u76ee\u6807\u662f\u4fdd\u6301 HeapAlloc \u2264 NextGC\uff0c\u6bcf\u6b21 GC \u7ed3\u675f // \u4e0b\u6b21 GC \u7684\u76ee\u6807\uff0c\u662f\u6839\u636e\u5f53\u524d\u53ef\u8fbe\u6570\u636e\u548c GOGC \u53c2\u6570\u8ba1\u7b97\u5f97\u6765\u7684 NextGC uint64 // LastGC \u662f\u6700\u8fd1\u4e00\u6b21\u5783\u573e\u56de\u6536\u7ed3\u675f\u7684\u65f6\u95f4 (the UNIX epoch). LastGC uint64 // PauseTotalNs \u662f\u81ea\u7a0b\u5e8f\u542f\u52a8\u8d77\uff0c GC \u9020\u6210 STW \u6682\u505c\u7684\u7d2f\u79ef\u7eb3\u79d2\u503c // STW \u671f\u95f4\uff0c\u6240\u6709\u7684 goroutine \u90fd\u4f1a\u88ab\u6682\u505c\uff0c\u53ea\u6709 GC \u7684 goroutine \u53ef\u4ee5\u8fd0\u884c PauseTotalNs uint64 // PauseNs \u662f\u5faa\u73af\u961f\u5217\uff0c\u8bb0\u5f55\u7740 GC \u5f15\u8d77\u7684 STW \u603b\u65f6\u95f4 // \u4e00\u6b21 GC \u5faa\u73af\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u591a\u6b21\u6682\u505c\uff0c\u8fd9\u91cc\u6bcf\u9879\u8bb0\u5f55\u7684\u662f\u4e00\u6b21 GC \u5faa\u73af\u91cc\u591a\u6b21\u6682\u505c\u7684\u7efc\u5408\u3002 // \u6700\u8fd1\u4e00\u6b21 GC \u7684\u6570\u636e\u6240\u5728\u7684\u4f4d\u7f6e\u662f PauseNs[NumGC%256] PauseNs [256]uint64 // PauseEnd \u662f\u4e00\u4e2a\u5faa\u73af\u961f\u5217\uff0c\u8bb0\u5f55\u7740\u6700\u8fd1 256 \u6b21 GC \u7ed3\u675f\u7684\u65f6\u95f4\u6233\uff0c\u5355\u4f4d\u662f\u7eb3\u79d2\u3002 // \u5b83\u548c PauseNs \u7684\u5b58\u50a8\u65b9\u5f0f\u4e00\u6837\u3002\u4e00\u6b21 GC \u53ef\u80fd\u4f1a\u5f15\u53d1\u591a\u6b21\u6682\u505c\uff0c\u8fd9\u91cc\u53ea\u8bb0\u5f55\u4e00\u6b21 GC \u6700\u540e\u4e00\u6b21\u6682\u505c\u7684\u65f6\u95f4 PauseEnd [256]uint64 // NumGC \u6307\u5b8c\u6210 GC \u7684\u6b21\u6570 NumGC uint32 // NumForcedGC \u662f\u6307\u5e94\u7528\u8c03\u7528\u4e86 runtime.GC() \u8fdb\u884c\u5f3a\u5236 GC \u7684\u6b21\u6570 NumForcedGC uint32 // BySize \u7edf\u8ba1\u5404\u4e2a sizeclass \u5206\u914d\u548c\u91ca\u653e\u7684\u5bf9\u8c61\u7684\u4e2a\u6570 // BySize[N] \u7edf\u8ba1\u7684\u662f\u5bf9\u8c61\u5927\u5c0f S\uff0c\u6ee1\u8db3 BySize[N-1].Size < S \u2264 BySize[N].Size \u7684\u5bf9\u8c61 // \u8fd9\u91cc\u4e0d\u8bb0\u5f55\u5927\u4e8e BySize[60].Size \u7684\u5bf9\u8c61\u5206\u914d BySize [61]struct { // Size \u8868\u793a\u8be5 sizeclass \u7684\u6bcf\u4e2a\u5bf9\u8c61\u7684\u7a7a\u95f4\u5927\u5c0f // size class. Size uint32 // Mallocs \u662f\u8be5 sizeclass \u5206\u914d\u51fa\u53bb\u7684\u5bf9\u8c61\u7684\u7d2f\u79ef\u603b\u6570 // Size * Mallocs \u5c31\u662f\u7d2f\u79ef\u5206\u914d\u51fa\u53bb\u7684\u5b57\u8282\u603b\u6570 // Mallocs - Frees \u5c31\u662f\u5f53\u524d\u6b63\u5728\u4f7f\u7528\u4e2d\u7684\u5bf9\u8c61\u603b\u6570 Mallocs uint64 // Frees \u662f\u8be5 sizeclass \u7d2f\u79ef\u91ca\u653e\u5bf9\u8c61\u603b\u6570 Frees uint64 } }","title":"Go\u5185\u5b58\u7ba1\u7406\u4e8c\uff1ago\u5185\u5b58\u7ba1\u7406"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_1","text":"\u4e86\u89e3\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u5185\u5b58\u7684\u7ba1\u7406\u673a\u5236\u540e\uff0c\u73b0\u5728\u53ef\u4ee5\u53bb\u770b\u4e0b Go \u8bed\u8a00\u662f\u5982\u4f55\u5229\u7528\u5e95\u5c42\u7684\u8fd9\u4e9b\u7279\u6027\u6765\u4f18\u5316\u5185\u5b58\u7684\u3002Go \u7684\u5185\u5b58\u7ba1\u7406\u57fa\u672c\u4e0a\u53c2\u8003 tcmalloc \u6765\u5b9e\u73b0\u7684\uff0c\u53ea\u662f\u7ec6\u8282\u4e0a\u6839\u636e\u81ea\u8eab\u7684\u9700\u8981\u505a\u4e86\u4e00\u4e9b\u5c0f\u7684\u4f18\u5316\u8c03\u6574\u3002 Go \u7684\u5185\u5b58\u662f\u81ea\u52a8\u7ba1\u7406\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u968f\u610f\u5b9a\u4e49\u53d8\u91cf\u76f4\u63a5\u4f7f\u7528\uff0c\u4e0d\u9700\u8981\u8003\u8651\u53d8\u91cf\u80cc\u540e\u7684\u5185\u5b58\u7533\u8bf7\u548c\u91ca\u653e\u7684\u95ee\u9898\u3002\u672c\u6587\u610f\u5728\u641e\u6e05\u695a Go \u5728\u65b9\u9762\u5e2e\u6211\u4eec\u505a\u4e86\u4ec0\u4e48\uff0c\u4f7f\u6211\u4eec\u4e0d\u7528\u5173\u5fc3\u90a3\u4e9b\u590d\u6742\u5185\u5b58\u7684\u95ee\u9898\uff0c\u8fd8\u4f9d\u65e7\u80fd\u5199\u51fa\u8f83\u4e3a\u9ad8\u6548\u7684\u7a0b\u5e8f\u3002 \u672c\u7bc7\u53ea\u4ecb\u7ecd Go \u7684\u5185\u5b58\u7ba1\u7406\u6a21\u578b\uff0c\u4e0e\u5176\u76f8\u5173\u7684\u8fd8\u6709\u9003\u9038\u5206\u6790\u548c\u5783\u573e\u56de\u6536\u5185\u5bb9\u3002","title":"\u4ecb\u7ecd"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_2","text":"\u7a0b\u5e8f\u52a8\u6001\u7533\u8bf7\u5185\u5b58\u7a7a\u95f4\uff0c\u662f\u8981\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528\u7684\uff0c\u6bd4\u5982 Linux \u7cfb\u7edf\u4e0a\u662f\u8c03\u7528 mmap \u65b9\u6cd5\u5b9e\u73b0\u7684\u3002\u4f46\u5bf9\u4e8e\u5927\u578b\u7cfb\u7edf\u670d\u52a1\u6765\u8bf4\uff0c\u76f4\u63a5\u8c03\u7528 mmap \u7533\u8bf7\u5185\u5b58\uff0c\u4f1a\u6709\u4e00\u5b9a\u7684\u4ee3\u4ef7\u3002\u6bd4\u5982\uff1a 1\u3001\u7cfb\u7edf\u8c03\u7528\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u8fdb\u5165\u5185\u6838\u6001\uff0c\u5185\u6838\u5206\u914d\u5b8c\u5185\u5b58\u540e\uff08\u4e5f\u5c31\u662f\u4e0a\u7bc7\u6240\u8bb2\u7684\uff0c\u5bf9\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u8fdb\u884c\u6620\u5c04\u7b49\u64cd\u4f5c\uff09\uff0c\u518d\u8fd4\u56de\u5230\u7528\u6237\u6001\u3002 2\u3001\u9891\u7e41\u7533\u8bf7\u5f88\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5bb9\u6613\u51fa\u73b0\u5927\u91cf\u5185\u5b58\u788e\u7247\uff0c\u589e\u5927\u64cd\u4f5c\u7cfb\u7edf\u6574\u7406\u788e\u7247\u7684\u538b\u529b\u3002 3\u3001\u4e3a\u4e86\u4fdd\u8bc1\u5185\u5b58\u8bbf\u95ee\u5177\u6709\u826f\u597d\u7684\u5c40\u90e8\u6027\uff0c\u5f00\u53d1\u8005\u9700\u8981\u6295\u5165\u5927\u91cf\u7684\u7cbe\u529b\u53bb\u505a\u4f18\u5316\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u91cd\u7684\u8d1f\u62c5\u3002 \u5982\u4f55\u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898\u5462\uff1f\u6709\u7ecf\u9a8c\u7684\u4eba\uff0c\u53ef\u80fd\u5f88\u5feb\u5c31\u60f3\u5230\u89e3\u51b3\u65b9\u6848\uff0c\u90a3\u5c31\u662f\u6211\u4eec\u5e38\u8bf4\u7684 \u5bf9\u8c61\u6c60 \uff08\u4e5f\u53ef\u4ee5\u8bf4\u662f\u7f13\u5b58\uff09\u3002 \u5047\u8bbe\u7cfb\u7edf\u9700\u8981\u9891\u7e41\u52a8\u6001\u7533\u8bf7\u5185\u5b58\u6765\u5b58\u653e\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u6bd4\u5982 [10]int \u3002\u90a3\u4e48\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5728\u7a0b\u5e8f\u542f\u52a8\u4e4b\u521d\uff0c\u4e00\u6b21\u6027\u7533\u8bf7\u51e0\u767e\u751a\u81f3\u4e0a\u5343\u4e2a [10]int \u3002\u8fd9\u6837\u5b8c\u7f8e\u7684\u89e3\u51b3\u4e86\u4e0a\u9762\u9047\u5230\u7684\u95ee\u9898\uff1a 1\u3001\u4e0d\u9700\u8981\u9891\u7e41\u7533\u8bf7\u5185\u5b58\u4e86\uff0c\u800c\u662f\u4ece\u5bf9\u8c61\u6c60\u91cc\u62ff\uff0c\u7a0b\u5e8f\u4e0d\u4f1a\u9891\u7e41\u8fdb\u5165\u5185\u6838\u6001 2\u3001\u56e0\u4e3a\u4e00\u6b21\u6027\u7533\u8bf7\u4e00\u4e2a\u8fde\u7eed\u7684\u5927\u7a7a\u95f4\uff0c\u5bf9\u8c61\u6c60\u4f1a\u88ab\u91cd\u590d\u5229\u7528\uff0c\u4e0d\u4f1a\u51fa\u73b0\u788e\u7247\u3002 3\u3001\u7a0b\u5e8f\u9891\u7e41\u8bbf\u95ee\u7684\u5c31\u662f\u5bf9\u8c61\u6c60\u80cc\u540e\u7684\u540c\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u5c40\u90e8\u6027\u826f\u597d\u3002 \u8fd9\u6837\u505a\u4f1a\u9020\u6210\u4e00\u5b9a\u7684\u5185\u5b58\u6d6a\u8d39\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u65f6\u68c0\u6d4b\u5bf9\u8c61\u6c60\u7684\u5927\u5c0f\uff0c\u4fdd\u8bc1\u53ef\u7528\u5bf9\u8c61\u7684\u6570\u91cf\u5728\u4e00\u4e2a\u5408\u7406\u7684\u8303\u56f4\uff0c\u5c11\u4e86\u5c31\u63d0\u524d\u7533\u8bf7\uff0c\u591a\u4e86\u5c31\u81ea\u52a8\u91ca\u653e\u3002 \u5982\u679c\u67d0\u79cd\u8d44\u6e90\u7684\u7533\u8bf7\u548c\u56de\u6536\u662f\u6602\u8d35\u7684\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u901a\u8fc7\u5efa\u7acb\u8d44\u6e90\u6c60\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\uff0c\u5176\u4ed6\u6bd4\u5982 \u8fde\u63a5\u6c60\uff0c\u5185\u5b58\u6c60 \u7b49\u7b49\uff0c\u90fd\u662f\u4e00\u4e2a\u601d\u8def\u3002","title":"\u6c60"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#golang","text":"Golang \u7684\u5185\u5b58\u7ba1\u7406\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u5185\u5b58\u6c60\uff0c\u53ea\u4e0d\u8fc7\u5185\u90e8\u505a\u4e86\u5f88\u591a\u7684\u4f18\u5316\u3002\u6bd4\u5982\u81ea\u52a8\u4f38\u7f29\u5185\u5b58\u6c60\u5927\u5c0f\uff0c\u5408\u7406\u7684\u5207\u5272\u5185\u5b58\u5757\u7b49\u7b49\u3002","title":"Golang \u5185\u5b58\u7ba1\u7406"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#mheap","text":"Golang \u7684\u7a0b\u5e8f\u5728\u542f\u52a8\u4e4b\u521d\uff0c\u4f1a\u4e00\u6b21\u6027\u4ece\u64cd\u4f5c\u7cfb\u7edf\u90a3\u91cc\u7533\u8bf7\u4e00\u5927\u5757\u5185\u5b58\u4f5c\u4e3a\u5185\u5b58\u6c60\u3002\u8fd9\u5757\u5185\u5b58\u7a7a\u95f4\u4f1a\u653e\u5728\u4e00\u4e2a\u53eb mheap \u7684 struct \u4e2d\u7ba1\u7406\uff0cmheap \u8d1f\u8d23\u5c06\u8fd9\u4e00\u6574\u5757\u5185\u5b58\u5207\u5272\u6210\u4e0d\u540c\u7684\u533a\u57df\uff0c\u5e76\u5c06\u5176\u4e2d\u4e00\u90e8\u5206\u7684\u5185\u5b58\u5207\u5272\u6210\u5408\u9002\u7684\u5927\u5c0f\uff0c\u5206\u914d\u7ed9\u7528\u6237\u4f7f\u7528\u3002 \u6211\u4eec\u9700\u8981\u5148\u77e5\u9053\u51e0\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff1a page : \u5185\u5b58\u9875\uff0c\u4e00\u5757 8K \u5927\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4\u3002Go \u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u7684\u5185\u5b58\u7533\u8bf7\u548c\u91ca\u653e\uff0c\u90fd\u662f\u4ee5 page \u4e3a\u5355\u4f4d\u7684\u3002 span : \u5185\u5b58\u5757\uff0c\u4e00\u4e2a\u6216\u591a\u4e2a\u8fde\u7eed\u7684 page \u7ec4\u6210\u4e00\u4e2a span \u3002\u5982\u679c\u628a page \u6bd4\u55bb\u6210\u5de5\u4eba\uff0c span \u53ef\u770b\u6210\u662f\u5c0f\u961f\uff0c\u5de5\u4eba\u88ab\u5206\u6210\u82e5\u5e72\u4e2a\u961f\u4f0d\uff0c\u4e0d\u540c\u7684\u961f\u4f0d\u5e72\u4e0d\u540c\u7684\u6d3b\u3002 sizeclass : \u7a7a\u95f4\u89c4\u683c\uff0c\u6bcf\u4e2a span \u90fd\u5e26\u6709\u4e00\u4e2a sizeclass \uff0c\u6807\u8bb0\u7740\u8be5 span \u4e2d\u7684 page \u5e94\u8be5\u5982\u4f55\u4f7f\u7528\u3002\u4f7f\u7528\u4e0a\u9762\u7684\u6bd4\u55bb\uff0c\u5c31\u662f sizeclass \u6807\u5fd7\u7740 span \u662f\u4e00\u4e2a\u4ec0\u4e48\u6837\u7684\u961f\u4f0d\u3002 object : \u5bf9\u8c61\uff0c\u7528\u6765\u5b58\u50a8\u4e00\u4e2a\u53d8\u91cf\u6570\u636e\u5185\u5b58\u7a7a\u95f4\uff0c\u4e00\u4e2a span \u5728\u521d\u59cb\u5316\u65f6\uff0c\u4f1a\u88ab\u5207\u5272\u6210\u4e00\u5806\u7b49\u5927\u7684 object \u3002\u5047\u8bbe object \u7684\u5927\u5c0f\u662f 16B \uff0c span \u5927\u5c0f\u662f 8K \uff0c\u90a3\u4e48\u5c31\u4f1a\u628a span \u4e2d\u7684 page \u5c31\u4f1a\u88ab\u521d\u59cb\u5316 8K / 16B = 512 \u4e2a object \u3002\u6240\u8c13\u5185\u5b58\u5206\u914d\uff0c\u5c31\u662f\u5206\u914d\u4e00\u4e2a object \u51fa\u53bb\u3002 \u793a\u610f\u56fe\uff1a \u4e0a\u56fe\u4e2d\uff0c\u4e0d\u540c\u989c\u8272\u4ee3\u8868\u4e0d\u540c\u7684 span \uff0c\u4e0d\u540c span \u7684 sizeclass \u4e0d\u540c\uff0c\u8868\u793a\u91cc\u9762\u7684 page \u5c06\u4f1a\u6309\u7167\u4e0d\u540c\u7684\u89c4\u683c\u5207\u5272\u6210\u4e00\u4e2a\u4e2a\u7b49\u5927\u7684 object \u7528\u4f5c\u5206\u914d\u3002 \u4f7f\u7528 Go1.11.5 \u7248\u672c\u6d4b\u8bd5\u4e86\u4e0b\u521d\u59cb\u5806\u5185\u5b58\u5e94\u8be5\u662f 64M \u5de6\u53f3\uff0c\u4f4e\u7248\u672c\u4f1a\u5c11\u70b9\u3002 \u6d4b\u8bd5\u4ee3\u7801\uff1a package main import \"runtime\" var stat runtime.MemStats func main(){ runtime.ReadMemStats(&stat) println(stat.HeapSys) } \u5185\u90e8\u7684\u6574\u4f53\u5185\u5b58\u5e03\u5c40\u5982\u4e0b\u56fe\u6240\u793a\uff1a mheap.spans \uff1a\u7528\u6765\u5b58\u50a8 page \u548c span \u4fe1\u606f\uff0c\u6bd4\u5982\u4e00\u4e2a span \u7684\u8d77\u59cb\u5730\u5740\u662f\u591a\u5c11\uff0c\u6709\u51e0\u4e2a page\uff0c\u5df2\u4f7f\u7528\u4e86\u591a\u5927\u7b49\u7b49\u3002 mheap.bitmap \u5b58\u50a8\u7740\u5404\u4e2a span \u4e2d\u5bf9\u8c61\u7684\u6807\u8bb0\u4fe1\u606f\uff0c\u6bd4\u5982\u5bf9\u8c61\u662f\u5426\u53ef\u56de\u6536\u7b49\u7b49\u3002 mheap.arena_start : \u5c06\u8981\u5206\u914d\u7ed9\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684\u7a7a\u95f4\u3002 \u518d\u8bf4\u660e\u4e0b\uff0c\u56fe\u4e2d\u7684\u7a7a\u95f4\u5927\u5c0f\uff0c\u662f Go \u5411\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u7684\u865a\u62df\u5185\u5b58\u5730\u5740\u7a7a\u95f4\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u8be5\u6bb5\u5730\u5740\u7a7a\u95f4\u9884\u7559\u51fa\u6765\u4e0d\u505a\u5b83\u7528\uff1b\u800c\u4e0d\u662f\u771f\u7684\u521b\u5efa\u51fa\u8fd9\u4e48\u5927\u7684\u865a\u62df\u5185\u5b58\uff0c\u5728\u9875\u8868\u4e2d\u521b\u5efa\u51fa\u8fd9\u4e48\u5927\u7684\u6620\u5c04\u5173\u7cfb\u3002","title":"\u5185\u5b58\u6c60 mheap"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#mcentral","text":"\u7528\u9014\u76f8\u540c \u7684 span \u4f1a\u4ee5\u94fe\u8868\u7684\u5f62\u5f0f\u7ec4\u7ec7\u5728\u4e00\u8d77\u3002 \u8fd9\u91cc\u7684\u7528\u9014\u7528 sizeclass \u6765\u8868\u793a\uff0c\u5c31\u662f\u6307\u8be5 span \u7528\u6765\u5b58\u50a8\u54ea\u79cd\u5927\u5c0f\u7684\u5bf9\u8c61\u3002\u6bd4\u5982\u5f53\u5206\u914d\u4e00\u5757\u5927\u5c0f\u4e3a n \u7684\u5185\u5b58\u65f6\uff0c\u7cfb\u7edf\u8ba1\u7b97 n \u5e94\u8be5\u4f7f\u7528\u54ea\u79cd sizeclass \uff0c\u7136\u540e\u6839\u636e sizeclass \u7684\u503c\u53bb\u627e\u5230\u4e00\u4e2a\u53ef\u7528\u7684 span \u6765\u7528\u4f5c\u5206\u914d\u3002\u5176\u4e2d sizeclass \u4e00\u5171\u6709 67 \u79cd\uff08Go1.5 \u7248\u672c\uff0c\u540e\u7eed\u7248\u672c\u53ef\u80fd\u4f1a\u4e0d\u4f1a\u6539\u53d8\u4e0d\u597d\u8bf4\uff09\uff0c\u5982\u56fe\u6240\u793a\uff1a \u627e\u5230\u5408\u9002\u7684 span \u540e\uff0c\u4f1a\u4ece\u4e2d\u53d6\u4e00\u4e2a object \u8fd4\u56de\u7ed9\u4e0a\u5c42\u4f7f\u7528\u3002\u8fd9\u4e9b span \u88ab\u653e\u5728\u4e00\u4e2a\u53eb\u505a mcentral \u7684\u7ed3\u6784\u4e2d\u7ba1\u7406\u3002 mheap \u5c06\u4ece OS \u90a3\u91cc\u7533\u8bf7\u8fc7\u6765\u7684\u5185\u5b58\u521d\u59cb\u5316\u6210\u4e00\u4e2a\u5927 span (sizeclass=0)\u3002\u7136\u540e\u6839\u636e\u9700\u8981\u4ece\u8fd9\u4e2a\u5927 span \u4e2d\u5207\u51fa\u5c0f span \uff0c\u653e\u5728 mcentral \u4e2d\u6765\u7ba1\u7406\u3002\u5927 span \u7531 mheap.freelarge \u548c mheap.busylarge \u7b49\u7ba1\u7406\u3002\u5982\u679c mcentral \u4e2d\u7684 span \u4e0d\u591f\u7528\u4e86\uff0c\u4f1a\u4ece mheap.freelarge \u4e0a\u518d\u5207\u4e00\u5757\uff0c\u5982\u679c mheap.freelarge \u7a7a\u95f4\u4e0d\u591f\uff0c\u4f1a\u518d\u6b21\u4ece OS \u90a3\u91cc\u7533\u8bf7\u5185\u5b58\u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\u3002\u4e0b\u9762\u662f mheap \u548c mcentral \u7684\u6570\u636e\u7ed3\u6784\uff1a type mheap struct { // other fields lock mutex free [_MaxMHeapList]mspan // free lists of given length\uff0c 1M \u4ee5\u4e0b freelarge mspan // free lists length >= _MaxMHeapList, >= 1M busy [_MaxMHeapList]mspan // busy lists of large objects of given length busylarge mspan // busy lists of large objects length >= _MaxMHeapList central [_NumSizeClasses]struct {// _NumSizeClasses = 67 \u200b mcentral mcentral // other fields } // other fields } // Central list of free objects of a given size. type mcentral struct { lock mutex // \u5206\u914d\u65f6\u9700\u8981\u52a0\u9501 sizeclass int32 // \u54ea\u79cd sizeclass nonempty mspan // \u8fd8\u6709\u53ef\u7528\u7684\u7a7a\u95f4\u7684 span \u94fe\u8868 empty mspan // \u6ca1\u6709\u53ef\u7528\u7684\u7a7a\u95f4\u7684 span \u5217\u8868 } \u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u907f\u514d\u51fa\u73b0\u5916\u90e8\u788e\u7247\uff08\u6587\u7ae0\u6700\u540e\u9762\u6709\u5916\u90e8\u788e\u7247\u7684\u4ecb\u7ecd\uff09\uff0c\u56e0\u4e3a\u540c\u4e00\u4e2a span \u662f\u6309\u7167\u56fa\u5b9a\u5927\u5c0f\u5206\u914d\u548c\u56de\u6536\u7684\uff0c\u4e0d\u4f1a\u51fa\u73b0\u4e0d\u53ef\u5229\u7528\u7684\u4e00\u5c0f\u5757\u5185\u5b58\u628a\u5185\u5b58\u5206\u5272\u6389\u3002\u8fd9\u4e2a\u8bbe\u8ba1\u65b9\u5f0f\u4e0e\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4f19\u4f34\u7cfb\u7edf\u6709\u70b9\u7c7b\u4f3c\u3002","title":"mcentral"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#mcache","text":"\u5982\u679c\u4f60\u9605\u8bfb\u7684\u6bd4\u8f83\u4ed4\u7ec6\uff0c\u4f1a\u53d1\u73b0\u4e0a\u9762\u7684 mcentral \u7ed3\u6784\u4e2d\u6709\u4e00\u4e2a lock \u5b57\u6bb5\uff1b\u56e0\u4e3a\u5e76\u53d1\u60c5\u51b5\u4e0b\uff0c\u5f88\u6709\u53ef\u80fd\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u4ece mcentral \u90a3\u91cc\u7533\u8bf7\u5185\u5b58\u7684\uff0c\u5fc5\u987b\u8981\u7528\u9501\u6765\u907f\u514d\u51b2\u7a81\u3002 \u4f46\u9501\u662f\u4f4e\u6548\u7684\uff0c\u5728\u9ad8\u5e76\u53d1\u7684\u670d\u52a1\u4e2d\uff0c\u5b83\u4f1a\u4f7f\u5185\u5b58\u7533\u8bf7\u6210\u4e3a\u6574\u4e2a\u7cfb\u7edf\u7684\u74f6\u9888\uff1b\u6240\u4ee5\u5728 mcentral \u7684\u524d\u9762\u53c8\u589e\u52a0\u4e86\u4e00\u5c42 mcache\u3002 \u6bcf\u4e00\u4e2a mcache \u548c\u6bcf\u4e00\u4e2a\u5904\u7406\u5668(P) \u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e00\u4e2a P \u90fd\u6709\u4e00\u4e2a mcache \u6210\u5458\u3002 Goroutine \u7533\u8bf7\u5185\u5b58\u65f6\uff0c\u9996\u5148\u4ece\u5176\u6240\u5728\u7684 P \u7684 mcache \u4e2d\u5206\u914d\uff0c\u5982\u679c mcache \u6ca1\u6709\u53ef\u7528 span \uff0c\u518d\u4ece mcentral \u4e2d\u83b7\u53d6\uff0c\u5e76\u586b\u5145\u5230 mcache \u4e2d\u3002 \u4ece mcache \u4e0a\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u662f\u4e0d\u9700\u8981\u52a0\u9501\u7684\uff0c\u56e0\u4e3a\u5728\u540c\u4e00\u65f6\u95f4\u91cc\uff0c\u4e00\u4e2a P \u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u5176\u4e0a\u9762\u8fd0\u884c\uff0c\u4e0d\u53ef\u80fd\u51fa\u73b0\u7ade\u4e89\u3002\u6ca1\u6709\u4e86\u9501\u7684\u9650\u5236\uff0c\u5927\u5927\u52a0\u901f\u4e86\u5185\u5b58\u5206\u914d\u3002 \u6240\u4ee5\u6574\u4f53\u7684\u5185\u5b58\u5206\u914d\u6a21\u578b\u5927\u81f4\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"mcache"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_3","text":"","title":"\u5176\u4ed6\u4f18\u5316"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#zero-size","text":"\u6709\u4e00\u4e9b\u5bf9\u8c61\u6240\u9700\u7684\u5185\u5b58\u5927\u5c0f\u662f0\uff0c\u6bd4\u5982 [0]int, struct{}\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u6570\u636e\u6839\u672c\u5c31\u4e0d\u9700\u8981\u5185\u5b58\uff0c\u6240\u4ee5\u6ca1\u5fc5\u8981\u8d70\u4e0a\u9762\u90a3\u4e48\u590d\u6742\u7684\u903b\u8f91\u3002 \u7cfb\u7edf\u4f1a\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u56fa\u5b9a\u7684\u5185\u5b58\u5730\u5740\u3002\u6e90\u7801\u5982\u4e0b\uff1a func mallocgc(size uintptr, typ *_type, flags uint32) unsafe.Pointer { // \u7533\u8bf7\u7684 0 \u5927\u5c0f\u7a7a\u95f4\u7684\u5185\u5b58 if size ==0{ return unsafe.Pointer(&zerobase) } //..... } \u6d4b\u8bd5\u4ee3\u7801\uff1a package main import( \"fmt\" ) func main(){ var( a struct{} b [0]int c [100]struct{} d =make([]struct{},1024) ) fmt.Printf(\"%p\\n\",&a) fmt.Printf(\"%p\\n\",&b) fmt.Printf(\"%p\\n\",&c) fmt.Printf(\"%p\\n\",&(d[0])) fmt.Printf(\"%p\\n\",&(d[1])) fmt.Printf(\"%p\\n\",&(d[1000])) } 21// \u8fd0\u884c\u7ed3\u679c\uff0c6 \u4e2a\u53d8\u91cf\u7684\u5185\u5b58\u5730\u5740\u662f\u76f8\u540c\u7684: 220x1180f88 230x1180f88 240x1180f88 250x1180f88 260x1180f88 270x1180f88","title":"zero size"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#tiny","text":"\u4e0a\u9762\u63d0\u5230\u7684 sizeclass=1 \u7684 span\uff0c\u7528\u6765\u7ed9 <= 8B \u7684\u5bf9\u8c61\u4f7f\u7528\uff0c\u6240\u4ee5\u50cf int32 , byte , bool \u4ee5\u53ca\u5c0f\u5b57\u7b26\u4e32\u7b49\u5e38\u7528\u7684\u5fae\u5c0f\u5bf9\u8c61\uff0c\u90fd\u4f1a\u4f7f\u7528 sizeclass=1 \u7684 span\uff0c\u4f46\u5206\u914d\u7ed9\u4ed6\u4eec 8B \u7684\u7a7a\u95f4\uff0c\u5927\u90e8\u5206\u662f\u7528\u4e0d\u4e0a\u7684\u3002\u5e76\u4e14\u8fd9\u4e9b\u7c7b\u578b\u4f7f\u7528\u9891\u7387\u975e\u5e38\u9ad8\uff0c\u5c31\u4f1a\u5bfc\u81f4\u51fa\u73b0\u5927\u91cf\u7684\u5185\u90e8\u788e\u7247\u3002 \u6240\u4ee5 Go \u5c3d\u91cf\u4e0d\u4f7f\u7528 sizeclass=1 \u7684 span\uff0c \u800c\u662f\u5c06 < 16B \u7684\u5bf9\u8c61\u4e3a\u7edf\u4e00\u89c6\u4e3a tiny \u5bf9\u8c61(tinysize)\u3002\u5206\u914d\u65f6\uff0c\u4ece sizeclass=2 \u7684 span \u4e2d\u83b7\u53d6\u4e00\u4e2a 16B \u7684 object \u7528\u4ee5\u5206\u914d\u3002\u5982\u679c\u5b58\u50a8\u7684\u5bf9\u8c61\u5c0f\u4e8e 16B \uff0c\u8fd9\u4e2a\u7a7a\u95f4\u4f1a\u88ab\u6682\u65f6\u4fdd\u5b58\u8d77\u6765 (mcache.tiny \u5b57\u6bb5)\uff0c\u4e0b\u6b21\u5206\u914d\u65f6\u4f1a\u590d\u7528\u8fd9\u4e2a\u7a7a\u95f4\uff0c\u76f4\u5230\u8fd9\u4e2a object \u7528\u5b8c\u4e3a\u6b62\u3002 \u5982\u56fe\u6240\u793a\uff1a \u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff0c\u8fd9\u6837\u7684\u65b9\u5f0f\u7a7a\u95f4\u5229\u7528\u7387\u662f (1+2+8) / 16 * 100% = 68.75% \uff0c\u800c\u5982\u679c\u6309\u7167\u539f\u59cb\u7684\u7ba1\u7406\u65b9\u5f0f\uff0c\u5229\u7528\u7387\u662f (1+2+8) / (8 * 3) = 45.83% \u3002 \u6e90\u7801\u4e2d\u6ce8\u91ca\u63cf\u8ff0\uff0c\u8bf4\u662f\u5bf9 tiny \u5bf9\u8c61\u7684\u7279\u6b8a\u5904\u7406\uff0c\u5e73\u5747\u4f1a\u8282\u7701 20% \u5de6\u53f3\u7684\u5185\u5b58\u3002 \u5982\u679c\u8981\u5b58\u50a8\u7684\u6570\u636e\u91cc\u6709\u6307\u9488\uff0c\u5373\u4f7f <= 8B \u4e5f\u4e0d\u4f1a\u4f5c\u4e3a tiny \u5bf9\u8c61\u5bf9\u5f85\uff0c\u800c\u662f\u6b63\u5e38\u4f7f\u7528 sizeclass=1 \u7684 span \u3002","title":"Tiny\u5bf9\u8c61"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_4","text":"\u5982\u4e0a\u9762\u6240\u8ff0\uff0c\u6700\u5927\u7684 sizeclass \u6700\u5927\u53ea\u80fd\u5b58\u653e 32K \u7684\u5bf9\u8c61\u3002\u5982\u679c\u4e00\u6b21\u6027\u7533\u8bf7\u8d85\u8fc7 32K \u7684\u5185\u5b58\uff0c\u7cfb\u7edf\u4f1a\u76f4\u63a5\u7ed5\u8fc7 mcache \u548c mcentral\uff0c\u76f4\u63a5\u4ece mheap \u4e0a\u83b7\u53d6\uff0cmheap \u4e2d\u6709\u4e00\u4e2a freelarge \u5b57\u6bb5\u7ba1\u7406\u7740\u8d85\u5927 span\u3002","title":"\u5927\u5bf9\u8c61"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_5","text":"\u5185\u5b58\u7684\u91ca\u653e\u8fc7\u7a0b\uff0c\u6ca1\u4ec0\u4e48\u7279\u522b\u4e4b\u5904\u3002\u5c31\u662f\u5206\u914d\u7684\u8fd4\u8fc7\u7a0b\uff0c\u5f53 mcache \u4e2d\u5b58\u5728\u8f83\u591a\u7a7a\u95f2 span \u65f6\uff0c\u4f1a\u5f52\u8fd8\u7ed9 mcentral\uff1b\u800c mcentral \u4e2d\u5b58\u5728\u8f83\u591a\u7a7a\u95f2 span \u65f6\uff0c\u4f1a\u5f52\u8fd8\u7ed9 mheap\uff1bmheap \u518d\u5f52\u8fd8\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u3002\u8fd9\u91cc\u5c31\u4e0d\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u3002 \u603b\u7ed3\u4e00\u4e0b\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u4e4b\u6240\u4ee5\u5feb\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u4f18\u52bf\uff1a 1\u3001\u5185\u5b58\u5206\u914d\u5927\u591a\u65f6\u5019\u90fd\u662f\u5728\u7528\u6237\u6001\u5b8c\u6210\u7684\uff0c\u4e0d\u9700\u8981\u9891\u7e41\u8fdb\u5165\u5185\u6838\u6001\u3002 2\u3001\u6bcf\u4e2a P \u90fd\u6709\u72ec\u7acb\u7684 span cache\uff0c\u591a\u4e2a CPU \u4e0d\u4f1a\u5e76\u53d1\u8bfb\u5199\u540c\u4e00\u5757\u5185\u5b58\uff0c\u8fdb\u800c\u51cf\u5c11 CPU L1 cache \u7684 cacheline \u51fa\u73b0 dirty \u60c5\u51b5\uff0c\u589e\u5927 cpu cache \u547d\u4e2d\u7387\u3002 3\u3001\u5185\u5b58\u788e\u7247\u7684\u95ee\u9898\uff0cGo \u662f\u81ea\u5df1\u5728\u7528\u6237\u6001\u7ba1\u7406\u7684\uff0c\u5728 OS \u5c42\u9762\u770b\u662f\u6ca1\u6709\u788e\u7247\u7684\uff0c\u4f7f\u5f97\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u5bf9\u788e\u7247\u7684\u7ba1\u7406\u538b\u529b\u4e5f\u4f1a\u964d\u4f4e\u3002 4\u3001mcache \u7684\u5b58\u5728\u4f7f\u5f97\u5185\u5b58\u5206\u914d\u4e0d\u9700\u8981\u52a0\u9501\u3002 \u5f53\u7136\u8fd9\u4e0d\u662f\u6ca1\u6709\u4ee3\u4ef7\u7684\uff0cGo \u9700\u8981\u9884\u7533\u8bf7\u5927\u5757\u5185\u5b58\uff0c\u8fd9\u5fc5\u7136\u4f1a\u51fa\u73b0\u4e00\u5b9a\u7684\u6d6a\u8d39\uff0c\u4e0d\u8fc7\u597d\u5728\u73b0\u5728\u5185\u5b58\u6bd4\u8f83\u5ec9\u4ef7\uff0c\u4e0d\u7528\u592a\u5728\u610f\u3002 \u603b\u4f53\u4e0a\u6765\u770b\uff0cGo \u5185\u5b58\u7ba1\u7406\u4e5f\u662f\u4e00\u4e2a\u91d1\u5b57\u5854\u7ed3\u6784\uff1a \u8fd9\u79cd\u8bbe\u8ba1\u6bd4\u8f83\u901a\u7528\uff0c\u6bd4\u5982\u73b0\u5728\u5e38\u89c1\u7684 web \u670d\u52a1\u8bbe\u8ba1\uff0c\u4e3a\u63d0\u5347\u7cfb\u7edf\u6027\u80fd\uff0c\u4e00\u822c\u90fd\u4f1a\u8bbe\u8ba1\u6210 \u5ba2\u6237\u7aef cache -> \u670d\u52a1\u7aef cache -> \u670d\u52a1\u7aef db \u8fd9\u51e0\u5c42\uff08\u5f53\u7136\u4e5f\u53ef\u80fd\u4f1a\u52a0\u5165\u66f4\u591a\u5c42\uff09\uff0c\u4e5f\u662f\u91d1\u5b57\u5854\u7ed3\u6784\u3002","title":"\u603b\u7ed3"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_6","text":"\u8fd9\u79cd\u8bbe\u8ba1\u5229\u7528\u4e86\u8ba1\u7b97\u7684\u5c40\u90e8\u6027\u7279\u5f81\uff0c\u8ba4\u4e3a\u51b7\u70ed\u6570\u636e\u7684\u4ea4\u66ff\u662f\u7f13\u6162\u7684\u3002\u6240\u4ee5\u6700\u6015\u7684\u5c31\u662f\uff0c\u6570\u636e\u8bbf\u95ee\u51fa\u73b0\u51b7\u70ed\u9aa4\u53d8\u3002\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u6211\u4eec\u79f0\u8fd9\u79cd\u73b0\u8c61\u4e3a\u5185\u5b58\u98a0\u7c38\uff0c\u7cfb\u7edf\u67b6\u6784\u4e0a\u901a\u5e38\u88ab\u8bf4\u6210\u662f\u7f13\u5b58\u7a7f\u900f\u3002\u5176\u5b9e\u90fd\u662f\u4e00\u4e2a\u610f\u601d\uff0c\u5c31\u662f\u8fc7\u5ea6\u7684\u4f7f\u7528\u4e86\u91d1\u5b57\u5854\u4f4e\u7aef\u7684\u8d44\u6e90\u3002 \u8fd9\u5957\u5185\u90e8\u673a\u5236\uff0c\u4f7f\u5f97\u5f00\u53d1\u9ad8\u6027\u80fd\u670d\u52a1\u5bb9\u6613\u5f88\u591a\uff0c\u901a\u4fd7\u6765\u8bb2\u5c31\u662f\u5751\u5c11\u4e86\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\u4f60\u968f\u4fbf\u5199\u5199\u6027\u80fd\u90fd\u4e0d\u4f1a\u592a\u5dee\u3002\u6211\u9047\u5230\u8fc7\u7684\u5bfc\u81f4\u5185\u5b58\u5206\u914d\u51fa\u73b0\u538b\u529b\u7684\u4e3b\u8981\u6709 2 \u4e2d\u60c5\u51b5\uff1a 1\u3001\u9891\u7e41\u7533\u8bf7\u5927\u5bf9\u8c61\uff0c\u5e38\u89c1\u4e8e\u6587\u672c\u5904\u7406\uff0c\u6bd4\u5982\u5199\u4e00\u4e2a\u6d77\u91cf\u65e5\u5fd7\u5206\u6790\u7684\u670d\u52a1\uff0c\u5f88\u591a\u65e5\u5fd7\u5185\u5bb9\u90fd\u5f88\u957f\u3002\u8fd9\u79cd\u60c5\u51b5\u5efa\u8bae\u81ea\u5df1\u7ef4\u62a4\u4e00\u4e2a\u5bf9\u8c61([]byte)\u6c60\uff0c\u907f\u514d\u6bcf\u6b21\u90fd\u8981\u53bb mheap \u4e0a\u5206\u914d\u3002 2\u3001\u6ee5\u7528\u6307\u9488\uff0c\u6307\u9488\u7684\u5b58\u5728\u4e0d\u4ec5\u5bb9\u6613\u9020\u6210\u5185\u5b58\u6d6a\u8d39\uff0c\u5bf9 GC \u4e5f\u4f1a\u9020\u6210\u989d\u5916\u7684\u538b\u529b\uff0c\u6240\u4ee5\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u6307\u9488\u3002","title":"\u5c06\u6709\u9650\u7684\u8ba1\u7b97\u8d44\u6e90\u5e03\u5c40\u6210\u91d1\u5b57\u5854\u7ed3\u6784\uff0c\u518d\u5c06\u6570\u636e\u4ece\u70ed\u5230\u51b7\u5206\u4e3a\u51e0\u4e2a\u5c42\u7ea7\uff0c\u653e\u7f6e\u5728\u91d1\u5b57\u5854\u7ed3\u6784\u4e0a\u3002\u8c03\u5ea6\u5668\u4e0d\u65ad\u505a\u8c03\u6574\uff0c\u5c06\u70ed\u6570\u636e\u653e\u5728\u91d1\u5b57\u5854\u9876\u5c42\uff0c\u51b7\u6570\u636e\u653e\u5728\u91d1\u5b57\u5854\u5e95\u5c42\u3002"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_7","text":"","title":"\u9644"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_8","text":"\u5185\u5b58\u788e\u7247\u662f\u7cfb\u7edf\u5728\u5185\u5b58\u7ba1\u7406\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u4e0d\u53ef\u907f\u514d\u7684\u51fa\u73b0\u4e00\u5757\u5757\u65e0\u6cd5\u88ab\u4f7f\u7528\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd9\u662f\u5185\u5b58\u7ba1\u7406\u7684\u4ea7\u7269\u3002","title":"\u5185\u5b58\u788e\u7247"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_9","text":"\u4e00\u822c\u90fd\u662f\u56e0\u4e3a\u5b57\u8282\u5bf9\u9f50\uff0c\u5982\u4e0a\u9762\u4ecb\u7ecd Tiny \u5bf9\u8c61\u5206\u914d\u7684\u90e8\u5206\uff1b\u4e3a\u4e86\u5b57\u8282\u5bf9\u9f50\uff0c\u4f1a\u5bfc\u81f4\u4e00\u90e8\u5206\u5185\u5b58\u7a7a\u95f4\u76f4\u63a5\u88ab\u653e\u5f03\u6389\uff0c\u4e0d\u505a\u5206\u914d\u4f7f\u7528\u3002 \u518d\u6bd4\u5982\u7533\u8bf7 28B \u5927\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u7cfb\u7edf\u4f1a\u5206\u914d 32B \u7684\u7a7a\u95f4\u7ed9\u5b83\uff0c\u8fd9\u4e5f\u5bfc\u81f4\u4e86\u5176\u4e2d 4B \u7a7a\u95f4\u662f\u88ab\u6d6a\u8d39\u6389\u7684\u3002\u8fd9\u5c31\u662f\u5185\u90e8\u788e\u7247\u3002","title":"\u5185\u90e8\u788e\u7247"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_10","text":"\u4e00\u822c\u662f\u56e0\u4e3a\u5185\u5b58\u7684\u4e0d\u65ad\u5206\u914d\u91ca\u653e\uff0c\u5bfc\u81f4\u4e00\u4e9b\u91ca\u653e\u7684\u5c0f\u5185\u5b58\u5757\u5206\u6563\u5728\u5185\u5b58\u5404\u5904\uff0c\u65e0\u6cd5\u88ab\u7528\u4ee5\u5206\u914d\u3002\u5982\u56fe\uff1a \u4e0a\u9762\u7684 8B \u548c 16B \u7684\u5c0f\u7a7a\u95f4\uff0c\u5f88\u96be\u518d\u88ab\u5229\u7528\u8d77\u6765\u3002\u4e0d\u8fc7 Go \u7684\u5185\u5b58\u7ba1\u7406\u673a\u5236\u4e0d\u4f1a\u5f15\u8d77\u5927\u91cf\u5916\u90e8\u788e\u7247\u3002","title":"\u5916\u90e8\u788e\u7247"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#_11","text":"\u9488\u5bf9 Go1.5 \u6e90\u7801","title":"\u6e90\u4ee3\u7801\u8c03\u7528\u6d41\u7a0b\u56fe"},{"location":"golang/docs/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BA%8C%EF%BC%9Ago%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#runtimememstats","text":"type MemStats struct { // heap \u5206\u914d\u51fa\u53bb\u7684\u5b57\u8282\u603b\u6570\uff0c\u548c HeapAlloc \u503c\u76f8\u540c Alloc uint64 // TotalAlloc \u662f heap \u7d2f\u8ba1\u5206\u914d\u51fa\u53bb\u5b57\u8282\u6570\uff0c\u6bcf\u6b21\u5206\u914d // \u90fd\u4f1a\u7d2f\u52a0\u8fd9\u4e2a\u503c\uff0c\u4f46\u662f\u91ca\u653e\u65f6\u5019\u4e0d\u4f1a\u51cf\u5c11 TotalAlloc uint64 // Sys \u662f\u6307\u7a0b\u5e8f\u4ece OS \u90a3\u91cc\u4e00\u5171\u7533\u8bf7\u4e86\u591a\u5c11\u5185\u5b58 // \u56e0\u4e3a\u9664\u4e86 heap\uff0c\u7a0b\u5e8f\u6808\u53ca\u5176\u4ed6\u5185\u90e8\u7ed3\u6784\u90fd\u4f7f\u7528\u7740\u4ece OS \u7533\u8bf7\u8fc7\u6765\u7684\u5185\u5b58 Sys uint64 // Mallocs heap \u7d2f\u79ef\u5206\u914d\u51fa\u53bb\u7684\u5bf9\u8c61\u6570 // \u6d3b\u52a8\u4e2d\u7684\u5bf9\u8c61\u603b\u6570\uff0c\u5373\u662f Mallocs - Frees Mallocs uint64 // Frees \u503c heap \u7d2f\u79ef\u91ca\u653e\u6389\u7684\u5bf9\u8c61\u603b\u6570 Frees uint64 // HeapAlloc \u662f\u5206\u914d\u51fa\u53bb\u7684\u5806\u5bf9\u8c61\u603b\u548c\u5927\u5c0f\uff0c\u5355\u4f4d\u5b57\u8282 // object \u7684\u58f0\u660e\u5468\u671f\u662f \u5f85\u5206\u914d -> \u5206\u914d\u4f7f\u7528 -> \u5f85\u56de\u6536 -> \u5f85\u5206\u914d // \u53ea\u8981\u4e0d\u662f\u5f85\u5206\u914d\u7684\u72b6\u6001\uff0c\u90fd\u4f1a\u52a0\u5230 HeapAlloc \u4e2d // \u5b83\u548c HeapInuse \u4e0d\u540c\uff0cHeapInuse \u7b97\u7684\u662f\u4f7f\u7528\u4e2d\u7684 span\uff0c // \u4f7f\u7528\u4e2d\u7684 span \u91cc\u9762\u53ef\u80fd\u8fd8\u6709\u5f88\u591a object \u95f2\u7f6e HeapAlloc uint64 // HeapSys \u662f heap \u4ece OS \u90a3\u91cc\u7533\u8bf7\u6765\u7684\u5806\u5185\u5b58\u5927\u5c0f\uff0c\u5355\u4f4d\u5b57\u8282 // \u6307\u7684\u662f\u865a\u62df\u5185\u5b58\u7684\u5927\u5c0f\uff0c\u4e0d\u662f\u7269\u7406\u5185\u5b58\uff0c\u7269\u7406\u5185\u5b58\u5927\u5c0f Go \u8bed\u8a00\u5c42\u9762\u662f\u770b\u4e0d\u5230\u7684\u3002 // \u7b49\u4e8e HeapIdle + HeapInuse HeapSys uint64 // HeapIdle \u8868\u793a\u6240\u6709 span \u4e2d\u8fd8\u6709\u591a\u5c11\u5185\u5b58\u662f\u6ca1\u4f7f\u7528\u7684 // \u8fd9\u4e9b span \u4e0a\u9762\u6ca1\u6709 object\uff0c\u4e5f\u5c31\u662f\u5b8c\u5168\u95f2\u7f6e\u7684\uff0c\u53ef\u4ee5\u968f\u65f6\u5f52\u8fd8\u7ed9 OS // \u4e5f\u53ef\u4ee5\u7528\u4e8e\u5806\u6808\u5206\u914d HeapIdle uint64 // HeapInuse \u662f\u5904\u5728\u4f7f\u7528\u4e2d\u7684\u6240\u6709 span \u4e2d\u7684\u603b\u5b57\u8282\u6570 // \u53ea\u8981\u4e00\u4e2a span \u4e2d\u6709\u81f3\u5c11\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90a3\u4e48\u5c31\u8868\u793a\u5b83\u88ab\u4f7f\u7528\u4e86 // HeapInuse - HeapAlloc \u5c31\u8868\u793a\u5df2\u7ecf\u88ab\u5207\u5272\u6210\u56fa\u5b9a sizeclass \u7684 span \u91cc HeapInuse uint64 // HeapReleased \u662f\u8fd4\u56de\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u7684\u7269\u7406\u5185\u5b58\u603b\u6570 HeapReleased uint64 // HeapObjects \u662f\u5206\u914d\u51fa\u53bb\u7684\u5bf9\u8c61\u603b\u6570 // \u5982\u540c HeapAlloc \u4e00\u6837\uff0c\u5206\u914d\u65f6\u589e\u52a0\uff0c\u88ab\u6e05\u7406\u6216\u88ab\u91ca\u653e\u65f6\u51cf\u5c11 HeapObjects uint64 // NextGC is the target heap size of the next GC cycle. // NextGC \u8868\u793a\u5f53 HeapAlloc \u589e\u957f\u5230\u8fd9\u4e2a\u503c\u65f6\uff0c\u4f1a\u6267\u884c\u4e00\u6b21 GC // \u5783\u573e\u56de\u6536\u7684\u76ee\u6807\u662f\u4fdd\u6301 HeapAlloc \u2264 NextGC\uff0c\u6bcf\u6b21 GC \u7ed3\u675f // \u4e0b\u6b21 GC \u7684\u76ee\u6807\uff0c\u662f\u6839\u636e\u5f53\u524d\u53ef\u8fbe\u6570\u636e\u548c GOGC \u53c2\u6570\u8ba1\u7b97\u5f97\u6765\u7684 NextGC uint64 // LastGC \u662f\u6700\u8fd1\u4e00\u6b21\u5783\u573e\u56de\u6536\u7ed3\u675f\u7684\u65f6\u95f4 (the UNIX epoch). LastGC uint64 // PauseTotalNs \u662f\u81ea\u7a0b\u5e8f\u542f\u52a8\u8d77\uff0c GC \u9020\u6210 STW \u6682\u505c\u7684\u7d2f\u79ef\u7eb3\u79d2\u503c // STW \u671f\u95f4\uff0c\u6240\u6709\u7684 goroutine \u90fd\u4f1a\u88ab\u6682\u505c\uff0c\u53ea\u6709 GC \u7684 goroutine \u53ef\u4ee5\u8fd0\u884c PauseTotalNs uint64 // PauseNs \u662f\u5faa\u73af\u961f\u5217\uff0c\u8bb0\u5f55\u7740 GC \u5f15\u8d77\u7684 STW \u603b\u65f6\u95f4 // \u4e00\u6b21 GC \u5faa\u73af\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u591a\u6b21\u6682\u505c\uff0c\u8fd9\u91cc\u6bcf\u9879\u8bb0\u5f55\u7684\u662f\u4e00\u6b21 GC \u5faa\u73af\u91cc\u591a\u6b21\u6682\u505c\u7684\u7efc\u5408\u3002 // \u6700\u8fd1\u4e00\u6b21 GC \u7684\u6570\u636e\u6240\u5728\u7684\u4f4d\u7f6e\u662f PauseNs[NumGC%256] PauseNs [256]uint64 // PauseEnd \u662f\u4e00\u4e2a\u5faa\u73af\u961f\u5217\uff0c\u8bb0\u5f55\u7740\u6700\u8fd1 256 \u6b21 GC \u7ed3\u675f\u7684\u65f6\u95f4\u6233\uff0c\u5355\u4f4d\u662f\u7eb3\u79d2\u3002 // \u5b83\u548c PauseNs \u7684\u5b58\u50a8\u65b9\u5f0f\u4e00\u6837\u3002\u4e00\u6b21 GC \u53ef\u80fd\u4f1a\u5f15\u53d1\u591a\u6b21\u6682\u505c\uff0c\u8fd9\u91cc\u53ea\u8bb0\u5f55\u4e00\u6b21 GC \u6700\u540e\u4e00\u6b21\u6682\u505c\u7684\u65f6\u95f4 PauseEnd [256]uint64 // NumGC \u6307\u5b8c\u6210 GC \u7684\u6b21\u6570 NumGC uint32 // NumForcedGC \u662f\u6307\u5e94\u7528\u8c03\u7528\u4e86 runtime.GC() \u8fdb\u884c\u5f3a\u5236 GC \u7684\u6b21\u6570 NumForcedGC uint32 // BySize \u7edf\u8ba1\u5404\u4e2a sizeclass \u5206\u914d\u548c\u91ca\u653e\u7684\u5bf9\u8c61\u7684\u4e2a\u6570 // BySize[N] \u7edf\u8ba1\u7684\u662f\u5bf9\u8c61\u5927\u5c0f S\uff0c\u6ee1\u8db3 BySize[N-1].Size < S \u2264 BySize[N].Size \u7684\u5bf9\u8c61 // \u8fd9\u91cc\u4e0d\u8bb0\u5f55\u5927\u4e8e BySize[60].Size \u7684\u5bf9\u8c61\u5206\u914d BySize [61]struct { // Size \u8868\u793a\u8be5 sizeclass \u7684\u6bcf\u4e2a\u5bf9\u8c61\u7684\u7a7a\u95f4\u5927\u5c0f // size class. Size uint32 // Mallocs \u662f\u8be5 sizeclass \u5206\u914d\u51fa\u53bb\u7684\u5bf9\u8c61\u7684\u7d2f\u79ef\u603b\u6570 // Size * Mallocs \u5c31\u662f\u7d2f\u79ef\u5206\u914d\u51fa\u53bb\u7684\u5b57\u8282\u603b\u6570 // Mallocs - Frees \u5c31\u662f\u5f53\u524d\u6b63\u5728\u4f7f\u7528\u4e2d\u7684\u5bf9\u8c61\u603b\u6570 Mallocs uint64 // Frees \u662f\u8be5 sizeclass \u7d2f\u79ef\u91ca\u653e\u5bf9\u8c61\u603b\u6570 Frees uint64 } }","title":"runtime.MemStats \u90e8\u5206\u6ce8\u91ca"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/","text":"1.\u7b80\u5355\u6982\u5ff5 1.1 \u8c03\u5ea6\u5668\u7684\u4e09\u4e2a\u62bd\u8c61\u6982\u5ff5\uff1aG\u3001M\u3001P G\uff1a\u4ee3\u8868\u4e00\u4e2a goroutine\uff0c\u6bcf\u4e2a goroutine \u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u6808\u5b58\u653e\u5f53\u524d\u7684\u8fd0\u884c\u5185\u5b58\u53ca\u72b6\u6001\u3002\u53ef\u4ee5\u628a\u4e00\u4e2a G \u5f53\u505a\u4e00\u4e2a\u4efb\u52a1\u3002 M: \u4ee3\u8868\u5185\u6838\u7ebf\u7a0b(Pthread)\uff0c\u5b83\u672c\u8eab\u5c31\u4e0e\u4e00\u4e2a\u5185\u6838\u7ebf\u7a0b\u8fdb\u884c\u7ed1\u5b9a\uff0cgoroutine \u8fd0\u884c\u5728 M \u4e0a\u3002 P\uff1a\u4ee3\u8868\u4e00\u4e2a\u5904\u7406\u5668\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u4e00\u4e2a\u201c\u6709\u8fd0\u884c\u4efb\u52a1\u201d\u7684 P \u5360\u4e86\u4e00\u4e2a CPU \u7ebf\u7a0b\u7684\u8d44\u6e90\uff0c\u4e14\u53ea\u8981\u5904\u4e8e\u8c03\u5ea6\u7684\u65f6\u5019\u5c31\u6709 P\u3002 \u6ce8\uff1a\u5185\u6838\u7ebf\u7a0b\u548c CPU \u7ebf\u7a0b\u7684\u533a\u522b\uff0c\u5728\u7cfb\u7edf\u91cc\u53ef\u4ee5\u6709\u4e0a\u4e07\u4e2a\u5185\u6838\u7ebf\u7a0b\uff0c\u4f46 CPU \u7ebf\u7a0b\u5e76\u6ca1\u6709\u90a3\u4e48\u591a\uff0cCPU \u7ebf\u7a0b\u4e5f\u5c31\u662f Top \u547d\u4ee4\u91cc\u770b\u5230\u7684 CPU0\u3001CPU1\u3001CPU2\u2026\u7684\u6570\u91cf\u3002 \u4e09\u8005\u5173\u7cfb\u5927\u81f4\u5982\u4e0b\u56fe\uff1a \u56fe 1\u3001\u56fe 2 \u4ee3\u8868 2 \u4e2a\u6709\u8fd0\u884c\u4efb\u52a1\u65f6\u7684\u72b6\u6001\u3002M \u4e0e\u4e00\u4e2a\u5185\u6838\u7ebf\u7a0b\u7ed1\u5b9a\uff0c\u53ef\u8fd0\u884c\u7684 goroutine \u5217\u8868\u5b58\u653e\u5230 P \u91cc\u9762\uff0c\u7136\u540e\u5360\u7528\u4e86\u4e00\u4e2a CPU \u7ebf\u7a0b\u6765\u8fd0\u884c\u3002 \u56fe 3 \u4ee3\u8868\u6ca1\u6709\u8fd0\u884c\u4efb\u52a1\u65f6\u7684\u72b6\u6001\uff0cM \u4f9d\u7136\u4e0e\u4e00\u4e2a\u5185\u6838\u7ebf\u7a0b\u7ed1\u5b9a\uff0c\u7531\u4e8e\u6ca1\u6709\u8fd0\u884c\u4efb\u52a1\u56e0\u6b64\u4e0d\u5360\u7528 CPU \u7ebf\u7a0b\uff0c\u540c\u65f6\u4e5f\u4e0d\u5360\u7528 P\u3002 1.2 \u8c03\u5ea6\u7684\u5927\u81f4\u8f6e\u5ed3 \u56fe\u4e2d\u8868\u8ff0\u4e86\u7531 go func \u89e6\u53d1\u7684\u8c03\u5ea6\u3002\u5148\u521b\u5efa M \u901a\u8fc7 M \u542f\u52a8\u8c03\u5ea6\u5faa\u73af\uff0c\u7136\u540e\u8c03\u5ea6\u5faa\u73af\u8fc7\u7a0b\u4e2d\u83b7\u53d6 G \u6765\u6267\u884c\uff0c\u6267\u884c\u8fc7\u7a0b\u4e2d\u9047\u5230\u56fe\u4e2d running G \u540e\u9762\u51e0\u4e2a case \u518d\u6b21\u8fdb\u5165\u4e0b\u4e00\u5faa\u73af\u3002 \u4e0b\u9762\u4ece\u7a0b\u5e8f\u542f\u52a8\u3001\u8c03\u5ea6\u5faa\u73af\u3001G \u7684\u6765\u6e90\u4e09\u4e2a\u89d2\u5ea6\u5206\u6790\u8c03\u5ea6\u7684\u5b9e\u73b0\u3002 2.\u8fdb\u7a0b\u542f\u52a8\u65f6\u90fd\u505a\u4e86\u4ec0\u4e48 \u4e0b\u9762\u5148\u770b\u4e00\u6bb5\u7a0b\u5e8f\u542f\u52a8\u7684\u4ee3\u7801 // runtime/asm_amd64.s TEXT runtime\u00b7rt0_go(SB),NOSPLIT,$0 ......\u6b64\u5904\u7701\u7565N\u591a\u4ee3\u7801...... ok: // set the per-goroutine and per-mach \"registers\" get_tls(BX) // \u5c06 g0 \u653e\u5230 tls(thread local storage)\u91cc LEAQ runtime\u00b7g0(SB), CX MOVQ CX, g(BX) LEAQ runtime\u00b7m0(SB), AX // save m->g0 = g0 // \u5c06\u5168\u5c40M0\u4e0e\u5168\u5c40G0\u7ed1\u5b9a MOVQ CX, m_g0(AX) // save m0 to g0->m MOVQ AX, g_m(CX) CLD // convention is D is always left cleared CALL runtime\u00b7check(SB) MOVL 16(SP), AX // copy argc MOVL AX, 0(SP) MOVQ 24(SP), AX // copy argv MOVQ AX, 8(SP) CALL runtime\u00b7args(SB) // \u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570 CALL runtime\u00b7osinit(SB) // \u53ea\u521d\u59cb\u5316\u4e86CPU\u6838\u6570 CALL runtime\u00b7schedinit(SB) // \u5185\u5b58\u5206\u914d\u5668\u3001\u6808\u3001P\u3001GC\u56de\u6536\u5668\u7b49\u521d\u59cb\u5316 // create a new goroutine to start program MOVQ $runtime\u00b7mainPC(SB), AX // PUSHQ AX PUSHQ $0 // arg size CALL runtime\u00b7newproc(SB) // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684G\u6765\u542f\u52a8runtime.main POPQ AX POPQ AX // start this M CALL runtime\u00b7mstart(SB) // \u542f\u52a8M0,\u5f00\u59cb\u7b49\u5f85\u7a7a\u95f2G,\u6b63\u5f0f\u8fdb\u5165\u8c03\u5ea6\u5faa\u73af MOVL $0xf1, 0xf1 // crash RET \u5728\u542f\u52a8\u8fc7\u7a0b\u91cc\u4e3b\u8981\u505a\u4e86\u8fd9\u4e09\u4e2a\u4e8b\u60c5(\u8fd9\u91cc\u53ea\u8ddf\u8c03\u5ea6\u76f8\u5173\u7684)\uff1a \u521d\u59cb\u5316\u56fa\u5b9a\u6570\u91cf\u7684 P \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 G \u6765\u542f\u52a8 runtime.main, \u4e5f\u5c31\u662f runtime \u4e0b\u7684 main \u65b9\u6cd5 \u521b\u5efa\u5168\u5c40 M0\u3001\u5168\u5c40 G0\uff0c\u542f\u52a8 M0 \u8fdb\u5165\u7b2c\u4e00\u4e2a\u8c03\u5ea6\u5faa\u73af M0 \u662f\u4ec0\u4e48\uff1f\u7a0b\u5e8f\u91cc\u4f1a\u542f\u52a8\u591a\u4e2a M\uff0c\u7b2c\u4e00\u4e2a\u542f\u52a8\u7684\u53eb M0\u3002 G0 \u662f\u4ec0\u4e48\uff1fG \u5206\u4e09\u79cd\uff0c\u7b2c\u4e00\u79cd\u662f\u6267\u884c\u7528\u6237\u4efb\u52a1\u7684\u53eb\u505a G\uff0c\u7b2c\u4e8c\u79cd\u6267\u884c runtime \u4e0b\u8c03\u5ea6\u5de5\u4f5c\u7684\u53ebG0\uff0c\u6bcf\u4e2a M \u90fd\u7ed1\u5b9a\u4e00\u4e2a G0\u3002\u7b2c\u4e09\u79cd\u5219\u662f\u542f\u52a8 runtime.main \u7528\u5230\u7684 G\u3002\u5199\u7a0b\u5e8f\u63a5\u89e6\u5230\u7684\u57fa\u672c\u90fd\u662f\u7b2c\u4e00\u79cd \u6211\u4eec\u6309\u7167\u987a\u5e8f\u770b\u662f\u600e\u4e48\u5b8c\u6210\u4e0a\u9762\u4e09\u4e2a\u4e8b\u60c5\u7684\u3002 2.1 runtime.osinit(SB)\u65b9\u6cd5\u9488\u5bf9\u7cfb\u7edf\u73af\u5883\u7684\u521d\u59cb\u5316 \u8fd9\u91cc\u5b9e\u8d28\u53ea\u505a\u4e86\u4e00\u4ef6\u4e8b\u60c5\uff0c\u5c31\u662f\u83b7\u53d6 CPU \u7684\u7ebf\u7a0b\u6570\uff0c\u4e5f\u5c31\u662f Top \u547d\u4ee4\u91cc\u770b\u5230\u7684 CPU0\u3001CPU1\u3001CPU2\u2026\u7684\u6570\u91cf\u3002 // runtime/os_linux.go func osinit() { ncpu = getproccount() } 2.2 runtime.schedinit(SB)\u8c03\u5ea6\u76f8\u5173\u7684\u4e00\u4e9b\u521d\u59cb\u5316 // runtime/proc.go // \u8bbe\u7f6e\u6700\u5927M\u6570\u91cf sched.maxmcount = 10000 // \u521d\u59cb\u5316\u5f53\u524dM,\u5373\u5168\u5c40M0 mcommoninit(_g_.m) // \u67e5\u770b\u5e94\u8be5\u542f\u52a8\u7684P\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3acpu core\u6570. // \u5982\u679c\u8bbe\u7f6e\u4e86\u73af\u5883\u53d8\u91cfGOMAXPROCS\u5219\u4ee5\u73af\u5883\u53d8\u91cf\u4e3a\u51c6,\u6700\u5927\u4e0d\u5f97\u8d85\u8fc7_MaxGomaxprocs(1024)\u4e2a procs := ncpu if n, ok := atoi32(gogetenv(\"GOMAXPROCS\")); ok && n > 0 { procs = n } if procs > _MaxGomaxprocs { procs = _MaxGomaxprocs } // \u8c03\u6574P\u6570\u91cf\uff0c\u6b64\u65f6\u7531\u4e8e\u662f\u521d\u59cb\u5316\u9636\u6bb5\uff0c\u6240\u4ee5P\u90fd\u662f\u65b0\u5efa\u7684 if procresize(procs) != nil { throw(\"unknown runnable goroutine during bootstrap\") } \u8fd9\u91cc sched.maxmcount \u8bbe\u7f6e\u4e86 M \u6700\u5927\u7684\u6570\u91cf\uff0c\u800c M \u4ee3\u8868\u7684\u662f\u7cfb\u7edf\u5185\u6838\u7ebf\u7a0b\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ba4\u4e3a\u4e00\u4e2a\u8fdb\u7a0b\u6700\u5927\u53ea\u80fd\u542f\u52a8 10000 \u4e2a\u7cfb\u7edf\u7ebf\u7a0b\u3002 procresize \u521d\u59cb\u5316 P \u7684\u6570\u91cf\uff0cprocs \u53c2\u6570\u4e3a\u521d\u59cb\u5316\u7684\u6570\u91cf\uff0c\u800c\u5728\u521d\u59cb\u5316\u4e4b\u524d\u5148\u505a\u6570\u91cf\u7684\u5224\u65ad\uff0c\u9ed8\u8ba4\u662f ncpu(\u4e0e CPU \u6838\u6570\u76f8\u7b49)\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf GOMAXPROCS \u6765\u63a7\u5236 P \u7684\u6570\u91cf\u3002_MaxGomaxprocs \u63a7\u5236\u4e86\u6700\u5927\u7684 P \u6570\u91cf\u53ea\u80fd\u662f 1024\u3002 \u6709\u4e9b\u4eba\u5728\u8fdb\u7a0b\u521d\u59cb\u5316\u7684\u65f6\u5019\u7ecf\u5e38\u7528\u5230 runtime.GOMAXPROCS() \u65b9\u6cd5\uff0c\u5176\u5b9e\u4e5f\u662f\u8c03\u7528\u7684 procresize \u65b9\u6cd5\u91cd\u65b0\u8bbe\u7f6e\u4e86\u6700\u5927 CPU \u4f7f\u7528\u6570\u91cf\u3002 2.3 runtime\u00b7mainPC(SB)\u542f\u52a8\u76d1\u63a7\u4efb\u52a1 // runtime/proc.go // The main goroutine. func main() { ...... // \u542f\u52a8\u540e\u53f0\u76d1\u63a7 systemstack(func() { newm(sysmon, nil) }) ...... } \u5728 runtime \u4e0b\u4f1a\u542f\u52a8\u4e00\u4e2a\u5168\u7a0b\u8fd0\u884c\u7684\u76d1\u63a7\u4efb\u52a1\uff0c\u8be5\u4efb\u52a1\u7528\u4e8e\u6807\u8bb0\u62a2\u5360\u6267\u884c\u8fc7\u957f\u65f6\u95f4\u7684 G\uff0c\u4ee5\u53ca\u68c0\u6d4b epoll \u91cc\u9762\u662f\u5426\u6709\u53ef\u6267\u884c\u7684 G\u3002\u4e0b\u9762\u4f1a\u8be6\u7ec6\u8bf4\u5230\u3002 2.4 \u6700\u540e runtime\u00b7mstart(SB)\u542f\u52a8\u8c03\u5ea6\u5faa\u73af \u524d\u9762\u90fd\u662f\u5404\u79cd\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u5728\u8fd9\u91cc\u5f00\u542f\u4e86\u8c03\u5ea6\u5668\u7684\u7b2c\u4e00\u4e2a\u8c03\u5ea6\u5faa\u73af\u3002(\u8fd9\u91cc\u542f\u52a8\u7684 M \u5c31\u662f M0) \u4e0b\u9762\u6765\u56f4\u7ed5 G\u3001M\u3001P \u4e09\u4e2a\u6982\u5ff5\u4ecb\u7ecd Goroutine \u8c03\u5ea6\u5faa\u73af\u7684\u8fd0\u4f5c\u6d41\u7a0b\u3002 3.\u8c03\u5ea6\u5faa\u73af\u90fd\u505a\u4e86\u4ec0\u4e48 \u56fe 1 \u4ee3\u8868 M \u542f\u52a8\u7684\u8fc7\u7a0b\uff0c\u628a M \u8ddf\u4e00\u4e2a P \u7ed1\u5b9a\u518d\u4e00\u8d77\u3002\u5728\u7a0b\u5e8f\u521d\u59cb\u5316\u7684\u8fc7\u7a0b\u4e2d\u8bf4\u5230\u5728\u8fdb\u7a0b\u542f\u52a8\u7684\u6700\u540e\u4e00\u6b65\u542f\u52a8\u4e86\u7b2c\u4e00\u4e2a M(\u5373 M0)\uff0c\u8fd9\u4e2a M \u4ece\u5168\u5c40\u7684\u7a7a\u95f2 P \u5217\u8868\u91cc\u62ff\u5230\u4e00\u4e2a P\uff0c\u7136\u540e\u4e0e\u5176\u7ed1\u5b9a\u3002\u800c P \u91cc\u9762\u6709 2 \u4e2a\u7ba1\u7406 G \u7684\u94fe\u8868(runq \u5b58\u50a8\u7b49\u5f85\u8fd0\u884c\u7684 G \u5217\u8868\uff0cgfree \u5b58\u50a8\u7a7a\u95f2\u7684 G \u5217\u8868)\uff0cM \u542f\u52a8\u540e\u7b49\u5f85\u53ef\u6267\u884c\u7684 G\u3002 \u56fe 2 \u4ee3\u8868\u521b\u5efa G \u7684\u8fc7\u7a0b\u3002\u521b\u5efa\u5b8c\u4e00\u4e2a G \u5148\u6254\u5230\u5f53\u524d P \u7684 runq \u5f85\u8fd0\u884c\u961f\u5217\u91cc\u3002\u5728\u56fe 3 \u7684\u6267\u884c\u8fc7\u7a0b\u91cc\uff0cM \u4ece\u7ed1\u5b9a\u7684 P \u7684 runq \u5217\u8868\u91cc\u83b7\u53d6\u4e00\u4e2a G \u6765\u6267\u884c\u3002\u5f53\u6267\u884c\u5b8c\u6210\u540e\uff0c\u56fe 4 \u7684\u6d41\u7a0b\u91cc\u628a G \u4ecd\u5230 gfree \u961f\u5217\u91cc\u3002\u6ce8\u610f\u6b64\u65f6 G \u5e76\u6ca1\u6709\u9500\u6bc1(\u53ea\u91cd\u7f6e\u4e86 G \u7684\u6808\u4ee5\u53ca\u72b6\u6001)\uff0c\u5f53\u518d\u6b21\u521b\u5efa G \u7684\u65f6\u5019\u4f18\u5148\u4ece gfree \u5217\u8868\u91cc\u83b7\u53d6\uff0c\u8fd9\u6837\u5c31\u8d77\u5230\u4e86\u590d\u7528 G \u7684\u4f5c\u7528\uff0c\u907f\u514d\u53cd\u590d\u4e0e\u7cfb\u7edf\u4ea4\u4e92\u521b\u5efa\u5185\u5b58\u3002 M \u5373\u542f\u52a8\u540e\u5904\u4e8e\u4e00\u4e2a\u81ea\u5faa\u73af\u72b6\u6001\uff0c\u6267\u884c\u5b8c\u4e00\u4e2a G \u4e4b\u540e\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u4e2a G\uff0c\u53cd\u590d\u4e0a\u9762\u7684\u56fe 2~\u56fe 4 \u8fc7\u7a0b\u3002\u5f53\u7b2c\u4e00\u4e2a M \u6b63\u5728\u7e41\u5fd9\u800c\u53c8\u6709\u65b0\u7684 G \u9700\u8981\u6267\u884c\u65f6\uff0c\u4f1a\u518d\u5f00\u542f\u4e00\u4e2a M \u6765\u6267\u884c\u3002 \u4e0b\u9762\u8be6\u7ec6\u770b\u4e0b\u8c03\u5ea6\u5faa\u73af\u7684\u5b9e\u73b0\u3002 3.1 \u8c03\u5ea6\u5668\u5982\u4f55\u5f00\u542f\u8c03\u5ea6\u5faa\u73af \u5148\u770b\u4e00\u4e0b M \u7684\u542f\u52a8\u8fc7\u7a0b\uff08M0 \u542f\u52a8\u662f\u4e2a\u7279\u6b8a\u7684\u542f\u52a8\u8fc7\u7a0b\uff0c\u4e5f\u662f\u7b2c\u4e00\u4e2a\u542f\u52a8\u7684 M\uff0c\u7531\u6c47\u7f16\u5b9e\u73b0\u7684\u521d\u59cb\u5316\u540e\u542f\u52a8\uff0c\u800c\u540e\u7eed\u7684 M \u521b\u5efa\u4ee5\u53ca\u542f\u52a8\u5219\u662f Go \u4ee3\u7801\u5b9e\u73b0\uff09\u3002 // runtime/proc.go func startm(_p_ *p, spinning bool) { lock(&sched.lock) if _p_ == nil { // \u4ece\u7a7a\u95f2P\u91cc\u83b7\u53d6\u4e00\u4e2a _p_ = pidleget() ...... } // \u83b7\u53d6\u4e00\u4e2a\u7a7a\u95f2\u7684m mp := mget() unlock(&sched.lock) // \u5982\u679c\u6ca1\u6709\u7a7a\u95f2M\uff0c\u5219new\u4e00\u4e2a if mp == nil { var fn func() if spinning { // The caller incremented nmspinning, so set m.spinning in the new M. fn = mspinning } newm(fn, _p_) return } ...... // \u5524\u9192M notewakeup(&mp.park) } func newm(fn func(), _p_ *p) { // \u521b\u5efa\u4e00\u4e2aM\u5bf9\u8c61,\u4e14\u4e0eP\u5173\u8054 mp := allocm(_p_, fn) // \u6682\u5b58P mp.nextp.set(_p_) mp.sigmask = initSigmask ...... execLock.rlock() // Prevent process clone. // \u521b\u5efa\u7cfb\u7edf\u5185\u6838\u7ebf\u7a0b newosproc(mp, unsafe.Pointer(mp.g0.stack.hi)) execLock.runlock() } // runtime/os_linux.go func newosproc(mp *m, stk unsafe.Pointer) { // Disable signals during clone, so that the new thread starts // with signals disabled. It will enable them in minit. var oset sigset sigprocmask(_SIG_SETMASK, &sigset_all, &oset) ret := clone(cloneFlags, stk, unsafe.Pointer(mp), unsafe.Pointer(mp.g0), unsafe.Pointer(funcPC(mstart))) sigprocmask(_SIG_SETMASK, &oset, nil) } func allocm(_p_ *p, fn func()) *m { ...... mp := new(m) mp.mstartfn = fn // \u8bbe\u7f6e\u542f\u52a8\u51fd\u6570 mcommoninit(mp) // \u521d\u59cb\u5316m // \u521b\u5efag0 // In case of cgo or Solaris, pthread_create will make us a stack. // Windows and Plan 9 will layout sched stack on OS stack. if iscgo || GOOS == \"solaris\" || GOOS == \"windows\" || GOOS == \"plan9\" { mp.g0 = malg(-1) } else { mp.g0 = malg(8192 * sys.StackGuardMultiplier) } // \u628a\u65b0\u521b\u5efa\u7684g0\u4e0eM\u505a\u5173\u8054 mp.g0.m = mp ...... return mp } func mstart() { ...... mstart1() } func mstart1() { ...... // \u8fdb\u5165\u8c03\u5ea6\u5faa\u73af(\u963b\u585e\u4e0d\u8fd4\u56de) schedule() } \u975e M0 \u7684\u542f\u52a8\u9996\u5148\u4ece startm \u65b9\u6cd5\u5f00\u59cb\u542f\u52a8\uff0c\u8981\u8fdb\u884c\u8c03\u5ea6\u5de5\u4f5c\u5fc5\u987b\u6709\u8c03\u5ea6\u5904\u7406\u5668 P\uff0c\u56e0\u6b64\u5148\u4ece\u7a7a\u95f2\u7684 P \u94fe\u8868\u91cc\u83b7\u53d6\u4e00\u4e2a P\uff0c\u5728 newm \u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a M \u4e0e P \u7ed1\u5b9a\u3002 newm \u65b9\u6cd5\u4e2d\u901a\u8fc7 newosproc \u65b0\u5efa\u4e00\u4e2a\u5185\u6838\u7ebf\u7a0b\uff0c\u5e76\u628a\u5185\u6838\u7ebf\u7a0b\u4e0e M \u4ee5\u53ca mstart \u65b9\u6cd5\u8fdb\u884c\u5173\u8054\uff0c\u8fd9\u6837\u5185\u6838\u7ebf\u7a0b\u6267\u884c\u65f6\u5c31\u53ef\u4ee5\u627e\u5230 M \u5e76\u4e14\u627e\u5230\u542f\u52a8\u8c03\u5ea6\u5faa\u73af\u7684\u65b9\u6cd5\u3002\u6700\u540e schedule \u542f\u52a8\u8c03\u5ea6\u5faa\u73af allocm \u65b9\u6cd5\u4e2d\u521b\u5efa M \u7684\u540c\u65f6\u521b\u5efa\u4e86\u4e00\u4e2a G \u4e0e\u81ea\u5df1\u5173\u8054\uff0c\u8fd9\u4e2a G \u5c31\u662f\u6211\u4eec\u5728\u4e0a\u9762\u8bf4\u5230\u7684 g0\u3002\u4e3a\u4ec0\u4e48 M \u8981\u5173\u8054\u4e00\u4e2a g0\uff1f\u56e0\u4e3a runtime \u4e0b\u6267\u884c\u4e00\u4e2a G \u4e5f\u9700\u8981\u7528\u5230\u6808\u7a7a\u95f4\u6765\u5b8c\u6210\u8c03\u5ea6\u5de5\u4f5c\uff0c\u800c\u62e5\u6709\u6267\u884c\u6808\u7684\u5730\u65b9\u53ea\u6709 G\uff0c\u56e0\u6b64\u9700\u8981\u4e3a\u6bcf\u4e2a\u6267\u884c\u7ebf\u7a0b\u91cc\u914d\u7f6e\u4e00\u4e2a g0\u3002 3.2 \u8c03\u5ea6\u5668\u5982\u4f55\u8fdb\u884c\u8c03\u5ea6\u5faa\u73af \u8c03\u7528 schedule \u8fdb\u5165\u8c03\u5ea6\u5668\u7684\u8c03\u5ea6\u5faa\u73af\u540e\uff0c\u5728\u8fd9\u4e2a\u65b9\u6cd5\u91cc\u6c38\u8fdc\u4e0d\u518d\u8fd4\u56de\u3002\u4e0b\u9762\u770b\u4e0b\u5b9e\u73b0\u3002 // runtime/proc.go func schedule() { _g_ := getg() // \u8fdb\u5165gc MarkWorker \u5de5\u4f5c\u6a21\u5f0f if gp == nil && gcBlackenEnabled != 0 { gp = gcController.findRunnableGCWorker(_g_.m.p.ptr()) } if gp == nil { // Check the global runnable queue once in a while to ensure fairness. // Otherwise two goroutines can completely occupy the local runqueue // by constantly respawning each other. // \u6bcf\u5904\u7406n\u4e2a\u4efb\u52a1\u5c31\u53bb\u5168\u5c40\u961f\u5217\u83b7\u53d6G\u4efb\u52a1,\u786e\u4fdd\u516c\u5e73 if _g_.m.p.ptr().schedtick%61 == 0 && sched.runqsize > 0 { lock(&sched.lock) gp = globrunqget(_g_.m.p.ptr(), 1) unlock(&sched.lock) } } // \u4eceP\u672c\u5730\u83b7\u53d6 if gp == nil { gp, inheritTime = runqget(_g_.m.p.ptr()) if gp != nil && _g_.m.spinning { throw(\"schedule: spinning with local work\") } } // \u4ece\u5176\u5b83\u5730\u65b9\u83b7\u53d6G,\u5982\u679c\u83b7\u53d6\u4e0d\u5230\u5219\u6c89\u7761M\uff0c\u5e76\u4e14\u963b\u585e\u5728\u8fd9\u91cc\uff0c\u76f4\u5230M\u88ab\u518d\u6b21\u4f7f\u7528 if gp == nil { gp, inheritTime = findrunnable() // blocks until work is available } ...... // \u6267\u884c\u627e\u5230\u7684G execute(gp, inheritTime) } // \u4eceP\u672c\u5730\u83b7\u53d6\u4e00\u4e2a\u53ef\u8fd0\u884c\u7684G func runqget(_p_ *p) (gp *g, inheritTime bool) { // If there's a runnext, it's the next G to run. // \u4f18\u5148\u4ecerunnext\u91cc\u83b7\u53d6\u4e00\u4e2aG\uff0c\u5982\u679c\u6ca1\u6709\u5219\u4ecerunq\u91cc\u83b7\u53d6 for { next := _p_.runnext if next == 0 { break } if _p_.runnext.cas(next, 0) { return next.ptr(), true } } // \u4ece\u961f\u5934\u83b7\u53d6 for { h := atomic.Load(&_p_.runqhead) // load-acquire, synchronize with other consumers t := _p_.runqtail if t == h { return nil, false } gp := _p_.runq[h%uint32(len(_p_.runq))].ptr() if atomic.Cas(&_p_.runqhead, h, h+1) { // cas-release, commits consume return gp, false } } } // \u4ece\u5176\u5b83\u5730\u65b9\u83b7\u53d6G func findrunnable() (gp *g, inheritTime bool) { ...... // \u4ece\u672c\u5730\u961f\u5217\u83b7\u53d6 if gp, inheritTime := runqget(_p_); gp != nil { return gp, inheritTime } // \u5168\u5c40\u961f\u5217\u83b7\u53d6 if sched.runqsize != 0 { lock(&sched.lock) gp := globrunqget(_p_, 0) unlock(&sched.lock) if gp != nil { return gp, false } } // \u4eceepoll\u91cc\u53d6 if netpollinited() && sched.lastpoll != 0 { if gp := netpoll(false); gp != nil { // non-blocking ...... return gp, false } } ...... // \u5c1d\u8bd54\u6b21\u4ece\u522b\u7684P\u5077 for i := 0; i < 4; i++ { for enum := stealOrder.start(fastrand()); !enum.done(); enum.next() { if sched.gcwaiting != 0 { goto top } stealRunNextG := i > 2 // first look for ready queues with more than 1 g // \u5728\u8fd9\u91cc\u5f00\u59cb\u9488\u5bf9P\u8fdb\u884c\u5077\u53d6\u64cd\u4f5c if gp := runqsteal(_p_, allp[enum.position()], stealRunNextG); gp != nil { return gp, false } } } } // \u5c1d\u8bd5\u4ece\u5168\u5c40runq\u4e2d\u83b7\u53d6G // \u5728\"sched.runqsize/gomaxprocs + 1\"\u3001\"max\"\u3001\"len(_p_.runq))/2\"\u4e09\u4e2a\u6570\u5b57\u4e2d\u53d6\u6700\u5c0f\u7684\u6570\u5b57\u4f5c\u4e3a\u83b7\u53d6\u7684G\u6570\u91cf func globrunqget(_p_ *p, max int32) *g { if sched.runqsize == 0 { return nil } n := sched.runqsize/gomaxprocs + 1 if n > sched.runqsize { n = sched.runqsize } if max > 0 && n > max { n = max } if n > int32(len(_p_.runq))/2 { n = int32(len(_p_.runq)) / 2 } sched.runqsize -= n if sched.runqsize == 0 { sched.runqtail = 0 } gp := sched.runqhead.ptr() sched.runqhead = gp.schedlink n-- for ; n > 0; n-- { gp1 := sched.runqhead.ptr() sched.runqhead = gp1.schedlink runqput(_p_, gp1, false) // \u653e\u5230\u672c\u5730P\u91cc } return gp } schedule \u4e2d\u9996\u5148\u5c1d\u8bd5\u4ece P \u672c\u5730\u961f\u5217\u4e2d\u83b7\u53d6(runqget)\u4e00\u4e2a\u53ef\u6267\u884c\u7684 G\uff0c\u5982\u679c\u6ca1\u6709\u5219\u4ece\u5176\u5b83\u5730\u65b9\u83b7\u53d6(findrunnable),\u6700\u7ec8\u901a\u8fc7 execute \u65b9\u6cd5\u6267\u884c G\u3002 runqget \u5148\u901a\u8fc7 runnext \u62ff\u5230\u5f85\u8fd0\u884c G,\u6ca1\u6709\u7684\u8bdd\uff0c\u518d\u4ece runq \u91cc\u9762\u53d6\u3002 findrunnable \u4ece\u5168\u5c40\u961f\u5217\u3001epoll\u3001\u522b\u7684 P \u91cc\u83b7\u53d6\u3002(\u540e\u9762\u4f1a\u6269\u5c55\u5206\u6790\u5b9e\u73b0) \u5728\u8c03\u5ea6\u7684\u5f00\u5934\u51fa\u8fd8\u505a\u4e86\u4e00\u4e2a\u5c0f\u4f18\u5316\uff1a\u6bcf\u5904\u7406\u4e00\u4e9b\u4efb\u52a1\u4e4b\u540e\uff0c\u5c31\u4f18\u5148\u4ece\u5168\u5c40\u961f\u5217\u91cc\u83b7\u53d6\u4efb\u52a1\uff0c\u4ee5\u4fdd\u969c\u516c\u5e73\u6027\uff0c\u9632\u6b62\u7531\u4e8e\u6bcf\u4e2a P \u91cc\u7684 G \u8fc7\u591a\uff0c\u800c\u5168\u5c40\u961f\u5217\u91cc\u7684\u4efb\u52a1\u4e00\u76f4\u5f97\u4e0d\u5230\u6267\u884c\u673a\u4f1a\u3002 \u8fd9\u91cc\u7528\u5230\u4e86\u4e00\u4e2a\u5173\u952e\u65b9\u6cd5 getg()\uff0cruntime \u7684\u4ee3\u7801\u91cc\u5927\u91cf\u4f7f\u7528\u8be5\u65b9\u6cd5\uff0c\u5b83\u7531\u6c47\u7f16\u5b9e\u73b0\uff0c\u8be5\u65b9\u6cd5\u5c31\u662f\u83b7\u53d6\u5f53\u524d\u8fd0\u884c\u7684 G\uff0c\u5177\u4f53\u5b9e\u73b0\u4e0d\u518d\u8fd9\u91cc\u9610\u8ff0\u3002 3.3 \u591a\u4e2a\u7ebf\u7a0b\u4e0b\u5982\u4f55\u8c03\u5ea6 \u629b\u51fa\u4e00\u4e2a\u95ee\u9898\uff1a\u6bcf\u4e2a P \u91cc\u9762\u7684 G \u6267\u884c\u65f6\u95f4\u662f\u4e0d\u53ef\u63a7\u7684\uff0c\u5982\u679c\u591a\u4e2a P \u540c\u65f6\u5728\u6267\u884c\uff0c\u4f1a\u4e0d\u4f1a\u51fa\u73b0\u6709\u7684 P \u91cc\u9762\u7684 G \u6267\u884c\u4e0d\u5b8c\uff0c\u6709\u7684 P \u91cc\u9762\u51e0\u4e4e\u6ca1\u6709 G \u53ef\u6267\u884c\u5462\uff1f \u8fd9\u5c31\u8981\u4ece M \u7684\u81ea\u5faa\u73af\u8fc7\u7a0b\u4e2d\u5982\u4f55\u83b7\u53d6 G\u3001\u5f52\u8fd8 G \u7684\u884c\u4e3a\u8bf4\u8d77\u4e86\uff0c\u5148\u770b\u56fe\uff1a \u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\u6709\u4e24\u79cd\u9014\u5f84\uff1a1.\u501f\u52a9\u5168\u5c40\u961f\u5217 sched.runq \u4f5c\u4e3a\u4e2d\u4ecb\uff0c\u672c\u5730 P \u91cc\u7684 G \u592a\u591a\u7684\u8bdd\u5c31\u653e\u5168\u5c40\u91cc\uff0cG \u592a\u5c11\u7684\u8bdd\u5c31\u4ece\u5168\u5c40\u53d6\u30022.\u5168\u5c40\u5217\u8868\u91cc\u6ca1\u6709\u7684\u8bdd\u76f4\u63a5\u4ece P1 \u91cc\u5077\u53d6(steal)\u3002(\u66f4\u591a M \u5728\u6267\u884c\u7684\u8bdd\uff0c\u540c\u6837\u7684\u539f\u7406\uff0c\u8fd9\u91cc\u5c31\u53ea\u62ff 2 \u4e2a\u6765\u4e3e\u4f8b) \u7b2c 1 \u79cd\u9014\u5f84\u5b9e\u73b0\u5982\u4e0b\uff1a // runtime/proc.go func runqput(_p_ *p, gp *g, next bool) { if randomizeScheduler && next && fastrand()%2 == 0 { next = false } // \u5c1d\u8bd5\u628aG\u6dfb\u52a0\u5230P\u7684runnext\u8282\u70b9\uff0c\u8fd9\u91cc\u786e\u4fddrunnext\u53ea\u6709\u4e00\u4e2aG\uff0c\u5982\u679c\u4e4b\u524d\u5df2\u7ecf\u6709\u4e00\u4e2aG\u5219\u8e22\u51fa\u6765\u653e\u5230runq\u91cc if next { retryNext: oldnext := _p_.runnext if !_p_.runnext.cas(oldnext, guintptr(unsafe.Pointer(gp))) { goto retryNext } if oldnext == 0 { return } // \u628a\u8001\u7684g\u8e22\u51fa\u6765\uff0c\u5728\u4e0b\u9762\u653e\u5230runq\u91cc gp = oldnext.ptr() } retry: // \u5982\u679c_p_.runq\u961f\u5217\u4e0d\u6ee1\uff0c\u5219\u653e\u5230\u961f\u5c3e\u5c31\u7ed3\u675f\u4e86\u3002 // \u8bd5\u60f3\u5982\u679c\u4e0d\u653e\u5230\u961f\u5c3e\u800c\u653e\u5230\u961f\u5934\u91cc\u4f1a\u600e\u6837\uff1f\u5982\u679c\u9891\u7e41\u7684\u521b\u5efaG\u5219\u53ef\u80fd\u540e\u9762\u7684G\u603b\u662f\u4e0d\u88ab\u6267\u884c\uff0c\u5bf9\u540e\u9762\u7684G\u4e0d\u516c\u5e73 h := atomic.Load(&_p_.runqhead) // load-acquire, synchronize with consumers t := _p_.runqtail if t-h < uint32(len(_p_.runq)) { _p_.runq[t%uint32(len(_p_.runq))].set(gp) atomic.Store(&_p_.runqtail, t+1) // store-release, makes the item available for consumption return } //\u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u5c1d\u8bd5\u628aG\u548c\u5f53\u524dP\u91cc\u7684\u4e00\u90e8\u5206runq\u653e\u5230\u5168\u5c40\u961f\u5217 //\u56e0\u4e3a\u64cd\u4f5c\u5168\u5c40\u9700\u8981\u52a0\u9501,\u6240\u4ee5\u540d\u5b57\u91cc\u5e26\u4e2aslow if runqputslow(_p_, gp, h, t) { return } // the queue is not full, now the put above must succeed goto retry } func runqputslow(_p_ *p, gp *g, h, t uint32) bool { var batch [len(_p_.runq)/2 + 1]*g // First, grab a batch from local queue. n := t - h n = n / 2 if n != uint32(len(_p_.runq)/2) { throw(\"runqputslow: queue is not full\") } // \u4ecerunq\u5934\u90e8\u5f00\u59cb\u53d6\u51fa\u4e00\u534a\u7684runq\u653e\u5230\u4e34\u65f6\u53d8\u91cfbatch\u91cc for i := uint32(0); i < n; i++ { batch[i] = _p_.runq[(h+i)%uint32(len(_p_.runq))].ptr() } if !atomic.Cas(&_p_.runqhead, h, h+n) { // cas-release, commits consume return false } // \u628a\u8981put\u7684g\u4e5f\u653e\u8fdbbatch\u53bb batch[n] = gp if randomizeScheduler { for i := uint32(1); i <= n; i++ { j := fastrandn(i + 1) batch[i], batch[j] = batch[j], batch[i] } } // \u628a\u53d6\u51fa\u6765\u7684\u4e00\u534arunq\u7ec4\u6210\u94fe\u8868 for i := uint32(0); i < n; i++ { batch[i].schedlink.set(batch[i+1]) } // \u5c06\u4e00\u534a\u7684runq\u653e\u5230global\u961f\u5217\u91cc,\u4e00\u6b21\u591a\u8f6c\u79fb\u4e00\u4e9b\u7701\u5f97\u8f6c\u79fb\u9891\u7e41 lock(&sched.lock) globrunqputbatch(batch[0], batch[n], int32(n+1)) unlock(&sched.lock) return true } func globrunqputbatch(ghead *g, gtail *g, n int32) { gtail.schedlink = 0 if sched.runqtail != 0 { sched.runqtail.ptr().schedlink.set(ghead) } else { sched.runqhead.set(ghead) } sched.runqtail.set(gtail) sched.runqsize += n } runqput \u65b9\u6cd5\u5f52\u8fd8\u6267\u884c\u5b8c\u7684 G,runq \u5b9a\u4e49\u662f runq [256]guintptr\uff0c\u6709\u56fa\u5b9a\u7684\u957f\u5ea6\uff0c\u56e0\u6b64\u5f53\u524d P \u91cc\u7684\u5f85\u8fd0\u884c G \u8d85\u8fc7 256 \u7684\u65f6\u5019\u8bf4\u660e\u8fc7\u591a\u4e86\uff0c\u5219\u6267\u884c runqputslow \u65b9\u6cd5\u628a\u4e00\u534a G \u6254\u7ed9\u5168\u5c40 G \u94fe\u8868\uff0cglobrunqputbatch \u8fde\u63a5\u5168\u5c40\u94fe\u8868\u7684\u5934\u5c3e\u6307\u9488\u3002 \u4f46\u53ef\u80fd\u522b\u7684 P \u91cc\u9762\u5e76\u6ca1\u6709\u8d85\u8fc7 256\uff0c\u5c31\u4e0d\u4f1a\u653e\u5230\u5168\u5c40 G \u94fe\u8868\u91cc\uff0c\u751a\u81f3\u53ef\u80fd\u4e00\u76f4\u7ef4\u6301\u5728\u4e0d\u5230 256 \u4e2a\u3002\u8fd9\u5c31\u501f\u52a9\u7b2c 2 \u4e2a\u9014\u5f84\u4e86\uff1a \u7b2c 2 \u79cd\u9014\u5f84\u5b9e\u73b0\u5982\u4e0b\uff1a // runtime/proc.go // \u4ece\u5176\u5b83\u5730\u65b9\u83b7\u53d6G func findrunnable() (gp *g, inheritTime bool) { ...... // \u5c1d\u8bd54\u6b21\u4ece\u522b\u7684P\u5077 for i := 0; i < 4; i++ { for enum := stealOrder.start(fastrand()); !enum.done(); enum.next() { if sched.gcwaiting != 0 { goto top } stealRunNextG := i > 2 // first look for ready queues with more than 1 g // \u5728\u8fd9\u91cc\u5f00\u59cb\u9488\u5bf9P\u8fdb\u884c\u5077\u53d6\u64cd\u4f5c if gp := runqsteal(_p_, allp[enum.position()], stealRunNextG); gp != nil { return gp, false } } } } \u4ece\u522b\u7684 P \u91cc\u9762\"\u5077\u53d6\"\u4e00\u4e9b G \u8fc7\u6765\u6267\u884c\u4e86\u3002runqsteal \u65b9\u6cd5\u5b9e\u73b0\u4e86\"\u5077\u53d6\"\u64cd\u4f5c\u3002 // runtime/proc.go // \u5077\u53d6P2\u4e00\u534a\u5230\u672c\u5730\u8fd0\u884c\u961f\u5217\uff0c\u5931\u8d25\u5219\u8fd4\u56denil func runqsteal(_p_, p2 *p, stealRunNextG bool) *g { t := _p_.runqtail n := runqgrab(p2, &_p_.runq, t, stealRunNextG) if n == 0 { return nil } n-- // \u8fd4\u56de\u5c3e\u90e8\u7684\u4e00\u4e2aG gp := _p_.runq[(t+n)%uint32(len(_p_.runq))].ptr() if n == 0 { return gp } h := atomic.Load(&_p_.runqhead) // load-acquire, synchronize with consumers if t-h+n >= uint32(len(_p_.runq)) { throw(\"runqsteal: runq overflow\") } atomic.Store(&_p_.runqtail, t+n) // store-release, makes the item available for consumption return gp } // \u4eceP\u91cc\u83b7\u53d6\u4e00\u534a\u7684G,\u653e\u5230batch\u91cc func runqgrab(_p_ *p, batch *[256]guintptr, batchHead uint32, stealRunNextG bool) uint32 { for { // \u8ba1\u7b97\u4e00\u534a\u7684\u6570\u91cf h := atomic.Load(&_p_.runqhead) // load-acquire, synchronize with other consumers t := atomic.Load(&_p_.runqtail) // load-acquire, synchronize with the producer n := t - h n = n - n/2 ...... // \u5c06\u5077\u5230\u7684\u4efb\u52a1\u8f6c\u79fb\u5230\u672c\u5730P\u961f\u5217\u91cc for i := uint32(0); i < n; i++ { g := _p_.runq[(h+i)%uint32(len(_p_.runq))] batch[(batchHead+i)%uint32(len(batch))] = g } if atomic.Cas(&_p_.runqhead, h, h+n) { // cas-release, commits consume return n } } } \u4e0a\u9762\u53ef\u4ee5\u770b\u51fa\u4ece\u522b\u7684 P \u91cc\u9762\u5077(steal)\u4e86\u4e00\u534a\uff0c\u8fd9\u6837\u5c31\u8db3\u591f\u8fd0\u884c\u4e86\u3002\u6709\u4e86\u201c\u5077\u53d6\u201d\u64cd\u4f5c\u4e5f\u5c31\u5145\u5206\u5229\u7528\u4e86\u591a\u7ebf\u7a0b\u7684\u8d44\u6e90\u3002 4.\u8c03\u5ea6\u5faa\u73af\u4e2d\u5982\u4f55\u8ba9\u51fa CPU 4.1 \u6267\u884c\u5b8c\u6210\u8ba9\u51fa CPU \u7edd\u5927\u591a\u6570\u573a\u666f\u4e0b\u6211\u4eec\u7a0b\u5e8f\u90fd\u662f\u6267\u884c\u5b8c\u4e00\u4e2a G\uff0c\u518d\u6267\u884c\u53e6\u4e00\u4e2a G\uff0c\u90a3\u6211\u4eec\u5c31\u770b\u4e0b G \u662f\u5982\u4f55\u88ab\u6267\u884c\u4ee5\u53ca\u6267\u884c\u5b8c\u5982\u4f55\u9000\u51fa\u7684\u3002 \u5148\u770b G \u5982\u4f55\u88ab\u6267\u884c\uff1a // runtime/proc.go func execute(gp *g, inheritTime bool) { _g_ := getg() casgstatus(gp, _Grunnable, _Grunning) ...... // \u771f\u6b63\u7684\u6267\u884cG\uff0c\u5207\u6362\u5230\u8be5G\u7684\u6808\u5e27\u4e0a\u6267\u884c\uff08\u6c47\u7f16\u5b9e\u73b0\uff09 gogo(&gp.sched) } execute \u65b9\u6cd5\u5148\u66f4\u6539 G \u7684\u72b6\u6001\u4e3a_Grunning \u8868\u793a\u8fd0\u884c\u4e2d,\u6700\u7ec8\u7ed9 gogo \u65b9\u6cd5\u505a\u5b9e\u9645\u7684\u6267\u884c\u64cd\u4f5c\u3002\u800c gogo \u65b9\u6cd5\u5219\u662f\u6c47\u7f16\u5b9e\u73b0\u3002\u518d\u6765\u770b\u4e0b gogo \u65b9\u6cd5\u7684\u5b9e\u73b0: // runtime.asm_amd64.s TEXT runtime\u00b7gogo(SB), NOSPLIT, $16-8 MOVQ buf+0(FP), BX // gobuf \u628a0\u504f\u79fb\u76848\u4e2a\u5b57\u8282\u7ed9BX\u5bc4\u5b58\u5668, gobuf\u7ed3\u6784\u7684\u524d8\u4e2a\u5b57\u8282\u5c31\u662fSP\u6307\u9488 // If ctxt is not nil, invoke deletion barrier before overwriting. MOVQ gobuf_ctxt(BX), AX // \u5728\u628agobuf\u7684ctxt\u53d8\u91cf\u7ed9AX\u5bc4\u5b58\u5668 TESTQ AX, AX // \u5224\u65adAX\u5bc4\u5b58\u5668\u662f\u5426\u4e3a\u7a7a,\u4f20\u8fdb\u6765gp.sched\u7684\u8bdd\u80af\u5b9a\u4e0d\u4e3a\u7a7a\u4e86,\u56e0\u6b64JZ nilctxt\u4e0d\u8df3\u8f6c JZ nilctxt LEAQ gobuf_ctxt(BX), AX MOVQ AX, 0(SP) MOVQ $0, 8(SP) CALL runtime\u00b7writebarrierptr_prewrite(SB) MOVQ buf+0(FP), BX nilctxt: // \u4e0b\u9762\u5219\u662f\u51fd\u6570\u6808\u7684BP SP\u6307\u9488\u79fb\u52a8\uff0c\u6700\u540e\u8fdb\u5165\u5230\u6307\u5b9a\u7684\u4ee3\u7801\u533a\u57df MOVQ gobuf_g(BX), DX MOVQ 0(DX), CX // make sure g != nil get_tls(CX) MOVQ DX, g(CX) MOVQ gobuf_sp(BX), SP // restore SP MOVQ gobuf_ret(BX), AX MOVQ gobuf_ctxt(BX), DX MOVQ gobuf_bp(BX), BP MOVQ $0, gobuf_sp(BX) // clear to help garbage collector MOVQ $0, gobuf_ret(BX) MOVQ $0, gobuf_ctxt(BX) MOVQ $0, gobuf_bp(BX) MOVQ gobuf_pc(BX), BX // PC\u6307\u9488\u6307\u5411\u9000\u51fa\u65f6\u8981\u6267\u884c\u7684\u51fd\u6570\u5730\u5740 JMP BX // \u8df3\u8f6c\u5230\u6267\u884c\u4ee3\u7801\u5904 // runtime/runtime2.go type gobuf struct { // The offsets of sp, pc, and g are known to (hard-coded in) libmach. // // ctxt is unusual with respect to GC: it may be a // heap-allocated funcval so write require a write barrier, // but gobuf needs to be cleared from assembly. We take // advantage of the fact that the only path that uses a // non-nil ctxt is morestack. As a result, gogo is the only // place where it may not already be nil, so gogo uses an // explicit write barrier. Everywhere else that resets the // gobuf asserts that ctxt is already nil. sp uintptr pc uintptr g guintptr ctxt unsafe.Pointer // this has to be a pointer so that gc scans it ret sys.Uintreg lr uintptr bp uintptr // for GOEXPERIMENT=framepointer } gogo \u65b9\u6cd5\u4f20\u7684\u53c2\u6570\u6ce8\u610f\u662f gp.sched,\u800c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u91cc\u53ef\u4ee5\u770b\u5230\u4fdd\u5b58\u4e86\u719f\u6089\u7684\u51fd\u6570\u6808\u5bc4\u5b58\u5668 SP/PC/BP\uff0c\u80fd\u60f3\u5230\u662f\u628a\u6267\u884c\u6808\u4f20\u4e86\u8fdb\u53bb(\u65e2\u7136\u662f\u6267\u884c\u4e00\u4e2a G\uff0c\u5f53\u7136\u8981\u628a\u6267\u884c\u6808\u4f20\u8fdb\u53bb\u4e86)\u3002\u53ef\u4ee5\u770b\u5230\u5728 gogo \u51fd\u6570\u4e2d\u5b9e\u8d28\u5c31\u53ea\u662f\u505a\u4e86\u51fd\u6570\u6808\u6307\u9488\u7684\u79fb\u52a8\u3002 \u8fd9\u4e2a\u6267\u884c G \u7684\u64cd\u4f5c\uff0c\u719f\u6089\u51fd\u6570\u8c03\u7528\u7684\u51fd\u6570\u6808\u7684\u57fa\u672c\u539f\u7406\u7684\u4eba\u60f3\u5fc5\u6709\u4e9b\u5370\u8c61(\u5982\u679c\u4e0d\u719f\u6089\u8bf7\u81ea\u884c\u641c\u7d22)\uff0c\u6267\u884c\u4e00\u4e2a G \u5176\u5b9e\u5c31\u662f\u6267\u884c\u51fd\u6570\u4e00\u6837\u5207\u6362\u5230\u5bf9\u5e94\u7684\u51fd\u6570\u6808\u5e27\u4e0a\u3002 C \u8bed\u8a00\u91cc\u6808\u5e27\u521b\u5efa\u7684\u65f6\u5019\u6709\u4e2a IP \u5bc4\u5b58\u5668\u6307\u5411\"return address\",\u5373\u4e3b\u8c03\u51fd\u6570\u7684\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\uff0c \u88ab\u8c03\u51fd\u6570\u9000\u51fa\u7684\u65f6\u5019\u901a\u8fc7\u8be5\u6307\u9488\u56de\u5230\u8c03\u7528\u51fd\u6570\u91cc\u3002\u5728 Go \u8bed\u8a00\u91cc\u6709\u4e2a PC \u5bc4\u5b58\u5668\u6307\u5411\u9000\u51fa\u51fd\u6570\u3002\u90a3\u4e48\u4e0b PC \u5bc4\u5b58\u5668\u6307\u5411\u7684\u662f\u54ea\u91cc\uff1f\u6211\u4eec\u56de\u5230\u521b\u5efa G \u7684\u5730\u65b9\u770b\u4e0b\u4ee3\u7801\uff1a // runtime/proc.go func newproc1(fn *funcval, argp *uint8, narg int32, nret int32, callerpc uintptr) *g { ...... // \u4ece\u5f53\u524dP\u91cc\u9762\u590d\u7528\u4e00\u4e2a\u7a7a\u95f2G newg := gfget(_p_) // \u5982\u679c\u6ca1\u6709\u7a7a\u95f2G\u5219\u65b0\u5efa\u4e00\u4e2a,\u9ed8\u8ba4\u5806\u5927\u5c0f\u4e3a_StackMin=2048 bytes if newg == nil { newg = malg(_StackMin) casgstatus(newg, _Gidle, _Gdead) // \u628a\u65b0\u521b\u5efa\u7684G\u6dfb\u52a0\u5230\u5168\u5c40allg\u91cc allgadd(newg) // publishes with a g->status of Gdead so GC scanner doesn't look at uninitialized stack. } ...... newg.sched.sp = sp newg.stktopsp = sp newg.sched.pc = funcPC(goexit) + sys.PCQuantum // \u8bb0\u5f55\u5f53\u524d\u4efb\u52a1\u7684pc\u5bc4\u5b58\u5668\u4e3agoexit\u65b9\u6cd5\uff0c\u7528\u4e8e\u5f53\u6267\u884cG\u7ed3\u675f\u540e\u627e\u5230\u9000\u51fa\u65b9\u6cd5\uff0c\u4ece\u800c\u518d\u6b21\u8fdb\u5165\u8c03\u5ea6\u5faa\u73af // +PCQuantum so that previous instruction is in same function newg.sched.g = guintptr(unsafe.Pointer(newg)) gostartcallfn(&newg.sched, fn) newg.gopc = callerpc newg.startpc = fn.fn ....... return newg } \u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u7ed9 G \u7684\u6267\u884c\u73af\u5883\u91cc\u7684 pc \u53d8\u91cf\u8d4b\u503c\u4e86\u4e00\u4e2a goexit \u7684\u51fd\u6570\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u8bf4 G \u6b63\u5e38\u6267\u884c\u5b8c\u9000\u51fa\u65f6\u6267\u884c\u7684\u662f goexit \u51fd\u6570\u3002\u518d\u770b\u4e0b\u8be5\u51fd\u6570\u7684\u5b9e\u73b0: // runtime/asm_amd64.s // The top-most function running on a goroutine // returns to goexit+PCQuantum. TEXT runtime\u00b7goexit(SB),NOSPLIT,$0-0 BYTE $0x90 // NOP CALL runtime\u00b7goexit1(SB) // does not return // traceback from goexit1 must hit code range of goexit BYTE $0x90 // NOP // runtime/proc.go // G\u6267\u884c\u7ed3\u675f\u540e\u56de\u5230\u8fd9\u91cc\u653e\u5230P\u7684\u672c\u5730\u961f\u5217\u91cc func goexit1() { if raceenabled { racegoend() } if trace.enabled { traceGoEnd() } // \u5207\u6362\u5230g0\u6765\u91ca\u653eG mcall(goexit0) } // g0\u4e0b\u5f53G\u6267\u884c\u7ed3\u675f\u540e\u56de\u5230\u8fd9\u91cc\u653e\u5230P\u7684\u672c\u5730\u961f\u5217\u91cc func goexit0(gp *g) { ...... gfput(_g_.m.p.ptr(), gp) schedule() } \u4ee3\u7801\u4e2d\u5207\u6362\u5230\u4e86 G0 \u4e0b\u6267\u884c\u4e86 schedule \u65b9\u6cd5\uff0c\u518d\u6b21\u8fdb\u5ea6\u4e86\u4e0b\u4e00\u8f6e\u8c03\u5ea6\u5faa\u73af\u3002 \u4ee5\u4e0a\u5c31\u662f\u6b63\u5e38\u6267\u884c\u4e00\u4e2a G \u5e76\u6b63\u5e38\u9000\u51fa\u7684\u5b9e\u73b0\u3002 4.2 \u4e3b\u52a8\u8ba9\u51fa CPU \u5728\u5b9e\u9645\u573a\u666f\u4e2d\u8fd8\u6709\u4e00\u4e9b\u6ca1\u6709\u6267\u884c\u5b8c\u6210\u7684 G\uff0c\u800c\u53c8\u9700\u8981\u4e34\u65f6\u505c\u6b62\u6267\u884c\uff0c\u6bd4\u5982 time.Sleep\u3001IO \u963b\u585e\u7b49\u7b49\uff0c\u5c31\u9700\u8981\u6302\u8d77\u8be5 G\uff0c\u628a CPU \u8ba9\u51fa\u7ed9\u522b\u4eba\u4f7f\u7528\u3002\u5728 runtime \u4e0b\u9762\u6709\u4e2a gopark \u65b9\u6cd5\uff0c\u770b\u4e0b\u5b9e\u73b0\uff1a // runtime/proc.go func gopark(unlockf func(*g, unsafe.Pointer) bool, lock unsafe.Pointer, reason string, traceEv byte, traceskip int) { mp := acquirem() gp := mp.curg status := readgstatus(gp) if status != _Grunning && status != _Gscanrunning { throw(\"gopark: bad g status\") } mp.waitlock = lock mp.waitunlockf = *(*unsafe.Pointer)(unsafe.Pointer(&unlockf)) gp.waitreason = reason mp.waittraceev = traceEv mp.waittraceskip = traceskip releasem(mp) // can't do anything that might move the G between Ms here. // mcall \u5728M\u91cc\u4ece\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684G\u5207\u6362\u5230g0 // park_m \u5728\u5207\u6362\u5230\u7684g0\u4e0b\u5148\u628a\u4f20\u8fc7\u6765\u7684G\u5207\u6362\u4e3a_Gwaiting\u72b6\u6001\u6302\u8d77\u8be5G // \u8c03\u7528\u56de\u8c03\u51fd\u6570waitunlockf()\u7531\u5916\u5c42\u51b3\u5b9a\u662f\u5426\u7b49\u5f85\u89e3\u9501\uff0c\u8fd4\u56detrue\u5219\u7b49\u5f85\u89e3\u9501\u4e0d\u5728\u6267\u884cG\uff0c\u8fd4\u56defalse\u5219\u4e0d\u7b49\u5f85\u89e3\u9501\u7ee7\u7eed\u6267\u884c mcall(park_m) } // runtime/stubs.go // mcall switches from the g to the g0 stack and invokes fn(g), // where g is the goroutine that made the call. // mcall saves g's current PC/SP in g->sched so that it can be restored later. ...... func mcall(fn func(*g)) // runtime/proc.go func park_m(gp *g) { _g_ := getg() // \u6b64\u5904\u83b7\u5f97\u7684\u662fg0,\u800c\u4e0d\u662fgp if trace.enabled { traceGoPark(_g_.m.waittraceev, _g_.m.waittraceskip) } casgstatus(gp, _Grunning, _Gwaiting) dropg() // \u628ag0\u4eceM\u7684\"\u5f53\u524d\u8fd0\u884c\"\u91cc\u5265\u79bb\u51fa\u6765 if _g_.m.waitunlockf != nil { fn := *(*func(*g, unsafe.Pointer) bool)(unsafe.Pointer(&_g_.m.waitunlockf)) ok := fn(gp, _g_.m.waitlock) _g_.m.waitunlockf = nil _g_.m.waitlock = nil if !ok { // \u5982\u679c\u4e0d\u9700\u8981\u7b49\u5f85\u89e3\u9501\uff0c\u5219\u5207\u6362\u5230_Grunnable\u72b6\u6001\u5e76\u76f4\u63a5\u6267\u884cG if trace.enabled { traceGoUnpark(gp, 2) } casgstatus(gp, _Gwaiting, _Grunnable) execute(gp, true) // Schedule it back, never returns. } } schedule() } gopark \u662f\u8fdb\u884c\u8c03\u5ea6\u51fa\u8ba9 CPU \u8d44\u6e90\u7684\u65b9\u6cd5\uff0c\u91cc\u9762\u6709\u4e2a\u65b9\u6cd5 mcall()\uff0c\u6ce8\u91ca\u91cc\u8fd9\u6837\u63cf\u8ff0\uff1a \u4ece\u5f53\u524d\u8fd0\u884c\u7684 G \u5207\u6362\u5230 g0 \u7684\u8fd0\u884c\u6808\u4e0a\uff0c\u7136\u540e\u8c03\u7528 fn(g)\uff0c\u8fd9\u91cc\u88ab\u8c03\u7528\u7684 G \u662f\u8c03\u7528 mcall \u65b9\u6cd5\u65f6\u7684 G\u3002mcall \u65b9\u6cd5\u4fdd\u5b58\u5f53\u524d\u8fd0\u884c\u7684 G \u7684 PC/SP \u5230 g->sched \u91cc\uff0c\u56e0\u6b64\u8be5 G \u53ef\u4ee5\u5728\u4ee5\u540e\u88ab\u91cd\u65b0\u6062\u590d\u6267\u884c. \u5728\u672c\u7ae0\u5f00\u59cb\u4ecb\u7ecd\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\u6709\u63d0\u5230 M \u521b\u5efa\u7684\u65f6\u5019\u7ed1\u5b9a\u4e86\u4e00\u4e2a g0\uff0c\u8c03\u5ea6\u5de5\u4f5c\u662f\u8fd0\u884c\u5728 g0 \u7684\u6808\u4e0a\u7684\u3002mcall \u65b9\u6cd5\u901a\u8fc7 g0 \u5148\u628a\u5f53\u524d\u8c03\u7528\u7684 G \u7684\u6267\u884c\u6808\u6682\u5b58\u5230 g->sched \u53d8\u91cf\u91cc\uff0c\u7136\u540e\u5207\u6362\u5230 g0 \u7684\u6267\u884c\u6808\u4e0a\u6267\u884c park_m\u3002park_m \u65b9\u6cd5\u91cc\u628a gp \u7684\u72b6\u6001\u4ece _Grunning \u5207\u6362\u5230 _Gwaiting \u8868\u660e\u8fdb\u5165\u5230\u7b49\u5f85\u5524\u9192\u72b6\u6001\uff0c\u6b64\u65f6\u4f11\u7720 G \u7684\u64cd\u4f5c\u5c31\u5b8c\u6210\u4e86\u3002\u63a5\u4e0b\u6765\u65e2\u7136 G \u4f11\u7720\u4e86\uff0cCPU \u7ebf\u7a0b\u603b\u4e0d\u80fd\u95f2\u4e0b\u6765\uff0c\u5728 park_m \u65b9\u6cd5\u91cc\u53c8\u53ef\u4ee5\u770b\u5230 schedule \u65b9\u6cd5\uff0c\u5f00\u59cb\u8fdb\u5165\u5230\u5230\u4e00\u8f6e\u8c03\u5ea6\u5faa\u73af\u4e86\u3002 park_m \u65b9\u6cd5\u91cc\u8fd8\u6709\u6bb5\u5c0f\u63d2\u66f2\uff0c\u8fdb\u5165\u8c03\u5ea6\u5faa\u73af\u4e4b\u524d\u8fd8\u6709\u4e2a\u5bf9 waitunlockf \u65b9\u6cd5\u7684\u5224\u65ad\uff0c\u8be5\u65b9\u6cd5\u610f\u601d\u662f\u5982\u679c\u89e3\u9501\u4e0d\u6210\u529f\u5219\u8c03\u7528 execute \u65b9\u6cd5\u7ee7\u7eed\u6267\u884c\u4e4b\u524d\u7684 G\uff0c\u800c\u8be5\u65b9\u6cd5\u6c38\u8fdc\u4e0d\u4f1a return\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u518d\u6b21\u8fdb\u5165\u4e0b\u4e00\u6b21\u8c03\u5ea6\u3002\u4e5f\u5c31\u662f\u8bf4\u7ed9\u5916\u90e8\u4e00\u4e2a\u63a7\u5236\u662f\u5426\u8981\u8fdb\u884c\u4e0b\u4e00\u4e2a\u8c03\u5ea6\u7684\u9009\u62e9\u3002 4.3 \u62a2\u5360\u8ba9\u51fa CPU \u56de\u60f3\u5728 runtime.main()\u91cc\u9762\u6709\u5355\u72ec\u542f\u52a8\u4e86\u4e00\u4e2a\u76d1\u63a7\u4efb\u52a1\uff0c\u65b9\u6cd5\u662f sysmon\u3002\u770b\u4e0b\u8be5\u65b9\u6cd5\uff1a // runtime/proc.go func sysmon() { ...... for { // delay\u53c2\u6570\u7528\u4e8e\u63a7\u5236for\u5faa\u73af\u7684\u95f4\u9694\uff0c\u4e0d\u81f3\u4e8e\u65e0\u9650\u6b7b\u5faa\u73af\u3002 // \u63a7\u5236\u903b\u8f91\u662f\u524d50\u6b21\u6bcf\u6b21sleep 20\u5fae\u79d2\uff0c\u8d85\u8fc750\u6b21\u5219\u6bcf\u6b21\u7ffb2\u500d\uff0c\u76f4\u5230\u6700\u592710\u6beb\u79d2 if idle == 0 { // start with 20us sleep... delay = 20 } else if idle > 50 { // start doubling the sleep after 1ms... delay *= 2 } if delay > 10*1000 { // up to 10ms delay = 10 * 1000 } usleep(delay) lastpoll := int64(atomic.Load64(&sched.lastpoll)) now := nanotime() if lastpoll != 0 && lastpoll+10*1000*1000 < now { atomic.Cas64(&sched.lastpoll, uint64(lastpoll), uint64(now)) gp := netpoll(false) // non-blocking - returns list of goroutines if gp != nil { ...... incidlelocked(-1) // \u628aepoll ready\u7684G\u5217\u8868\u6ce8\u5165\u5230\u5168\u5c40runq\u91cc injectglist(gp) incidlelocked(1) } } // retake P's blocked in syscalls // and preempt long running G's if retake(now) != 0 { idle = 0 } else { idle++ } ...... } } func retake(now int64) uint32 { n := 0 for i := int32(0); i < gomaxprocs; i++ { _p_ := allp[i] // \u4ece\u6240\u6709P\u91cc\u9762\u53bb\u627e if _p_ == nil { continue } pd := &_p_.sysmontick s := _p_.status if s == _Psyscall { ...... } else if s == _Prunning { // \u9488\u5bf9\u6b63\u5728\u8fd0\u884c\u7684P // Preempt G if it's running for too long. t := int64(_p_.schedtick) if int64(pd.schedtick) != t { pd.schedtick = uint32(t) pd.schedwhen = now continue } // \u5982\u679c\u5df2\u7ecf\u8d85\u8fc7forcePreemptNS(10ms)\uff0c\u5219\u62a2\u5360 if pd.schedwhen+forcePreemptNS > now { continue } // \u62a2\u5360P preemptone(_p_) } } return uint32(n) } func preemptone(_p_ *p) bool { mp := _p_.m.ptr() if mp == nil || mp == getg().m { return false } // \u627e\u5230\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684G gp := mp.curg if gp == nil || gp == mp.g0 { return false } // \u6807\u8bb0\u62a2\u5360\u72b6\u6001 gp.preempt = true // Every call in a go routine checks for stack overflow by // comparing the current stack pointer to gp->stackguard0. // Setting gp->stackguard0 to StackPreempt folds // preemption into the normal stack overflow check. // G\u91cc\u9762\u7684\u6bcf\u4e00\u6b21\u8c03\u7528\u90fd\u4f1a\u6bd4\u8f83\u5f53\u524d\u6808\u6307\u9488\u4e0e gp->stackguard0 \u6765\u68c0\u67e5\u5806\u6808\u6ea2\u51fa // \u8bbe\u7f6e gp->stackguard0 \u4e3a StackPreempt \u6765\u89e6\u53d1\u6b63\u5e38\u7684\u5806\u6808\u6ea2\u51fa\u68c0\u6d4b gp.stackguard0 = stackPreempt return true } sysmon() \u65b9\u6cd5\u5904\u4e8e\u65e0\u9650 for \u5faa\u73af\uff0c\u6574\u4e2a\u8fdb\u7a0b\u7684\u751f\u547d\u5468\u671f\u76d1\u63a7\u7740\u3002retake()\u65b9\u6cd5\u6bcf\u6b21\u5bf9\u6240\u6709\u7684 P \u904d\u5386\u68c0\u67e5\u8d85\u8fc7 10ms \u7684\u8fd8\u5728\u8fd0\u884c\u7684 G\uff0c\u5982\u679c\u6709\u8d85\u8fc7 10ms \u7684\u5219\u901a\u8fc7 preemptone()\u8fdb\u884c\u62a2\u5360\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u8fd9\u91cc\u53ea\u628a gp.stackguard0 \u8d4b\u503c\u4e86\u4e00\u4e2a stackPreempt\uff0c\u5e76\u6ca1\u6709\u505a\u8ba9\u51fa CPU \u7684\u64cd\u4f5c\uff0c\u56e0\u6b64\u8fd9\u91cc\u7684\u62a2\u5360\u5b9e\u8d28\u53ea\u662f\u4e00\u4e2a\u201d\u6807\u8bb0\u201c\u62a2\u5360\u3002\u90a3\u4e48\u771f\u6b63\u505c\u6b62 G \u6267\u884c\u7684\u64cd\u4f5c\u5728\u54ea\u91cc\uff1f // runtime/stack.go func newstack(ctxt unsafe.Pointer) { ...... // NOTE: stackguard0 may change underfoot, if another thread // is about to try to preempt gp. Read it just once and use that same // value now and below. // \u8fd9\u91cc\u7684\u903b\u8f91\u662f\u4e3aG\u7684\u62a2\u5360\u505a\u7684\u5224\u65ad\u3002 // \u5224\u65ad\u662f\u5426\u662f\u62a2\u5360\u5f15\u53d1\u6808\u6269\u5f20\uff0c\u5982\u679c gp.stackguard0 == stackPreempt \u5219\u8bf4\u660e\u662f\u62a2\u5360\u89e6\u53d1\u7684\u6808\u6269\u5f20 preempt := atomic.Loaduintptr(&gp.stackguard0) == stackPreempt ...... //\u5982\u679c\u5224\u65ad\u53ef\u4ee5\u62a2\u5360, \u5219\u7ee7\u7eed\u5224\u65ad\u662f\u5426GC\u5f15\u8d77\u7684, \u5982\u679c\u662f\u5219\u5bf9G\u7684\u6808\u7a7a\u95f4\u6267\u884c\u6807\u8bb0\u5904\u7406(\u626b\u63cf\u6839\u5bf9\u8c61)\u7136\u540e\u7ee7\u7eed\u8fd0\u884c, //\u5982\u679c\u4e0d\u662fGC\u5f15\u8d77\u7684\u5219\u8c03\u7528gopreempt_m\u51fd\u6570\u5b8c\u6210\u62a2\u5360. if preempt { ...... // \u505c\u6b62\u5f53\u524d\u8fd0\u884c\u72b6\u6001\u7684G,\u6700\u540e\u653e\u5230\u5168\u5c40runq\u91cc,\u91ca\u653eM // \u8fd9\u91cc\u4f1a\u8fdb\u5165schedule\u5faa\u73af.\u963b\u585e\u5230\u8fd9\u91cc gopreempt_m(gp) // never return } ...... } // runtime/proc.go func goschedImpl(gp *g) { status := readgstatus(gp) if status&^_Gscan != _Grunning { dumpgstatus(gp) throw(\"bad g status\") } casgstatus(gp, _Grunning, _Grunnable) dropg() lock(&sched.lock) globrunqput(gp) unlock(&sched.lock) schedule() } \u6211\u4eec\u90fd\u77e5\u9053 Go \u7684\u8c03\u5ea6\u662f\u975e\u62a2\u5360\u5f0f\u7684\uff0c\u8981\u60f3\u5b9e\u73b0 G \u4e0d\u88ab\u957f\u65f6\u95f4\uff0c\u5c31\u53ea\u80fd\u4e3b\u52a8\u89e6\u53d1\u62a2\u5360\uff0c\u800c Go \u89e6\u53d1\u62a2\u5360\u7684\u5b9e\u9645\u5c31\u662f\u5728\u6808\u6269\u5f20\u7684\u65f6\u5019\uff0c\u5728 newstack \u65b0\u521b\u5efa\u6808\u7a7a\u95f4\u7684\u65f6\u5019\u68c0\u6d4b\u662f\u5426\u6709\u62a2\u5360\u6807\u8bb0(\u4e5f\u5c31\u662f gp.stackguard0 \u662f\u5426\u7b49\u4e8e stackPreempt)\uff0c\u5982\u679c\u6709\u5219\u901a\u8fc7 goschedImpl \u65b9\u6cd5\u518d\u6b21\u8fdb\u5165\u5230\u719f\u6089\u7684 schedule \u8c03\u5ea6\u5faa\u73af\u3002 4.4 \u7cfb\u7edf\u8c03\u7528\u8ba9\u51fa CPU \u6211\u4eec\u7a0b\u5e8f\u90fd\u8dd1\u5728\u7cfb\u7edf\u4e0a\u9762\uff0c\u5c31\u7ed5\u4e0d\u5f00\u4e0e\u7cfb\u7edf\u7684\u4ea4\u4e92\u3002\u90a3\u4e48\u5f53\u6211\u4eec\u7684 Go \u7a0b\u5e8f\u505a\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u7684\u65b9\u6cd5\u4e0d\u786e\u5b9a\u4f1a\u963b\u585e\u591a\u4e45\uff0c\u800c\u6211\u4eec\u7a0b\u5e8f\u53c8\u4e0d\u77e5\u9053\u8fd0\u884c\u7684\u72b6\u6001\u8be5\u600e\u4e48\u529e\uff1f \u5728 Go \u4e2d\u5e76\u6ca1\u6709\u76f4\u63a5\u5bf9\u7cfb\u7edf\u5185\u6838\u51fd\u6570\u8c03\u7528\uff0c\u800c\u662f\u5c01\u88c5\u4e86\u4e2a syscall.Syscall \u65b9\u6cd5\uff0c\u5148\u770b\u4e0b\u5b9e\u73b0\uff1a // syscall/syscall_unix.go func Syscall(trap, a1, a2, a3 uintptr) (r1, r2 uintptr, err Errno) // syscall/asm_linux_amd64.s TEXT \u00b7Syscall(SB),NOSPLIT,$0-56 CALL runtime\u00b7entersyscall(SB) MOVQ a1+8(FP), DI MOVQ a2+16(FP), SI MOVQ a3+24(FP), DX MOVQ $0, R10 MOVQ $0, R8 MOVQ $0, R9 MOVQ trap+0(FP), AX // syscall entry SYSCALL // \u8fdb\u884c\u7cfb\u7edf\u8c03\u7528 CMPQ AX, $0xfffffffffffff001 JLS ok MOVQ $-1, r1+32(FP) MOVQ $0, r2+40(FP) NEGQ AX MOVQ AX, err+48(FP) CALL runtime\u00b7exitsyscall(SB) RET ok: MOVQ AX, r1+32(FP) MOVQ DX, r2+40(FP) MOVQ $0, err+48(FP) CALL runtime\u00b7exitsyscall(SB) RET \u5728\u6c47\u7f16\u4ee3\u7801\u4e2d\u770b\u51fa\u5148\u662f\u6267\u884c\u4e86 runtime\u00b7entersyscall \u65b9\u6cd5\uff0c\u7136\u540e\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\uff0c\u6700\u540e\u6267\u884c\u4e86 runtime\u00b7exitsyscall(SB)\uff0c\u4ece\u5b57\u9762\u610f\u601d\u770b\u662f\u8fdb\u5165\u7cfb\u7edf\u8c03\u7528\u4e4b\u524d\u5148\u6267\u884c\u4e00\u4e9b\u903b\u8f91\uff0c\u9000\u51fa\u7cfb\u7edf\u8c03\u7528\u4e4b\u540e\u6267\u884c\u4e00\u5806\u903b\u8f91\u3002\u770b\u4e0b\u5177\u4f53\u5b9e\u73b0\uff1a // runtime/proc.go func entersyscall(dummy int32) { reentersyscall(getcallerpc(unsafe.Pointer(&dummy)), getcallersp(unsafe.Pointer(&dummy))) } func reentersyscall(pc, sp uintptr) { ...... // Leave SP around for GC and traceback. // \u4fdd\u5b58\u6267\u884c\u73b0\u573a save(pc, sp) _g_.syscallsp = sp _g_.syscallpc = pc // \u5207\u6362\u5230\u7cfb\u7edf\u8c03\u7528\u72b6\u6001 casgstatus(_g_, _Grunning, _Gsyscall) ...... // Goroutines must not split stacks in Gsyscall status (it would corrupt g->sched). // We set _StackGuard to StackPreempt so that first split stack check calls morestack. // Morestack detects this case and throws. _g_.stackguard0 = stackPreempt _g_.m.locks-- } \u8fdb\u5165\u7cfb\u7edf\u8c03\u7528\u524d\u5148\u4fdd\u5b58\u6267\u884c\u73b0\u573a\uff0c\u7136\u540e\u5207\u6362\u5230_Gsyscall \u72b6\u6001\uff0c\u6700\u540e\u6807\u8bb0\u62a2\u5360\uff0c\u7b49\u5f85\u88ab\u62a2\u5360\u8d70\u3002 // runtime/proc.go func exitsyscall(dummy int32) { ...... // Call the scheduler. mcall(exitsyscall0) ...... } func exitsyscall0(gp *g) { _g_ := getg() casgstatus(gp, _Gsyscall, _Grunnable) dropg() lock(&sched.lock) // \u83b7\u53d6\u4e00\u4e2a\u7a7a\u95f2\u7684P\uff0c\u5982\u679c\u6ca1\u6709\u5219\u653e\u5230\u5168\u5c40\u961f\u5217\u91cc\uff0c\u5982\u679c\u6709\u5219\u6267\u884c _p_ := pidleget() if _p_ == nil { globrunqput(gp) // \u5982\u679c\u6ca1\u6709P\u5c31\u653e\u5230\u5168\u5c40\u961f\u5217\u91cc,\u7b49\u5f85\u6709\u8d44\u6e90\u65f6\u6267\u884c } else if atomic.Load(&sched.sysmonwait) != 0 { atomic.Store(&sched.sysmonwait, 0) notewakeup(&sched.sysmonnote) } unlock(&sched.lock) if _p_ != nil { acquirep(_p_) execute(gp, false) // Never returns. // \u5982\u679c\u627e\u5230\u7a7a\u95f2\u7684P\u5219\u76f4\u63a5\u6267\u884c } if _g_.m.lockedg != nil { // Wait until another thread schedules gp and so m again. stoplockedm() execute(gp, false) // Never returns. } stopm() schedule() // Never returns. // \u6ca1\u6709P\u8d44\u6e90\u6267\u884c\uff0c\u5c31\u7ee7\u7eed\u4e0b\u4e00\u8f6e\u8c03\u5ea6\u5faa\u73af } \u7cfb\u7edf\u8c03\u7528\u9000\u51fa\u65f6\uff0c\u5207\u5230 G0 \u4e0b\u628a G \u72b6\u6001\u5207\u56de\u6765\uff0c\u5982\u679c\u6709\u53ef\u6267\u884c\u7684 P \u5219\u76f4\u63a5\u6267\u884c\uff0c\u5982\u679c\u6ca1\u6709\u5219\u653e\u5230\u5168\u5c40\u961f\u5217\u91cc\uff0c\u7b49\u5f85\u8c03\u5ea6\uff0c\u6700\u540e\u53c8\u770b\u5230\u4e86\u719f\u6089\u7684 schedule \u8fdb\u5165\u4e0b\u4e00\u8f6e\u8c03\u5ea6\u5faa\u73af\u3002 5.\u5f85\u6267\u884c G \u7684\u6765\u6e90 5.1 go func \u521b\u5efa G \u5f53\u5f00\u542f\u4e00\u4e2a Goroutine \u7684\u65f6\u5019\u7528\u5230 go func()\u8fd9\u6837\u7684\u8bed\u6cd5\uff0c\u5728 runtime \u4e0b\u5176\u5b9e\u8c03\u7528\u7684\u5c31\u662f newproc \u65b9\u6cd5\u3002 // runtime/proc.go func newproc(siz int32, fn *funcval) { argp := add(unsafe.Pointer(&fn), sys.PtrSize) pc := getcallerpc(unsafe.Pointer(&siz)) systemstack(func() { newproc1(fn, (*uint8)(argp), siz, 0, pc) }) } func newproc1(fn *funcval, argp *uint8, narg int32, nret int32, callerpc uintptr) *g { ...... _p_ := _g_.m.p.ptr() // \u4ece\u5f53\u524dP\u91cc\u9762\u590d\u7528\u4e00\u4e2a\u7a7a\u95f2G newg := gfget(_p_) // \u5982\u679c\u6ca1\u6709\u7a7a\u95f2G\u5219\u65b0\u5efa\u4e00\u4e2a,\u9ed8\u8ba4\u5806\u5927\u5c0f\u4e3a_StackMin=2048 bytes if newg == nil { newg = malg(_StackMin) casgstatus(newg, _Gidle, _Gdead) // \u628a\u65b0\u521b\u5efa\u7684G\u6dfb\u52a0\u5230\u5168\u5c40allg\u91cc allgadd(newg) // publishes with a g->status of Gdead so GC scanner doesn't look at uninitialized stack. } ...... if isSystemGoroutine(newg) { atomic.Xadd(&sched.ngsys, +1) } newg.gcscanvalid = false casgstatus(newg, _Gdead, _Grunnable) // \u628aG\u653e\u5230P\u91cc\u7684\u5f85\u8fd0\u884c\u961f\u5217\uff0c\u7b2c\u4e09\u53c2\u6570\u8bbe\u7f6e\u4e3atrue\uff0c\u8868\u793a\u8981\u653e\u5230runnext\u91cc\uff0c\u4f5c\u4e3a\u4f18\u5148\u8981\u6267\u884c\u7684G runqput(_p_, newg, true) // \u5982\u679c\u6709\u5176\u5b83\u7a7a\u95f2P\u5219\u5c1d\u8bd5\u5524\u9192\u67d0\u4e2aM\u6765\u6267\u884c // \u5982\u679c\u6709M\u5904\u4e8e\u81ea\u7487\u7b49\u5f85P\u6216G\u72b6\u6001\uff0c\u653e\u5f03\u3002 // NOTE: sched.nmspinning!=0\u8bf4\u660e\u6b63\u5728\u6709M\u88ab\u5524\u9192\uff0c\u8fd9\u91cc\u5224\u65adsched.nmspinnin==0\u65f6\u624d\u8fdb\u5165wakep\u662f\u9632\u6b62\u540c\u65f6\u5524\u9192\u591a\u4e2aM if atomic.Load(&sched.npidle) != 0 && atomic.Load(&sched.nmspinning) == 0 && mainStarted { wakep() } ...... return newg } newproc1 \u65b9\u6cd5\u4e2d gfget \u5148\u4ece\u7a7a\u95f2\u7684 G \u5217\u8868\u83b7\u53d6\u4e00\u4e2a G \u5bf9\u8c61\uff0c\u6ca1\u6709\u5219\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 G \u5bf9\u8c61\uff0c\u7136\u540e runqput \u653e\u5230\u5f53\u524d P \u5f85\u8fd0\u884c\u961f\u5217\u91cc\u3002 5.2 epoll \u6765\u6e90 \u56de\u60f3\u4e0a\u9762\u5206\u6790\u62a2\u5360\u4ee5\u53ca\u591a\u7ebf\u7a0b\u4e0b\u5982\u4f55\u8c03\u5ea6\u65f6\u90fd\u89c1\u5230\u4e00\u4e2a netpoll \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u662f\u4ece\u7cfb\u7edf\u5185\u6838\u83b7\u53d6\u5df2\u7ecf\u6709\u6570\u636e\u7684\u65f6\u95f4\uff0c\u7136\u540e\u6620\u5c04\u5230\u5bf9\u5e94\u7684 G \u6807\u8bb0 ready\u3002\u4e0b\u9762\u770b\u5b9e\u73b0\uff1a // runtime/proc.go func netpoll(block bool) *g { ...... var events [128]epollevent retry: n := epollwait(epfd, &events[0], int32(len(events)), waitms) if n < 0 { if n != -_EINTR { println(\"runtime: epollwait on fd\", epfd, \"failed with\", -n) throw(\"runtime: netpoll failed\") } goto retry } var gp guintptr for i := int32(0); i < n; i++ { ev := &events[i] if ev.events == 0 { continue } var mode int32 if ev.events&(_EPOLLIN|_EPOLLRDHUP|_EPOLLHUP|_EPOLLERR) != 0 { mode += 'r' } if ev.events&(_EPOLLOUT|_EPOLLHUP|_EPOLLERR) != 0 { mode += 'w' } if mode != 0 { pd := *(**pollDesc)(unsafe.Pointer(&ev.data)) netpollready(&gp, pd, mode) } } if block && gp == 0 { goto retry } return gp.ptr() } func netpollready(gpp *guintptr, pd *pollDesc, mode int32) { var rg, wg guintptr if mode == 'r' || mode == 'r'+'w' { rg.set(netpollunblock(pd, 'r', true)) } if mode == 'w' || mode == 'r'+'w' { wg.set(netpollunblock(pd, 'w', true)) } if rg != 0 { rg.ptr().schedlink = *gpp *gpp = rg } if wg != 0 { wg.ptr().schedlink = *gpp *gpp = wg } } // \u89e3\u9501pd wait\u72b6\u6001,\u6807\u8bb0\u4e3apdReady\uff0c\u5e76\u8fd4\u56de func netpollunblock(pd *pollDesc, mode int32, ioready bool) *g { gpp := &pd.rg if mode == 'w' { gpp = &pd.wg } for { old := *gpp if old == pdReady { return nil } if old == 0 && !ioready { // Only set READY for ioready. runtime_pollWait // will check for timeout/cancel before waiting. return nil } var new uintptr if ioready { new = pdReady } // \u53d8\u91cfpd.rg\u5728netpollblock\u7684\u65f6\u5019\u5df2\u7ecf\u6307\u5411\u4e86\u8fd0\u884cpd\u7684G,\u56e0\u6b64old\u5176\u5b9e\u6307\u5411G\u7684\u6307\u9488\uff0c\u800c\u4e0d\u662fpdWait\u7b49\u7b49\u7684\u72b6\u6001\u6307\u9488\u4e86 if atomic.Casuintptr(gpp, old, new) { if old == pdReady || old == pdWait { old = 0 } return (*g)(unsafe.Pointer(old)) } } } \u9996\u5148 epollwait \u4ece\u5185\u6838\u83b7\u53d6\u5230\u4e00\u6279 event\uff0c\u4e5f\u5c31\u62ff\u5230\u4e86\u6709\u6536\u5230\u5c31\u7eea\u7684 FD\u3002netpoll \u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a G \u94fe\u8868\uff0c\u5728\u8be5\u65b9\u6cd5\u91cc\u53ea\u662f\u628a\u8981\u88ab\u5524\u9192\u7684 G \u6807\u8bb0 ready\uff0c\u7136\u540e\u4ea4\u7ed9\u5916\u90e8\u5904\u7406\uff0c\u4f8b\u5982 sysmon \u4e2d\u7684\u4ee3\u7801\uff1a // runtime/proc.go func sysmon() { ...... for { ...... lastpoll := int64(atomic.Load64(&sched.lastpoll)) now := nanotime() if lastpoll != 0 && lastpoll+10*1000*1000 < now { atomic.Cas64(&sched.lastpoll, uint64(lastpoll), uint64(now)) gp := netpoll(false) // non-blocking - returns list of goroutines if gp != nil { ...... incidlelocked(-1) // \u628aepoll ready\u7684G\u5217\u8868\u6ce8\u5165\u5230\u5168\u5c40runq\u91cc injectglist(gp) incidlelocked(1) } } ...... } } // \u628aG\u5217\u8868\u6ce8\u5165\u5230\u5168\u5c40runq\u91cc func injectglist(glist *g) { ...... lock(&sched.lock) var n int for n = 0; glist != nil; n++ { gp := glist glist = gp.schedlink.ptr() casgstatus(gp, _Gwaiting, _Grunnable) globrunqput(gp) } ...... } netpoll \u8fd4\u56de\u7684\u94fe\u8868\u4ea4\u7ed9\u4e86 injectglist\uff0c\u7136\u540e\u5176\u5b9e\u662f\u653e\u5230\u4e86\u5168\u5c40 rung \u961f\u5217\u4e2d\uff0c\u7b49\u5f85\u88ab\u8c03\u5ea6\u3002 6.\u770b\u51e0\u4e2a\u4e3b\u52a8\u8ba9\u51fa CPU \u7684\u573a\u666f 6.1 time.Sleep \u5f53\u4ee3\u7801\u4e2d\u8c03\u7528 time.Sleep \u7684\u65f6\u5019\u6211\u4eec\u662f\u8981 black \u4f4f\u7a0b\u5e8f\u4e0d\u5728\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c\uff0c\u6b64\u65f6\u8be5 goroutine \u4e0d\u4f1a\u505a\u5176\u4ed6\u4e8b\u60c5\u4e86\uff0c\u7406\u5e94\u628a CPU \u8d44\u6e90\u91ca\u653e\u51fa\u6765\uff0c\u4e0b\u9762\u770b\u4e0b\u5b9e\u73b0\uff1a // runtime/time.go func timeSleep(ns int64) { if ns <= 0 { return } t := getg().timer if t == nil { t = new(timer) getg().timer = t } *t = timer{} // \u6bcf\u4e2a\u5b9a\u65f6\u4efb\u52a1\u90fd\u521b\u5efa\u4e00\u4e2atimer t.when = nanotime() + ns t.f = goroutineReady // \u8bb0\u5f55\u5524\u9192\u8be5G\u7684\u65b9\u6cd5,\u5524\u9192\u65f6\u901a\u8fc7\u8be5\u65b9\u6cd5\u6267\u884c\u5524\u9192 t.arg = getg() // \u628atimer\u4e0e\u5f53\u524dG\u5173\u8054,\u65f6\u95f4\u5230\u4e86\u5524\u9192\u65f6\u901a\u8fc7\u8be5\u53c2\u6570\u627e\u5230\u6240\u5728\u7684G lock(&timers.lock) addtimerLocked(t) // \u628atimer\u6dfb\u52a0\u5230\u6700\u5c0f\u5806\u91cc goparkunlock(&timers.lock, \"sleep\", traceEvGoSleep, 2) // \u5207\u5230G0\u8ba9\u51faCPU,\u8fdb\u5165\u4f11\u7720 } // runtime/proc.go func goparkunlock(lock *mutex, reason string, traceEv byte, traceskip int) { gopark(parkunlock_c, unsafe.Pointer(lock), reason, traceEv, traceskip) } timeSleep \u51fd\u6570\u91cc\u901a\u8fc7 addtimerLocked \u628a\u5b9a\u65f6\u5668\u52a0\u5165\u5230 timer \u7ba1\u7406\u5668\uff08timer \u901a\u8fc7\u6700\u5c0f\u5806\u7684\u6570\u636e\u7ed3\u6784\u5b58\u653e\u6bcf\u4e2a\u5b9a\u65f6\u5668\uff0c\u5728\u8fd9\u4e0d\u505a\u8be6\u7ec6\u8bf4\u660e\uff09\u540e\uff0c\u518d\u901a\u8fc7 goparkunlock \u5b9e\u73b0\u628a\u5f53\u524d G \u4f11\u7720\uff0c\u8fd9\u91cc\u770b\u5230\u4e86\u4e0a\u9762\u63d0\u5230\u7684 gopark \u65b9\u6cd5\u8fdb\u884c\u8c03\u5ea6\u5faa\u73af\u7684\u4e0a\u4e0b\u6587\u5207\u6362\u3002 \u4e0a\u9762\u4ecb\u7ecd\u7684\u662f\u4e00\u4e2a G \u5982\u4f55\u8fdb\u5165\u5230\u4f11\u7720\u72b6\u6001\u7684\u8fc7\u7a0b\uff0c\u8be5\u4f8b\u5b50\u662f\u4e2a\u5b9a\u65f6\u5668\uff0c\u5f53\u65f6\u95f4\u5230\u4e86\u7684\u8bdd\uff0c\u5f53\u524d G \u5c31\u8981\u88ab\u5524\u9192\u7ee7\u7eed\u6267\u884c\u4e86\u3002\u4e0b\u9762\u5c31\u4ecb\u7ecd\u4e0b\u5524\u9192\u7684\u6d41\u7a0b\u3002 \u8fd4\u56de\u5230\u6700\u5f00\u59cb timeSleep \u65b9\u6cd5\u91cc\u5728\u8fdb\u5165\u8c03\u5ea6\u65b9\u6cd5\u4e4b\u524d\u6709\u4e00\u4e2a addtimerLocked \u65b9\u6cd5\uff0c\u770b\u4e0b\u8fd9\u4e2a\u65b9\u6cd5\u505a\u4e86\u4ec0\u4e48\u3002 // runtime/time.go func addtimerLocked(t *timer) { // when must never be negative; otherwise timerproc will overflow // during its delta calculation and never expire other runtime timers. if t.when < 0 { t.when = 1<<63 - 1 } t.i = len(timers.t) timers.t = append(timers.t, t) //\u5c06\u5f53\u524dtimer\u6dfb\u52a0\u5230timer\u7ba1\u7406\u5668\u91cc siftupTimer(t.i) ...... // \u5982\u679c\u6ca1\u6709\u542f\u52a8timer\u7ba1\u7406\u5b9a\u65f6\u5668\uff0c\u5219\u542f\u52a8\u3002timerproc\u53ea\u4f1a\u542f\u52a8\u4e00\u6b21\uff0c\u5373\u5168\u5c40timer\u7ba1\u7406\u5668 if !timers.created { timers.created = true go timerproc() } } // runtime/time.go // Timerproc runs the time-driven events. // It sleeps until the next event in the timers heap. // If addtimer inserts a new earlier event, it wakes timerproc early. func timerproc() { timers.gp = getg() for { lock(&timers.lock) timers.sleeping = false now := nanotime() delta := int64(-1) for { if len(timers.t) == 0 { delta = -1 break } t := timers.t[0] delta = t.when - now if delta > 0 { break } if t.period > 0 { // leave in heap but adjust next time to fire t.when += t.period * (1 + -delta/t.period) siftdownTimer(0) } else { // remove from heap last := len(timers.t) - 1 if last > 0 { timers.t[0] = timers.t[last] timers.t[0].i = 0 } timers.t[last] = nil timers.t = timers.t[:last] if last > 0 { siftdownTimer(0) } t.i = -1 // mark as removed } f := t.f arg := t.arg seq := t.seq unlock(&timers.lock) if raceenabled { raceacquire(unsafe.Pointer(t)) } f(arg, seq) lock(&timers.lock) } ...... } } \u5728 addtimerLocked \u65b9\u6cd5\u7684\u6700\u4e0b\u9762\u6709\u4e2a\u903b\u8f91\u5728\u8fd0\u884c\u671f\u95f4\u5f00\u542f\u4e86\u2019\u5168\u5c40\u65f6\u95f4\u4e8b\u4ef6\u9a71\u52a8\u5668\u2019timerproc,\u8be5\u65b9\u6cd5\u4f1a\u5168\u7a0b\u904d\u5386\u6700\u5c0f\u5806\uff0c\u5bfb\u627e\u6700\u65e9\u8fdb\u5165 timer \u7ba1\u7406\u5668\u7684\u5b9a\u65f6\u5668\uff0c\u7136\u540e\u5524\u9192\u3002\u4ed6\u662f\u600e\u4e48\u627e\u5230\u8981\u5524\u9192\u54ea\u4e2a G \u7684\uff1f\u56de\u5934\u770b\u4e0b timeSleep \u65b9\u6cd5\u91cc\u628a\u5f53\u65f6\u6b63\u5728\u6267\u884c\u7684 G \u4ee5\u53ca\u5524\u9192\u65b9\u6cd5 goroutineReady \u5e26\u5230\u4e86\u6bcf\u4e2a\u5b9a\u65f6\u5668\u91cc\uff0c\u800c\u5728 timerproc \u5219\u901a\u8fc7\u627e\u5230\u671f\u7684\u5b9a\u65f6\u5668\u6267\u884c f(arg, seq) \u5373\u901a\u8fc7 goroutineReady \u65b9\u6cd5\u5524\u9192\u3002\u65b9\u6cd5\u8c03\u7528\u8fc7\u7a0b: goroutineReady() -> ready() /// runtime/time.go func goroutineReady(arg interface{}, seq uintptr) { goready(arg.(*g), 0) } // runtime/proc.go func goready(gp *g, traceskip int) { systemstack(func() { ready(gp, traceskip, true) }) } // Mark gp ready to run. func ready(gp *g, traceskip int, next bool) { if trace.enabled { traceGoUnpark(gp, traceskip) } status := readgstatus(gp) // Mark runnable. _g_ := getg() _g_.m.locks++ // disable preemption because it can be holding p in a local var if status&^_Gscan != _Gwaiting { dumpgstatus(gp) throw(\"bad g->status in ready\") } // status is Gwaiting or Gscanwaiting, make Grunnable and put on runq casgstatus(gp, _Gwaiting, _Grunnable) runqput(_g_.m.p.ptr(), gp, next) ...... } \u5728\u4e0a\u9762\u7684\u65b9\u6cd5\u91cc\u53ef\u4ee5\u770b\u5230\u5148\u628a\u4f11\u7720\u7684 G \u4ece_Gwaiting \u5207\u6362\u5230_Grunnable \u72b6\u6001\uff0c\u8868\u660e\u5df2\u7ecf\u53ef\u8fd0\u884c\u3002\u7136\u540e\u901a\u8fc7 runqput \u65b9\u6cd5\u628a G \u653e\u5230 P \u7684\u5f85\u8fd0\u884c\u961f\u5217\u91cc\uff0c\u5c31\u8fdb\u5165\u5230\u8c03\u5ea6\u5668\u7684\u8c03\u5ea6\u5faa\u73af\u91cc\u4e86\u3002 \u603b\u7ed3\uff1atime.Sleep \u60f3\u8981\u8fdb\u5165\u963b\u585e(\u4f11\u7720)\u72b6\u6001\uff0c\u5176\u5b9e\u662f\u901a\u8fc7 gopark \u65b9\u6cd5\u7ed9\u81ea\u5df1\u6807\u8bb0\u4e2a_Gwaiting \u72b6\u6001\uff0c\u7136\u540e\u628a\u81ea\u5df1\u6240\u5360\u7528\u7684 CPU \u7ebf\u7a0b\u8d44\u6e90\u7ed9\u91ca\u653e\u51fa\u6765\uff0c\u7ee7\u7eed\u6267\u884c\u8c03\u5ea6\u4efb\u52a1\uff0c\u8c03\u5ea6\u5176\u5b83\u7684 G \u6765\u8fd0\u884c\u3002\u800c\u5524\u9192\u662f\u901a\u8fc7\u628a G \u66f4\u6539\u56de_Grunnable \u72b6\u6001\u540e\uff0c\u7136\u540e\u628a G \u653e\u5165\u5230 P \u7684\u5f85\u8fd0\u884c\u961f\u5217\u91cc\u7b49\u5f85\u6267\u884c\u3002\u901a\u8fc7\u8fd9\u70b9\u8fd8\u53ef\u4ee5\u770b\u51fa\u4f11\u7720\u4e2d\u7684 G \u5176\u5b9e\u5e76\u4e0d\u5360\u7528 CPU \u8d44\u6e90\uff0c\u6700\u591a\u662f\u5360\u7528\u5185\u5b58\uff0c\u662f\u4e2a\u5f88\u8f7b\u91cf\u7ea7\u7684\u963b\u585e\u3002 6.2 sync.Mutex // sync/mutex.go func (m *Mutex) Lock() { // Fast path: grab unlocked mutex. // \u9996\u5148\u5c1d\u8bd5\u62a2\u9501\uff0c\u5982\u679c\u62a2\u5230\u5219\u76f4\u63a5\u8fd4\u56de,\u5e76\u6807\u8bb0mutexLocked\u72b6\u6001 if atomic.CompareAndSwapInt32(&m.state, 0, mutexLocked) { if race.Enabled { race.Acquire(unsafe.Pointer(m)) } return } var waitStartTime int64 starving := false awoke := false iter := 0 old := m.state for { // Don't spin in starvation mode, ownership is handed off to waiters // so we won't be able to acquire the mutex anyway. // \u5c1d\u8bd5\u81ea\u7487,\u4f46\u6709\u5982\u4e0b\u51e0\u4e2a\u6761\u4ef6\u8df3\u8fc7\u81ea\u7487,\u8fd9\u91cc\u7684\u81ea\u7487\u662f\u7528\u6237\u6001\u81ea\u7487,\u57fa\u672clock\u7684cpu\u6d88\u8017\u90fd\u8017\u5230\u8fd9\u91cc\u4e86 // 1.\u4e0d\u5728\u9965\u997f\u6a21\u5f0f\u81ea\u7487 // 2.\u8d85\u8fc74\u6b21\u5faa\u73af\uff0c\u5219\u4e0d\u518d\u81ea\u7487. (runtime_canSpin\u91cc\u9762) // 3.\u5168\u90e8P\u7a7a\u95f2\u65f6\uff0c\u4e0d\u81ea\u7487.(runtime_canSpin\u91cc\u9762) // 4.\u5f53\u524dP\u91cc\u65e0\u8fd0\u884cG\u65f6\uff0c\u4e0d\u81ea\u7487.(runtime_canSpin\u91cc\u9762) if old&(mutexLocked|mutexStarving) == mutexLocked && runtime_canSpin(iter) { // Active spinning makes sense. // Try to set mutexWoken flag to inform Unlock // to not wake other blocked goroutines. if !awoke && old&mutexWoken == 0 && old>>mutexWaiterShift != 0 && atomic.CompareAndSwapInt32(&m.state, old, old|mutexWoken) { awoke = true } runtime_doSpin() // doSpin\u5176\u5b9e\u5c31\u662f\u7528\u6237\u6001\u81ea\u748730\u6b21 iter++ old = m.state continue } ...... if atomic.CompareAndSwapInt32(&m.state, old, new) { ...... runtime_SemacquireMutex(&m.sema, queueLifo) // \u8fd9\u91cc\u4f1a\u518d\u6b21\u81ea\u7487\u51e0\u6b21,\u7136\u540e\u6700\u540e\u5207\u6362\u5230g0\u628aG\u6807\u8bb0_Gwaiting\u72b6\u6001\u963b\u585e\u5728\u8fd9\u91cc starving = starving || runtime_nanotime()-waitStartTime > starvationThresholdNs // \u5982\u679c\u9501\u7b49\u4e861\u6beb\u79d2\u624d\u88ab\u5524\u9192\uff0c\u624d\u4f1a\u6807\u8bb0\u4e3a\u9965\u997f\u6a21\u5f0f old = m.state ...... } else { old = m.state } } if race.Enabled { race.Acquire(unsafe.Pointer(m)) } } // runtime/sema.go func sync_runtime_Semacquire(addr *uint32) { semacquire1(addr, false, semaBlockProfile) } func semacquire1(addr *uint32, lifo bool, profile semaProfileFlags) { ...... for { ...... // Any semrelease after the cansemacquire knows we're waiting // (we set nwait above), so go to sleep. root.queue(addr, s, lifo) // \u628a\u5f53\u524d\u9501\u7684\u4fe1\u606f\u5b58\u8d77\u6765\u4ee5\u4fbf\u4ee5\u540e\u5524\u9192\u65f6\u627e\u5230\u5f53\u524dG,G\u662f\u5728queue\u91cc\u9762\u83b7\u53d6\u7684\u3002 goparkunlock(&root.lock, \"semacquire\", traceEvGoBlockSync, 4) // \u8fdb\u884c\u4f11\u7720\uff0c\u7136\u540e\u963b\u585e\u5728\u8fd9\u91cc if s.ticket != 0 || cansemacquire(addr) { break } } } // queue adds s to the blocked goroutines in semaRoot. func (root *semaRoot) queue(addr *uint32, s *sudog, lifo bool) { s.g = getg() // \u8fd9\u91cc\u8bb0\u5f55\u4e86\u5f53\u524d\u7684G\uff0c\u4ee5\u4fbf\u5524\u9192\u7684\u65f6\u5019\u627e\u5230\u8981\u88ab\u5524\u9192\u7684G s.elem = unsafe.Pointer(addr) s.next = nil s.prev = nil var last *sudog pt := &root.treap for t := *pt; t != nil; t = *pt { ...... last = t if uintptr(unsafe.Pointer(addr)) < uintptr(t.elem) { pt = &t.prev } else { pt = &t.next } } ...... Mutex.Lock \u65b9\u6cd5\u901a\u8fc7\u8c03\u7528 runtime_SemacquireMutex \u6700\u7ec8\u8fd8\u662f\u8c03\u7528 goparkunlock \u5b9e\u73b0\u628a G \u8fdb\u5165\u5230\u4f11\u7720\u72b6\u6001\u3002\u5728\u8fdb\u5165\u4f11\u7720\u4e4b\u524d\u5148\u628a\u81ea\u5df1\u52a0\u5165\u5230\u961f\u5217\u91cc root.queue(addr, s, lifo)\uff0c\u5728 queue \u65b9\u6cd5\u91cc\uff0c\u8bb0\u5f55\u4e86\u5f53\u524d\u7684 G\uff0c\u4ee5\u4fbf\u4ee5\u540e\u627e\u5230\u5e76\u5524\u9192\u3002 // sync/mutex.go func (m *Mutex) Unlock() { ...... if new&mutexStarving == 0 { // \u5982\u679c\u4e0d\u662f\u9965\u997f\u6a21\u5f0f old := new for { ...... if atomic.CompareAndSwapInt32(&m.state, old, new) { runtime_Semrelease(&m.sema, false) // \u5524\u9192\u9501 return } old = m.state } } else { // Starving mode: handoff mutex ownership to the next waiter. // Note: mutexLocked is not set, the waiter will set it after wakeup. // But mutex is still considered locked if mutexStarving is set, // so new coming goroutines won't acquire it. runtime_Semrelease(&m.sema, true) // \u5524\u9192\u9501 } } // runtime/sema.go func sync_runtime_Semrelease(addr *uint32, handoff bool) { semrelease1(addr, handoff) } func semrelease1(addr *uint32, handoff bool) { root := semroot(addr) s, t0 := root.dequeue(addr) if s != nil { atomic.Xadd(&root.nwait, -1) } ...... if s != nil { // May be slow, so unlock first ...... readyWithTime(s, 5) } } func readyWithTime(s *sudog, traceskip int) { if s.releasetime != 0 { s.releasetime = cputicks() } goready(s.g, traceskip) } Mutex. Unlock \u65b9\u6cd5\u901a\u8fc7\u8c03\u7528 runtime_Semrelease \u6700\u7ec8\u8fd8\u662f\u8c03\u7528 goready \u5b9e\u73b0\u628a G \u5524\u9192\u3002 6.3 channel // runtime/chan.go func chansend(c *hchan, ep unsafe.Pointer, block bool, callerpc uintptr) bool { // \u5bfb\u627e\u4e00\u4e2a\u7b49\u5f85\u4e2d\u7684receiver\uff0c\u76f4\u63a5\u628a\u503c\u4f20\u7ed9\u8fd9\u4e2areceiver\uff0c\u7ed5\u8fc7\u4e0b\u9762channel buffer\uff0c // \u907f\u514d\u4ecesender buffer->chan buffer->receiver buffer\uff0c\u800c\u662f\u76f4\u63a5sender buffer->receiver buffer\uff0c\u4ecd\u7136\u505a\u4e86\u5185\u5b58copy if sg := c.recvq.dequeue(); sg != nil { send(c, sg, ep, func() { unlock(&c.lock) }, 3) return true } // \u5982\u679c\u6ca1\u6709receiver\u7b49\u5f85: // \u5982\u679c\u5f53\u524dchan\u91cc\u7684\u5143\u7d20\u4e2a\u6570\u5c0f\u4e8e\u73af\u5f62\u961f\u5217\u5927\u5c0f(\u4e5f\u5c31\u662fchan\u8fd8\u6ca1\u6ee1),\u5219\u628a\u5185\u5b58\u62f7\u8d1d\u5230channel buffer\u91cc\uff0c\u7136\u540e\u76f4\u63a5\u8fd4\u56de\u3002 // \u6ce8\u610fdataqsiz\u662f\u5141\u8bb8\u4e3a0\u7684\uff0c\u5f53\u4e3a0\u65f6\uff0c\u4e5f\u4e0d\u5b58\u5728\u8be5if\u91cc\u9762\u7684\u5185\u5b58copy if c.qcount < c.dataqsiz { // Space is available in the channel buffer. Enqueue the element to send. qp := chanbuf(c, c.sendx) // \u83b7\u53d6\u5373\u5c06\u8981\u5199\u5165\u7684chan buffer\u7684\u6307\u9488\u5730\u5740 if raceenabled { raceacquire(qp) racerelease(qp) } // \u628a\u5143\u7d20\u5185\u5b58\u62f7\u8d1d\u8fdb\u53bb. // \u6ce8\u610f\u8fd9\u91cc\u4ea7\u751f\u4e86\u4e00\u6b21\u5185\u5b58copy,\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6ca1\u6709receiver\u7684\u8bdd\uff0c\u5c31\u4e00\u5b9a\u4f1a\u4ea7\u751f\u5185\u5b58\u62f7\u8d1d typedmemmove(c.elemtype, qp, ep) c.sendx++ // \u53d1\u9001\u7d22\u5f15+1 if c.sendx == c.dataqsiz { c.sendx = 0 } c.qcount++ // \u961f\u5217\u5143\u7d20\u8ba1\u6570\u5668+1 unlock(&c.lock) return true } if !block { // \u5982\u679c\u662f\u975e\u963b\u585e\u7684\uff0c\u5230\u8fd9\u91cc\u5c31\u53ef\u4ee5\u7ed3\u675f\u4e86 unlock(&c.lock) return false } // ########\u4e0b\u9762\u662f\u8fdb\u5165\u963b\u585e\u6a21\u5f0f\u7684\u5982\u4f55\u5b9e\u73b0\u963b\u585e\u7684\u5904\u7406\u903b\u8f91 // Block on the channel. Some receiver will complete our operation for us. // \u628a\u5143\u7d20\u76f8\u5173\u4fe1\u606f\u3001\u5f53\u524d\u7684G\u4fe1\u606f\u6253\u5305\u5230\u4e00\u4e2asudog\u91cc\uff0c\u7136\u540e\u6254\u8fdbsend\u961f\u5217 gp := getg() mysg := acquireSudog() mysg.releasetime = 0 if t0 != 0 { mysg.releasetime = -1 } // No stack splits between assigning elem and enqueuing mysg // on gp.waiting where copystack can find it. mysg.elem = ep mysg.waitlink = nil mysg.g = gp // \u628a\u5f53\u524dG\u4e5f\u6254\u8fdbsudog\u91cc,\u7528\u4e8e\u522b\u4eba\u5524\u9192\u8be5G\u7684\u65f6\u5019\u627e\u5230\u8be5G mysg.selectdone = nil mysg.c = c gp.waiting = mysg // \u8bb0\u5f55\u5f53\u524dG\u6b63\u5728\u7b49\u5f85\u7684sudog gp.param = nil c.sendq.enqueue(mysg) // \u5207\u6362\u5230g0\uff0c\u628a\u5f53\u524dG\u5207\u6362\u5230_Gwaiting\u72b6\u6001\uff0c\u7136\u540e\u5524\u9192lock. // \u6b64\u65f6\u5f53\u524dG\u88ab\u963b\u585e\u4e86,P\u5c31\u7ee7\u7eed\u6267\u884c\u5176\u5b83G\u53bb\u4e86. goparkunlock(&c.lock, \"chan send\", traceEvGoBlockSend, 3) ...... return true } func send(c *hchan, sg *sudog, ep unsafe.Pointer, unlockf func(), skip int) { ...... gp := sg.g unlockf() gp.param = unsafe.Pointer(sg) if sg.releasetime != 0 { sg.releasetime = cputicks() } goready(gp, skip+1) } \u5f53\u7ed9\u4e00\u4e2a chan \u53d1\u9001\u6d88\u606f\u7684\u65f6\u5019\uff0c\u5b9e\u8d28\u89e6\u53d1\u7684\u65b9\u6cd5\u662f chansend\u3002\u5728\u8be5\u65b9\u6cd5\u91cc\u4e0d\u662f\u5148\u8fdb\u5165\u4f11\u7720\u72b6\u6001\u3002 1\uff09\u5982\u679c\u6b64\u65f6\u6709\u63a5\u6536\u8005\u63a5\u6536\u8fd9\u4e2a chan \u7684\u6d88\u606f\u5219\u76f4\u63a5\u628a\u6570\u636e\u901a\u8fc7 send \u65b9\u6cd5\u6254\u7ed9\u63a5\u6536\u8005\uff0c\u5e76\u5524\u9192\u63a5\u6536\u8005\u7684 G\uff0c\u7136\u540e\u5f53\u524d G \u5219\u7ee7\u7eed\u6267\u884c\u3002 2\uff09\u5982\u679c\u6ca1\u6709\u63a5\u6536\u8005\uff0c\u5c31\u628a\u6570\u636e copy \u5230 chan \u7684\u4e34\u65f6\u5185\u5b58\u91cc\uff0c\u4e14\u5185\u5b58\u6ca1\u6709\u6ee1\u5c31\u7ee7\u7eed\u6267\u884c\u5f53\u524d G\u3002 3\uff09\u5982\u679c\u6ca1\u6709\u63a5\u6536\u8005\u4e14 chan \u6ee1\u4e86\uff0c\u4f9d\u7136\u662f\u901a\u8fc7 goparkunlock \u65b9\u6cd5\u8fdb\u5165\u4f11\u7720\u3002\u5728\u4f11\u7720\u524d\u628a\u5f53\u524d\u7684 G \u76f8\u5173\u4fe1\u606f\u5b58\u5230\u961f\u5217\uff08sendq\uff09\u4ee5\u4fbf\u6709\u63a5\u6536\u8005\u63a5\u6536\u6570\u636e\u7684\u65f6\u5019\u5524\u9192\u5f53\u524d G\u3002 func chanrecv(c *hchan, ep unsafe.Pointer, block bool) (selected, received bool) { ...... if sg := c.sendq.dequeue(); sg != nil { // Found a waiting sender. If buffer is size 0, receive value // directly from sender. Otherwise, receive from head of queue // and add sender's value to the tail of the queue (both map to // the same buffer slot because the queue is full). // \u5bfb\u627e\u4e00\u4e2a\u6b63\u5728\u7b49\u5f85\u7684sender // \u5982\u679cbuffer size\u662f0\uff0c\u5219\u5c1d\u8bd5\u76f4\u63a5\u4ecesender\u83b7\u53d6(\u8fd9\u79cd\u60c5\u51b5\u662f\u5728\u73af\u5f62\u961f\u5217\u957f\u5ea6(dataqsiz)\u4e3a0\u7684\u65f6\u5019\u51fa\u73b0) // \u5426\u5219(buffer full\u7684\u65f6\u5019)\u4ece\u961f\u5217head\u63a5\u6536\uff0c\u5e76\u4e14\u5e2e\u52a9sender\u5728\u961f\u5217\u6ee1\u65f6\u7684\u963b\u585e\u7684\u5143\u7d20\u4fe1\u606f\u62f7\u8d1d\u5230\u961f\u5217\u91cc\uff0c\u7136\u540e\u5c06sender\u7684G\u72b6\u6001\u5207\u6362\u4e3a_Grunning,\u8fd9\u6837sender\u5c31\u4e0d\u963b\u585e\u4e86\u3002 recv(c, sg, ep, func() { unlock(&c.lock) }, 3) return true, true } // \u5982\u679c\u6709\u6570\u636e\u5219\u4ecechannel buffer\u91cc\u83b7\u53d6\u6570\u636e\u540e\u8fd4\u56de(\u6b64\u65f6\u73af\u5f62\u961f\u5217\u957f\u5ea6dataqsiz!=0) if c.qcount > 0 { // Receive directly from queue qp := chanbuf(c, c.recvx) // \u83b7\u53d6\u5373\u5c06\u8981\u8bfb\u53d6\u7684chan buffer\u7684\u6307\u9488\u5730\u5740 if raceenabled { raceacquire(qp) racerelease(qp) } if ep != nil { typedmemmove(c.elemtype, ep, qp) // copy\u5143\u7d20\u6570\u636e\u5185\u5b58\u5230channel buffer } typedmemclr(c.elemtype, qp) c.recvx++ if c.recvx == c.dataqsiz { c.recvx = 0 } c.qcount-- unlock(&c.lock) return true, true } if !block { unlock(&c.lock) return false, false } // ##########\u4e0b\u9762\u662f\u65e0\u4efb\u4f55\u6570\u636e\u51c6\u5907\u628a\u5f53\u524dG\u5207\u6362\u4e3a_Gwaiting\u72b6\u6001\u7684\u903b\u8f91 // no sender available: block on this channel. gp := getg() mysg := acquireSudog() mysg.releasetime = 0 if t0 != 0 { mysg.releasetime = -1 } // No stack splits between assigning elem and enqueuing mysg // on gp.waiting where copystack can find it. mysg.elem = ep mysg.waitlink = nil gp.waiting = mysg mysg.g = gp mysg.selectdone = nil mysg.c = c gp.param = nil c.recvq.enqueue(mysg) // \u91ca\u653e\u4e86\u9501\uff0c\u7136\u540e\u628a\u5f53\u524dG\u5207\u6362\u4e3a_Gwaiting\u72b6\u6001\uff0c\u963b\u585e\u5728\u8fd9\u91cc\u7b49\u5f85\u6709\u6570\u636e\u8fdb\u6765\u88ab\u5524\u9192 goparkunlock(&c.lock, \"chan receive\", traceEvGoBlockRecv, 3) ...... return true, !closed } func recv(c *hchan, sg *sudog, ep unsafe.Pointer, unlockf func(), skip int) { ...... sg.elem = nil gp := sg.g unlockf() gp.param = unsafe.Pointer(sg) if sg.releasetime != 0 { sg.releasetime = cputicks() } goready(gp, skip+1) } chanrecv \u65b9\u6cd5\u662f\u5728 chan \u63a5\u6536\u8005\u7684\u5730\u65b9\u8c03\u7528\u7684\u65b9\u6cd5\u3002 1\uff09\u5982\u679c\u6709\u53d1\u9001\u8005\u88ab\u4f11\u7720\uff0c\u5219\u53d6\u51fa\u6570\u636e\u7136\u540e\u5524\u9192\u53d1\u9001\u8005\uff0c\u5f53\u524d\u63a5\u6536\u8005\u7684 G \u62ff\u5230\u6570\u636e\u7ee7\u7eed\u6267\u884c\u3002 2\uff09\u5982\u679c\u6ca1\u6709\u7b49\u5f85\u7684\u53d1\u9001\u8005\u5c31\u770b\u4e0b\u6709\u6ca1\u6709\u53d1\u9001\u7684\u6570\u636e\u8fd8\u6ca1\u88ab\u63a5\u6536\uff0c\u6709\u7684\u8bdd\u5c31\u76f4\u63a5\u53d6\u51fa\u6570\u636e\u7136\u540e\u8fd4\u56de\uff0c\u5f53\u524d\u63a5\u6536\u8005\u7684 G \u62ff\u5230\u6570\u636e\u7ee7\u7eed\u6267\u884c\u3002\uff08\u6ce8\u610f\uff1a\u8fd9\u91cc\u53d6\u7684\u6570\u636e\u4e0d\u662f\u6b63\u5728\u7b49\u5f85\u7684 sender \u7684\u6570\u636e\uff0c\u800c\u662f\u4ece chan \u7684\u5f00\u5934\u7684\u5185\u5b58\u53d6\uff0c\u5982\u679c\u662f sender \u7684\u6570\u636e\u5219\u8bfb\u51fa\u6765\u7684\u6570\u636e\u987a\u5e8f\u5c31\u4e71\u4e86\uff09 3\uff09\u5982\u679c\u5373\u6ca1\u6709\u53d1\u9001\u8005\uff0cchan \u91cc\u4e5f\u6ca1\u6570\u636e\u5c31\u901a\u8fc7 goparkunlock \u8fdb\u884c\u4f11\u7720\uff0c\u5728\u4f11\u7720\u4e4b\u524d\u628a\u5f53\u524d\u7684 G \u76f8\u5173\u4fe1\u606f\u5b58\u5230 recvq \u91cc\u9762\uff0c\u4ee5\u4fbf\u6709\u6570\u636e\u65f6\u627e\u5230\u8981\u5524\u9192\u7684 G\u3002","title":"1.\u7b80\u5355\u6982\u5ff5"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#1","text":"","title":"1.\u7b80\u5355\u6982\u5ff5"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#11-gmp","text":"G\uff1a\u4ee3\u8868\u4e00\u4e2a goroutine\uff0c\u6bcf\u4e2a goroutine \u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u6808\u5b58\u653e\u5f53\u524d\u7684\u8fd0\u884c\u5185\u5b58\u53ca\u72b6\u6001\u3002\u53ef\u4ee5\u628a\u4e00\u4e2a G \u5f53\u505a\u4e00\u4e2a\u4efb\u52a1\u3002 M: \u4ee3\u8868\u5185\u6838\u7ebf\u7a0b(Pthread)\uff0c\u5b83\u672c\u8eab\u5c31\u4e0e\u4e00\u4e2a\u5185\u6838\u7ebf\u7a0b\u8fdb\u884c\u7ed1\u5b9a\uff0cgoroutine \u8fd0\u884c\u5728 M \u4e0a\u3002 P\uff1a\u4ee3\u8868\u4e00\u4e2a\u5904\u7406\u5668\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u4e00\u4e2a\u201c\u6709\u8fd0\u884c\u4efb\u52a1\u201d\u7684 P \u5360\u4e86\u4e00\u4e2a CPU \u7ebf\u7a0b\u7684\u8d44\u6e90\uff0c\u4e14\u53ea\u8981\u5904\u4e8e\u8c03\u5ea6\u7684\u65f6\u5019\u5c31\u6709 P\u3002 \u6ce8\uff1a\u5185\u6838\u7ebf\u7a0b\u548c CPU \u7ebf\u7a0b\u7684\u533a\u522b\uff0c\u5728\u7cfb\u7edf\u91cc\u53ef\u4ee5\u6709\u4e0a\u4e07\u4e2a\u5185\u6838\u7ebf\u7a0b\uff0c\u4f46 CPU \u7ebf\u7a0b\u5e76\u6ca1\u6709\u90a3\u4e48\u591a\uff0cCPU \u7ebf\u7a0b\u4e5f\u5c31\u662f Top \u547d\u4ee4\u91cc\u770b\u5230\u7684 CPU0\u3001CPU1\u3001CPU2\u2026\u7684\u6570\u91cf\u3002 \u4e09\u8005\u5173\u7cfb\u5927\u81f4\u5982\u4e0b\u56fe\uff1a \u56fe 1\u3001\u56fe 2 \u4ee3\u8868 2 \u4e2a\u6709\u8fd0\u884c\u4efb\u52a1\u65f6\u7684\u72b6\u6001\u3002M \u4e0e\u4e00\u4e2a\u5185\u6838\u7ebf\u7a0b\u7ed1\u5b9a\uff0c\u53ef\u8fd0\u884c\u7684 goroutine \u5217\u8868\u5b58\u653e\u5230 P \u91cc\u9762\uff0c\u7136\u540e\u5360\u7528\u4e86\u4e00\u4e2a CPU \u7ebf\u7a0b\u6765\u8fd0\u884c\u3002 \u56fe 3 \u4ee3\u8868\u6ca1\u6709\u8fd0\u884c\u4efb\u52a1\u65f6\u7684\u72b6\u6001\uff0cM \u4f9d\u7136\u4e0e\u4e00\u4e2a\u5185\u6838\u7ebf\u7a0b\u7ed1\u5b9a\uff0c\u7531\u4e8e\u6ca1\u6709\u8fd0\u884c\u4efb\u52a1\u56e0\u6b64\u4e0d\u5360\u7528 CPU \u7ebf\u7a0b\uff0c\u540c\u65f6\u4e5f\u4e0d\u5360\u7528 P\u3002","title":"1.1 \u8c03\u5ea6\u5668\u7684\u4e09\u4e2a\u62bd\u8c61\u6982\u5ff5\uff1aG\u3001M\u3001P"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#12","text":"\u56fe\u4e2d\u8868\u8ff0\u4e86\u7531 go func \u89e6\u53d1\u7684\u8c03\u5ea6\u3002\u5148\u521b\u5efa M \u901a\u8fc7 M \u542f\u52a8\u8c03\u5ea6\u5faa\u73af\uff0c\u7136\u540e\u8c03\u5ea6\u5faa\u73af\u8fc7\u7a0b\u4e2d\u83b7\u53d6 G \u6765\u6267\u884c\uff0c\u6267\u884c\u8fc7\u7a0b\u4e2d\u9047\u5230\u56fe\u4e2d running G \u540e\u9762\u51e0\u4e2a case \u518d\u6b21\u8fdb\u5165\u4e0b\u4e00\u5faa\u73af\u3002 \u4e0b\u9762\u4ece\u7a0b\u5e8f\u542f\u52a8\u3001\u8c03\u5ea6\u5faa\u73af\u3001G \u7684\u6765\u6e90\u4e09\u4e2a\u89d2\u5ea6\u5206\u6790\u8c03\u5ea6\u7684\u5b9e\u73b0\u3002","title":"1.2 \u8c03\u5ea6\u7684\u5927\u81f4\u8f6e\u5ed3"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#2","text":"\u4e0b\u9762\u5148\u770b\u4e00\u6bb5\u7a0b\u5e8f\u542f\u52a8\u7684\u4ee3\u7801 // runtime/asm_amd64.s TEXT runtime\u00b7rt0_go(SB),NOSPLIT,$0 ......\u6b64\u5904\u7701\u7565N\u591a\u4ee3\u7801...... ok: // set the per-goroutine and per-mach \"registers\" get_tls(BX) // \u5c06 g0 \u653e\u5230 tls(thread local storage)\u91cc LEAQ runtime\u00b7g0(SB), CX MOVQ CX, g(BX) LEAQ runtime\u00b7m0(SB), AX // save m->g0 = g0 // \u5c06\u5168\u5c40M0\u4e0e\u5168\u5c40G0\u7ed1\u5b9a MOVQ CX, m_g0(AX) // save m0 to g0->m MOVQ AX, g_m(CX) CLD // convention is D is always left cleared CALL runtime\u00b7check(SB) MOVL 16(SP), AX // copy argc MOVL AX, 0(SP) MOVQ 24(SP), AX // copy argv MOVQ AX, 8(SP) CALL runtime\u00b7args(SB) // \u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570 CALL runtime\u00b7osinit(SB) // \u53ea\u521d\u59cb\u5316\u4e86CPU\u6838\u6570 CALL runtime\u00b7schedinit(SB) // \u5185\u5b58\u5206\u914d\u5668\u3001\u6808\u3001P\u3001GC\u56de\u6536\u5668\u7b49\u521d\u59cb\u5316 // create a new goroutine to start program MOVQ $runtime\u00b7mainPC(SB), AX // PUSHQ AX PUSHQ $0 // arg size CALL runtime\u00b7newproc(SB) // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684G\u6765\u542f\u52a8runtime.main POPQ AX POPQ AX // start this M CALL runtime\u00b7mstart(SB) // \u542f\u52a8M0,\u5f00\u59cb\u7b49\u5f85\u7a7a\u95f2G,\u6b63\u5f0f\u8fdb\u5165\u8c03\u5ea6\u5faa\u73af MOVL $0xf1, 0xf1 // crash RET \u5728\u542f\u52a8\u8fc7\u7a0b\u91cc\u4e3b\u8981\u505a\u4e86\u8fd9\u4e09\u4e2a\u4e8b\u60c5(\u8fd9\u91cc\u53ea\u8ddf\u8c03\u5ea6\u76f8\u5173\u7684)\uff1a \u521d\u59cb\u5316\u56fa\u5b9a\u6570\u91cf\u7684 P \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 G \u6765\u542f\u52a8 runtime.main, \u4e5f\u5c31\u662f runtime \u4e0b\u7684 main \u65b9\u6cd5 \u521b\u5efa\u5168\u5c40 M0\u3001\u5168\u5c40 G0\uff0c\u542f\u52a8 M0 \u8fdb\u5165\u7b2c\u4e00\u4e2a\u8c03\u5ea6\u5faa\u73af M0 \u662f\u4ec0\u4e48\uff1f\u7a0b\u5e8f\u91cc\u4f1a\u542f\u52a8\u591a\u4e2a M\uff0c\u7b2c\u4e00\u4e2a\u542f\u52a8\u7684\u53eb M0\u3002 G0 \u662f\u4ec0\u4e48\uff1fG \u5206\u4e09\u79cd\uff0c\u7b2c\u4e00\u79cd\u662f\u6267\u884c\u7528\u6237\u4efb\u52a1\u7684\u53eb\u505a G\uff0c\u7b2c\u4e8c\u79cd\u6267\u884c runtime \u4e0b\u8c03\u5ea6\u5de5\u4f5c\u7684\u53ebG0\uff0c\u6bcf\u4e2a M \u90fd\u7ed1\u5b9a\u4e00\u4e2a G0\u3002\u7b2c\u4e09\u79cd\u5219\u662f\u542f\u52a8 runtime.main \u7528\u5230\u7684 G\u3002\u5199\u7a0b\u5e8f\u63a5\u89e6\u5230\u7684\u57fa\u672c\u90fd\u662f\u7b2c\u4e00\u79cd \u6211\u4eec\u6309\u7167\u987a\u5e8f\u770b\u662f\u600e\u4e48\u5b8c\u6210\u4e0a\u9762\u4e09\u4e2a\u4e8b\u60c5\u7684\u3002","title":"2.\u8fdb\u7a0b\u542f\u52a8\u65f6\u90fd\u505a\u4e86\u4ec0\u4e48"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#21-runtimeosinitsb","text":"\u8fd9\u91cc\u5b9e\u8d28\u53ea\u505a\u4e86\u4e00\u4ef6\u4e8b\u60c5\uff0c\u5c31\u662f\u83b7\u53d6 CPU \u7684\u7ebf\u7a0b\u6570\uff0c\u4e5f\u5c31\u662f Top \u547d\u4ee4\u91cc\u770b\u5230\u7684 CPU0\u3001CPU1\u3001CPU2\u2026\u7684\u6570\u91cf\u3002 // runtime/os_linux.go func osinit() { ncpu = getproccount() }","title":"2.1 runtime.osinit(SB)\u65b9\u6cd5\u9488\u5bf9\u7cfb\u7edf\u73af\u5883\u7684\u521d\u59cb\u5316"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#22-runtimeschedinitsb","text":"// runtime/proc.go // \u8bbe\u7f6e\u6700\u5927M\u6570\u91cf sched.maxmcount = 10000 // \u521d\u59cb\u5316\u5f53\u524dM,\u5373\u5168\u5c40M0 mcommoninit(_g_.m) // \u67e5\u770b\u5e94\u8be5\u542f\u52a8\u7684P\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3acpu core\u6570. // \u5982\u679c\u8bbe\u7f6e\u4e86\u73af\u5883\u53d8\u91cfGOMAXPROCS\u5219\u4ee5\u73af\u5883\u53d8\u91cf\u4e3a\u51c6,\u6700\u5927\u4e0d\u5f97\u8d85\u8fc7_MaxGomaxprocs(1024)\u4e2a procs := ncpu if n, ok := atoi32(gogetenv(\"GOMAXPROCS\")); ok && n > 0 { procs = n } if procs > _MaxGomaxprocs { procs = _MaxGomaxprocs } // \u8c03\u6574P\u6570\u91cf\uff0c\u6b64\u65f6\u7531\u4e8e\u662f\u521d\u59cb\u5316\u9636\u6bb5\uff0c\u6240\u4ee5P\u90fd\u662f\u65b0\u5efa\u7684 if procresize(procs) != nil { throw(\"unknown runnable goroutine during bootstrap\") } \u8fd9\u91cc sched.maxmcount \u8bbe\u7f6e\u4e86 M \u6700\u5927\u7684\u6570\u91cf\uff0c\u800c M \u4ee3\u8868\u7684\u662f\u7cfb\u7edf\u5185\u6838\u7ebf\u7a0b\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ba4\u4e3a\u4e00\u4e2a\u8fdb\u7a0b\u6700\u5927\u53ea\u80fd\u542f\u52a8 10000 \u4e2a\u7cfb\u7edf\u7ebf\u7a0b\u3002 procresize \u521d\u59cb\u5316 P \u7684\u6570\u91cf\uff0cprocs \u53c2\u6570\u4e3a\u521d\u59cb\u5316\u7684\u6570\u91cf\uff0c\u800c\u5728\u521d\u59cb\u5316\u4e4b\u524d\u5148\u505a\u6570\u91cf\u7684\u5224\u65ad\uff0c\u9ed8\u8ba4\u662f ncpu(\u4e0e CPU \u6838\u6570\u76f8\u7b49)\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf GOMAXPROCS \u6765\u63a7\u5236 P \u7684\u6570\u91cf\u3002_MaxGomaxprocs \u63a7\u5236\u4e86\u6700\u5927\u7684 P \u6570\u91cf\u53ea\u80fd\u662f 1024\u3002 \u6709\u4e9b\u4eba\u5728\u8fdb\u7a0b\u521d\u59cb\u5316\u7684\u65f6\u5019\u7ecf\u5e38\u7528\u5230 runtime.GOMAXPROCS() \u65b9\u6cd5\uff0c\u5176\u5b9e\u4e5f\u662f\u8c03\u7528\u7684 procresize \u65b9\u6cd5\u91cd\u65b0\u8bbe\u7f6e\u4e86\u6700\u5927 CPU \u4f7f\u7528\u6570\u91cf\u3002","title":"2.2 runtime.schedinit(SB)\u8c03\u5ea6\u76f8\u5173\u7684\u4e00\u4e9b\u521d\u59cb\u5316"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#23-runtimemainpcsb","text":"// runtime/proc.go // The main goroutine. func main() { ...... // \u542f\u52a8\u540e\u53f0\u76d1\u63a7 systemstack(func() { newm(sysmon, nil) }) ...... } \u5728 runtime \u4e0b\u4f1a\u542f\u52a8\u4e00\u4e2a\u5168\u7a0b\u8fd0\u884c\u7684\u76d1\u63a7\u4efb\u52a1\uff0c\u8be5\u4efb\u52a1\u7528\u4e8e\u6807\u8bb0\u62a2\u5360\u6267\u884c\u8fc7\u957f\u65f6\u95f4\u7684 G\uff0c\u4ee5\u53ca\u68c0\u6d4b epoll \u91cc\u9762\u662f\u5426\u6709\u53ef\u6267\u884c\u7684 G\u3002\u4e0b\u9762\u4f1a\u8be6\u7ec6\u8bf4\u5230\u3002","title":"2.3 runtime\u00b7mainPC(SB)\u542f\u52a8\u76d1\u63a7\u4efb\u52a1"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#24-runtimemstartsb","text":"\u524d\u9762\u90fd\u662f\u5404\u79cd\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u5728\u8fd9\u91cc\u5f00\u542f\u4e86\u8c03\u5ea6\u5668\u7684\u7b2c\u4e00\u4e2a\u8c03\u5ea6\u5faa\u73af\u3002(\u8fd9\u91cc\u542f\u52a8\u7684 M \u5c31\u662f M0) \u4e0b\u9762\u6765\u56f4\u7ed5 G\u3001M\u3001P \u4e09\u4e2a\u6982\u5ff5\u4ecb\u7ecd Goroutine \u8c03\u5ea6\u5faa\u73af\u7684\u8fd0\u4f5c\u6d41\u7a0b\u3002","title":"2.4 \u6700\u540e runtime\u00b7mstart(SB)\u542f\u52a8\u8c03\u5ea6\u5faa\u73af"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#3","text":"\u56fe 1 \u4ee3\u8868 M \u542f\u52a8\u7684\u8fc7\u7a0b\uff0c\u628a M \u8ddf\u4e00\u4e2a P \u7ed1\u5b9a\u518d\u4e00\u8d77\u3002\u5728\u7a0b\u5e8f\u521d\u59cb\u5316\u7684\u8fc7\u7a0b\u4e2d\u8bf4\u5230\u5728\u8fdb\u7a0b\u542f\u52a8\u7684\u6700\u540e\u4e00\u6b65\u542f\u52a8\u4e86\u7b2c\u4e00\u4e2a M(\u5373 M0)\uff0c\u8fd9\u4e2a M \u4ece\u5168\u5c40\u7684\u7a7a\u95f2 P \u5217\u8868\u91cc\u62ff\u5230\u4e00\u4e2a P\uff0c\u7136\u540e\u4e0e\u5176\u7ed1\u5b9a\u3002\u800c P \u91cc\u9762\u6709 2 \u4e2a\u7ba1\u7406 G \u7684\u94fe\u8868(runq \u5b58\u50a8\u7b49\u5f85\u8fd0\u884c\u7684 G \u5217\u8868\uff0cgfree \u5b58\u50a8\u7a7a\u95f2\u7684 G \u5217\u8868)\uff0cM \u542f\u52a8\u540e\u7b49\u5f85\u53ef\u6267\u884c\u7684 G\u3002 \u56fe 2 \u4ee3\u8868\u521b\u5efa G \u7684\u8fc7\u7a0b\u3002\u521b\u5efa\u5b8c\u4e00\u4e2a G \u5148\u6254\u5230\u5f53\u524d P \u7684 runq \u5f85\u8fd0\u884c\u961f\u5217\u91cc\u3002\u5728\u56fe 3 \u7684\u6267\u884c\u8fc7\u7a0b\u91cc\uff0cM \u4ece\u7ed1\u5b9a\u7684 P \u7684 runq \u5217\u8868\u91cc\u83b7\u53d6\u4e00\u4e2a G \u6765\u6267\u884c\u3002\u5f53\u6267\u884c\u5b8c\u6210\u540e\uff0c\u56fe 4 \u7684\u6d41\u7a0b\u91cc\u628a G \u4ecd\u5230 gfree \u961f\u5217\u91cc\u3002\u6ce8\u610f\u6b64\u65f6 G \u5e76\u6ca1\u6709\u9500\u6bc1(\u53ea\u91cd\u7f6e\u4e86 G \u7684\u6808\u4ee5\u53ca\u72b6\u6001)\uff0c\u5f53\u518d\u6b21\u521b\u5efa G \u7684\u65f6\u5019\u4f18\u5148\u4ece gfree \u5217\u8868\u91cc\u83b7\u53d6\uff0c\u8fd9\u6837\u5c31\u8d77\u5230\u4e86\u590d\u7528 G \u7684\u4f5c\u7528\uff0c\u907f\u514d\u53cd\u590d\u4e0e\u7cfb\u7edf\u4ea4\u4e92\u521b\u5efa\u5185\u5b58\u3002 M \u5373\u542f\u52a8\u540e\u5904\u4e8e\u4e00\u4e2a\u81ea\u5faa\u73af\u72b6\u6001\uff0c\u6267\u884c\u5b8c\u4e00\u4e2a G \u4e4b\u540e\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u4e2a G\uff0c\u53cd\u590d\u4e0a\u9762\u7684\u56fe 2~\u56fe 4 \u8fc7\u7a0b\u3002\u5f53\u7b2c\u4e00\u4e2a M \u6b63\u5728\u7e41\u5fd9\u800c\u53c8\u6709\u65b0\u7684 G \u9700\u8981\u6267\u884c\u65f6\uff0c\u4f1a\u518d\u5f00\u542f\u4e00\u4e2a M \u6765\u6267\u884c\u3002 \u4e0b\u9762\u8be6\u7ec6\u770b\u4e0b\u8c03\u5ea6\u5faa\u73af\u7684\u5b9e\u73b0\u3002","title":"3.\u8c03\u5ea6\u5faa\u73af\u90fd\u505a\u4e86\u4ec0\u4e48"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#31","text":"\u5148\u770b\u4e00\u4e0b M \u7684\u542f\u52a8\u8fc7\u7a0b\uff08M0 \u542f\u52a8\u662f\u4e2a\u7279\u6b8a\u7684\u542f\u52a8\u8fc7\u7a0b\uff0c\u4e5f\u662f\u7b2c\u4e00\u4e2a\u542f\u52a8\u7684 M\uff0c\u7531\u6c47\u7f16\u5b9e\u73b0\u7684\u521d\u59cb\u5316\u540e\u542f\u52a8\uff0c\u800c\u540e\u7eed\u7684 M \u521b\u5efa\u4ee5\u53ca\u542f\u52a8\u5219\u662f Go \u4ee3\u7801\u5b9e\u73b0\uff09\u3002 // runtime/proc.go func startm(_p_ *p, spinning bool) { lock(&sched.lock) if _p_ == nil { // \u4ece\u7a7a\u95f2P\u91cc\u83b7\u53d6\u4e00\u4e2a _p_ = pidleget() ...... } // \u83b7\u53d6\u4e00\u4e2a\u7a7a\u95f2\u7684m mp := mget() unlock(&sched.lock) // \u5982\u679c\u6ca1\u6709\u7a7a\u95f2M\uff0c\u5219new\u4e00\u4e2a if mp == nil { var fn func() if spinning { // The caller incremented nmspinning, so set m.spinning in the new M. fn = mspinning } newm(fn, _p_) return } ...... // \u5524\u9192M notewakeup(&mp.park) } func newm(fn func(), _p_ *p) { // \u521b\u5efa\u4e00\u4e2aM\u5bf9\u8c61,\u4e14\u4e0eP\u5173\u8054 mp := allocm(_p_, fn) // \u6682\u5b58P mp.nextp.set(_p_) mp.sigmask = initSigmask ...... execLock.rlock() // Prevent process clone. // \u521b\u5efa\u7cfb\u7edf\u5185\u6838\u7ebf\u7a0b newosproc(mp, unsafe.Pointer(mp.g0.stack.hi)) execLock.runlock() } // runtime/os_linux.go func newosproc(mp *m, stk unsafe.Pointer) { // Disable signals during clone, so that the new thread starts // with signals disabled. It will enable them in minit. var oset sigset sigprocmask(_SIG_SETMASK, &sigset_all, &oset) ret := clone(cloneFlags, stk, unsafe.Pointer(mp), unsafe.Pointer(mp.g0), unsafe.Pointer(funcPC(mstart))) sigprocmask(_SIG_SETMASK, &oset, nil) } func allocm(_p_ *p, fn func()) *m { ...... mp := new(m) mp.mstartfn = fn // \u8bbe\u7f6e\u542f\u52a8\u51fd\u6570 mcommoninit(mp) // \u521d\u59cb\u5316m // \u521b\u5efag0 // In case of cgo or Solaris, pthread_create will make us a stack. // Windows and Plan 9 will layout sched stack on OS stack. if iscgo || GOOS == \"solaris\" || GOOS == \"windows\" || GOOS == \"plan9\" { mp.g0 = malg(-1) } else { mp.g0 = malg(8192 * sys.StackGuardMultiplier) } // \u628a\u65b0\u521b\u5efa\u7684g0\u4e0eM\u505a\u5173\u8054 mp.g0.m = mp ...... return mp } func mstart() { ...... mstart1() } func mstart1() { ...... // \u8fdb\u5165\u8c03\u5ea6\u5faa\u73af(\u963b\u585e\u4e0d\u8fd4\u56de) schedule() } \u975e M0 \u7684\u542f\u52a8\u9996\u5148\u4ece startm \u65b9\u6cd5\u5f00\u59cb\u542f\u52a8\uff0c\u8981\u8fdb\u884c\u8c03\u5ea6\u5de5\u4f5c\u5fc5\u987b\u6709\u8c03\u5ea6\u5904\u7406\u5668 P\uff0c\u56e0\u6b64\u5148\u4ece\u7a7a\u95f2\u7684 P \u94fe\u8868\u91cc\u83b7\u53d6\u4e00\u4e2a P\uff0c\u5728 newm \u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a M \u4e0e P \u7ed1\u5b9a\u3002 newm \u65b9\u6cd5\u4e2d\u901a\u8fc7 newosproc \u65b0\u5efa\u4e00\u4e2a\u5185\u6838\u7ebf\u7a0b\uff0c\u5e76\u628a\u5185\u6838\u7ebf\u7a0b\u4e0e M \u4ee5\u53ca mstart \u65b9\u6cd5\u8fdb\u884c\u5173\u8054\uff0c\u8fd9\u6837\u5185\u6838\u7ebf\u7a0b\u6267\u884c\u65f6\u5c31\u53ef\u4ee5\u627e\u5230 M \u5e76\u4e14\u627e\u5230\u542f\u52a8\u8c03\u5ea6\u5faa\u73af\u7684\u65b9\u6cd5\u3002\u6700\u540e schedule \u542f\u52a8\u8c03\u5ea6\u5faa\u73af allocm \u65b9\u6cd5\u4e2d\u521b\u5efa M \u7684\u540c\u65f6\u521b\u5efa\u4e86\u4e00\u4e2a G \u4e0e\u81ea\u5df1\u5173\u8054\uff0c\u8fd9\u4e2a G \u5c31\u662f\u6211\u4eec\u5728\u4e0a\u9762\u8bf4\u5230\u7684 g0\u3002\u4e3a\u4ec0\u4e48 M \u8981\u5173\u8054\u4e00\u4e2a g0\uff1f\u56e0\u4e3a runtime \u4e0b\u6267\u884c\u4e00\u4e2a G \u4e5f\u9700\u8981\u7528\u5230\u6808\u7a7a\u95f4\u6765\u5b8c\u6210\u8c03\u5ea6\u5de5\u4f5c\uff0c\u800c\u62e5\u6709\u6267\u884c\u6808\u7684\u5730\u65b9\u53ea\u6709 G\uff0c\u56e0\u6b64\u9700\u8981\u4e3a\u6bcf\u4e2a\u6267\u884c\u7ebf\u7a0b\u91cc\u914d\u7f6e\u4e00\u4e2a g0\u3002","title":"3.1 \u8c03\u5ea6\u5668\u5982\u4f55\u5f00\u542f\u8c03\u5ea6\u5faa\u73af"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#32","text":"\u8c03\u7528 schedule \u8fdb\u5165\u8c03\u5ea6\u5668\u7684\u8c03\u5ea6\u5faa\u73af\u540e\uff0c\u5728\u8fd9\u4e2a\u65b9\u6cd5\u91cc\u6c38\u8fdc\u4e0d\u518d\u8fd4\u56de\u3002\u4e0b\u9762\u770b\u4e0b\u5b9e\u73b0\u3002 // runtime/proc.go func schedule() { _g_ := getg() // \u8fdb\u5165gc MarkWorker \u5de5\u4f5c\u6a21\u5f0f if gp == nil && gcBlackenEnabled != 0 { gp = gcController.findRunnableGCWorker(_g_.m.p.ptr()) } if gp == nil { // Check the global runnable queue once in a while to ensure fairness. // Otherwise two goroutines can completely occupy the local runqueue // by constantly respawning each other. // \u6bcf\u5904\u7406n\u4e2a\u4efb\u52a1\u5c31\u53bb\u5168\u5c40\u961f\u5217\u83b7\u53d6G\u4efb\u52a1,\u786e\u4fdd\u516c\u5e73 if _g_.m.p.ptr().schedtick%61 == 0 && sched.runqsize > 0 { lock(&sched.lock) gp = globrunqget(_g_.m.p.ptr(), 1) unlock(&sched.lock) } } // \u4eceP\u672c\u5730\u83b7\u53d6 if gp == nil { gp, inheritTime = runqget(_g_.m.p.ptr()) if gp != nil && _g_.m.spinning { throw(\"schedule: spinning with local work\") } } // \u4ece\u5176\u5b83\u5730\u65b9\u83b7\u53d6G,\u5982\u679c\u83b7\u53d6\u4e0d\u5230\u5219\u6c89\u7761M\uff0c\u5e76\u4e14\u963b\u585e\u5728\u8fd9\u91cc\uff0c\u76f4\u5230M\u88ab\u518d\u6b21\u4f7f\u7528 if gp == nil { gp, inheritTime = findrunnable() // blocks until work is available } ...... // \u6267\u884c\u627e\u5230\u7684G execute(gp, inheritTime) } // \u4eceP\u672c\u5730\u83b7\u53d6\u4e00\u4e2a\u53ef\u8fd0\u884c\u7684G func runqget(_p_ *p) (gp *g, inheritTime bool) { // If there's a runnext, it's the next G to run. // \u4f18\u5148\u4ecerunnext\u91cc\u83b7\u53d6\u4e00\u4e2aG\uff0c\u5982\u679c\u6ca1\u6709\u5219\u4ecerunq\u91cc\u83b7\u53d6 for { next := _p_.runnext if next == 0 { break } if _p_.runnext.cas(next, 0) { return next.ptr(), true } } // \u4ece\u961f\u5934\u83b7\u53d6 for { h := atomic.Load(&_p_.runqhead) // load-acquire, synchronize with other consumers t := _p_.runqtail if t == h { return nil, false } gp := _p_.runq[h%uint32(len(_p_.runq))].ptr() if atomic.Cas(&_p_.runqhead, h, h+1) { // cas-release, commits consume return gp, false } } } // \u4ece\u5176\u5b83\u5730\u65b9\u83b7\u53d6G func findrunnable() (gp *g, inheritTime bool) { ...... // \u4ece\u672c\u5730\u961f\u5217\u83b7\u53d6 if gp, inheritTime := runqget(_p_); gp != nil { return gp, inheritTime } // \u5168\u5c40\u961f\u5217\u83b7\u53d6 if sched.runqsize != 0 { lock(&sched.lock) gp := globrunqget(_p_, 0) unlock(&sched.lock) if gp != nil { return gp, false } } // \u4eceepoll\u91cc\u53d6 if netpollinited() && sched.lastpoll != 0 { if gp := netpoll(false); gp != nil { // non-blocking ...... return gp, false } } ...... // \u5c1d\u8bd54\u6b21\u4ece\u522b\u7684P\u5077 for i := 0; i < 4; i++ { for enum := stealOrder.start(fastrand()); !enum.done(); enum.next() { if sched.gcwaiting != 0 { goto top } stealRunNextG := i > 2 // first look for ready queues with more than 1 g // \u5728\u8fd9\u91cc\u5f00\u59cb\u9488\u5bf9P\u8fdb\u884c\u5077\u53d6\u64cd\u4f5c if gp := runqsteal(_p_, allp[enum.position()], stealRunNextG); gp != nil { return gp, false } } } } // \u5c1d\u8bd5\u4ece\u5168\u5c40runq\u4e2d\u83b7\u53d6G // \u5728\"sched.runqsize/gomaxprocs + 1\"\u3001\"max\"\u3001\"len(_p_.runq))/2\"\u4e09\u4e2a\u6570\u5b57\u4e2d\u53d6\u6700\u5c0f\u7684\u6570\u5b57\u4f5c\u4e3a\u83b7\u53d6\u7684G\u6570\u91cf func globrunqget(_p_ *p, max int32) *g { if sched.runqsize == 0 { return nil } n := sched.runqsize/gomaxprocs + 1 if n > sched.runqsize { n = sched.runqsize } if max > 0 && n > max { n = max } if n > int32(len(_p_.runq))/2 { n = int32(len(_p_.runq)) / 2 } sched.runqsize -= n if sched.runqsize == 0 { sched.runqtail = 0 } gp := sched.runqhead.ptr() sched.runqhead = gp.schedlink n-- for ; n > 0; n-- { gp1 := sched.runqhead.ptr() sched.runqhead = gp1.schedlink runqput(_p_, gp1, false) // \u653e\u5230\u672c\u5730P\u91cc } return gp } schedule \u4e2d\u9996\u5148\u5c1d\u8bd5\u4ece P \u672c\u5730\u961f\u5217\u4e2d\u83b7\u53d6(runqget)\u4e00\u4e2a\u53ef\u6267\u884c\u7684 G\uff0c\u5982\u679c\u6ca1\u6709\u5219\u4ece\u5176\u5b83\u5730\u65b9\u83b7\u53d6(findrunnable),\u6700\u7ec8\u901a\u8fc7 execute \u65b9\u6cd5\u6267\u884c G\u3002 runqget \u5148\u901a\u8fc7 runnext \u62ff\u5230\u5f85\u8fd0\u884c G,\u6ca1\u6709\u7684\u8bdd\uff0c\u518d\u4ece runq \u91cc\u9762\u53d6\u3002 findrunnable \u4ece\u5168\u5c40\u961f\u5217\u3001epoll\u3001\u522b\u7684 P \u91cc\u83b7\u53d6\u3002(\u540e\u9762\u4f1a\u6269\u5c55\u5206\u6790\u5b9e\u73b0) \u5728\u8c03\u5ea6\u7684\u5f00\u5934\u51fa\u8fd8\u505a\u4e86\u4e00\u4e2a\u5c0f\u4f18\u5316\uff1a\u6bcf\u5904\u7406\u4e00\u4e9b\u4efb\u52a1\u4e4b\u540e\uff0c\u5c31\u4f18\u5148\u4ece\u5168\u5c40\u961f\u5217\u91cc\u83b7\u53d6\u4efb\u52a1\uff0c\u4ee5\u4fdd\u969c\u516c\u5e73\u6027\uff0c\u9632\u6b62\u7531\u4e8e\u6bcf\u4e2a P \u91cc\u7684 G \u8fc7\u591a\uff0c\u800c\u5168\u5c40\u961f\u5217\u91cc\u7684\u4efb\u52a1\u4e00\u76f4\u5f97\u4e0d\u5230\u6267\u884c\u673a\u4f1a\u3002 \u8fd9\u91cc\u7528\u5230\u4e86\u4e00\u4e2a\u5173\u952e\u65b9\u6cd5 getg()\uff0cruntime \u7684\u4ee3\u7801\u91cc\u5927\u91cf\u4f7f\u7528\u8be5\u65b9\u6cd5\uff0c\u5b83\u7531\u6c47\u7f16\u5b9e\u73b0\uff0c\u8be5\u65b9\u6cd5\u5c31\u662f\u83b7\u53d6\u5f53\u524d\u8fd0\u884c\u7684 G\uff0c\u5177\u4f53\u5b9e\u73b0\u4e0d\u518d\u8fd9\u91cc\u9610\u8ff0\u3002","title":"3.2 \u8c03\u5ea6\u5668\u5982\u4f55\u8fdb\u884c\u8c03\u5ea6\u5faa\u73af"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#33","text":"\u629b\u51fa\u4e00\u4e2a\u95ee\u9898\uff1a\u6bcf\u4e2a P \u91cc\u9762\u7684 G \u6267\u884c\u65f6\u95f4\u662f\u4e0d\u53ef\u63a7\u7684\uff0c\u5982\u679c\u591a\u4e2a P \u540c\u65f6\u5728\u6267\u884c\uff0c\u4f1a\u4e0d\u4f1a\u51fa\u73b0\u6709\u7684 P \u91cc\u9762\u7684 G \u6267\u884c\u4e0d\u5b8c\uff0c\u6709\u7684 P \u91cc\u9762\u51e0\u4e4e\u6ca1\u6709 G \u53ef\u6267\u884c\u5462\uff1f \u8fd9\u5c31\u8981\u4ece M \u7684\u81ea\u5faa\u73af\u8fc7\u7a0b\u4e2d\u5982\u4f55\u83b7\u53d6 G\u3001\u5f52\u8fd8 G \u7684\u884c\u4e3a\u8bf4\u8d77\u4e86\uff0c\u5148\u770b\u56fe\uff1a \u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\u6709\u4e24\u79cd\u9014\u5f84\uff1a1.\u501f\u52a9\u5168\u5c40\u961f\u5217 sched.runq \u4f5c\u4e3a\u4e2d\u4ecb\uff0c\u672c\u5730 P \u91cc\u7684 G \u592a\u591a\u7684\u8bdd\u5c31\u653e\u5168\u5c40\u91cc\uff0cG \u592a\u5c11\u7684\u8bdd\u5c31\u4ece\u5168\u5c40\u53d6\u30022.\u5168\u5c40\u5217\u8868\u91cc\u6ca1\u6709\u7684\u8bdd\u76f4\u63a5\u4ece P1 \u91cc\u5077\u53d6(steal)\u3002(\u66f4\u591a M \u5728\u6267\u884c\u7684\u8bdd\uff0c\u540c\u6837\u7684\u539f\u7406\uff0c\u8fd9\u91cc\u5c31\u53ea\u62ff 2 \u4e2a\u6765\u4e3e\u4f8b) \u7b2c 1 \u79cd\u9014\u5f84\u5b9e\u73b0\u5982\u4e0b\uff1a // runtime/proc.go func runqput(_p_ *p, gp *g, next bool) { if randomizeScheduler && next && fastrand()%2 == 0 { next = false } // \u5c1d\u8bd5\u628aG\u6dfb\u52a0\u5230P\u7684runnext\u8282\u70b9\uff0c\u8fd9\u91cc\u786e\u4fddrunnext\u53ea\u6709\u4e00\u4e2aG\uff0c\u5982\u679c\u4e4b\u524d\u5df2\u7ecf\u6709\u4e00\u4e2aG\u5219\u8e22\u51fa\u6765\u653e\u5230runq\u91cc if next { retryNext: oldnext := _p_.runnext if !_p_.runnext.cas(oldnext, guintptr(unsafe.Pointer(gp))) { goto retryNext } if oldnext == 0 { return } // \u628a\u8001\u7684g\u8e22\u51fa\u6765\uff0c\u5728\u4e0b\u9762\u653e\u5230runq\u91cc gp = oldnext.ptr() } retry: // \u5982\u679c_p_.runq\u961f\u5217\u4e0d\u6ee1\uff0c\u5219\u653e\u5230\u961f\u5c3e\u5c31\u7ed3\u675f\u4e86\u3002 // \u8bd5\u60f3\u5982\u679c\u4e0d\u653e\u5230\u961f\u5c3e\u800c\u653e\u5230\u961f\u5934\u91cc\u4f1a\u600e\u6837\uff1f\u5982\u679c\u9891\u7e41\u7684\u521b\u5efaG\u5219\u53ef\u80fd\u540e\u9762\u7684G\u603b\u662f\u4e0d\u88ab\u6267\u884c\uff0c\u5bf9\u540e\u9762\u7684G\u4e0d\u516c\u5e73 h := atomic.Load(&_p_.runqhead) // load-acquire, synchronize with consumers t := _p_.runqtail if t-h < uint32(len(_p_.runq)) { _p_.runq[t%uint32(len(_p_.runq))].set(gp) atomic.Store(&_p_.runqtail, t+1) // store-release, makes the item available for consumption return } //\u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u5c1d\u8bd5\u628aG\u548c\u5f53\u524dP\u91cc\u7684\u4e00\u90e8\u5206runq\u653e\u5230\u5168\u5c40\u961f\u5217 //\u56e0\u4e3a\u64cd\u4f5c\u5168\u5c40\u9700\u8981\u52a0\u9501,\u6240\u4ee5\u540d\u5b57\u91cc\u5e26\u4e2aslow if runqputslow(_p_, gp, h, t) { return } // the queue is not full, now the put above must succeed goto retry } func runqputslow(_p_ *p, gp *g, h, t uint32) bool { var batch [len(_p_.runq)/2 + 1]*g // First, grab a batch from local queue. n := t - h n = n / 2 if n != uint32(len(_p_.runq)/2) { throw(\"runqputslow: queue is not full\") } // \u4ecerunq\u5934\u90e8\u5f00\u59cb\u53d6\u51fa\u4e00\u534a\u7684runq\u653e\u5230\u4e34\u65f6\u53d8\u91cfbatch\u91cc for i := uint32(0); i < n; i++ { batch[i] = _p_.runq[(h+i)%uint32(len(_p_.runq))].ptr() } if !atomic.Cas(&_p_.runqhead, h, h+n) { // cas-release, commits consume return false } // \u628a\u8981put\u7684g\u4e5f\u653e\u8fdbbatch\u53bb batch[n] = gp if randomizeScheduler { for i := uint32(1); i <= n; i++ { j := fastrandn(i + 1) batch[i], batch[j] = batch[j], batch[i] } } // \u628a\u53d6\u51fa\u6765\u7684\u4e00\u534arunq\u7ec4\u6210\u94fe\u8868 for i := uint32(0); i < n; i++ { batch[i].schedlink.set(batch[i+1]) } // \u5c06\u4e00\u534a\u7684runq\u653e\u5230global\u961f\u5217\u91cc,\u4e00\u6b21\u591a\u8f6c\u79fb\u4e00\u4e9b\u7701\u5f97\u8f6c\u79fb\u9891\u7e41 lock(&sched.lock) globrunqputbatch(batch[0], batch[n], int32(n+1)) unlock(&sched.lock) return true } func globrunqputbatch(ghead *g, gtail *g, n int32) { gtail.schedlink = 0 if sched.runqtail != 0 { sched.runqtail.ptr().schedlink.set(ghead) } else { sched.runqhead.set(ghead) } sched.runqtail.set(gtail) sched.runqsize += n } runqput \u65b9\u6cd5\u5f52\u8fd8\u6267\u884c\u5b8c\u7684 G,runq \u5b9a\u4e49\u662f runq [256]guintptr\uff0c\u6709\u56fa\u5b9a\u7684\u957f\u5ea6\uff0c\u56e0\u6b64\u5f53\u524d P \u91cc\u7684\u5f85\u8fd0\u884c G \u8d85\u8fc7 256 \u7684\u65f6\u5019\u8bf4\u660e\u8fc7\u591a\u4e86\uff0c\u5219\u6267\u884c runqputslow \u65b9\u6cd5\u628a\u4e00\u534a G \u6254\u7ed9\u5168\u5c40 G \u94fe\u8868\uff0cglobrunqputbatch \u8fde\u63a5\u5168\u5c40\u94fe\u8868\u7684\u5934\u5c3e\u6307\u9488\u3002 \u4f46\u53ef\u80fd\u522b\u7684 P \u91cc\u9762\u5e76\u6ca1\u6709\u8d85\u8fc7 256\uff0c\u5c31\u4e0d\u4f1a\u653e\u5230\u5168\u5c40 G \u94fe\u8868\u91cc\uff0c\u751a\u81f3\u53ef\u80fd\u4e00\u76f4\u7ef4\u6301\u5728\u4e0d\u5230 256 \u4e2a\u3002\u8fd9\u5c31\u501f\u52a9\u7b2c 2 \u4e2a\u9014\u5f84\u4e86\uff1a \u7b2c 2 \u79cd\u9014\u5f84\u5b9e\u73b0\u5982\u4e0b\uff1a // runtime/proc.go // \u4ece\u5176\u5b83\u5730\u65b9\u83b7\u53d6G func findrunnable() (gp *g, inheritTime bool) { ...... // \u5c1d\u8bd54\u6b21\u4ece\u522b\u7684P\u5077 for i := 0; i < 4; i++ { for enum := stealOrder.start(fastrand()); !enum.done(); enum.next() { if sched.gcwaiting != 0 { goto top } stealRunNextG := i > 2 // first look for ready queues with more than 1 g // \u5728\u8fd9\u91cc\u5f00\u59cb\u9488\u5bf9P\u8fdb\u884c\u5077\u53d6\u64cd\u4f5c if gp := runqsteal(_p_, allp[enum.position()], stealRunNextG); gp != nil { return gp, false } } } } \u4ece\u522b\u7684 P \u91cc\u9762\"\u5077\u53d6\"\u4e00\u4e9b G \u8fc7\u6765\u6267\u884c\u4e86\u3002runqsteal \u65b9\u6cd5\u5b9e\u73b0\u4e86\"\u5077\u53d6\"\u64cd\u4f5c\u3002 // runtime/proc.go // \u5077\u53d6P2\u4e00\u534a\u5230\u672c\u5730\u8fd0\u884c\u961f\u5217\uff0c\u5931\u8d25\u5219\u8fd4\u56denil func runqsteal(_p_, p2 *p, stealRunNextG bool) *g { t := _p_.runqtail n := runqgrab(p2, &_p_.runq, t, stealRunNextG) if n == 0 { return nil } n-- // \u8fd4\u56de\u5c3e\u90e8\u7684\u4e00\u4e2aG gp := _p_.runq[(t+n)%uint32(len(_p_.runq))].ptr() if n == 0 { return gp } h := atomic.Load(&_p_.runqhead) // load-acquire, synchronize with consumers if t-h+n >= uint32(len(_p_.runq)) { throw(\"runqsteal: runq overflow\") } atomic.Store(&_p_.runqtail, t+n) // store-release, makes the item available for consumption return gp } // \u4eceP\u91cc\u83b7\u53d6\u4e00\u534a\u7684G,\u653e\u5230batch\u91cc func runqgrab(_p_ *p, batch *[256]guintptr, batchHead uint32, stealRunNextG bool) uint32 { for { // \u8ba1\u7b97\u4e00\u534a\u7684\u6570\u91cf h := atomic.Load(&_p_.runqhead) // load-acquire, synchronize with other consumers t := atomic.Load(&_p_.runqtail) // load-acquire, synchronize with the producer n := t - h n = n - n/2 ...... // \u5c06\u5077\u5230\u7684\u4efb\u52a1\u8f6c\u79fb\u5230\u672c\u5730P\u961f\u5217\u91cc for i := uint32(0); i < n; i++ { g := _p_.runq[(h+i)%uint32(len(_p_.runq))] batch[(batchHead+i)%uint32(len(batch))] = g } if atomic.Cas(&_p_.runqhead, h, h+n) { // cas-release, commits consume return n } } } \u4e0a\u9762\u53ef\u4ee5\u770b\u51fa\u4ece\u522b\u7684 P \u91cc\u9762\u5077(steal)\u4e86\u4e00\u534a\uff0c\u8fd9\u6837\u5c31\u8db3\u591f\u8fd0\u884c\u4e86\u3002\u6709\u4e86\u201c\u5077\u53d6\u201d\u64cd\u4f5c\u4e5f\u5c31\u5145\u5206\u5229\u7528\u4e86\u591a\u7ebf\u7a0b\u7684\u8d44\u6e90\u3002","title":"3.3 \u591a\u4e2a\u7ebf\u7a0b\u4e0b\u5982\u4f55\u8c03\u5ea6"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#4-cpu","text":"","title":"4.\u8c03\u5ea6\u5faa\u73af\u4e2d\u5982\u4f55\u8ba9\u51fa CPU"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#41-cpu","text":"\u7edd\u5927\u591a\u6570\u573a\u666f\u4e0b\u6211\u4eec\u7a0b\u5e8f\u90fd\u662f\u6267\u884c\u5b8c\u4e00\u4e2a G\uff0c\u518d\u6267\u884c\u53e6\u4e00\u4e2a G\uff0c\u90a3\u6211\u4eec\u5c31\u770b\u4e0b G \u662f\u5982\u4f55\u88ab\u6267\u884c\u4ee5\u53ca\u6267\u884c\u5b8c\u5982\u4f55\u9000\u51fa\u7684\u3002 \u5148\u770b G \u5982\u4f55\u88ab\u6267\u884c\uff1a // runtime/proc.go func execute(gp *g, inheritTime bool) { _g_ := getg() casgstatus(gp, _Grunnable, _Grunning) ...... // \u771f\u6b63\u7684\u6267\u884cG\uff0c\u5207\u6362\u5230\u8be5G\u7684\u6808\u5e27\u4e0a\u6267\u884c\uff08\u6c47\u7f16\u5b9e\u73b0\uff09 gogo(&gp.sched) } execute \u65b9\u6cd5\u5148\u66f4\u6539 G \u7684\u72b6\u6001\u4e3a_Grunning \u8868\u793a\u8fd0\u884c\u4e2d,\u6700\u7ec8\u7ed9 gogo \u65b9\u6cd5\u505a\u5b9e\u9645\u7684\u6267\u884c\u64cd\u4f5c\u3002\u800c gogo \u65b9\u6cd5\u5219\u662f\u6c47\u7f16\u5b9e\u73b0\u3002\u518d\u6765\u770b\u4e0b gogo \u65b9\u6cd5\u7684\u5b9e\u73b0: // runtime.asm_amd64.s TEXT runtime\u00b7gogo(SB), NOSPLIT, $16-8 MOVQ buf+0(FP), BX // gobuf \u628a0\u504f\u79fb\u76848\u4e2a\u5b57\u8282\u7ed9BX\u5bc4\u5b58\u5668, gobuf\u7ed3\u6784\u7684\u524d8\u4e2a\u5b57\u8282\u5c31\u662fSP\u6307\u9488 // If ctxt is not nil, invoke deletion barrier before overwriting. MOVQ gobuf_ctxt(BX), AX // \u5728\u628agobuf\u7684ctxt\u53d8\u91cf\u7ed9AX\u5bc4\u5b58\u5668 TESTQ AX, AX // \u5224\u65adAX\u5bc4\u5b58\u5668\u662f\u5426\u4e3a\u7a7a,\u4f20\u8fdb\u6765gp.sched\u7684\u8bdd\u80af\u5b9a\u4e0d\u4e3a\u7a7a\u4e86,\u56e0\u6b64JZ nilctxt\u4e0d\u8df3\u8f6c JZ nilctxt LEAQ gobuf_ctxt(BX), AX MOVQ AX, 0(SP) MOVQ $0, 8(SP) CALL runtime\u00b7writebarrierptr_prewrite(SB) MOVQ buf+0(FP), BX nilctxt: // \u4e0b\u9762\u5219\u662f\u51fd\u6570\u6808\u7684BP SP\u6307\u9488\u79fb\u52a8\uff0c\u6700\u540e\u8fdb\u5165\u5230\u6307\u5b9a\u7684\u4ee3\u7801\u533a\u57df MOVQ gobuf_g(BX), DX MOVQ 0(DX), CX // make sure g != nil get_tls(CX) MOVQ DX, g(CX) MOVQ gobuf_sp(BX), SP // restore SP MOVQ gobuf_ret(BX), AX MOVQ gobuf_ctxt(BX), DX MOVQ gobuf_bp(BX), BP MOVQ $0, gobuf_sp(BX) // clear to help garbage collector MOVQ $0, gobuf_ret(BX) MOVQ $0, gobuf_ctxt(BX) MOVQ $0, gobuf_bp(BX) MOVQ gobuf_pc(BX), BX // PC\u6307\u9488\u6307\u5411\u9000\u51fa\u65f6\u8981\u6267\u884c\u7684\u51fd\u6570\u5730\u5740 JMP BX // \u8df3\u8f6c\u5230\u6267\u884c\u4ee3\u7801\u5904 // runtime/runtime2.go type gobuf struct { // The offsets of sp, pc, and g are known to (hard-coded in) libmach. // // ctxt is unusual with respect to GC: it may be a // heap-allocated funcval so write require a write barrier, // but gobuf needs to be cleared from assembly. We take // advantage of the fact that the only path that uses a // non-nil ctxt is morestack. As a result, gogo is the only // place where it may not already be nil, so gogo uses an // explicit write barrier. Everywhere else that resets the // gobuf asserts that ctxt is already nil. sp uintptr pc uintptr g guintptr ctxt unsafe.Pointer // this has to be a pointer so that gc scans it ret sys.Uintreg lr uintptr bp uintptr // for GOEXPERIMENT=framepointer } gogo \u65b9\u6cd5\u4f20\u7684\u53c2\u6570\u6ce8\u610f\u662f gp.sched,\u800c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u91cc\u53ef\u4ee5\u770b\u5230\u4fdd\u5b58\u4e86\u719f\u6089\u7684\u51fd\u6570\u6808\u5bc4\u5b58\u5668 SP/PC/BP\uff0c\u80fd\u60f3\u5230\u662f\u628a\u6267\u884c\u6808\u4f20\u4e86\u8fdb\u53bb(\u65e2\u7136\u662f\u6267\u884c\u4e00\u4e2a G\uff0c\u5f53\u7136\u8981\u628a\u6267\u884c\u6808\u4f20\u8fdb\u53bb\u4e86)\u3002\u53ef\u4ee5\u770b\u5230\u5728 gogo \u51fd\u6570\u4e2d\u5b9e\u8d28\u5c31\u53ea\u662f\u505a\u4e86\u51fd\u6570\u6808\u6307\u9488\u7684\u79fb\u52a8\u3002 \u8fd9\u4e2a\u6267\u884c G \u7684\u64cd\u4f5c\uff0c\u719f\u6089\u51fd\u6570\u8c03\u7528\u7684\u51fd\u6570\u6808\u7684\u57fa\u672c\u539f\u7406\u7684\u4eba\u60f3\u5fc5\u6709\u4e9b\u5370\u8c61(\u5982\u679c\u4e0d\u719f\u6089\u8bf7\u81ea\u884c\u641c\u7d22)\uff0c\u6267\u884c\u4e00\u4e2a G \u5176\u5b9e\u5c31\u662f\u6267\u884c\u51fd\u6570\u4e00\u6837\u5207\u6362\u5230\u5bf9\u5e94\u7684\u51fd\u6570\u6808\u5e27\u4e0a\u3002 C \u8bed\u8a00\u91cc\u6808\u5e27\u521b\u5efa\u7684\u65f6\u5019\u6709\u4e2a IP \u5bc4\u5b58\u5668\u6307\u5411\"return address\",\u5373\u4e3b\u8c03\u51fd\u6570\u7684\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\uff0c \u88ab\u8c03\u51fd\u6570\u9000\u51fa\u7684\u65f6\u5019\u901a\u8fc7\u8be5\u6307\u9488\u56de\u5230\u8c03\u7528\u51fd\u6570\u91cc\u3002\u5728 Go \u8bed\u8a00\u91cc\u6709\u4e2a PC \u5bc4\u5b58\u5668\u6307\u5411\u9000\u51fa\u51fd\u6570\u3002\u90a3\u4e48\u4e0b PC \u5bc4\u5b58\u5668\u6307\u5411\u7684\u662f\u54ea\u91cc\uff1f\u6211\u4eec\u56de\u5230\u521b\u5efa G \u7684\u5730\u65b9\u770b\u4e0b\u4ee3\u7801\uff1a // runtime/proc.go func newproc1(fn *funcval, argp *uint8, narg int32, nret int32, callerpc uintptr) *g { ...... // \u4ece\u5f53\u524dP\u91cc\u9762\u590d\u7528\u4e00\u4e2a\u7a7a\u95f2G newg := gfget(_p_) // \u5982\u679c\u6ca1\u6709\u7a7a\u95f2G\u5219\u65b0\u5efa\u4e00\u4e2a,\u9ed8\u8ba4\u5806\u5927\u5c0f\u4e3a_StackMin=2048 bytes if newg == nil { newg = malg(_StackMin) casgstatus(newg, _Gidle, _Gdead) // \u628a\u65b0\u521b\u5efa\u7684G\u6dfb\u52a0\u5230\u5168\u5c40allg\u91cc allgadd(newg) // publishes with a g->status of Gdead so GC scanner doesn't look at uninitialized stack. } ...... newg.sched.sp = sp newg.stktopsp = sp newg.sched.pc = funcPC(goexit) + sys.PCQuantum // \u8bb0\u5f55\u5f53\u524d\u4efb\u52a1\u7684pc\u5bc4\u5b58\u5668\u4e3agoexit\u65b9\u6cd5\uff0c\u7528\u4e8e\u5f53\u6267\u884cG\u7ed3\u675f\u540e\u627e\u5230\u9000\u51fa\u65b9\u6cd5\uff0c\u4ece\u800c\u518d\u6b21\u8fdb\u5165\u8c03\u5ea6\u5faa\u73af // +PCQuantum so that previous instruction is in same function newg.sched.g = guintptr(unsafe.Pointer(newg)) gostartcallfn(&newg.sched, fn) newg.gopc = callerpc newg.startpc = fn.fn ....... return newg } \u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u7ed9 G \u7684\u6267\u884c\u73af\u5883\u91cc\u7684 pc \u53d8\u91cf\u8d4b\u503c\u4e86\u4e00\u4e2a goexit \u7684\u51fd\u6570\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u8bf4 G \u6b63\u5e38\u6267\u884c\u5b8c\u9000\u51fa\u65f6\u6267\u884c\u7684\u662f goexit \u51fd\u6570\u3002\u518d\u770b\u4e0b\u8be5\u51fd\u6570\u7684\u5b9e\u73b0: // runtime/asm_amd64.s // The top-most function running on a goroutine // returns to goexit+PCQuantum. TEXT runtime\u00b7goexit(SB),NOSPLIT,$0-0 BYTE $0x90 // NOP CALL runtime\u00b7goexit1(SB) // does not return // traceback from goexit1 must hit code range of goexit BYTE $0x90 // NOP // runtime/proc.go // G\u6267\u884c\u7ed3\u675f\u540e\u56de\u5230\u8fd9\u91cc\u653e\u5230P\u7684\u672c\u5730\u961f\u5217\u91cc func goexit1() { if raceenabled { racegoend() } if trace.enabled { traceGoEnd() } // \u5207\u6362\u5230g0\u6765\u91ca\u653eG mcall(goexit0) } // g0\u4e0b\u5f53G\u6267\u884c\u7ed3\u675f\u540e\u56de\u5230\u8fd9\u91cc\u653e\u5230P\u7684\u672c\u5730\u961f\u5217\u91cc func goexit0(gp *g) { ...... gfput(_g_.m.p.ptr(), gp) schedule() } \u4ee3\u7801\u4e2d\u5207\u6362\u5230\u4e86 G0 \u4e0b\u6267\u884c\u4e86 schedule \u65b9\u6cd5\uff0c\u518d\u6b21\u8fdb\u5ea6\u4e86\u4e0b\u4e00\u8f6e\u8c03\u5ea6\u5faa\u73af\u3002 \u4ee5\u4e0a\u5c31\u662f\u6b63\u5e38\u6267\u884c\u4e00\u4e2a G \u5e76\u6b63\u5e38\u9000\u51fa\u7684\u5b9e\u73b0\u3002","title":"4.1 \u6267\u884c\u5b8c\u6210\u8ba9\u51fa CPU"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#42-cpu","text":"\u5728\u5b9e\u9645\u573a\u666f\u4e2d\u8fd8\u6709\u4e00\u4e9b\u6ca1\u6709\u6267\u884c\u5b8c\u6210\u7684 G\uff0c\u800c\u53c8\u9700\u8981\u4e34\u65f6\u505c\u6b62\u6267\u884c\uff0c\u6bd4\u5982 time.Sleep\u3001IO \u963b\u585e\u7b49\u7b49\uff0c\u5c31\u9700\u8981\u6302\u8d77\u8be5 G\uff0c\u628a CPU \u8ba9\u51fa\u7ed9\u522b\u4eba\u4f7f\u7528\u3002\u5728 runtime \u4e0b\u9762\u6709\u4e2a gopark \u65b9\u6cd5\uff0c\u770b\u4e0b\u5b9e\u73b0\uff1a // runtime/proc.go func gopark(unlockf func(*g, unsafe.Pointer) bool, lock unsafe.Pointer, reason string, traceEv byte, traceskip int) { mp := acquirem() gp := mp.curg status := readgstatus(gp) if status != _Grunning && status != _Gscanrunning { throw(\"gopark: bad g status\") } mp.waitlock = lock mp.waitunlockf = *(*unsafe.Pointer)(unsafe.Pointer(&unlockf)) gp.waitreason = reason mp.waittraceev = traceEv mp.waittraceskip = traceskip releasem(mp) // can't do anything that might move the G between Ms here. // mcall \u5728M\u91cc\u4ece\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684G\u5207\u6362\u5230g0 // park_m \u5728\u5207\u6362\u5230\u7684g0\u4e0b\u5148\u628a\u4f20\u8fc7\u6765\u7684G\u5207\u6362\u4e3a_Gwaiting\u72b6\u6001\u6302\u8d77\u8be5G // \u8c03\u7528\u56de\u8c03\u51fd\u6570waitunlockf()\u7531\u5916\u5c42\u51b3\u5b9a\u662f\u5426\u7b49\u5f85\u89e3\u9501\uff0c\u8fd4\u56detrue\u5219\u7b49\u5f85\u89e3\u9501\u4e0d\u5728\u6267\u884cG\uff0c\u8fd4\u56defalse\u5219\u4e0d\u7b49\u5f85\u89e3\u9501\u7ee7\u7eed\u6267\u884c mcall(park_m) } // runtime/stubs.go // mcall switches from the g to the g0 stack and invokes fn(g), // where g is the goroutine that made the call. // mcall saves g's current PC/SP in g->sched so that it can be restored later. ...... func mcall(fn func(*g)) // runtime/proc.go func park_m(gp *g) { _g_ := getg() // \u6b64\u5904\u83b7\u5f97\u7684\u662fg0,\u800c\u4e0d\u662fgp if trace.enabled { traceGoPark(_g_.m.waittraceev, _g_.m.waittraceskip) } casgstatus(gp, _Grunning, _Gwaiting) dropg() // \u628ag0\u4eceM\u7684\"\u5f53\u524d\u8fd0\u884c\"\u91cc\u5265\u79bb\u51fa\u6765 if _g_.m.waitunlockf != nil { fn := *(*func(*g, unsafe.Pointer) bool)(unsafe.Pointer(&_g_.m.waitunlockf)) ok := fn(gp, _g_.m.waitlock) _g_.m.waitunlockf = nil _g_.m.waitlock = nil if !ok { // \u5982\u679c\u4e0d\u9700\u8981\u7b49\u5f85\u89e3\u9501\uff0c\u5219\u5207\u6362\u5230_Grunnable\u72b6\u6001\u5e76\u76f4\u63a5\u6267\u884cG if trace.enabled { traceGoUnpark(gp, 2) } casgstatus(gp, _Gwaiting, _Grunnable) execute(gp, true) // Schedule it back, never returns. } } schedule() } gopark \u662f\u8fdb\u884c\u8c03\u5ea6\u51fa\u8ba9 CPU \u8d44\u6e90\u7684\u65b9\u6cd5\uff0c\u91cc\u9762\u6709\u4e2a\u65b9\u6cd5 mcall()\uff0c\u6ce8\u91ca\u91cc\u8fd9\u6837\u63cf\u8ff0\uff1a \u4ece\u5f53\u524d\u8fd0\u884c\u7684 G \u5207\u6362\u5230 g0 \u7684\u8fd0\u884c\u6808\u4e0a\uff0c\u7136\u540e\u8c03\u7528 fn(g)\uff0c\u8fd9\u91cc\u88ab\u8c03\u7528\u7684 G \u662f\u8c03\u7528 mcall \u65b9\u6cd5\u65f6\u7684 G\u3002mcall \u65b9\u6cd5\u4fdd\u5b58\u5f53\u524d\u8fd0\u884c\u7684 G \u7684 PC/SP \u5230 g->sched \u91cc\uff0c\u56e0\u6b64\u8be5 G \u53ef\u4ee5\u5728\u4ee5\u540e\u88ab\u91cd\u65b0\u6062\u590d\u6267\u884c. \u5728\u672c\u7ae0\u5f00\u59cb\u4ecb\u7ecd\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\u6709\u63d0\u5230 M \u521b\u5efa\u7684\u65f6\u5019\u7ed1\u5b9a\u4e86\u4e00\u4e2a g0\uff0c\u8c03\u5ea6\u5de5\u4f5c\u662f\u8fd0\u884c\u5728 g0 \u7684\u6808\u4e0a\u7684\u3002mcall \u65b9\u6cd5\u901a\u8fc7 g0 \u5148\u628a\u5f53\u524d\u8c03\u7528\u7684 G \u7684\u6267\u884c\u6808\u6682\u5b58\u5230 g->sched \u53d8\u91cf\u91cc\uff0c\u7136\u540e\u5207\u6362\u5230 g0 \u7684\u6267\u884c\u6808\u4e0a\u6267\u884c park_m\u3002park_m \u65b9\u6cd5\u91cc\u628a gp \u7684\u72b6\u6001\u4ece _Grunning \u5207\u6362\u5230 _Gwaiting \u8868\u660e\u8fdb\u5165\u5230\u7b49\u5f85\u5524\u9192\u72b6\u6001\uff0c\u6b64\u65f6\u4f11\u7720 G \u7684\u64cd\u4f5c\u5c31\u5b8c\u6210\u4e86\u3002\u63a5\u4e0b\u6765\u65e2\u7136 G \u4f11\u7720\u4e86\uff0cCPU \u7ebf\u7a0b\u603b\u4e0d\u80fd\u95f2\u4e0b\u6765\uff0c\u5728 park_m \u65b9\u6cd5\u91cc\u53c8\u53ef\u4ee5\u770b\u5230 schedule \u65b9\u6cd5\uff0c\u5f00\u59cb\u8fdb\u5165\u5230\u5230\u4e00\u8f6e\u8c03\u5ea6\u5faa\u73af\u4e86\u3002 park_m \u65b9\u6cd5\u91cc\u8fd8\u6709\u6bb5\u5c0f\u63d2\u66f2\uff0c\u8fdb\u5165\u8c03\u5ea6\u5faa\u73af\u4e4b\u524d\u8fd8\u6709\u4e2a\u5bf9 waitunlockf \u65b9\u6cd5\u7684\u5224\u65ad\uff0c\u8be5\u65b9\u6cd5\u610f\u601d\u662f\u5982\u679c\u89e3\u9501\u4e0d\u6210\u529f\u5219\u8c03\u7528 execute \u65b9\u6cd5\u7ee7\u7eed\u6267\u884c\u4e4b\u524d\u7684 G\uff0c\u800c\u8be5\u65b9\u6cd5\u6c38\u8fdc\u4e0d\u4f1a return\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u518d\u6b21\u8fdb\u5165\u4e0b\u4e00\u6b21\u8c03\u5ea6\u3002\u4e5f\u5c31\u662f\u8bf4\u7ed9\u5916\u90e8\u4e00\u4e2a\u63a7\u5236\u662f\u5426\u8981\u8fdb\u884c\u4e0b\u4e00\u4e2a\u8c03\u5ea6\u7684\u9009\u62e9\u3002","title":"4.2 \u4e3b\u52a8\u8ba9\u51fa CPU"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#43-cpu","text":"\u56de\u60f3\u5728 runtime.main()\u91cc\u9762\u6709\u5355\u72ec\u542f\u52a8\u4e86\u4e00\u4e2a\u76d1\u63a7\u4efb\u52a1\uff0c\u65b9\u6cd5\u662f sysmon\u3002\u770b\u4e0b\u8be5\u65b9\u6cd5\uff1a // runtime/proc.go func sysmon() { ...... for { // delay\u53c2\u6570\u7528\u4e8e\u63a7\u5236for\u5faa\u73af\u7684\u95f4\u9694\uff0c\u4e0d\u81f3\u4e8e\u65e0\u9650\u6b7b\u5faa\u73af\u3002 // \u63a7\u5236\u903b\u8f91\u662f\u524d50\u6b21\u6bcf\u6b21sleep 20\u5fae\u79d2\uff0c\u8d85\u8fc750\u6b21\u5219\u6bcf\u6b21\u7ffb2\u500d\uff0c\u76f4\u5230\u6700\u592710\u6beb\u79d2 if idle == 0 { // start with 20us sleep... delay = 20 } else if idle > 50 { // start doubling the sleep after 1ms... delay *= 2 } if delay > 10*1000 { // up to 10ms delay = 10 * 1000 } usleep(delay) lastpoll := int64(atomic.Load64(&sched.lastpoll)) now := nanotime() if lastpoll != 0 && lastpoll+10*1000*1000 < now { atomic.Cas64(&sched.lastpoll, uint64(lastpoll), uint64(now)) gp := netpoll(false) // non-blocking - returns list of goroutines if gp != nil { ...... incidlelocked(-1) // \u628aepoll ready\u7684G\u5217\u8868\u6ce8\u5165\u5230\u5168\u5c40runq\u91cc injectglist(gp) incidlelocked(1) } } // retake P's blocked in syscalls // and preempt long running G's if retake(now) != 0 { idle = 0 } else { idle++ } ...... } } func retake(now int64) uint32 { n := 0 for i := int32(0); i < gomaxprocs; i++ { _p_ := allp[i] // \u4ece\u6240\u6709P\u91cc\u9762\u53bb\u627e if _p_ == nil { continue } pd := &_p_.sysmontick s := _p_.status if s == _Psyscall { ...... } else if s == _Prunning { // \u9488\u5bf9\u6b63\u5728\u8fd0\u884c\u7684P // Preempt G if it's running for too long. t := int64(_p_.schedtick) if int64(pd.schedtick) != t { pd.schedtick = uint32(t) pd.schedwhen = now continue } // \u5982\u679c\u5df2\u7ecf\u8d85\u8fc7forcePreemptNS(10ms)\uff0c\u5219\u62a2\u5360 if pd.schedwhen+forcePreemptNS > now { continue } // \u62a2\u5360P preemptone(_p_) } } return uint32(n) } func preemptone(_p_ *p) bool { mp := _p_.m.ptr() if mp == nil || mp == getg().m { return false } // \u627e\u5230\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684G gp := mp.curg if gp == nil || gp == mp.g0 { return false } // \u6807\u8bb0\u62a2\u5360\u72b6\u6001 gp.preempt = true // Every call in a go routine checks for stack overflow by // comparing the current stack pointer to gp->stackguard0. // Setting gp->stackguard0 to StackPreempt folds // preemption into the normal stack overflow check. // G\u91cc\u9762\u7684\u6bcf\u4e00\u6b21\u8c03\u7528\u90fd\u4f1a\u6bd4\u8f83\u5f53\u524d\u6808\u6307\u9488\u4e0e gp->stackguard0 \u6765\u68c0\u67e5\u5806\u6808\u6ea2\u51fa // \u8bbe\u7f6e gp->stackguard0 \u4e3a StackPreempt \u6765\u89e6\u53d1\u6b63\u5e38\u7684\u5806\u6808\u6ea2\u51fa\u68c0\u6d4b gp.stackguard0 = stackPreempt return true } sysmon() \u65b9\u6cd5\u5904\u4e8e\u65e0\u9650 for \u5faa\u73af\uff0c\u6574\u4e2a\u8fdb\u7a0b\u7684\u751f\u547d\u5468\u671f\u76d1\u63a7\u7740\u3002retake()\u65b9\u6cd5\u6bcf\u6b21\u5bf9\u6240\u6709\u7684 P \u904d\u5386\u68c0\u67e5\u8d85\u8fc7 10ms \u7684\u8fd8\u5728\u8fd0\u884c\u7684 G\uff0c\u5982\u679c\u6709\u8d85\u8fc7 10ms \u7684\u5219\u901a\u8fc7 preemptone()\u8fdb\u884c\u62a2\u5360\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u8fd9\u91cc\u53ea\u628a gp.stackguard0 \u8d4b\u503c\u4e86\u4e00\u4e2a stackPreempt\uff0c\u5e76\u6ca1\u6709\u505a\u8ba9\u51fa CPU \u7684\u64cd\u4f5c\uff0c\u56e0\u6b64\u8fd9\u91cc\u7684\u62a2\u5360\u5b9e\u8d28\u53ea\u662f\u4e00\u4e2a\u201d\u6807\u8bb0\u201c\u62a2\u5360\u3002\u90a3\u4e48\u771f\u6b63\u505c\u6b62 G \u6267\u884c\u7684\u64cd\u4f5c\u5728\u54ea\u91cc\uff1f // runtime/stack.go func newstack(ctxt unsafe.Pointer) { ...... // NOTE: stackguard0 may change underfoot, if another thread // is about to try to preempt gp. Read it just once and use that same // value now and below. // \u8fd9\u91cc\u7684\u903b\u8f91\u662f\u4e3aG\u7684\u62a2\u5360\u505a\u7684\u5224\u65ad\u3002 // \u5224\u65ad\u662f\u5426\u662f\u62a2\u5360\u5f15\u53d1\u6808\u6269\u5f20\uff0c\u5982\u679c gp.stackguard0 == stackPreempt \u5219\u8bf4\u660e\u662f\u62a2\u5360\u89e6\u53d1\u7684\u6808\u6269\u5f20 preempt := atomic.Loaduintptr(&gp.stackguard0) == stackPreempt ...... //\u5982\u679c\u5224\u65ad\u53ef\u4ee5\u62a2\u5360, \u5219\u7ee7\u7eed\u5224\u65ad\u662f\u5426GC\u5f15\u8d77\u7684, \u5982\u679c\u662f\u5219\u5bf9G\u7684\u6808\u7a7a\u95f4\u6267\u884c\u6807\u8bb0\u5904\u7406(\u626b\u63cf\u6839\u5bf9\u8c61)\u7136\u540e\u7ee7\u7eed\u8fd0\u884c, //\u5982\u679c\u4e0d\u662fGC\u5f15\u8d77\u7684\u5219\u8c03\u7528gopreempt_m\u51fd\u6570\u5b8c\u6210\u62a2\u5360. if preempt { ...... // \u505c\u6b62\u5f53\u524d\u8fd0\u884c\u72b6\u6001\u7684G,\u6700\u540e\u653e\u5230\u5168\u5c40runq\u91cc,\u91ca\u653eM // \u8fd9\u91cc\u4f1a\u8fdb\u5165schedule\u5faa\u73af.\u963b\u585e\u5230\u8fd9\u91cc gopreempt_m(gp) // never return } ...... } // runtime/proc.go func goschedImpl(gp *g) { status := readgstatus(gp) if status&^_Gscan != _Grunning { dumpgstatus(gp) throw(\"bad g status\") } casgstatus(gp, _Grunning, _Grunnable) dropg() lock(&sched.lock) globrunqput(gp) unlock(&sched.lock) schedule() } \u6211\u4eec\u90fd\u77e5\u9053 Go \u7684\u8c03\u5ea6\u662f\u975e\u62a2\u5360\u5f0f\u7684\uff0c\u8981\u60f3\u5b9e\u73b0 G \u4e0d\u88ab\u957f\u65f6\u95f4\uff0c\u5c31\u53ea\u80fd\u4e3b\u52a8\u89e6\u53d1\u62a2\u5360\uff0c\u800c Go \u89e6\u53d1\u62a2\u5360\u7684\u5b9e\u9645\u5c31\u662f\u5728\u6808\u6269\u5f20\u7684\u65f6\u5019\uff0c\u5728 newstack \u65b0\u521b\u5efa\u6808\u7a7a\u95f4\u7684\u65f6\u5019\u68c0\u6d4b\u662f\u5426\u6709\u62a2\u5360\u6807\u8bb0(\u4e5f\u5c31\u662f gp.stackguard0 \u662f\u5426\u7b49\u4e8e stackPreempt)\uff0c\u5982\u679c\u6709\u5219\u901a\u8fc7 goschedImpl \u65b9\u6cd5\u518d\u6b21\u8fdb\u5165\u5230\u719f\u6089\u7684 schedule \u8c03\u5ea6\u5faa\u73af\u3002","title":"4.3 \u62a2\u5360\u8ba9\u51fa CPU"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#44-cpu","text":"\u6211\u4eec\u7a0b\u5e8f\u90fd\u8dd1\u5728\u7cfb\u7edf\u4e0a\u9762\uff0c\u5c31\u7ed5\u4e0d\u5f00\u4e0e\u7cfb\u7edf\u7684\u4ea4\u4e92\u3002\u90a3\u4e48\u5f53\u6211\u4eec\u7684 Go \u7a0b\u5e8f\u505a\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u7684\u65b9\u6cd5\u4e0d\u786e\u5b9a\u4f1a\u963b\u585e\u591a\u4e45\uff0c\u800c\u6211\u4eec\u7a0b\u5e8f\u53c8\u4e0d\u77e5\u9053\u8fd0\u884c\u7684\u72b6\u6001\u8be5\u600e\u4e48\u529e\uff1f \u5728 Go \u4e2d\u5e76\u6ca1\u6709\u76f4\u63a5\u5bf9\u7cfb\u7edf\u5185\u6838\u51fd\u6570\u8c03\u7528\uff0c\u800c\u662f\u5c01\u88c5\u4e86\u4e2a syscall.Syscall \u65b9\u6cd5\uff0c\u5148\u770b\u4e0b\u5b9e\u73b0\uff1a // syscall/syscall_unix.go func Syscall(trap, a1, a2, a3 uintptr) (r1, r2 uintptr, err Errno) // syscall/asm_linux_amd64.s TEXT \u00b7Syscall(SB),NOSPLIT,$0-56 CALL runtime\u00b7entersyscall(SB) MOVQ a1+8(FP), DI MOVQ a2+16(FP), SI MOVQ a3+24(FP), DX MOVQ $0, R10 MOVQ $0, R8 MOVQ $0, R9 MOVQ trap+0(FP), AX // syscall entry SYSCALL // \u8fdb\u884c\u7cfb\u7edf\u8c03\u7528 CMPQ AX, $0xfffffffffffff001 JLS ok MOVQ $-1, r1+32(FP) MOVQ $0, r2+40(FP) NEGQ AX MOVQ AX, err+48(FP) CALL runtime\u00b7exitsyscall(SB) RET ok: MOVQ AX, r1+32(FP) MOVQ DX, r2+40(FP) MOVQ $0, err+48(FP) CALL runtime\u00b7exitsyscall(SB) RET \u5728\u6c47\u7f16\u4ee3\u7801\u4e2d\u770b\u51fa\u5148\u662f\u6267\u884c\u4e86 runtime\u00b7entersyscall \u65b9\u6cd5\uff0c\u7136\u540e\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\uff0c\u6700\u540e\u6267\u884c\u4e86 runtime\u00b7exitsyscall(SB)\uff0c\u4ece\u5b57\u9762\u610f\u601d\u770b\u662f\u8fdb\u5165\u7cfb\u7edf\u8c03\u7528\u4e4b\u524d\u5148\u6267\u884c\u4e00\u4e9b\u903b\u8f91\uff0c\u9000\u51fa\u7cfb\u7edf\u8c03\u7528\u4e4b\u540e\u6267\u884c\u4e00\u5806\u903b\u8f91\u3002\u770b\u4e0b\u5177\u4f53\u5b9e\u73b0\uff1a // runtime/proc.go func entersyscall(dummy int32) { reentersyscall(getcallerpc(unsafe.Pointer(&dummy)), getcallersp(unsafe.Pointer(&dummy))) } func reentersyscall(pc, sp uintptr) { ...... // Leave SP around for GC and traceback. // \u4fdd\u5b58\u6267\u884c\u73b0\u573a save(pc, sp) _g_.syscallsp = sp _g_.syscallpc = pc // \u5207\u6362\u5230\u7cfb\u7edf\u8c03\u7528\u72b6\u6001 casgstatus(_g_, _Grunning, _Gsyscall) ...... // Goroutines must not split stacks in Gsyscall status (it would corrupt g->sched). // We set _StackGuard to StackPreempt so that first split stack check calls morestack. // Morestack detects this case and throws. _g_.stackguard0 = stackPreempt _g_.m.locks-- } \u8fdb\u5165\u7cfb\u7edf\u8c03\u7528\u524d\u5148\u4fdd\u5b58\u6267\u884c\u73b0\u573a\uff0c\u7136\u540e\u5207\u6362\u5230_Gsyscall \u72b6\u6001\uff0c\u6700\u540e\u6807\u8bb0\u62a2\u5360\uff0c\u7b49\u5f85\u88ab\u62a2\u5360\u8d70\u3002 // runtime/proc.go func exitsyscall(dummy int32) { ...... // Call the scheduler. mcall(exitsyscall0) ...... } func exitsyscall0(gp *g) { _g_ := getg() casgstatus(gp, _Gsyscall, _Grunnable) dropg() lock(&sched.lock) // \u83b7\u53d6\u4e00\u4e2a\u7a7a\u95f2\u7684P\uff0c\u5982\u679c\u6ca1\u6709\u5219\u653e\u5230\u5168\u5c40\u961f\u5217\u91cc\uff0c\u5982\u679c\u6709\u5219\u6267\u884c _p_ := pidleget() if _p_ == nil { globrunqput(gp) // \u5982\u679c\u6ca1\u6709P\u5c31\u653e\u5230\u5168\u5c40\u961f\u5217\u91cc,\u7b49\u5f85\u6709\u8d44\u6e90\u65f6\u6267\u884c } else if atomic.Load(&sched.sysmonwait) != 0 { atomic.Store(&sched.sysmonwait, 0) notewakeup(&sched.sysmonnote) } unlock(&sched.lock) if _p_ != nil { acquirep(_p_) execute(gp, false) // Never returns. // \u5982\u679c\u627e\u5230\u7a7a\u95f2\u7684P\u5219\u76f4\u63a5\u6267\u884c } if _g_.m.lockedg != nil { // Wait until another thread schedules gp and so m again. stoplockedm() execute(gp, false) // Never returns. } stopm() schedule() // Never returns. // \u6ca1\u6709P\u8d44\u6e90\u6267\u884c\uff0c\u5c31\u7ee7\u7eed\u4e0b\u4e00\u8f6e\u8c03\u5ea6\u5faa\u73af } \u7cfb\u7edf\u8c03\u7528\u9000\u51fa\u65f6\uff0c\u5207\u5230 G0 \u4e0b\u628a G \u72b6\u6001\u5207\u56de\u6765\uff0c\u5982\u679c\u6709\u53ef\u6267\u884c\u7684 P \u5219\u76f4\u63a5\u6267\u884c\uff0c\u5982\u679c\u6ca1\u6709\u5219\u653e\u5230\u5168\u5c40\u961f\u5217\u91cc\uff0c\u7b49\u5f85\u8c03\u5ea6\uff0c\u6700\u540e\u53c8\u770b\u5230\u4e86\u719f\u6089\u7684 schedule \u8fdb\u5165\u4e0b\u4e00\u8f6e\u8c03\u5ea6\u5faa\u73af\u3002","title":"4.4 \u7cfb\u7edf\u8c03\u7528\u8ba9\u51fa CPU"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#5-g","text":"","title":"5.\u5f85\u6267\u884c G \u7684\u6765\u6e90"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#51-go-func-g","text":"\u5f53\u5f00\u542f\u4e00\u4e2a Goroutine \u7684\u65f6\u5019\u7528\u5230 go func()\u8fd9\u6837\u7684\u8bed\u6cd5\uff0c\u5728 runtime \u4e0b\u5176\u5b9e\u8c03\u7528\u7684\u5c31\u662f newproc \u65b9\u6cd5\u3002 // runtime/proc.go func newproc(siz int32, fn *funcval) { argp := add(unsafe.Pointer(&fn), sys.PtrSize) pc := getcallerpc(unsafe.Pointer(&siz)) systemstack(func() { newproc1(fn, (*uint8)(argp), siz, 0, pc) }) } func newproc1(fn *funcval, argp *uint8, narg int32, nret int32, callerpc uintptr) *g { ...... _p_ := _g_.m.p.ptr() // \u4ece\u5f53\u524dP\u91cc\u9762\u590d\u7528\u4e00\u4e2a\u7a7a\u95f2G newg := gfget(_p_) // \u5982\u679c\u6ca1\u6709\u7a7a\u95f2G\u5219\u65b0\u5efa\u4e00\u4e2a,\u9ed8\u8ba4\u5806\u5927\u5c0f\u4e3a_StackMin=2048 bytes if newg == nil { newg = malg(_StackMin) casgstatus(newg, _Gidle, _Gdead) // \u628a\u65b0\u521b\u5efa\u7684G\u6dfb\u52a0\u5230\u5168\u5c40allg\u91cc allgadd(newg) // publishes with a g->status of Gdead so GC scanner doesn't look at uninitialized stack. } ...... if isSystemGoroutine(newg) { atomic.Xadd(&sched.ngsys, +1) } newg.gcscanvalid = false casgstatus(newg, _Gdead, _Grunnable) // \u628aG\u653e\u5230P\u91cc\u7684\u5f85\u8fd0\u884c\u961f\u5217\uff0c\u7b2c\u4e09\u53c2\u6570\u8bbe\u7f6e\u4e3atrue\uff0c\u8868\u793a\u8981\u653e\u5230runnext\u91cc\uff0c\u4f5c\u4e3a\u4f18\u5148\u8981\u6267\u884c\u7684G runqput(_p_, newg, true) // \u5982\u679c\u6709\u5176\u5b83\u7a7a\u95f2P\u5219\u5c1d\u8bd5\u5524\u9192\u67d0\u4e2aM\u6765\u6267\u884c // \u5982\u679c\u6709M\u5904\u4e8e\u81ea\u7487\u7b49\u5f85P\u6216G\u72b6\u6001\uff0c\u653e\u5f03\u3002 // NOTE: sched.nmspinning!=0\u8bf4\u660e\u6b63\u5728\u6709M\u88ab\u5524\u9192\uff0c\u8fd9\u91cc\u5224\u65adsched.nmspinnin==0\u65f6\u624d\u8fdb\u5165wakep\u662f\u9632\u6b62\u540c\u65f6\u5524\u9192\u591a\u4e2aM if atomic.Load(&sched.npidle) != 0 && atomic.Load(&sched.nmspinning) == 0 && mainStarted { wakep() } ...... return newg } newproc1 \u65b9\u6cd5\u4e2d gfget \u5148\u4ece\u7a7a\u95f2\u7684 G \u5217\u8868\u83b7\u53d6\u4e00\u4e2a G \u5bf9\u8c61\uff0c\u6ca1\u6709\u5219\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 G \u5bf9\u8c61\uff0c\u7136\u540e runqput \u653e\u5230\u5f53\u524d P \u5f85\u8fd0\u884c\u961f\u5217\u91cc\u3002","title":"5.1 go func \u521b\u5efa G"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#52-epoll","text":"\u56de\u60f3\u4e0a\u9762\u5206\u6790\u62a2\u5360\u4ee5\u53ca\u591a\u7ebf\u7a0b\u4e0b\u5982\u4f55\u8c03\u5ea6\u65f6\u90fd\u89c1\u5230\u4e00\u4e2a netpoll \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u662f\u4ece\u7cfb\u7edf\u5185\u6838\u83b7\u53d6\u5df2\u7ecf\u6709\u6570\u636e\u7684\u65f6\u95f4\uff0c\u7136\u540e\u6620\u5c04\u5230\u5bf9\u5e94\u7684 G \u6807\u8bb0 ready\u3002\u4e0b\u9762\u770b\u5b9e\u73b0\uff1a // runtime/proc.go func netpoll(block bool) *g { ...... var events [128]epollevent retry: n := epollwait(epfd, &events[0], int32(len(events)), waitms) if n < 0 { if n != -_EINTR { println(\"runtime: epollwait on fd\", epfd, \"failed with\", -n) throw(\"runtime: netpoll failed\") } goto retry } var gp guintptr for i := int32(0); i < n; i++ { ev := &events[i] if ev.events == 0 { continue } var mode int32 if ev.events&(_EPOLLIN|_EPOLLRDHUP|_EPOLLHUP|_EPOLLERR) != 0 { mode += 'r' } if ev.events&(_EPOLLOUT|_EPOLLHUP|_EPOLLERR) != 0 { mode += 'w' } if mode != 0 { pd := *(**pollDesc)(unsafe.Pointer(&ev.data)) netpollready(&gp, pd, mode) } } if block && gp == 0 { goto retry } return gp.ptr() } func netpollready(gpp *guintptr, pd *pollDesc, mode int32) { var rg, wg guintptr if mode == 'r' || mode == 'r'+'w' { rg.set(netpollunblock(pd, 'r', true)) } if mode == 'w' || mode == 'r'+'w' { wg.set(netpollunblock(pd, 'w', true)) } if rg != 0 { rg.ptr().schedlink = *gpp *gpp = rg } if wg != 0 { wg.ptr().schedlink = *gpp *gpp = wg } } // \u89e3\u9501pd wait\u72b6\u6001,\u6807\u8bb0\u4e3apdReady\uff0c\u5e76\u8fd4\u56de func netpollunblock(pd *pollDesc, mode int32, ioready bool) *g { gpp := &pd.rg if mode == 'w' { gpp = &pd.wg } for { old := *gpp if old == pdReady { return nil } if old == 0 && !ioready { // Only set READY for ioready. runtime_pollWait // will check for timeout/cancel before waiting. return nil } var new uintptr if ioready { new = pdReady } // \u53d8\u91cfpd.rg\u5728netpollblock\u7684\u65f6\u5019\u5df2\u7ecf\u6307\u5411\u4e86\u8fd0\u884cpd\u7684G,\u56e0\u6b64old\u5176\u5b9e\u6307\u5411G\u7684\u6307\u9488\uff0c\u800c\u4e0d\u662fpdWait\u7b49\u7b49\u7684\u72b6\u6001\u6307\u9488\u4e86 if atomic.Casuintptr(gpp, old, new) { if old == pdReady || old == pdWait { old = 0 } return (*g)(unsafe.Pointer(old)) } } } \u9996\u5148 epollwait \u4ece\u5185\u6838\u83b7\u53d6\u5230\u4e00\u6279 event\uff0c\u4e5f\u5c31\u62ff\u5230\u4e86\u6709\u6536\u5230\u5c31\u7eea\u7684 FD\u3002netpoll \u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a G \u94fe\u8868\uff0c\u5728\u8be5\u65b9\u6cd5\u91cc\u53ea\u662f\u628a\u8981\u88ab\u5524\u9192\u7684 G \u6807\u8bb0 ready\uff0c\u7136\u540e\u4ea4\u7ed9\u5916\u90e8\u5904\u7406\uff0c\u4f8b\u5982 sysmon \u4e2d\u7684\u4ee3\u7801\uff1a // runtime/proc.go func sysmon() { ...... for { ...... lastpoll := int64(atomic.Load64(&sched.lastpoll)) now := nanotime() if lastpoll != 0 && lastpoll+10*1000*1000 < now { atomic.Cas64(&sched.lastpoll, uint64(lastpoll), uint64(now)) gp := netpoll(false) // non-blocking - returns list of goroutines if gp != nil { ...... incidlelocked(-1) // \u628aepoll ready\u7684G\u5217\u8868\u6ce8\u5165\u5230\u5168\u5c40runq\u91cc injectglist(gp) incidlelocked(1) } } ...... } } // \u628aG\u5217\u8868\u6ce8\u5165\u5230\u5168\u5c40runq\u91cc func injectglist(glist *g) { ...... lock(&sched.lock) var n int for n = 0; glist != nil; n++ { gp := glist glist = gp.schedlink.ptr() casgstatus(gp, _Gwaiting, _Grunnable) globrunqput(gp) } ...... } netpoll \u8fd4\u56de\u7684\u94fe\u8868\u4ea4\u7ed9\u4e86 injectglist\uff0c\u7136\u540e\u5176\u5b9e\u662f\u653e\u5230\u4e86\u5168\u5c40 rung \u961f\u5217\u4e2d\uff0c\u7b49\u5f85\u88ab\u8c03\u5ea6\u3002","title":"5.2 epoll \u6765\u6e90"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#6-cpu","text":"","title":"6.\u770b\u51e0\u4e2a\u4e3b\u52a8\u8ba9\u51fa CPU \u7684\u573a\u666f"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#61-timesleep","text":"\u5f53\u4ee3\u7801\u4e2d\u8c03\u7528 time.Sleep \u7684\u65f6\u5019\u6211\u4eec\u662f\u8981 black \u4f4f\u7a0b\u5e8f\u4e0d\u5728\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c\uff0c\u6b64\u65f6\u8be5 goroutine \u4e0d\u4f1a\u505a\u5176\u4ed6\u4e8b\u60c5\u4e86\uff0c\u7406\u5e94\u628a CPU \u8d44\u6e90\u91ca\u653e\u51fa\u6765\uff0c\u4e0b\u9762\u770b\u4e0b\u5b9e\u73b0\uff1a // runtime/time.go func timeSleep(ns int64) { if ns <= 0 { return } t := getg().timer if t == nil { t = new(timer) getg().timer = t } *t = timer{} // \u6bcf\u4e2a\u5b9a\u65f6\u4efb\u52a1\u90fd\u521b\u5efa\u4e00\u4e2atimer t.when = nanotime() + ns t.f = goroutineReady // \u8bb0\u5f55\u5524\u9192\u8be5G\u7684\u65b9\u6cd5,\u5524\u9192\u65f6\u901a\u8fc7\u8be5\u65b9\u6cd5\u6267\u884c\u5524\u9192 t.arg = getg() // \u628atimer\u4e0e\u5f53\u524dG\u5173\u8054,\u65f6\u95f4\u5230\u4e86\u5524\u9192\u65f6\u901a\u8fc7\u8be5\u53c2\u6570\u627e\u5230\u6240\u5728\u7684G lock(&timers.lock) addtimerLocked(t) // \u628atimer\u6dfb\u52a0\u5230\u6700\u5c0f\u5806\u91cc goparkunlock(&timers.lock, \"sleep\", traceEvGoSleep, 2) // \u5207\u5230G0\u8ba9\u51faCPU,\u8fdb\u5165\u4f11\u7720 } // runtime/proc.go func goparkunlock(lock *mutex, reason string, traceEv byte, traceskip int) { gopark(parkunlock_c, unsafe.Pointer(lock), reason, traceEv, traceskip) } timeSleep \u51fd\u6570\u91cc\u901a\u8fc7 addtimerLocked \u628a\u5b9a\u65f6\u5668\u52a0\u5165\u5230 timer \u7ba1\u7406\u5668\uff08timer \u901a\u8fc7\u6700\u5c0f\u5806\u7684\u6570\u636e\u7ed3\u6784\u5b58\u653e\u6bcf\u4e2a\u5b9a\u65f6\u5668\uff0c\u5728\u8fd9\u4e0d\u505a\u8be6\u7ec6\u8bf4\u660e\uff09\u540e\uff0c\u518d\u901a\u8fc7 goparkunlock \u5b9e\u73b0\u628a\u5f53\u524d G \u4f11\u7720\uff0c\u8fd9\u91cc\u770b\u5230\u4e86\u4e0a\u9762\u63d0\u5230\u7684 gopark \u65b9\u6cd5\u8fdb\u884c\u8c03\u5ea6\u5faa\u73af\u7684\u4e0a\u4e0b\u6587\u5207\u6362\u3002 \u4e0a\u9762\u4ecb\u7ecd\u7684\u662f\u4e00\u4e2a G \u5982\u4f55\u8fdb\u5165\u5230\u4f11\u7720\u72b6\u6001\u7684\u8fc7\u7a0b\uff0c\u8be5\u4f8b\u5b50\u662f\u4e2a\u5b9a\u65f6\u5668\uff0c\u5f53\u65f6\u95f4\u5230\u4e86\u7684\u8bdd\uff0c\u5f53\u524d G \u5c31\u8981\u88ab\u5524\u9192\u7ee7\u7eed\u6267\u884c\u4e86\u3002\u4e0b\u9762\u5c31\u4ecb\u7ecd\u4e0b\u5524\u9192\u7684\u6d41\u7a0b\u3002 \u8fd4\u56de\u5230\u6700\u5f00\u59cb timeSleep \u65b9\u6cd5\u91cc\u5728\u8fdb\u5165\u8c03\u5ea6\u65b9\u6cd5\u4e4b\u524d\u6709\u4e00\u4e2a addtimerLocked \u65b9\u6cd5\uff0c\u770b\u4e0b\u8fd9\u4e2a\u65b9\u6cd5\u505a\u4e86\u4ec0\u4e48\u3002 // runtime/time.go func addtimerLocked(t *timer) { // when must never be negative; otherwise timerproc will overflow // during its delta calculation and never expire other runtime timers. if t.when < 0 { t.when = 1<<63 - 1 } t.i = len(timers.t) timers.t = append(timers.t, t) //\u5c06\u5f53\u524dtimer\u6dfb\u52a0\u5230timer\u7ba1\u7406\u5668\u91cc siftupTimer(t.i) ...... // \u5982\u679c\u6ca1\u6709\u542f\u52a8timer\u7ba1\u7406\u5b9a\u65f6\u5668\uff0c\u5219\u542f\u52a8\u3002timerproc\u53ea\u4f1a\u542f\u52a8\u4e00\u6b21\uff0c\u5373\u5168\u5c40timer\u7ba1\u7406\u5668 if !timers.created { timers.created = true go timerproc() } } // runtime/time.go // Timerproc runs the time-driven events. // It sleeps until the next event in the timers heap. // If addtimer inserts a new earlier event, it wakes timerproc early. func timerproc() { timers.gp = getg() for { lock(&timers.lock) timers.sleeping = false now := nanotime() delta := int64(-1) for { if len(timers.t) == 0 { delta = -1 break } t := timers.t[0] delta = t.when - now if delta > 0 { break } if t.period > 0 { // leave in heap but adjust next time to fire t.when += t.period * (1 + -delta/t.period) siftdownTimer(0) } else { // remove from heap last := len(timers.t) - 1 if last > 0 { timers.t[0] = timers.t[last] timers.t[0].i = 0 } timers.t[last] = nil timers.t = timers.t[:last] if last > 0 { siftdownTimer(0) } t.i = -1 // mark as removed } f := t.f arg := t.arg seq := t.seq unlock(&timers.lock) if raceenabled { raceacquire(unsafe.Pointer(t)) } f(arg, seq) lock(&timers.lock) } ...... } } \u5728 addtimerLocked \u65b9\u6cd5\u7684\u6700\u4e0b\u9762\u6709\u4e2a\u903b\u8f91\u5728\u8fd0\u884c\u671f\u95f4\u5f00\u542f\u4e86\u2019\u5168\u5c40\u65f6\u95f4\u4e8b\u4ef6\u9a71\u52a8\u5668\u2019timerproc,\u8be5\u65b9\u6cd5\u4f1a\u5168\u7a0b\u904d\u5386\u6700\u5c0f\u5806\uff0c\u5bfb\u627e\u6700\u65e9\u8fdb\u5165 timer \u7ba1\u7406\u5668\u7684\u5b9a\u65f6\u5668\uff0c\u7136\u540e\u5524\u9192\u3002\u4ed6\u662f\u600e\u4e48\u627e\u5230\u8981\u5524\u9192\u54ea\u4e2a G \u7684\uff1f\u56de\u5934\u770b\u4e0b timeSleep \u65b9\u6cd5\u91cc\u628a\u5f53\u65f6\u6b63\u5728\u6267\u884c\u7684 G \u4ee5\u53ca\u5524\u9192\u65b9\u6cd5 goroutineReady \u5e26\u5230\u4e86\u6bcf\u4e2a\u5b9a\u65f6\u5668\u91cc\uff0c\u800c\u5728 timerproc \u5219\u901a\u8fc7\u627e\u5230\u671f\u7684\u5b9a\u65f6\u5668\u6267\u884c f(arg, seq) \u5373\u901a\u8fc7 goroutineReady \u65b9\u6cd5\u5524\u9192\u3002\u65b9\u6cd5\u8c03\u7528\u8fc7\u7a0b: goroutineReady() -> ready() /// runtime/time.go func goroutineReady(arg interface{}, seq uintptr) { goready(arg.(*g), 0) } // runtime/proc.go func goready(gp *g, traceskip int) { systemstack(func() { ready(gp, traceskip, true) }) } // Mark gp ready to run. func ready(gp *g, traceskip int, next bool) { if trace.enabled { traceGoUnpark(gp, traceskip) } status := readgstatus(gp) // Mark runnable. _g_ := getg() _g_.m.locks++ // disable preemption because it can be holding p in a local var if status&^_Gscan != _Gwaiting { dumpgstatus(gp) throw(\"bad g->status in ready\") } // status is Gwaiting or Gscanwaiting, make Grunnable and put on runq casgstatus(gp, _Gwaiting, _Grunnable) runqput(_g_.m.p.ptr(), gp, next) ...... } \u5728\u4e0a\u9762\u7684\u65b9\u6cd5\u91cc\u53ef\u4ee5\u770b\u5230\u5148\u628a\u4f11\u7720\u7684 G \u4ece_Gwaiting \u5207\u6362\u5230_Grunnable \u72b6\u6001\uff0c\u8868\u660e\u5df2\u7ecf\u53ef\u8fd0\u884c\u3002\u7136\u540e\u901a\u8fc7 runqput \u65b9\u6cd5\u628a G \u653e\u5230 P \u7684\u5f85\u8fd0\u884c\u961f\u5217\u91cc\uff0c\u5c31\u8fdb\u5165\u5230\u8c03\u5ea6\u5668\u7684\u8c03\u5ea6\u5faa\u73af\u91cc\u4e86\u3002 \u603b\u7ed3\uff1atime.Sleep \u60f3\u8981\u8fdb\u5165\u963b\u585e(\u4f11\u7720)\u72b6\u6001\uff0c\u5176\u5b9e\u662f\u901a\u8fc7 gopark \u65b9\u6cd5\u7ed9\u81ea\u5df1\u6807\u8bb0\u4e2a_Gwaiting \u72b6\u6001\uff0c\u7136\u540e\u628a\u81ea\u5df1\u6240\u5360\u7528\u7684 CPU \u7ebf\u7a0b\u8d44\u6e90\u7ed9\u91ca\u653e\u51fa\u6765\uff0c\u7ee7\u7eed\u6267\u884c\u8c03\u5ea6\u4efb\u52a1\uff0c\u8c03\u5ea6\u5176\u5b83\u7684 G \u6765\u8fd0\u884c\u3002\u800c\u5524\u9192\u662f\u901a\u8fc7\u628a G \u66f4\u6539\u56de_Grunnable \u72b6\u6001\u540e\uff0c\u7136\u540e\u628a G \u653e\u5165\u5230 P \u7684\u5f85\u8fd0\u884c\u961f\u5217\u91cc\u7b49\u5f85\u6267\u884c\u3002\u901a\u8fc7\u8fd9\u70b9\u8fd8\u53ef\u4ee5\u770b\u51fa\u4f11\u7720\u4e2d\u7684 G \u5176\u5b9e\u5e76\u4e0d\u5360\u7528 CPU \u8d44\u6e90\uff0c\u6700\u591a\u662f\u5360\u7528\u5185\u5b58\uff0c\u662f\u4e2a\u5f88\u8f7b\u91cf\u7ea7\u7684\u963b\u585e\u3002","title":"6.1 time.Sleep"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#62-syncmutex","text":"// sync/mutex.go func (m *Mutex) Lock() { // Fast path: grab unlocked mutex. // \u9996\u5148\u5c1d\u8bd5\u62a2\u9501\uff0c\u5982\u679c\u62a2\u5230\u5219\u76f4\u63a5\u8fd4\u56de,\u5e76\u6807\u8bb0mutexLocked\u72b6\u6001 if atomic.CompareAndSwapInt32(&m.state, 0, mutexLocked) { if race.Enabled { race.Acquire(unsafe.Pointer(m)) } return } var waitStartTime int64 starving := false awoke := false iter := 0 old := m.state for { // Don't spin in starvation mode, ownership is handed off to waiters // so we won't be able to acquire the mutex anyway. // \u5c1d\u8bd5\u81ea\u7487,\u4f46\u6709\u5982\u4e0b\u51e0\u4e2a\u6761\u4ef6\u8df3\u8fc7\u81ea\u7487,\u8fd9\u91cc\u7684\u81ea\u7487\u662f\u7528\u6237\u6001\u81ea\u7487,\u57fa\u672clock\u7684cpu\u6d88\u8017\u90fd\u8017\u5230\u8fd9\u91cc\u4e86 // 1.\u4e0d\u5728\u9965\u997f\u6a21\u5f0f\u81ea\u7487 // 2.\u8d85\u8fc74\u6b21\u5faa\u73af\uff0c\u5219\u4e0d\u518d\u81ea\u7487. (runtime_canSpin\u91cc\u9762) // 3.\u5168\u90e8P\u7a7a\u95f2\u65f6\uff0c\u4e0d\u81ea\u7487.(runtime_canSpin\u91cc\u9762) // 4.\u5f53\u524dP\u91cc\u65e0\u8fd0\u884cG\u65f6\uff0c\u4e0d\u81ea\u7487.(runtime_canSpin\u91cc\u9762) if old&(mutexLocked|mutexStarving) == mutexLocked && runtime_canSpin(iter) { // Active spinning makes sense. // Try to set mutexWoken flag to inform Unlock // to not wake other blocked goroutines. if !awoke && old&mutexWoken == 0 && old>>mutexWaiterShift != 0 && atomic.CompareAndSwapInt32(&m.state, old, old|mutexWoken) { awoke = true } runtime_doSpin() // doSpin\u5176\u5b9e\u5c31\u662f\u7528\u6237\u6001\u81ea\u748730\u6b21 iter++ old = m.state continue } ...... if atomic.CompareAndSwapInt32(&m.state, old, new) { ...... runtime_SemacquireMutex(&m.sema, queueLifo) // \u8fd9\u91cc\u4f1a\u518d\u6b21\u81ea\u7487\u51e0\u6b21,\u7136\u540e\u6700\u540e\u5207\u6362\u5230g0\u628aG\u6807\u8bb0_Gwaiting\u72b6\u6001\u963b\u585e\u5728\u8fd9\u91cc starving = starving || runtime_nanotime()-waitStartTime > starvationThresholdNs // \u5982\u679c\u9501\u7b49\u4e861\u6beb\u79d2\u624d\u88ab\u5524\u9192\uff0c\u624d\u4f1a\u6807\u8bb0\u4e3a\u9965\u997f\u6a21\u5f0f old = m.state ...... } else { old = m.state } } if race.Enabled { race.Acquire(unsafe.Pointer(m)) } } // runtime/sema.go func sync_runtime_Semacquire(addr *uint32) { semacquire1(addr, false, semaBlockProfile) } func semacquire1(addr *uint32, lifo bool, profile semaProfileFlags) { ...... for { ...... // Any semrelease after the cansemacquire knows we're waiting // (we set nwait above), so go to sleep. root.queue(addr, s, lifo) // \u628a\u5f53\u524d\u9501\u7684\u4fe1\u606f\u5b58\u8d77\u6765\u4ee5\u4fbf\u4ee5\u540e\u5524\u9192\u65f6\u627e\u5230\u5f53\u524dG,G\u662f\u5728queue\u91cc\u9762\u83b7\u53d6\u7684\u3002 goparkunlock(&root.lock, \"semacquire\", traceEvGoBlockSync, 4) // \u8fdb\u884c\u4f11\u7720\uff0c\u7136\u540e\u963b\u585e\u5728\u8fd9\u91cc if s.ticket != 0 || cansemacquire(addr) { break } } } // queue adds s to the blocked goroutines in semaRoot. func (root *semaRoot) queue(addr *uint32, s *sudog, lifo bool) { s.g = getg() // \u8fd9\u91cc\u8bb0\u5f55\u4e86\u5f53\u524d\u7684G\uff0c\u4ee5\u4fbf\u5524\u9192\u7684\u65f6\u5019\u627e\u5230\u8981\u88ab\u5524\u9192\u7684G s.elem = unsafe.Pointer(addr) s.next = nil s.prev = nil var last *sudog pt := &root.treap for t := *pt; t != nil; t = *pt { ...... last = t if uintptr(unsafe.Pointer(addr)) < uintptr(t.elem) { pt = &t.prev } else { pt = &t.next } } ...... Mutex.Lock \u65b9\u6cd5\u901a\u8fc7\u8c03\u7528 runtime_SemacquireMutex \u6700\u7ec8\u8fd8\u662f\u8c03\u7528 goparkunlock \u5b9e\u73b0\u628a G \u8fdb\u5165\u5230\u4f11\u7720\u72b6\u6001\u3002\u5728\u8fdb\u5165\u4f11\u7720\u4e4b\u524d\u5148\u628a\u81ea\u5df1\u52a0\u5165\u5230\u961f\u5217\u91cc root.queue(addr, s, lifo)\uff0c\u5728 queue \u65b9\u6cd5\u91cc\uff0c\u8bb0\u5f55\u4e86\u5f53\u524d\u7684 G\uff0c\u4ee5\u4fbf\u4ee5\u540e\u627e\u5230\u5e76\u5524\u9192\u3002 // sync/mutex.go func (m *Mutex) Unlock() { ...... if new&mutexStarving == 0 { // \u5982\u679c\u4e0d\u662f\u9965\u997f\u6a21\u5f0f old := new for { ...... if atomic.CompareAndSwapInt32(&m.state, old, new) { runtime_Semrelease(&m.sema, false) // \u5524\u9192\u9501 return } old = m.state } } else { // Starving mode: handoff mutex ownership to the next waiter. // Note: mutexLocked is not set, the waiter will set it after wakeup. // But mutex is still considered locked if mutexStarving is set, // so new coming goroutines won't acquire it. runtime_Semrelease(&m.sema, true) // \u5524\u9192\u9501 } } // runtime/sema.go func sync_runtime_Semrelease(addr *uint32, handoff bool) { semrelease1(addr, handoff) } func semrelease1(addr *uint32, handoff bool) { root := semroot(addr) s, t0 := root.dequeue(addr) if s != nil { atomic.Xadd(&root.nwait, -1) } ...... if s != nil { // May be slow, so unlock first ...... readyWithTime(s, 5) } } func readyWithTime(s *sudog, traceskip int) { if s.releasetime != 0 { s.releasetime = cputicks() } goready(s.g, traceskip) } Mutex. Unlock \u65b9\u6cd5\u901a\u8fc7\u8c03\u7528 runtime_Semrelease \u6700\u7ec8\u8fd8\u662f\u8c03\u7528 goready \u5b9e\u73b0\u628a G \u5524\u9192\u3002","title":"6.2 sync.Mutex"},{"location":"golang/docs/%E4%BB%8E%E6%BA%90%E7%A0%81%E8%A7%92%E5%BA%A6%E7%9C%8B%20Golang%20%E7%9A%84%E8%B0%83%E5%BA%A6/#63-channel","text":"// runtime/chan.go func chansend(c *hchan, ep unsafe.Pointer, block bool, callerpc uintptr) bool { // \u5bfb\u627e\u4e00\u4e2a\u7b49\u5f85\u4e2d\u7684receiver\uff0c\u76f4\u63a5\u628a\u503c\u4f20\u7ed9\u8fd9\u4e2areceiver\uff0c\u7ed5\u8fc7\u4e0b\u9762channel buffer\uff0c // \u907f\u514d\u4ecesender buffer->chan buffer->receiver buffer\uff0c\u800c\u662f\u76f4\u63a5sender buffer->receiver buffer\uff0c\u4ecd\u7136\u505a\u4e86\u5185\u5b58copy if sg := c.recvq.dequeue(); sg != nil { send(c, sg, ep, func() { unlock(&c.lock) }, 3) return true } // \u5982\u679c\u6ca1\u6709receiver\u7b49\u5f85: // \u5982\u679c\u5f53\u524dchan\u91cc\u7684\u5143\u7d20\u4e2a\u6570\u5c0f\u4e8e\u73af\u5f62\u961f\u5217\u5927\u5c0f(\u4e5f\u5c31\u662fchan\u8fd8\u6ca1\u6ee1),\u5219\u628a\u5185\u5b58\u62f7\u8d1d\u5230channel buffer\u91cc\uff0c\u7136\u540e\u76f4\u63a5\u8fd4\u56de\u3002 // \u6ce8\u610fdataqsiz\u662f\u5141\u8bb8\u4e3a0\u7684\uff0c\u5f53\u4e3a0\u65f6\uff0c\u4e5f\u4e0d\u5b58\u5728\u8be5if\u91cc\u9762\u7684\u5185\u5b58copy if c.qcount < c.dataqsiz { // Space is available in the channel buffer. Enqueue the element to send. qp := chanbuf(c, c.sendx) // \u83b7\u53d6\u5373\u5c06\u8981\u5199\u5165\u7684chan buffer\u7684\u6307\u9488\u5730\u5740 if raceenabled { raceacquire(qp) racerelease(qp) } // \u628a\u5143\u7d20\u5185\u5b58\u62f7\u8d1d\u8fdb\u53bb. // \u6ce8\u610f\u8fd9\u91cc\u4ea7\u751f\u4e86\u4e00\u6b21\u5185\u5b58copy,\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6ca1\u6709receiver\u7684\u8bdd\uff0c\u5c31\u4e00\u5b9a\u4f1a\u4ea7\u751f\u5185\u5b58\u62f7\u8d1d typedmemmove(c.elemtype, qp, ep) c.sendx++ // \u53d1\u9001\u7d22\u5f15+1 if c.sendx == c.dataqsiz { c.sendx = 0 } c.qcount++ // \u961f\u5217\u5143\u7d20\u8ba1\u6570\u5668+1 unlock(&c.lock) return true } if !block { // \u5982\u679c\u662f\u975e\u963b\u585e\u7684\uff0c\u5230\u8fd9\u91cc\u5c31\u53ef\u4ee5\u7ed3\u675f\u4e86 unlock(&c.lock) return false } // ########\u4e0b\u9762\u662f\u8fdb\u5165\u963b\u585e\u6a21\u5f0f\u7684\u5982\u4f55\u5b9e\u73b0\u963b\u585e\u7684\u5904\u7406\u903b\u8f91 // Block on the channel. Some receiver will complete our operation for us. // \u628a\u5143\u7d20\u76f8\u5173\u4fe1\u606f\u3001\u5f53\u524d\u7684G\u4fe1\u606f\u6253\u5305\u5230\u4e00\u4e2asudog\u91cc\uff0c\u7136\u540e\u6254\u8fdbsend\u961f\u5217 gp := getg() mysg := acquireSudog() mysg.releasetime = 0 if t0 != 0 { mysg.releasetime = -1 } // No stack splits between assigning elem and enqueuing mysg // on gp.waiting where copystack can find it. mysg.elem = ep mysg.waitlink = nil mysg.g = gp // \u628a\u5f53\u524dG\u4e5f\u6254\u8fdbsudog\u91cc,\u7528\u4e8e\u522b\u4eba\u5524\u9192\u8be5G\u7684\u65f6\u5019\u627e\u5230\u8be5G mysg.selectdone = nil mysg.c = c gp.waiting = mysg // \u8bb0\u5f55\u5f53\u524dG\u6b63\u5728\u7b49\u5f85\u7684sudog gp.param = nil c.sendq.enqueue(mysg) // \u5207\u6362\u5230g0\uff0c\u628a\u5f53\u524dG\u5207\u6362\u5230_Gwaiting\u72b6\u6001\uff0c\u7136\u540e\u5524\u9192lock. // \u6b64\u65f6\u5f53\u524dG\u88ab\u963b\u585e\u4e86,P\u5c31\u7ee7\u7eed\u6267\u884c\u5176\u5b83G\u53bb\u4e86. goparkunlock(&c.lock, \"chan send\", traceEvGoBlockSend, 3) ...... return true } func send(c *hchan, sg *sudog, ep unsafe.Pointer, unlockf func(), skip int) { ...... gp := sg.g unlockf() gp.param = unsafe.Pointer(sg) if sg.releasetime != 0 { sg.releasetime = cputicks() } goready(gp, skip+1) } \u5f53\u7ed9\u4e00\u4e2a chan \u53d1\u9001\u6d88\u606f\u7684\u65f6\u5019\uff0c\u5b9e\u8d28\u89e6\u53d1\u7684\u65b9\u6cd5\u662f chansend\u3002\u5728\u8be5\u65b9\u6cd5\u91cc\u4e0d\u662f\u5148\u8fdb\u5165\u4f11\u7720\u72b6\u6001\u3002 1\uff09\u5982\u679c\u6b64\u65f6\u6709\u63a5\u6536\u8005\u63a5\u6536\u8fd9\u4e2a chan \u7684\u6d88\u606f\u5219\u76f4\u63a5\u628a\u6570\u636e\u901a\u8fc7 send \u65b9\u6cd5\u6254\u7ed9\u63a5\u6536\u8005\uff0c\u5e76\u5524\u9192\u63a5\u6536\u8005\u7684 G\uff0c\u7136\u540e\u5f53\u524d G \u5219\u7ee7\u7eed\u6267\u884c\u3002 2\uff09\u5982\u679c\u6ca1\u6709\u63a5\u6536\u8005\uff0c\u5c31\u628a\u6570\u636e copy \u5230 chan \u7684\u4e34\u65f6\u5185\u5b58\u91cc\uff0c\u4e14\u5185\u5b58\u6ca1\u6709\u6ee1\u5c31\u7ee7\u7eed\u6267\u884c\u5f53\u524d G\u3002 3\uff09\u5982\u679c\u6ca1\u6709\u63a5\u6536\u8005\u4e14 chan \u6ee1\u4e86\uff0c\u4f9d\u7136\u662f\u901a\u8fc7 goparkunlock \u65b9\u6cd5\u8fdb\u5165\u4f11\u7720\u3002\u5728\u4f11\u7720\u524d\u628a\u5f53\u524d\u7684 G \u76f8\u5173\u4fe1\u606f\u5b58\u5230\u961f\u5217\uff08sendq\uff09\u4ee5\u4fbf\u6709\u63a5\u6536\u8005\u63a5\u6536\u6570\u636e\u7684\u65f6\u5019\u5524\u9192\u5f53\u524d G\u3002 func chanrecv(c *hchan, ep unsafe.Pointer, block bool) (selected, received bool) { ...... if sg := c.sendq.dequeue(); sg != nil { // Found a waiting sender. If buffer is size 0, receive value // directly from sender. Otherwise, receive from head of queue // and add sender's value to the tail of the queue (both map to // the same buffer slot because the queue is full). // \u5bfb\u627e\u4e00\u4e2a\u6b63\u5728\u7b49\u5f85\u7684sender // \u5982\u679cbuffer size\u662f0\uff0c\u5219\u5c1d\u8bd5\u76f4\u63a5\u4ecesender\u83b7\u53d6(\u8fd9\u79cd\u60c5\u51b5\u662f\u5728\u73af\u5f62\u961f\u5217\u957f\u5ea6(dataqsiz)\u4e3a0\u7684\u65f6\u5019\u51fa\u73b0) // \u5426\u5219(buffer full\u7684\u65f6\u5019)\u4ece\u961f\u5217head\u63a5\u6536\uff0c\u5e76\u4e14\u5e2e\u52a9sender\u5728\u961f\u5217\u6ee1\u65f6\u7684\u963b\u585e\u7684\u5143\u7d20\u4fe1\u606f\u62f7\u8d1d\u5230\u961f\u5217\u91cc\uff0c\u7136\u540e\u5c06sender\u7684G\u72b6\u6001\u5207\u6362\u4e3a_Grunning,\u8fd9\u6837sender\u5c31\u4e0d\u963b\u585e\u4e86\u3002 recv(c, sg, ep, func() { unlock(&c.lock) }, 3) return true, true } // \u5982\u679c\u6709\u6570\u636e\u5219\u4ecechannel buffer\u91cc\u83b7\u53d6\u6570\u636e\u540e\u8fd4\u56de(\u6b64\u65f6\u73af\u5f62\u961f\u5217\u957f\u5ea6dataqsiz!=0) if c.qcount > 0 { // Receive directly from queue qp := chanbuf(c, c.recvx) // \u83b7\u53d6\u5373\u5c06\u8981\u8bfb\u53d6\u7684chan buffer\u7684\u6307\u9488\u5730\u5740 if raceenabled { raceacquire(qp) racerelease(qp) } if ep != nil { typedmemmove(c.elemtype, ep, qp) // copy\u5143\u7d20\u6570\u636e\u5185\u5b58\u5230channel buffer } typedmemclr(c.elemtype, qp) c.recvx++ if c.recvx == c.dataqsiz { c.recvx = 0 } c.qcount-- unlock(&c.lock) return true, true } if !block { unlock(&c.lock) return false, false } // ##########\u4e0b\u9762\u662f\u65e0\u4efb\u4f55\u6570\u636e\u51c6\u5907\u628a\u5f53\u524dG\u5207\u6362\u4e3a_Gwaiting\u72b6\u6001\u7684\u903b\u8f91 // no sender available: block on this channel. gp := getg() mysg := acquireSudog() mysg.releasetime = 0 if t0 != 0 { mysg.releasetime = -1 } // No stack splits between assigning elem and enqueuing mysg // on gp.waiting where copystack can find it. mysg.elem = ep mysg.waitlink = nil gp.waiting = mysg mysg.g = gp mysg.selectdone = nil mysg.c = c gp.param = nil c.recvq.enqueue(mysg) // \u91ca\u653e\u4e86\u9501\uff0c\u7136\u540e\u628a\u5f53\u524dG\u5207\u6362\u4e3a_Gwaiting\u72b6\u6001\uff0c\u963b\u585e\u5728\u8fd9\u91cc\u7b49\u5f85\u6709\u6570\u636e\u8fdb\u6765\u88ab\u5524\u9192 goparkunlock(&c.lock, \"chan receive\", traceEvGoBlockRecv, 3) ...... return true, !closed } func recv(c *hchan, sg *sudog, ep unsafe.Pointer, unlockf func(), skip int) { ...... sg.elem = nil gp := sg.g unlockf() gp.param = unsafe.Pointer(sg) if sg.releasetime != 0 { sg.releasetime = cputicks() } goready(gp, skip+1) } chanrecv \u65b9\u6cd5\u662f\u5728 chan \u63a5\u6536\u8005\u7684\u5730\u65b9\u8c03\u7528\u7684\u65b9\u6cd5\u3002 1\uff09\u5982\u679c\u6709\u53d1\u9001\u8005\u88ab\u4f11\u7720\uff0c\u5219\u53d6\u51fa\u6570\u636e\u7136\u540e\u5524\u9192\u53d1\u9001\u8005\uff0c\u5f53\u524d\u63a5\u6536\u8005\u7684 G \u62ff\u5230\u6570\u636e\u7ee7\u7eed\u6267\u884c\u3002 2\uff09\u5982\u679c\u6ca1\u6709\u7b49\u5f85\u7684\u53d1\u9001\u8005\u5c31\u770b\u4e0b\u6709\u6ca1\u6709\u53d1\u9001\u7684\u6570\u636e\u8fd8\u6ca1\u88ab\u63a5\u6536\uff0c\u6709\u7684\u8bdd\u5c31\u76f4\u63a5\u53d6\u51fa\u6570\u636e\u7136\u540e\u8fd4\u56de\uff0c\u5f53\u524d\u63a5\u6536\u8005\u7684 G \u62ff\u5230\u6570\u636e\u7ee7\u7eed\u6267\u884c\u3002\uff08\u6ce8\u610f\uff1a\u8fd9\u91cc\u53d6\u7684\u6570\u636e\u4e0d\u662f\u6b63\u5728\u7b49\u5f85\u7684 sender \u7684\u6570\u636e\uff0c\u800c\u662f\u4ece chan \u7684\u5f00\u5934\u7684\u5185\u5b58\u53d6\uff0c\u5982\u679c\u662f sender \u7684\u6570\u636e\u5219\u8bfb\u51fa\u6765\u7684\u6570\u636e\u987a\u5e8f\u5c31\u4e71\u4e86\uff09 3\uff09\u5982\u679c\u5373\u6ca1\u6709\u53d1\u9001\u8005\uff0cchan \u91cc\u4e5f\u6ca1\u6570\u636e\u5c31\u901a\u8fc7 goparkunlock \u8fdb\u884c\u4f11\u7720\uff0c\u5728\u4f11\u7720\u4e4b\u524d\u628a\u5f53\u524d\u7684 G \u76f8\u5173\u4fe1\u606f\u5b58\u5230 recvq \u91cc\u9762\uff0c\u4ee5\u4fbf\u6709\u6570\u636e\u65f6\u627e\u5230\u8981\u5524\u9192\u7684 G\u3002","title":"6.3 channel"},{"location":"golang/docs/%E5%9B%BE%E8%A7%A3Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/","text":"\u672c\u6587\u7ffb\u8bd1\u81ea \u300aA visual guide to Go Memory Allocator from scratch (Golang)\u300b \u3002 \u5f53\u6211\u521a\u5f00\u59cb\u5c1d\u8bd5\u4e86\u89e3Go\u7684\u5185\u5b58\u5206\u914d\u5668\u65f6\uff0c\u6211\u53d1\u73b0\u8fd9\u771f\u662f\u4e00\u4ef6\u53ef\u4ee5\u4ee4\u4eba\u53d1\u75af\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u6240\u6709\u4e8b\u60c5\u4f3c\u4e4e\u90fd\u50cf\u4e00\u4e2a\u795e\u79d8\u7684\u9ed1\u76d2(\u8ba9\u6211\u65e0\u4ece\u4e0b\u624b)\u3002\u7531\u4e8e\u51e0\u4e4e\u6240\u6709\u6280\u672f\u9b54\u6cd5\u90fd\u9690\u85cf\u5728\u62bd\u8c61\u4e4b\u4e0b\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u9010\u4e00\u5265\u79bb\u8fd9\u4e9b\u62bd\u8c61\u5c42\u624d\u80fd\u7406\u89e3\u5b83\u4eec\u3002 \u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c31\u6765\u8fd9\u4e48\u505a(\u5265\u79bb\u62bd\u8c61\u5c42\u53bb\u4e86\u89e3\u9690\u85cf\u5728\u5176\u4e0b\u9762\u7684\u6280\u672f\u9b54\u6cd5)\u3002\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u6709\u5173Go\u5185\u5b58\u5206\u914d\u5668\u7684\u77e5\u8bc6\uff0c\u90a3\u4e48\u672c\u7bc7\u6587\u7ae0\u6b63\u9002\u5408\u60a8\u3002 \u4e00. \u7269\u7406\u5185\u5b58(Physical Memory)\u548c\u865a\u62df\u5185\u5b58(Virtual Memory) \u6bcf\u4e2a\u5185\u5b58\u5206\u914d\u5668\u90fd\u9700\u8981\u4f7f\u7528\u7531\u5e95\u5c42\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u7684\u865a\u62df\u5185\u5b58\u7a7a\u95f4(Virtual Memory Space)\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u5427\u3002 \u7269\u7406\u5b58\u50a8\u5355\u5143\u7684\u7b80\u5355\u56fe\u793a\uff08\u4e0d\u7cbe\u786e\u7684\u8868\u793a\uff09 \u5355\u4e2a\u5b58\u50a8\u5355\u5143\uff08\u5de5\u4f5c\u6d41\u7a0b\uff09\u7684\u7b80\u8981\u4ecb\u7ecd\uff1a \u5730\u5740\u7ebf(address line, \u4f5c\u4e3a\u5f00\u5173\u7684\u6676\u4f53\u7ba1)\u63d0\u4f9b\u4e86\u8bbf\u95ee\u7535\u5bb9\u5668\u7684\u5165\u53e3(\u6570\u636e\u5230\u6570\u636e\u7ebf(data line))\u3002 \u5f53\u5730\u5740\u7ebf\u4e2d\u6709\u7535\u6d41\u6d41\u52a8\u65f6\uff08\u663e\u793a\u4e3a\u7ea2\u8272\uff09\uff0c\u6570\u636e\u7ebf\u53ef\u80fd\u4f1a\u5199\u5165\u7535\u5bb9\u5668\uff0c\u56e0\u6b64\u7535\u5bb9\u5668\u5df2\u5145\u7535\uff0c\u5e76\u4e14\u5b58\u50a8\u7684\u903b\u8f91\u503c\u4e3a\u201c1\u201d\u3002 \u5f53\u5730\u5740\u7ebf\u6ca1\u6709\u7535\u6d41\u6d41\u52a8\uff08\u663e\u793a\u4e3a\u7eff\u8272\uff09\u65f6\uff0c\u6570\u636e\u7ebf\u53ef\u80fd\u4e0d\u4f1a\u5199\u5165\u7535\u5bb9\u5668\uff0c\u56e0\u6b64\u7535\u5bb9\u5668\u672a\u5145\u7535\uff0c\u5e76\u4e14\u5b58\u50a8\u7684\u903b\u8f91\u503c\u4e3a\u201c0\u201d\u3002 \u5f53\u5904\u7406\u5668(CPU)\u9700\u8981\u4ece\u5185\u5b58(RAM)\u4e2d\u201c\u8bfb\u53d6\u201d\u4e00\u4e2a\u503c\u65f6\uff0c\u4f1a\u6cbf\u7740\u201c\u5730\u5740\u7ebf\u201d\u53d1\u9001\u7535\u6d41\uff08\u5173\u95ed\u5f00\u5173\uff09\u3002\u5982\u679c\u7535\u5bb9\u5668\u4fdd\u6301\u7535\u8377\uff0c\u5219\u7535\u6d41\u6d41\u7ecf\u201c DATA LINE\u201d\uff08\u6570\u636e\u7ebf\uff09\u5f97\u5230\u7684\u503c\u4e3a1\uff1b\u5426\u5219\uff0c\u6ca1\u6709\u7535\u6d41\u6d41\u8fc7\u6570\u636e\u7ebf\uff0c\u7535\u5bb9\u5668\u5c06\u4fdd\u6301\u672a\u5145\u7535\u72b6\u6001\uff0c\u5f97\u5230\u7684\u503c\u4e3a0\u3002 \u7269\u7406\u5185\u5b58\u5355\u5143\u5982\u4f55\u4e0eCPU\u4ea4\u4e92\u7684\u7b80\u5355\u8bf4\u660e \u6570\u636e\u603b\u7ebf(Data Bus)\uff1a\u7528\u4e8e\u5728CPU\u548c\u7269\u7406\u5185\u5b58\u4e4b\u95f4\u4f20\u8f93\u6570\u636e\u3002 \u8ba9\u6211\u4eec\u8ba8\u8bba\u4e00\u4e0b\u5730\u5740\u7ebf(Address Line)\u548c\u53ef\u5bfb\u5740\u5b57\u8282(Addressable Bytes)\u3002 CPU\u548c\u7269\u7406\u5185\u5b58\u4e4b\u95f4\u7684\u5730\u5740\u7ebf\u7684\u8868\u793a DRAM\u4e2d\u7684\u6bcf\u4e2a\u201c\u5b57\u8282(BYTE)\u201d\u90fd\u88ab\u5206\u914d\u6709\u552f\u4e00\u7684 \u6570\u5b57\u6807\u8bc6\u7b26\uff08\u5730\u5740\uff09 \u3002 \u4f46\u201c\u7269\u7406\u5b57\u8282\u7684\u8868\u793a != \u5730\u5740\u7ebf\u7684\u6570\u91cf\u201d\u3002\uff08\u4f8b\u5982\uff1a16\u4f4dIntel 8088\uff0cPAE\uff09 \u6bcf\u6761\u201c\u5730\u5740\u7ebf\u201d\u90fd\u53ef\u4ee5\u53d1\u90011bit\u503c\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u8868\u793a\u7ed9\u5b9a\u5b57\u8282\u5730\u5740\u4e2d\u6307\u5b9a\u201cbit\u201d\u3002 \u5728\u56fe\u4e2d\uff0c\u6211\u4eec\u670932\u6761\u5730\u5740\u7ebf\u3002\u56e0\u6b64\uff0c\u6bcf\u4e2a\u53ef\u5bfb\u5740\u5b57\u8282\u90fd\u5c06\u62e5\u6709\u4e00\u4e2a\u201c32bit\u201d\u7684\u5730\u5740\u3002 [ 00000000000000000000000000000000 ] \u2014 \u4f4e\u5185\u5b58\u5730\u5740 [ 11111111111111111111111111111111 ] \u2014 \u9ad8\u5185\u5b58\u5730\u5740 4.\u7531\u4e8e\u6bcf\u4e2a\u5b57\u8282\u90fd\u6709\u4e00\u4e2a32bit\u5730\u5740\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u5730\u5740\u7a7a\u95f4\u75312\u768432\u6b21\u65b9\u4e2a\u53ef\u5bfb\u5740\u5b57\u8282\uff08\u53734GB\uff09\u7ec4\u6210\u3002 \u56e0\u6b64\uff0c\u53ef\u5bfb\u5740\u5b57\u8282\u53d6\u51b3\u4e8e\u5730\u5740\u7ebf\u7684\u603b\u91cf\uff0c\u5bf9\u4e8e64\u4f4d\u5730\u5740\u7ebf\uff08x86\u201364 CPU\uff09\uff0c\u5176\u53ef\u5bfb\u5740\u5b57\u8282\u4e3a2\u768464\u6b21\u65b9\u4e2a\uff0c\u4f46\u662f\u5927\u591a\u6570\u4f7f\u752864\u4f4d\u6307\u9488\u7684\u4f53\u7cfb\u7ed3\u6784\u5b9e\u9645\u4e0a\u4f7f\u752848\u4f4d\u5730\u5740\u7ebf\uff08AMD64 \uff09\u548c42\u4f4d\u5730\u5740\u7ebf\uff08\u82f1\u7279\u5c14\uff09\uff0c\u7406\u8bba\u4e0a\u652f\u6301256TB\u7684\u7269\u7406RAM\uff08Linux \u5728x86\u201364\u4e0a\u6bcf\u4e2a\u8fdb\u7a0b\u652f\u6301128TB\u4ee5\u53ca4\u7ea7\u9875\u8868(page table)\u548cWindows\u6bcf\u4e2a\u8fdb\u7a0b\u5219\u652f\u6301192TB\uff09 \u7531\u4e8e\u5b9e\u9645\u7269\u7406\u5185\u5b58\u7684\u9650\u5236\uff0c\u56e0\u6b64\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u5728\u5176\u81ea\u5df1\u7684\u5185\u5b58\u6c99\u7bb1\u4e2d\u8fd0\u884c-\u201c\u865a\u62df\u5730\u5740\u7a7a\u95f4\u201d\uff0c\u5373 \u865a\u62df\u5185\u5b58 \u3002 \u8be5\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e2d\u5b57\u8282\u7684\u5730\u5740\u4e0d\u518d\u4e0e\u5904\u7406\u5668\u5728\u5730\u5740\u603b\u7ebf\u4e0a\u653e\u7f6e\u7684\u5730\u5740\u76f8\u540c\u3002\u56e0\u6b64\uff0c\u5fc5\u987b\u5efa\u7acb\u8f6c\u6362\u6570\u636e\u7ed3\u6784\u548c\u7cfb\u7edf\uff0c\u4ee5\u5c06\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u5b57\u8282\u6620\u5c04\u5230\u7269\u7406\u5185\u5b58\u5730\u5740\u4e0a\u7684\u5b57\u8282\u3002 \u865a\u62df\u5730\u5740\u957f\u4ec0\u4e48\u6837\u5462\uff1f \u865a\u62df\u5730\u5740\u7a7a\u95f4\u8868\u793a \u56e0\u6b64\uff0c\u5f53CPU\u6267\u884c\u5f15\u7528\u5185\u5b58\u5730\u5740\u7684\u6307\u4ee4\u65f6\u3002\u7b2c\u4e00\u6b65\u662f\u5c06VMA(virtual memory address)\u4e2d\u7684 \u903b\u8f91\u5730\u5740 \u8f6c\u6362\u4e3a \u7ebf\u6027\u5730\u5740(liner address) \u3002 \u8fd9\u4e2a\u7ffb\u8bd1\u5de5\u4f5c\u7531 \u5185\u5b58\u7ba1\u7406\u5355\u5143MMU(Memory Management Unit) \u5b8c\u6210\u3002 \u8fd9\u4e0d\u662f\u7269\u7406\u56fe\uff0c\u4ec5\u662f\u63cf\u8ff0\u3002\u4e3a\u4e86\u7b80\u5316\uff0c\u4e0d\u5305\u62ec\u5730\u5740\u7ffb\u8bd1\u8fc7\u7a0b \u7531\u4e8e\u6b64\u903b\u8f91\u5730\u5740\u592a\u5927\u800c\u65e0\u6cd5\u5355\u72ec\u7ba1\u7406\uff08\u53d6\u51b3\u4e8e\u5404\u79cd\u56e0\u7d20\uff09\uff0c\u56e0\u6b64\u5c06\u901a\u8fc7\u9875(page)\u5bf9\u5176\u8fdb\u884c\u7ba1\u7406\u3002\u5f53\u5fc5\u8981\u7684\u5206\u9875\u6784\u9020\u88ab\u6fc0\u6d3b\u540e\uff0c \u865a\u62df\u5185\u5b58\u7a7a\u95f4\u5c06\u88ab\u5212\u5206\u4e3a\u79f0\u4e3a\u9875\u7684\u8f83\u5c0f\u533a\u57df\uff08\u5927\u591a\u6570OS\u4e0a\u9875\u5927\u5c0f\u4e3a4KB\uff0c\u53ef\u4ee5\u66f4\u6539\uff09 \u3002\u5b83\u662f\u865a\u62df\u5185\u5b58\u4e2d\u7528\u4e8e\u5185\u5b58\u7ba1\u7406\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u865a\u62df\u5185\u5b58\u4e0d\u5b58\u50a8\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u7b80\u5355\u5730\u5c06\u7a0b\u5e8f\u7684\u5730\u5740\u7a7a\u95f4\u6620\u5c04\u5230\u771f\u5b9e\u7684\u7269\u7406\u5185\u5b58\u7a7a\u95f4\u4e0a\u3002 \u5355\u4e2a\u8fdb\u7a0b\u4ec5\u5c06VMA(\u865a\u62df\u5185\u5b58\u5730\u5740)\u89c6\u4e3a\u5176\u5730\u5740\u3002 \u8fd9\u6837\uff0c\u5f53\u6211\u4eec\u7684\u7a0b\u5e8f\u8bf7\u6c42\u66f4\u591a\u201c\u5806\u5185\u5b58(heap memory)\u201d\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f \u4e00\u6bb5\u7b80\u5355\u7684\u7528\u6237\u8bf7\u6c42\u66f4\u591a\u5806\u5185\u5b58\u7684\u6c47\u7f16\u4ee3\u7801 \u589e\u52a0\u5806\u5185\u5b58 \u7a0b\u5e8f\u901a\u8fc7 brk\uff08sbrk/mmap\u7b49\uff09 \u7cfb\u7edf\u8c03\u7528\u8bf7\u6c42\u66f4\u591a\u5185\u5b58\u3002\u4f46\u5185\u6838\u5b9e\u9645\u4e0a\u4ec5\u662f\u66f4\u65b0\u4e86\u5806\u7684VMA\u3002 \u6ce8\u610f\uff1a\u6b64\u65f6\uff0c\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u5206\u914d\u4efb\u4f55\u9875\u5e27\uff0c\u5e76\u4e14\u65b0\u9875\u9762\u4e5f\u6ca1\u6709\u5728\u7269\u7406\u5185\u5b58\u5b58\u5728\u3002\u8fd9\u4e5f\u662fVSZ\u4e0eRSS\u4e4b\u95f4\u7684\u5dee\u5f02\u70b9\u3002 \u4e8c. \u5185\u5b58\u5206\u914d\u5668 \u6709\u4e86\u201c\u865a\u62df\u5730\u5740\u7a7a\u95f4\u201d\u7684\u57fa\u672c\u6982\u8ff0\u4ee5\u53ca\u5806\u5185\u5b58\u589e\u52a0\u7684\u7406\u89e3\u4e4b\u540e\uff0c\u5185\u5b58\u5206\u914d\u5668\u73b0\u5728\u53d8\u5f97\u66f4\u5bb9\u6613\u8bf4\u660e\u4e86\u3002 \u5982\u679c\u5806\u4e2d\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u6ee1\u8db3\u6211\u4eec\u4ee3\u7801\u4e2d\u7684\u5185\u5b58\u8bf7\u6c42\uff0c\u5219\u5185\u5b58\u5206\u914d\u5668\u53ef\u4ee5\u5728\u5185\u6838\u4e0d\u53c2\u4e0e\u7684\u60c5\u51b5\u4e0b\u6ee1\u8db3\u8be5\u8bf7\u6c42\uff0c\u5426\u5219\u5b83\u4f1a\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528 brk \u6269\u5927\u5806\uff0c\u901a\u5e38\u4f1a\u8bf7\u6c42\u5927\u91cf\u5185\u5b58\u3002\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8emalloc\u800c\u8a00\uff0c\u5927\u91cf\u7684\u610f\u601d\u662f > MMAP_THRESHOLD\u5b57\u8282-128kB\uff09\u3002 \u4f46\u662f\uff0c\u5185\u5b58\u5206\u914d\u5668\u7684\u8d23\u4efb\u4e0d\u4ec5\u4ec5\u662f\u66f4\u65b0 brk\u5730\u5740 \u3002\u5176\u4e2d\u4e00\u4e2a\u4e3b\u8981\u7684\u5de5\u4f5c\u5219\u662f\u5982\u4f55\u7684\u964d\u4f4e\u5185\u5916\u90e8\u7684\u5185\u5b58\u788e\u7247\u4ee5\u53ca\u5982\u4f55\u5feb\u901f\u5206\u914d\u5185\u5b58\u5757\u3002\u8003\u8651\u6309p1~p4\u7684\u987a\u5e8f\uff0c\u5148\u4f7f\u7528\u51fd\u6570 malloc \u5728\u7a0b\u5e8f\u4e2d\u8bf7\u6c42\u8fde\u7eed\u5185\u5b58\u5757\uff0c\u7136\u540e\u4f7f\u7528\u51fd\u6570 free(pointer) \u91ca\u653e\u5185\u5b58\u3002 \u5916\u90e8\u5185\u5b58\u788e\u7247\u6f14\u793a \u5728\u7b2c4\u6b65\uff0c\u5373\u4f7f\u6211\u4eec\u6709\u8db3\u591f\u7684\u5185\u5b58\u5757\uff0c\u6211\u4eec\u4e5f\u65e0\u6cd5\u6ee1\u8db3\u5bf96\u4e2a\u8fde\u7eed\u5185\u5b58\u5757\u5206\u914d\u7684\u8bf7\u6c42\uff0c\u4ece\u800c\u5bfc\u81f4\u5185\u5b58\u788e\u7247\u3002 \u90a3\u4e48\u5982\u4f55\u51cf\u5c11\u5185\u5b58\u788e\u7247\u5462\uff1f\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u53d6\u51b3\u4e8e\u5e95\u5c42\u5e93\u4f7f\u7528\u7684\u7279\u5b9a\u7684\u5185\u5b58\u5206\u914d\u7b97\u6cd5\u3002 \u6211\u4eec\u5c06\u7814\u7a76TCMalloc\u5185\u5b58\u5206\u914d\u5668\uff0cGo\u5185\u5b58\u5206\u914d\u5668\u91c7\u7528\u7684\u5c31\u662f\u8be5\u5185\u5b58\u5206\u914d\u5668\u6a21\u578b\u3002 \u4e09. TCMalloc TCMalloc\uff08thread cache malloc\uff09 \u7684\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u5185\u5b58\u5212\u5206\u4e3a\u591a\u4e2a\u7ea7\u522b\uff0c\u4ee5\u51cf\u5c11\u9501\u7684\u7c92\u5ea6\u3002\u5728TCMalloc\u5185\u90e8\uff0c\u5185\u5b58\u7ba1\u7406\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u7ebf\u7a0b\u5185\u5b58\u548c\u9875\u5806(page heap)\u3002 \u7ebf\u7a0b\u5185\u5b58(thread memory) \u6bcf\u4e2a\u5185\u5b58\u9875\u5206\u4e3a\u591a\u7ea7\u56fa\u5b9a\u5927\u5c0f\u7684\u201c\u7a7a\u95f2\u5217\u8868\u201d\uff0c\u8fd9\u6709\u52a9\u4e8e \u51cf\u5c11\u788e\u7247 \u3002\u56e0\u6b64\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u4f1a\u6709\u4e00\u4e2a\u65e0\u9501\u7684\u5c0f\u5bf9\u8c61\u7f13\u5b58\uff0c\u8fd9\u4f7f\u5f97\u5728\u5e76\u884c\u7a0b\u5e8f\u4e0b\u5206\u914d\u5c0f\u5bf9\u8c61\uff08<= 32k\uff09\u975e\u5e38\u9ad8\u6548\u3002 \u7ebf\u7a0b\u7f13\u5b58\uff08\u6bcf\u4e2a\u7ebf\u7a0b\u62e5\u6709\u6b64\u7ebf\u7a0b\u672c\u5730\u7ebf\u7a0b\u7f13\u5b58\uff09 \u9875\u5806(page heap) TCMalloc\u7ba1\u7406\u7684\u5806\u7531\u9875\u96c6\u5408\u7ec4\u6210\uff0c\u5176\u4e2d\u4e00\u7ec4\u8fde\u7eed\u9875\u7684\u96c6\u5408\u53ef\u4ee5\u7528 span \u8868\u793a\u3002\u5f53\u5206\u914d\u7684\u5bf9\u8c61\u5927\u4e8e32K\u65f6\uff0c\u5c06\u4f7f\u7528\u9875\u5806\u8fdb\u884c\u5206\u914d\u3002 \u9875\u5806\uff08\u7528\u4e8espan\u7ba1\u7406\uff09 \u5982\u679c\u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58\u6765\u5206\u914d\u5c0f\u5bf9\u8c61\uff0c\u5185\u5b58\u5206\u914d\u5668\u5c31\u4f1a\u8f6c\u5230\u9875\u5806\u4ee5\u83b7\u53d6\u5185\u5b58\u3002\u5982\u679c\u8fd8\u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58\uff0c\u9875\u5806\u5c06\u4ece\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8bf7\u6c42\u66f4\u591a\u5185\u5b58\u3002 \u7531\u4e8e\u8fd9\u79cd\u5206\u914d\u6a21\u578b\u7ef4\u62a4\u4e86\u4e00\u4e2a\u7528\u6237\u7a7a\u95f4\u7684\u5185\u5b58\u6c60\uff0c\u56e0\u6b64\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u5185\u5b58\u5206\u914d\u548c\u91ca\u653e\u7684\u6548\u7387\u3002 \u6ce8\u610f\uff1a\u5c3d\u7ba1go\u5185\u5b58\u5206\u914d\u5668\u6700\u521d\u662f\u57fa\u4e8etcmalloc\u7684\uff0c\u4f46\u662f\u73b0\u5728\u5df2\u7ecf\u6709\u4e86\u5f88\u5927\u7684\u4e0d\u540c\u3002 \u56db. Go\u5185\u5b58\u5206\u914d\u5668 \u6211\u4eec\u77e5\u9053Go\u8fd0\u884c\u65f6\u4f1a\u5c06Goroutines\uff08G\uff09\u8c03\u5ea6\u5230\u903b\u8f91\u5904\u7406\u5668\uff08P\uff09\u4e0a\u6267\u884c\u3002\u540c\u6837\uff0c\u57fa\u4e8eTCMalloc\u6a21\u578b\u7684Go\u8fd8\u5c06\u5185\u5b58\u9875\u5206\u4e3a67\u4e2a\u4e0d\u540c\u5927\u5c0f\u7ea7\u522b\u3002 Go\u4e2d\u7684\u5185\u5b58\u5757\u7684\u5927\u5c0f\u7ea7\u522b Go\u9ed8\u8ba4\u91c7\u75288192B\u5927\u5c0f\u7684\u9875\u3002\u5982\u679c\u8fd9\u4e2a\u9875\u88ab\u5206\u6210\u5927\u5c0f\u4e3a1KB\u7684\u5757\uff0c\u6211\u4eec\u4e00\u5171\u5c06\u62ff\u52308\u5757\u8fd9\u6837\u7684\u9875: \u5c068 KB\u9875\u9762\u5212\u5206\u4e3a1KB\u7684\u5927\u5c0f\u7b49\u7ea7\uff08\u5728Go\u4e2d\uff0c\u9875\u7684\u7c92\u5ea6\u4fdd\u6301\u4e3a8KB\uff09 Go\u4e2d\u7684\u8fd9\u4e9b\u9875\u9762\u8fd0\u884c\u4e5f\u901a\u8fc7\u79f0\u4e3amspan\u7684\u7ed3\u6784\u8fdb\u884c\u7ba1\u7406\u3002 \u9009\u62e9\u8981\u5206\u914d\u7ed9\u6bcf\u4e2a\u5c3a\u5bf8\u7ea7\u522b\u7684\u5c3a\u5bf8\u7c7b\u522b\u548c\u9875\u9762\u8ba1\u6570\uff08\u5c06\u9875\u9762\u6570\u5206\u6210\u7ed9\u5b9a\u5c3a\u5bf8\u7684\u5bf9\u8c61\uff09\uff0c\u4ee5\u4fbf\u5c06\u5206\u914d\u8bf7\u6c42\u5706\u6574(\u56db\u820d\u4e94\u5165)\u5230\u4e0b\u4e00\u4e2a\u5c3a\u5bf8\u7ea7\u522b\u6700\u591a\u6d6a\u8d3912.5\uff05 mspan \u7b80\u800c\u8a00\u4e4b\uff0c\u5b83\u662f\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u5bf9\u8c61\uff0c\u5176\u4e2d\u5305\u542b\u9875\u9762\u7684\u8d77\u59cb\u5730\u5740\uff0c\u5b83\u5177\u6709\u7684\u9875\u9762\u7684span\u7c7b\u4ee5\u53ca\u5b83\u5305\u542b\u7684\u9875\u9762\u6570\u3002 Go\u5185\u5b58\u5206\u914d\u5668\u4e2dmspan\u7684\u8868\u793a\u5f62\u5f0f mcache \u4e0eTCMalloc\u4e00\u6837\uff0cGo\u4e3a\u6bcf\u4e2a\u903b\u8f91\u5904\u7406\u5668\uff08P\uff09\u63d0\u4f9b\u4e86\u4e00\u4e2a\u79f0\u4e3a mcache \u7684\u672c\u5730\u5185\u5b58\u7ebf\u7a0b\u7f13\u5b58\uff0c\u56e0\u6b64\uff0c\u5982\u679cGoroutine\u9700\u8981\u5185\u5b58\uff0c\u5b83\u53ef\u4ee5\u76f4\u63a5\u4ecemcache\u4e2d\u83b7\u53d6\u5b83\u800c\u65e0\u9700\u4efb\u4f55\u9501\uff0c\u56e0\u4e3a\u5728\u4efb\u4f55\u65f6\u95f4\u70b9\u53ea\u6709\u4e00\u4e2aGoroutine\u5728\u903b\u8f91\u5904\u7406\u5668\uff08P\uff09\u4e0a\u8fd0\u884c\u3002 mcache\u5305\u542b\u6240\u6709\u7ea7\u522b\u5927\u5c0f\u7684mspan\u4f5c\u4e3a\u7f13\u5b58\u3002 Go\u4e2dP\uff0cmcache\u548cmspan\u4e4b\u95f4\u7684\u5173\u7cfb \u7531\u4e8e\u6bcf\u4e2aP\u62e5\u6709\u4e00\u4e2amcache\uff0c\u56e0\u6b64\u4ecemcache\u8fdb\u884c\u5206\u914d\u65f6\u65e0\u9700\u52a0\u9501\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u7ea7\u522b\uff0c\u90fd\u6709\u4e24\u79cd\u7c7b\u578b\u3002 scan \u2014\u5305\u542b\u6307\u9488\u7684\u5bf9\u8c61\u3002 noscan \u2014\u4e0d\u5305\u542b\u6307\u9488\u7684\u5bf9\u8c61\u3002 \u8fd9\u79cd\u65b9\u6cd5\u7684\u597d\u5904\u4e4b\u4e00\u662f\u5728\u8fdb\u884c\u5783\u573e\u6536\u96c6\u65f6\uff0cGC\u65e0\u9700\u904d\u5386noscan\u5bf9\u8c61\u3002 \u4ec0\u4e48Go mcache\uff1f \u5bf9\u8c61\u5927\u5c0f<= 32K\u5b57\u8282\u7684\u5206\u914d\u5c06\u76f4\u63a5\u4ea4\u7ed9mcache\uff0c\u540e\u8005\u5c06\u4f7f\u7528\u5bf9\u5e94\u5927\u5c0f\u7ea7\u522b\u7684mspan\u5e94\u5bf9 \u5f53mcache\u6ca1\u6709\u53ef\u7528\u63d2\u69fd(slot)\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f \u4ecemcentral mspan list\u4e2d\u83b7\u53d6\u4e00\u4e2a\u5bf9\u5e94\u5927\u5c0f\u7ea7\u522b\u7684\u65b0\u7684mspan\u3002 mcentral mcentral\u5bf9\u8c61\u96c6\u5408\u4e86\u6240\u6709\u7ed9\u5b9a\u5927\u5c0f\u7ea7\u522b\u7684span\uff0c\u6bcf\u4e2amcentral\u662f\u4e24\u4e2amspan\u5217\u8868\u3002 \u7a7a\u7684mspanList \u2014 \u6ca1\u6709\u7a7a\u95f2\u5185\u5b58\u7684mspan\u6216\u7f13\u5b58\u5728mcache\u4e2d\u7684mspan\u7684\u5217\u8868 \u975e\u7a7amspanList \u2013 \u4ecd\u6709\u7a7a\u95f2\u5185\u5b58\u7684span\u5217\u8868\u3002 \u5f53\u4ecemcentral\u8bf7\u6c42\u65b0\u7684Span\u65f6\uff0c\u5b83\u5c06\u4ece\u975e\u7a7amspanList\u5217\u8868\u4e2d\u83b7\u53d6\uff08\u5982\u679c\u53ef\u7528\uff09\u3002\u8fd9\u4e24\u4e2a\u5217\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\u5982\u4e0b\uff1a\u5f53\u8bf7\u6c42\u65b0\u7684span\u65f6\uff0c\u8be5\u8bf7\u6c42\u4ece\u975e\u7a7a\u5217\u8868\u4e2d\u5f97\u5230\u6ee1\u8db3\uff0c\u5e76\u4e14\u8be5span\u88ab\u653e\u5165\u7a7a\u5217\u8868\u4e2d\u3002\u91ca\u653espan\u540e\uff0c\u5c06\u6839\u636espan\u4e2d\u7a7a\u95f2\u5bf9\u8c61\u7684\u6570\u91cf\u5c06\u5176\u653e\u56de\u975e\u7a7a\u5217\u8868\u3002 mcentral\u8868\u793a \u6bcf\u4e2amcentral\u7ed3\u6784\u90fd\u5728mheap\u4e2d\u7ef4\u62a4\u3002 mheap mheap\u662f\u5728Go\u4e2d\u7ba1\u7406\u5806\u7684\u5bf9\u8c61\uff0c\u4e14\u53ea\u6709\u4e00\u4e2a\u5168\u5c40mheap\u5bf9\u8c61\u3002\u5b83\u62e5\u6709\u865a\u62df\u5730\u5740\u7a7a\u95f4\u3002 mheap\u7684\u8868\u793a \u4ece\u4e0a\u56fe\u53ef\u4ee5\u770b\u51fa\uff0cmheap\u5177\u6709\u4e00\u4e2amcentral\u6570\u7ec4\u3002\u6b64\u6570\u7ec4\u5305\u542b\u6bcf\u4e2a\u5927\u5c0f\u7ea7\u522bspan\u7684mcentral\u3002 central [numSpanClasses]struct { mcentral mcentral pad [sys.CacheLineSize unsafe.Sizeof(mcentral{})%sys.CacheLineSize]byte } \u7531\u4e8e\u6211\u4eec\u5bf9\u6bcf\u4e2a\u7ea7\u522b\u7684span\u90fd\u6709mcentral\uff0c\u56e0\u6b64\u5f53mcache\u4ecemcentral\u8bf7\u6c42\u4e00\u4e2amspan\u65f6\uff0c\u4ec5\u6d89\u53ca\u5355\u4e2amcentral\u7ea7\u522b\u7684\u9501\uff0c\u56e0\u6b64\u5176\u4ed6mache\u7684\u4e0d\u540c\u7ea7\u522bmspan\u7684\u8bf7\u6c42\u4e5f\u53ef\u4ee5\u540c\u65f6\u88ab\u5904\u7406\u3002 padding\u786e\u4fdd\u5c06MCentrals\u4ee5 CacheLineSize \u5b57\u8282\u95f4\u9694\u5f00\uff0c\u4ee5\u4fbf\u6bcf\u4e2aMCentral.lock\u83b7\u5f97\u81ea\u5df1\u7684\u7f13\u5b58\u884c\uff0c\u4ee5\u907f\u514d\u9519\u8bef\u7684\u5171\u4eab\u95ee\u9898\u3002 \u90a3\u4e48\uff0c\u5f53\u8be5mcentral\u5217\u8868\u4e3a\u7a7a\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1fmcentral\u5c06\u4ecemheap\u83b7\u53d6\u9875\u4ee5\u7528\u4e8e\u6240\u9700\u5927\u5c0f\u7ea7\u522bspan\u7684\u5206\u914d\u3002 free [_MaxMHeapList]mSpanList\uff1a\u8fd9\u662f\u4e00\u4e2aspanList\u6570\u7ec4\u3002\u6bcf\u4e2aspanList\u4e2d\u7684mspan\u75311\u301c127(_MaxMHeapList-1)\u9875\u7ec4\u6210\u3002\u4f8b\u5982\uff0cfree[3]\u662f\u5305\u542b3\u4e2a\u9875\u9762\u7684mspan\u7684\u94fe\u63a5\u5217\u8868\u3002Free\u8868\u793a\u7a7a\u95f2\u5217\u8868\uff0c\u5373\u5c1a\u672a\u8fdb\u884c\u5bf9\u8c61\u5206\u914d\u3002\u5b83\u5bf9\u5e94\u4e8e\u5fd9\u788c\u5217\u8868(busy list)\u3002 freelarge mSpanList\uff1amspans\u5217\u8868\u3002\u6bcf\u4e2amspan\u7684\u9875\u6570\u5927\u4e8e127\u3002Go\u5185\u5b58\u5206\u914d\u5668\u4ee5mtreap\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u5b83\u3002\u5bf9\u5e94busyLarge\u3002 \u5927\u5c0f> 32k\u7684\u5bf9\u8c61\u662f\u4e00\u4e2a\u5927\u5bf9\u8c61\uff0c\u76f4\u63a5\u4ecemheap\u5206\u914d\u3002\u8fd9\u4e9b\u8f83\u5927\u7684\u8bf7\u6c42\u9700\u8981\u4e2d\u592e\u9501(central lock)\uff0c\u56e0\u6b64\u5728\u4efb\u4f55\u7ed9\u5b9a\u7684\u65f6\u95f4\u70b9\u53ea\u80fd\u6ee1\u8db3\u4e00\u4e2aP\u7684\u8bf7\u6c42 \u4e94. \u5bf9\u8c61\u5206\u914d\u6d41\u7a0b \u5927\u5c0f> 32k\u662f\u4e00\u4e2a\u5927\u5bf9\u8c61\uff0c\u76f4\u63a5\u4ecemheap\u5206\u914d\u3002 \u5927\u5c0f<16B\uff0c\u4f7f\u7528mcache\u7684tiny\u5206\u914d\u5668\u5206\u914d \u5927\u5c0f\u572816B\u301c32k\u4e4b\u95f4\uff0c\u8ba1\u7b97\u8981\u4f7f\u7528\u7684sizeClass\uff0c\u7136\u540e\u5728mcache\u4e2d\u4f7f\u7528\u76f8\u5e94\u7684sizeClass\u7684\u5757\u5206\u914d \u5982\u679c\u4e0emcache\u5bf9\u5e94\u7684sizeClass\u6ca1\u6709\u53ef\u7528\u7684\u5757\uff0c\u5219\u5411mcentral\u53d1\u8d77\u8bf7\u6c42\u3002 \u5982\u679cmcentral\u4e5f\u6ca1\u6709\u53ef\u7528\u7684\u5757\uff0c\u5219\u5411mheap\u8bf7\u6c42\u3002mheap\u4f7f\u7528BestFit\u67e5\u627e\u6700\u5408\u9002\u7684mspan\u3002\u5982\u679c\u8d85\u51fa\u4e86\u7533\u8bf7\u7684\u5927\u5c0f\uff0c\u5219\u4f1a\u6839\u636e\u9700\u8981\u8fdb\u884c\u5212\u5206\uff0c\u4ee5\u8fd4\u56de\u7528\u6237\u6240\u9700\u7684\u9875\u9762\u6570\u3002\u5176\u4f59\u9875\u9762\u6784\u6210\u4e00\u4e2a\u65b0\u7684mspan\uff0c\u5e76\u8fd4\u56demheap\u7a7a\u95f2\u5217\u8868\u3002 \u5982\u679cmheap\u6ca1\u6709\u53ef\u7528\u7684span\uff0c\u8bf7\u5411\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u4e00\u7ec4\u65b0\u7684\u9875\uff08\u81f3\u5c111MB\uff09\u3002 \u4f46\u662fGo\u5728OS\u7ea7\u522b\u5206\u914d\u7684\u9875\u9762\u751a\u81f3\u66f4\u5927\uff08\u79f0\u4e3aarena\uff09\u3002\u5206\u914d\u5927\u91cf\u9875\u9762\u5c06\u5206\u644a\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u5bf9\u8bdd\u7684\u6210\u672c\u3002 \u6240\u6709\u8bf7\u6c42\u7684\u5806\u5185\u5b58\u90fd\u6765\u81ea\u4e8earena\u3002\u8ba9\u6211\u4eec\u770b\u770barena\u662f\u4ec0\u4e48\u3002 \u516d. Go\u865a\u62df\u5185\u5b58 \u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u7b80\u5355go\u7a0b\u5e8f\u7684\u5185\u5b58\u3002 func main\uff08\uff09{ for {} } \u7a0b\u5e8f\u7684\u8fdb\u7a0b\u72b6\u6001 \u56e0\u6b64\uff0c\u5373\u4f7f\u662f\u7b80\u5355\u7684go\u7a0b\u5e8f\uff0c\u5360\u7528\u7684\u865a\u62df\u7a7a\u95f4\u4e5f\u662f\u5927\u7ea6100MB\u800cRSS\u53ea\u6709696kB\u3002\u8ba9\u6211\u4eec\u5c1d\u8bd5\u9996\u5148\u627e\u51fa\u8fd9\u79cd\u5dee\u5f02\u7684\u539f\u56e0\u3002 map\u548csmap\u7edf\u8ba1\u4fe1\u606f \u56e0\u6b64\uff0c\u5185\u5b58\u533a\u57df\u7684\u5927\u5c0f\u7ea6\u4e3a\u301c2MB, 64MB and 32MB\u3002\u8fd9\u4e9b\u662f\u4ec0\u4e48\uff1f Arena \u539f\u6765\uff0cGo\u4e2d\u7684\u865a\u62df\u5185\u5b58\u5e03\u5c40\u7531\u4e00\u7ec4arena\u7ec4\u6210\u3002\u521d\u59cb\u5806\u6620\u5c04\u662f\u4e00\u4e2aarena\uff0c\u537364MB\uff08\u57fa\u4e8ego 1.11.5\uff09\u3002 \u5f53\u524d\u5728\u4e0d\u540c\u7cfb\u7edf\u4e0a\u7684arena\u5927\u5c0f\u3002 \u56e0\u6b64\uff0c\u5f53\u524d\u6839\u636e\u7a0b\u5e8f\u9700\u8981\uff0c\u5185\u5b58\u4ee5\u8f83\u5c0f\u7684\u589e\u91cf\u8fdb\u884c\u6620\u5c04\uff0c\u5e76\u4e14\u5b83\u4ee5\u4e00\u4e2aarena\uff08\u301c64MB\uff09\u5f00\u59cb\u3002 \u8fd9\u662f\u53ef\u53d8\u7684\u3002\u65e9\u671f\u7684go\u4fdd\u7559\u8fde\u7eed\u7684\u865a\u62df\u5730\u5740\uff0c\u572864\u4f4d\u7cfb\u7edf\u4e0a\uff0carena\u5927\u5c0f\u4e3a512 GB\u3002\uff08\u5982\u679c\u5206\u914d\u8db3\u591f\u5927\u5e76\u4e14\u88abmmap\u62d2\u7edd\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\uff09 \u8fd9\u4e2aarena\u96c6\u5408\u662f\u6211\u4eec\u6240\u8c13\u7684\u5806\u3002Go\u4ee58192B\u5927\u5c0f\u7c92\u5ea6\u7684\u9875\u9762\u7ba1\u7406\u6bcf\u4e2aarena\u3002 \u5355\u4e2aarena\uff0864 MB\uff09\u3002 Go\u8fd8\u6709\u4e24\u4e2aspan\u548cbitmap\u5757\u3002\u5b83\u4eec\u90fd\u5728\u5806\u5916\u5206\u914d\uff0c\u5e76\u5b58\u50a8\u7740\u6bcf\u4e2aarena\u7684\u5143\u6570\u636e\u3002\u5b83\u4e3b\u8981\u5728\u5783\u573e\u6536\u96c6\u671f\u95f4\u4f7f\u7528\uff08\u56e0\u6b64\u6211\u4eec\u73b0\u5728\u5c06\u5176\u4fdd\u7559\uff09\u3002 \u6211\u4eec\u521a\u521a\u8ba8\u8bba\u8fc7\u7684Go\u4e2d\u7684\u5185\u5b58\u5206\u914d\u7b56\u7565\uff0c\u4f46\u8fd9\u4e9b\u4e5f\u4ec5\u662f\u5947\u5999\u591a\u6837\u7684\u5185\u5b58\u5206\u914d\u7684\u4e00\u4e9b\u76ae\u6bdb\u3002 \u4f46\u662f\uff0cGo\u5185\u5b58\u7ba1\u7406\u7684\u603b\u4f53\u601d\u8def\u662f\u4f7f\u7528\u4e0d\u540c\u7684\u5185\u5b58\u7ed3\u6784\u4e3a\u4e0d\u540c\u5927\u5c0f\u7684\u5bf9\u8c61\u4f7f\u7528\u4e0d\u540c\u7684\u7f13\u5b58\u7ea7\u522b\u5185\u5b58\u6765\u5206\u914d\u5185\u5b58\u3002\u5c06\u4ece\u64cd\u4f5c\u7cfb\u7edf\u63a5\u6536\u7684\u5355\u4e2a\u8fde\u7eed\u5730\u5740\u5757\u5206\u5272\u4e3a\u591a\u7ea7\u7f13\u5b58\u4ee5\u51cf\u5c11\u9501\u7684\u4f7f\u7528\uff0c\u4ece\u800c\u63d0\u9ad8\u5185\u5b58\u5206\u914d\u6548\u7387\uff0c\u7136\u540e\u6839\u636e\u6307\u5b9a\u7684\u5927\u5c0f\u5206\u914d\u5185\u5b58\u5206\u914d\uff0c\u4ece\u800c\u51cf\u5c11\u5185\u5b58\u788e\u7247\uff0c\u5e76\u5728\u5185\u5b58\u91ca\u653ehouhou\u6709\u5229\u4e8e\u66f4\u5feb\u7684GC\u3002 \u73b0\u5728\uff0c\u6211\u5c06\u5411\u60a8\u63d0\u4f9b\u6b64Go Memory Allocator\u7684\u5168\u666f\u56fe\u3002 \u8fd0\u884c\u65f6\u5185\u5b58\u5206\u914d\u5668\u7684\u53ef\u89c6\u5316\u5168\u666f\u56fe\u3002","title":"\u56fe\u89e3Go\u5185\u5b58\u5206\u914d\u5668"},{"location":"golang/docs/%E5%9B%BE%E8%A7%A3Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/#physical-memoryvirtual-memory","text":"\u6bcf\u4e2a\u5185\u5b58\u5206\u914d\u5668\u90fd\u9700\u8981\u4f7f\u7528\u7531\u5e95\u5c42\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u7684\u865a\u62df\u5185\u5b58\u7a7a\u95f4(Virtual Memory Space)\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u5427\u3002 \u7269\u7406\u5b58\u50a8\u5355\u5143\u7684\u7b80\u5355\u56fe\u793a\uff08\u4e0d\u7cbe\u786e\u7684\u8868\u793a\uff09 \u5355\u4e2a\u5b58\u50a8\u5355\u5143\uff08\u5de5\u4f5c\u6d41\u7a0b\uff09\u7684\u7b80\u8981\u4ecb\u7ecd\uff1a \u5730\u5740\u7ebf(address line, \u4f5c\u4e3a\u5f00\u5173\u7684\u6676\u4f53\u7ba1)\u63d0\u4f9b\u4e86\u8bbf\u95ee\u7535\u5bb9\u5668\u7684\u5165\u53e3(\u6570\u636e\u5230\u6570\u636e\u7ebf(data line))\u3002 \u5f53\u5730\u5740\u7ebf\u4e2d\u6709\u7535\u6d41\u6d41\u52a8\u65f6\uff08\u663e\u793a\u4e3a\u7ea2\u8272\uff09\uff0c\u6570\u636e\u7ebf\u53ef\u80fd\u4f1a\u5199\u5165\u7535\u5bb9\u5668\uff0c\u56e0\u6b64\u7535\u5bb9\u5668\u5df2\u5145\u7535\uff0c\u5e76\u4e14\u5b58\u50a8\u7684\u903b\u8f91\u503c\u4e3a\u201c1\u201d\u3002 \u5f53\u5730\u5740\u7ebf\u6ca1\u6709\u7535\u6d41\u6d41\u52a8\uff08\u663e\u793a\u4e3a\u7eff\u8272\uff09\u65f6\uff0c\u6570\u636e\u7ebf\u53ef\u80fd\u4e0d\u4f1a\u5199\u5165\u7535\u5bb9\u5668\uff0c\u56e0\u6b64\u7535\u5bb9\u5668\u672a\u5145\u7535\uff0c\u5e76\u4e14\u5b58\u50a8\u7684\u903b\u8f91\u503c\u4e3a\u201c0\u201d\u3002 \u5f53\u5904\u7406\u5668(CPU)\u9700\u8981\u4ece\u5185\u5b58(RAM)\u4e2d\u201c\u8bfb\u53d6\u201d\u4e00\u4e2a\u503c\u65f6\uff0c\u4f1a\u6cbf\u7740\u201c\u5730\u5740\u7ebf\u201d\u53d1\u9001\u7535\u6d41\uff08\u5173\u95ed\u5f00\u5173\uff09\u3002\u5982\u679c\u7535\u5bb9\u5668\u4fdd\u6301\u7535\u8377\uff0c\u5219\u7535\u6d41\u6d41\u7ecf\u201c DATA LINE\u201d\uff08\u6570\u636e\u7ebf\uff09\u5f97\u5230\u7684\u503c\u4e3a1\uff1b\u5426\u5219\uff0c\u6ca1\u6709\u7535\u6d41\u6d41\u8fc7\u6570\u636e\u7ebf\uff0c\u7535\u5bb9\u5668\u5c06\u4fdd\u6301\u672a\u5145\u7535\u72b6\u6001\uff0c\u5f97\u5230\u7684\u503c\u4e3a0\u3002 \u7269\u7406\u5185\u5b58\u5355\u5143\u5982\u4f55\u4e0eCPU\u4ea4\u4e92\u7684\u7b80\u5355\u8bf4\u660e \u6570\u636e\u603b\u7ebf(Data Bus)\uff1a\u7528\u4e8e\u5728CPU\u548c\u7269\u7406\u5185\u5b58\u4e4b\u95f4\u4f20\u8f93\u6570\u636e\u3002 \u8ba9\u6211\u4eec\u8ba8\u8bba\u4e00\u4e0b\u5730\u5740\u7ebf(Address Line)\u548c\u53ef\u5bfb\u5740\u5b57\u8282(Addressable Bytes)\u3002 CPU\u548c\u7269\u7406\u5185\u5b58\u4e4b\u95f4\u7684\u5730\u5740\u7ebf\u7684\u8868\u793a DRAM\u4e2d\u7684\u6bcf\u4e2a\u201c\u5b57\u8282(BYTE)\u201d\u90fd\u88ab\u5206\u914d\u6709\u552f\u4e00\u7684 \u6570\u5b57\u6807\u8bc6\u7b26\uff08\u5730\u5740\uff09 \u3002 \u4f46\u201c\u7269\u7406\u5b57\u8282\u7684\u8868\u793a != \u5730\u5740\u7ebf\u7684\u6570\u91cf\u201d\u3002\uff08\u4f8b\u5982\uff1a16\u4f4dIntel 8088\uff0cPAE\uff09 \u6bcf\u6761\u201c\u5730\u5740\u7ebf\u201d\u90fd\u53ef\u4ee5\u53d1\u90011bit\u503c\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u8868\u793a\u7ed9\u5b9a\u5b57\u8282\u5730\u5740\u4e2d\u6307\u5b9a\u201cbit\u201d\u3002 \u5728\u56fe\u4e2d\uff0c\u6211\u4eec\u670932\u6761\u5730\u5740\u7ebf\u3002\u56e0\u6b64\uff0c\u6bcf\u4e2a\u53ef\u5bfb\u5740\u5b57\u8282\u90fd\u5c06\u62e5\u6709\u4e00\u4e2a\u201c32bit\u201d\u7684\u5730\u5740\u3002 [ 00000000000000000000000000000000 ] \u2014 \u4f4e\u5185\u5b58\u5730\u5740 [ 11111111111111111111111111111111 ] \u2014 \u9ad8\u5185\u5b58\u5730\u5740 4.\u7531\u4e8e\u6bcf\u4e2a\u5b57\u8282\u90fd\u6709\u4e00\u4e2a32bit\u5730\u5740\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u5730\u5740\u7a7a\u95f4\u75312\u768432\u6b21\u65b9\u4e2a\u53ef\u5bfb\u5740\u5b57\u8282\uff08\u53734GB\uff09\u7ec4\u6210\u3002 \u56e0\u6b64\uff0c\u53ef\u5bfb\u5740\u5b57\u8282\u53d6\u51b3\u4e8e\u5730\u5740\u7ebf\u7684\u603b\u91cf\uff0c\u5bf9\u4e8e64\u4f4d\u5730\u5740\u7ebf\uff08x86\u201364 CPU\uff09\uff0c\u5176\u53ef\u5bfb\u5740\u5b57\u8282\u4e3a2\u768464\u6b21\u65b9\u4e2a\uff0c\u4f46\u662f\u5927\u591a\u6570\u4f7f\u752864\u4f4d\u6307\u9488\u7684\u4f53\u7cfb\u7ed3\u6784\u5b9e\u9645\u4e0a\u4f7f\u752848\u4f4d\u5730\u5740\u7ebf\uff08AMD64 \uff09\u548c42\u4f4d\u5730\u5740\u7ebf\uff08\u82f1\u7279\u5c14\uff09\uff0c\u7406\u8bba\u4e0a\u652f\u6301256TB\u7684\u7269\u7406RAM\uff08Linux \u5728x86\u201364\u4e0a\u6bcf\u4e2a\u8fdb\u7a0b\u652f\u6301128TB\u4ee5\u53ca4\u7ea7\u9875\u8868(page table)\u548cWindows\u6bcf\u4e2a\u8fdb\u7a0b\u5219\u652f\u6301192TB\uff09 \u7531\u4e8e\u5b9e\u9645\u7269\u7406\u5185\u5b58\u7684\u9650\u5236\uff0c\u56e0\u6b64\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u5728\u5176\u81ea\u5df1\u7684\u5185\u5b58\u6c99\u7bb1\u4e2d\u8fd0\u884c-\u201c\u865a\u62df\u5730\u5740\u7a7a\u95f4\u201d\uff0c\u5373 \u865a\u62df\u5185\u5b58 \u3002 \u8be5\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e2d\u5b57\u8282\u7684\u5730\u5740\u4e0d\u518d\u4e0e\u5904\u7406\u5668\u5728\u5730\u5740\u603b\u7ebf\u4e0a\u653e\u7f6e\u7684\u5730\u5740\u76f8\u540c\u3002\u56e0\u6b64\uff0c\u5fc5\u987b\u5efa\u7acb\u8f6c\u6362\u6570\u636e\u7ed3\u6784\u548c\u7cfb\u7edf\uff0c\u4ee5\u5c06\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u5b57\u8282\u6620\u5c04\u5230\u7269\u7406\u5185\u5b58\u5730\u5740\u4e0a\u7684\u5b57\u8282\u3002 \u865a\u62df\u5730\u5740\u957f\u4ec0\u4e48\u6837\u5462\uff1f \u865a\u62df\u5730\u5740\u7a7a\u95f4\u8868\u793a \u56e0\u6b64\uff0c\u5f53CPU\u6267\u884c\u5f15\u7528\u5185\u5b58\u5730\u5740\u7684\u6307\u4ee4\u65f6\u3002\u7b2c\u4e00\u6b65\u662f\u5c06VMA(virtual memory address)\u4e2d\u7684 \u903b\u8f91\u5730\u5740 \u8f6c\u6362\u4e3a \u7ebf\u6027\u5730\u5740(liner address) \u3002 \u8fd9\u4e2a\u7ffb\u8bd1\u5de5\u4f5c\u7531 \u5185\u5b58\u7ba1\u7406\u5355\u5143MMU(Memory Management Unit) \u5b8c\u6210\u3002 \u8fd9\u4e0d\u662f\u7269\u7406\u56fe\uff0c\u4ec5\u662f\u63cf\u8ff0\u3002\u4e3a\u4e86\u7b80\u5316\uff0c\u4e0d\u5305\u62ec\u5730\u5740\u7ffb\u8bd1\u8fc7\u7a0b \u7531\u4e8e\u6b64\u903b\u8f91\u5730\u5740\u592a\u5927\u800c\u65e0\u6cd5\u5355\u72ec\u7ba1\u7406\uff08\u53d6\u51b3\u4e8e\u5404\u79cd\u56e0\u7d20\uff09\uff0c\u56e0\u6b64\u5c06\u901a\u8fc7\u9875(page)\u5bf9\u5176\u8fdb\u884c\u7ba1\u7406\u3002\u5f53\u5fc5\u8981\u7684\u5206\u9875\u6784\u9020\u88ab\u6fc0\u6d3b\u540e\uff0c \u865a\u62df\u5185\u5b58\u7a7a\u95f4\u5c06\u88ab\u5212\u5206\u4e3a\u79f0\u4e3a\u9875\u7684\u8f83\u5c0f\u533a\u57df\uff08\u5927\u591a\u6570OS\u4e0a\u9875\u5927\u5c0f\u4e3a4KB\uff0c\u53ef\u4ee5\u66f4\u6539\uff09 \u3002\u5b83\u662f\u865a\u62df\u5185\u5b58\u4e2d\u7528\u4e8e\u5185\u5b58\u7ba1\u7406\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u865a\u62df\u5185\u5b58\u4e0d\u5b58\u50a8\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u7b80\u5355\u5730\u5c06\u7a0b\u5e8f\u7684\u5730\u5740\u7a7a\u95f4\u6620\u5c04\u5230\u771f\u5b9e\u7684\u7269\u7406\u5185\u5b58\u7a7a\u95f4\u4e0a\u3002 \u5355\u4e2a\u8fdb\u7a0b\u4ec5\u5c06VMA(\u865a\u62df\u5185\u5b58\u5730\u5740)\u89c6\u4e3a\u5176\u5730\u5740\u3002 \u8fd9\u6837\uff0c\u5f53\u6211\u4eec\u7684\u7a0b\u5e8f\u8bf7\u6c42\u66f4\u591a\u201c\u5806\u5185\u5b58(heap memory)\u201d\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f \u4e00\u6bb5\u7b80\u5355\u7684\u7528\u6237\u8bf7\u6c42\u66f4\u591a\u5806\u5185\u5b58\u7684\u6c47\u7f16\u4ee3\u7801 \u589e\u52a0\u5806\u5185\u5b58 \u7a0b\u5e8f\u901a\u8fc7 brk\uff08sbrk/mmap\u7b49\uff09 \u7cfb\u7edf\u8c03\u7528\u8bf7\u6c42\u66f4\u591a\u5185\u5b58\u3002\u4f46\u5185\u6838\u5b9e\u9645\u4e0a\u4ec5\u662f\u66f4\u65b0\u4e86\u5806\u7684VMA\u3002 \u6ce8\u610f\uff1a\u6b64\u65f6\uff0c\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u5206\u914d\u4efb\u4f55\u9875\u5e27\uff0c\u5e76\u4e14\u65b0\u9875\u9762\u4e5f\u6ca1\u6709\u5728\u7269\u7406\u5185\u5b58\u5b58\u5728\u3002\u8fd9\u4e5f\u662fVSZ\u4e0eRSS\u4e4b\u95f4\u7684\u5dee\u5f02\u70b9\u3002","title":"\u4e00. \u7269\u7406\u5185\u5b58(Physical Memory)\u548c\u865a\u62df\u5185\u5b58(Virtual Memory)"},{"location":"golang/docs/%E5%9B%BE%E8%A7%A3Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/#_1","text":"\u6709\u4e86\u201c\u865a\u62df\u5730\u5740\u7a7a\u95f4\u201d\u7684\u57fa\u672c\u6982\u8ff0\u4ee5\u53ca\u5806\u5185\u5b58\u589e\u52a0\u7684\u7406\u89e3\u4e4b\u540e\uff0c\u5185\u5b58\u5206\u914d\u5668\u73b0\u5728\u53d8\u5f97\u66f4\u5bb9\u6613\u8bf4\u660e\u4e86\u3002 \u5982\u679c\u5806\u4e2d\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u6ee1\u8db3\u6211\u4eec\u4ee3\u7801\u4e2d\u7684\u5185\u5b58\u8bf7\u6c42\uff0c\u5219\u5185\u5b58\u5206\u914d\u5668\u53ef\u4ee5\u5728\u5185\u6838\u4e0d\u53c2\u4e0e\u7684\u60c5\u51b5\u4e0b\u6ee1\u8db3\u8be5\u8bf7\u6c42\uff0c\u5426\u5219\u5b83\u4f1a\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528 brk \u6269\u5927\u5806\uff0c\u901a\u5e38\u4f1a\u8bf7\u6c42\u5927\u91cf\u5185\u5b58\u3002\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8emalloc\u800c\u8a00\uff0c\u5927\u91cf\u7684\u610f\u601d\u662f > MMAP_THRESHOLD\u5b57\u8282-128kB\uff09\u3002 \u4f46\u662f\uff0c\u5185\u5b58\u5206\u914d\u5668\u7684\u8d23\u4efb\u4e0d\u4ec5\u4ec5\u662f\u66f4\u65b0 brk\u5730\u5740 \u3002\u5176\u4e2d\u4e00\u4e2a\u4e3b\u8981\u7684\u5de5\u4f5c\u5219\u662f\u5982\u4f55\u7684\u964d\u4f4e\u5185\u5916\u90e8\u7684\u5185\u5b58\u788e\u7247\u4ee5\u53ca\u5982\u4f55\u5feb\u901f\u5206\u914d\u5185\u5b58\u5757\u3002\u8003\u8651\u6309p1~p4\u7684\u987a\u5e8f\uff0c\u5148\u4f7f\u7528\u51fd\u6570 malloc \u5728\u7a0b\u5e8f\u4e2d\u8bf7\u6c42\u8fde\u7eed\u5185\u5b58\u5757\uff0c\u7136\u540e\u4f7f\u7528\u51fd\u6570 free(pointer) \u91ca\u653e\u5185\u5b58\u3002 \u5916\u90e8\u5185\u5b58\u788e\u7247\u6f14\u793a \u5728\u7b2c4\u6b65\uff0c\u5373\u4f7f\u6211\u4eec\u6709\u8db3\u591f\u7684\u5185\u5b58\u5757\uff0c\u6211\u4eec\u4e5f\u65e0\u6cd5\u6ee1\u8db3\u5bf96\u4e2a\u8fde\u7eed\u5185\u5b58\u5757\u5206\u914d\u7684\u8bf7\u6c42\uff0c\u4ece\u800c\u5bfc\u81f4\u5185\u5b58\u788e\u7247\u3002 \u90a3\u4e48\u5982\u4f55\u51cf\u5c11\u5185\u5b58\u788e\u7247\u5462\uff1f\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u53d6\u51b3\u4e8e\u5e95\u5c42\u5e93\u4f7f\u7528\u7684\u7279\u5b9a\u7684\u5185\u5b58\u5206\u914d\u7b97\u6cd5\u3002 \u6211\u4eec\u5c06\u7814\u7a76TCMalloc\u5185\u5b58\u5206\u914d\u5668\uff0cGo\u5185\u5b58\u5206\u914d\u5668\u91c7\u7528\u7684\u5c31\u662f\u8be5\u5185\u5b58\u5206\u914d\u5668\u6a21\u578b\u3002","title":"\u4e8c. \u5185\u5b58\u5206\u914d\u5668"},{"location":"golang/docs/%E5%9B%BE%E8%A7%A3Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/#tcmalloc","text":"TCMalloc\uff08thread cache malloc\uff09 \u7684\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u5185\u5b58\u5212\u5206\u4e3a\u591a\u4e2a\u7ea7\u522b\uff0c\u4ee5\u51cf\u5c11\u9501\u7684\u7c92\u5ea6\u3002\u5728TCMalloc\u5185\u90e8\uff0c\u5185\u5b58\u7ba1\u7406\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u7ebf\u7a0b\u5185\u5b58\u548c\u9875\u5806(page heap)\u3002","title":"\u4e09. TCMalloc"},{"location":"golang/docs/%E5%9B%BE%E8%A7%A3Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/#thread-memory","text":"\u6bcf\u4e2a\u5185\u5b58\u9875\u5206\u4e3a\u591a\u7ea7\u56fa\u5b9a\u5927\u5c0f\u7684\u201c\u7a7a\u95f2\u5217\u8868\u201d\uff0c\u8fd9\u6709\u52a9\u4e8e \u51cf\u5c11\u788e\u7247 \u3002\u56e0\u6b64\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u4f1a\u6709\u4e00\u4e2a\u65e0\u9501\u7684\u5c0f\u5bf9\u8c61\u7f13\u5b58\uff0c\u8fd9\u4f7f\u5f97\u5728\u5e76\u884c\u7a0b\u5e8f\u4e0b\u5206\u914d\u5c0f\u5bf9\u8c61\uff08<= 32k\uff09\u975e\u5e38\u9ad8\u6548\u3002 \u7ebf\u7a0b\u7f13\u5b58\uff08\u6bcf\u4e2a\u7ebf\u7a0b\u62e5\u6709\u6b64\u7ebf\u7a0b\u672c\u5730\u7ebf\u7a0b\u7f13\u5b58\uff09","title":"\u7ebf\u7a0b\u5185\u5b58(thread memory)"},{"location":"golang/docs/%E5%9B%BE%E8%A7%A3Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/#page-heap","text":"TCMalloc\u7ba1\u7406\u7684\u5806\u7531\u9875\u96c6\u5408\u7ec4\u6210\uff0c\u5176\u4e2d\u4e00\u7ec4\u8fde\u7eed\u9875\u7684\u96c6\u5408\u53ef\u4ee5\u7528 span \u8868\u793a\u3002\u5f53\u5206\u914d\u7684\u5bf9\u8c61\u5927\u4e8e32K\u65f6\uff0c\u5c06\u4f7f\u7528\u9875\u5806\u8fdb\u884c\u5206\u914d\u3002 \u9875\u5806\uff08\u7528\u4e8espan\u7ba1\u7406\uff09 \u5982\u679c\u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58\u6765\u5206\u914d\u5c0f\u5bf9\u8c61\uff0c\u5185\u5b58\u5206\u914d\u5668\u5c31\u4f1a\u8f6c\u5230\u9875\u5806\u4ee5\u83b7\u53d6\u5185\u5b58\u3002\u5982\u679c\u8fd8\u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58\uff0c\u9875\u5806\u5c06\u4ece\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8bf7\u6c42\u66f4\u591a\u5185\u5b58\u3002 \u7531\u4e8e\u8fd9\u79cd\u5206\u914d\u6a21\u578b\u7ef4\u62a4\u4e86\u4e00\u4e2a\u7528\u6237\u7a7a\u95f4\u7684\u5185\u5b58\u6c60\uff0c\u56e0\u6b64\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u5185\u5b58\u5206\u914d\u548c\u91ca\u653e\u7684\u6548\u7387\u3002 \u6ce8\u610f\uff1a\u5c3d\u7ba1go\u5185\u5b58\u5206\u914d\u5668\u6700\u521d\u662f\u57fa\u4e8etcmalloc\u7684\uff0c\u4f46\u662f\u73b0\u5728\u5df2\u7ecf\u6709\u4e86\u5f88\u5927\u7684\u4e0d\u540c\u3002","title":"\u9875\u5806(page heap)"},{"location":"golang/docs/%E5%9B%BE%E8%A7%A3Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/#go","text":"\u6211\u4eec\u77e5\u9053Go\u8fd0\u884c\u65f6\u4f1a\u5c06Goroutines\uff08G\uff09\u8c03\u5ea6\u5230\u903b\u8f91\u5904\u7406\u5668\uff08P\uff09\u4e0a\u6267\u884c\u3002\u540c\u6837\uff0c\u57fa\u4e8eTCMalloc\u6a21\u578b\u7684Go\u8fd8\u5c06\u5185\u5b58\u9875\u5206\u4e3a67\u4e2a\u4e0d\u540c\u5927\u5c0f\u7ea7\u522b\u3002 Go\u4e2d\u7684\u5185\u5b58\u5757\u7684\u5927\u5c0f\u7ea7\u522b Go\u9ed8\u8ba4\u91c7\u75288192B\u5927\u5c0f\u7684\u9875\u3002\u5982\u679c\u8fd9\u4e2a\u9875\u88ab\u5206\u6210\u5927\u5c0f\u4e3a1KB\u7684\u5757\uff0c\u6211\u4eec\u4e00\u5171\u5c06\u62ff\u52308\u5757\u8fd9\u6837\u7684\u9875: \u5c068 KB\u9875\u9762\u5212\u5206\u4e3a1KB\u7684\u5927\u5c0f\u7b49\u7ea7\uff08\u5728Go\u4e2d\uff0c\u9875\u7684\u7c92\u5ea6\u4fdd\u6301\u4e3a8KB\uff09 Go\u4e2d\u7684\u8fd9\u4e9b\u9875\u9762\u8fd0\u884c\u4e5f\u901a\u8fc7\u79f0\u4e3amspan\u7684\u7ed3\u6784\u8fdb\u884c\u7ba1\u7406\u3002 \u9009\u62e9\u8981\u5206\u914d\u7ed9\u6bcf\u4e2a\u5c3a\u5bf8\u7ea7\u522b\u7684\u5c3a\u5bf8\u7c7b\u522b\u548c\u9875\u9762\u8ba1\u6570\uff08\u5c06\u9875\u9762\u6570\u5206\u6210\u7ed9\u5b9a\u5c3a\u5bf8\u7684\u5bf9\u8c61\uff09\uff0c\u4ee5\u4fbf\u5c06\u5206\u914d\u8bf7\u6c42\u5706\u6574(\u56db\u820d\u4e94\u5165)\u5230\u4e0b\u4e00\u4e2a\u5c3a\u5bf8\u7ea7\u522b\u6700\u591a\u6d6a\u8d3912.5\uff05","title":"\u56db. Go\u5185\u5b58\u5206\u914d\u5668"},{"location":"golang/docs/%E5%9B%BE%E8%A7%A3Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/#mspan","text":"\u7b80\u800c\u8a00\u4e4b\uff0c\u5b83\u662f\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u5bf9\u8c61\uff0c\u5176\u4e2d\u5305\u542b\u9875\u9762\u7684\u8d77\u59cb\u5730\u5740\uff0c\u5b83\u5177\u6709\u7684\u9875\u9762\u7684span\u7c7b\u4ee5\u53ca\u5b83\u5305\u542b\u7684\u9875\u9762\u6570\u3002 Go\u5185\u5b58\u5206\u914d\u5668\u4e2dmspan\u7684\u8868\u793a\u5f62\u5f0f","title":"mspan"},{"location":"golang/docs/%E5%9B%BE%E8%A7%A3Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/#mcache","text":"\u4e0eTCMalloc\u4e00\u6837\uff0cGo\u4e3a\u6bcf\u4e2a\u903b\u8f91\u5904\u7406\u5668\uff08P\uff09\u63d0\u4f9b\u4e86\u4e00\u4e2a\u79f0\u4e3a mcache \u7684\u672c\u5730\u5185\u5b58\u7ebf\u7a0b\u7f13\u5b58\uff0c\u56e0\u6b64\uff0c\u5982\u679cGoroutine\u9700\u8981\u5185\u5b58\uff0c\u5b83\u53ef\u4ee5\u76f4\u63a5\u4ecemcache\u4e2d\u83b7\u53d6\u5b83\u800c\u65e0\u9700\u4efb\u4f55\u9501\uff0c\u56e0\u4e3a\u5728\u4efb\u4f55\u65f6\u95f4\u70b9\u53ea\u6709\u4e00\u4e2aGoroutine\u5728\u903b\u8f91\u5904\u7406\u5668\uff08P\uff09\u4e0a\u8fd0\u884c\u3002 mcache\u5305\u542b\u6240\u6709\u7ea7\u522b\u5927\u5c0f\u7684mspan\u4f5c\u4e3a\u7f13\u5b58\u3002 Go\u4e2dP\uff0cmcache\u548cmspan\u4e4b\u95f4\u7684\u5173\u7cfb \u7531\u4e8e\u6bcf\u4e2aP\u62e5\u6709\u4e00\u4e2amcache\uff0c\u56e0\u6b64\u4ecemcache\u8fdb\u884c\u5206\u914d\u65f6\u65e0\u9700\u52a0\u9501\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u7ea7\u522b\uff0c\u90fd\u6709\u4e24\u79cd\u7c7b\u578b\u3002 scan \u2014\u5305\u542b\u6307\u9488\u7684\u5bf9\u8c61\u3002 noscan \u2014\u4e0d\u5305\u542b\u6307\u9488\u7684\u5bf9\u8c61\u3002 \u8fd9\u79cd\u65b9\u6cd5\u7684\u597d\u5904\u4e4b\u4e00\u662f\u5728\u8fdb\u884c\u5783\u573e\u6536\u96c6\u65f6\uff0cGC\u65e0\u9700\u904d\u5386noscan\u5bf9\u8c61\u3002 \u4ec0\u4e48Go mcache\uff1f \u5bf9\u8c61\u5927\u5c0f<= 32K\u5b57\u8282\u7684\u5206\u914d\u5c06\u76f4\u63a5\u4ea4\u7ed9mcache\uff0c\u540e\u8005\u5c06\u4f7f\u7528\u5bf9\u5e94\u5927\u5c0f\u7ea7\u522b\u7684mspan\u5e94\u5bf9 \u5f53mcache\u6ca1\u6709\u53ef\u7528\u63d2\u69fd(slot)\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f \u4ecemcentral mspan list\u4e2d\u83b7\u53d6\u4e00\u4e2a\u5bf9\u5e94\u5927\u5c0f\u7ea7\u522b\u7684\u65b0\u7684mspan\u3002","title":"mcache"},{"location":"golang/docs/%E5%9B%BE%E8%A7%A3Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/#mcentral","text":"mcentral\u5bf9\u8c61\u96c6\u5408\u4e86\u6240\u6709\u7ed9\u5b9a\u5927\u5c0f\u7ea7\u522b\u7684span\uff0c\u6bcf\u4e2amcentral\u662f\u4e24\u4e2amspan\u5217\u8868\u3002 \u7a7a\u7684mspanList \u2014 \u6ca1\u6709\u7a7a\u95f2\u5185\u5b58\u7684mspan\u6216\u7f13\u5b58\u5728mcache\u4e2d\u7684mspan\u7684\u5217\u8868 \u975e\u7a7amspanList \u2013 \u4ecd\u6709\u7a7a\u95f2\u5185\u5b58\u7684span\u5217\u8868\u3002 \u5f53\u4ecemcentral\u8bf7\u6c42\u65b0\u7684Span\u65f6\uff0c\u5b83\u5c06\u4ece\u975e\u7a7amspanList\u5217\u8868\u4e2d\u83b7\u53d6\uff08\u5982\u679c\u53ef\u7528\uff09\u3002\u8fd9\u4e24\u4e2a\u5217\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\u5982\u4e0b\uff1a\u5f53\u8bf7\u6c42\u65b0\u7684span\u65f6\uff0c\u8be5\u8bf7\u6c42\u4ece\u975e\u7a7a\u5217\u8868\u4e2d\u5f97\u5230\u6ee1\u8db3\uff0c\u5e76\u4e14\u8be5span\u88ab\u653e\u5165\u7a7a\u5217\u8868\u4e2d\u3002\u91ca\u653espan\u540e\uff0c\u5c06\u6839\u636espan\u4e2d\u7a7a\u95f2\u5bf9\u8c61\u7684\u6570\u91cf\u5c06\u5176\u653e\u56de\u975e\u7a7a\u5217\u8868\u3002 mcentral\u8868\u793a \u6bcf\u4e2amcentral\u7ed3\u6784\u90fd\u5728mheap\u4e2d\u7ef4\u62a4\u3002","title":"mcentral"},{"location":"golang/docs/%E5%9B%BE%E8%A7%A3Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/#mheap","text":"mheap\u662f\u5728Go\u4e2d\u7ba1\u7406\u5806\u7684\u5bf9\u8c61\uff0c\u4e14\u53ea\u6709\u4e00\u4e2a\u5168\u5c40mheap\u5bf9\u8c61\u3002\u5b83\u62e5\u6709\u865a\u62df\u5730\u5740\u7a7a\u95f4\u3002 mheap\u7684\u8868\u793a \u4ece\u4e0a\u56fe\u53ef\u4ee5\u770b\u51fa\uff0cmheap\u5177\u6709\u4e00\u4e2amcentral\u6570\u7ec4\u3002\u6b64\u6570\u7ec4\u5305\u542b\u6bcf\u4e2a\u5927\u5c0f\u7ea7\u522bspan\u7684mcentral\u3002 central [numSpanClasses]struct { mcentral mcentral pad [sys.CacheLineSize unsafe.Sizeof(mcentral{})%sys.CacheLineSize]byte } \u7531\u4e8e\u6211\u4eec\u5bf9\u6bcf\u4e2a\u7ea7\u522b\u7684span\u90fd\u6709mcentral\uff0c\u56e0\u6b64\u5f53mcache\u4ecemcentral\u8bf7\u6c42\u4e00\u4e2amspan\u65f6\uff0c\u4ec5\u6d89\u53ca\u5355\u4e2amcentral\u7ea7\u522b\u7684\u9501\uff0c\u56e0\u6b64\u5176\u4ed6mache\u7684\u4e0d\u540c\u7ea7\u522bmspan\u7684\u8bf7\u6c42\u4e5f\u53ef\u4ee5\u540c\u65f6\u88ab\u5904\u7406\u3002 padding\u786e\u4fdd\u5c06MCentrals\u4ee5 CacheLineSize \u5b57\u8282\u95f4\u9694\u5f00\uff0c\u4ee5\u4fbf\u6bcf\u4e2aMCentral.lock\u83b7\u5f97\u81ea\u5df1\u7684\u7f13\u5b58\u884c\uff0c\u4ee5\u907f\u514d\u9519\u8bef\u7684\u5171\u4eab\u95ee\u9898\u3002 \u90a3\u4e48\uff0c\u5f53\u8be5mcentral\u5217\u8868\u4e3a\u7a7a\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1fmcentral\u5c06\u4ecemheap\u83b7\u53d6\u9875\u4ee5\u7528\u4e8e\u6240\u9700\u5927\u5c0f\u7ea7\u522bspan\u7684\u5206\u914d\u3002 free [_MaxMHeapList]mSpanList\uff1a\u8fd9\u662f\u4e00\u4e2aspanList\u6570\u7ec4\u3002\u6bcf\u4e2aspanList\u4e2d\u7684mspan\u75311\u301c127(_MaxMHeapList-1)\u9875\u7ec4\u6210\u3002\u4f8b\u5982\uff0cfree[3]\u662f\u5305\u542b3\u4e2a\u9875\u9762\u7684mspan\u7684\u94fe\u63a5\u5217\u8868\u3002Free\u8868\u793a\u7a7a\u95f2\u5217\u8868\uff0c\u5373\u5c1a\u672a\u8fdb\u884c\u5bf9\u8c61\u5206\u914d\u3002\u5b83\u5bf9\u5e94\u4e8e\u5fd9\u788c\u5217\u8868(busy list)\u3002 freelarge mSpanList\uff1amspans\u5217\u8868\u3002\u6bcf\u4e2amspan\u7684\u9875\u6570\u5927\u4e8e127\u3002Go\u5185\u5b58\u5206\u914d\u5668\u4ee5mtreap\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u5b83\u3002\u5bf9\u5e94busyLarge\u3002 \u5927\u5c0f> 32k\u7684\u5bf9\u8c61\u662f\u4e00\u4e2a\u5927\u5bf9\u8c61\uff0c\u76f4\u63a5\u4ecemheap\u5206\u914d\u3002\u8fd9\u4e9b\u8f83\u5927\u7684\u8bf7\u6c42\u9700\u8981\u4e2d\u592e\u9501(central lock)\uff0c\u56e0\u6b64\u5728\u4efb\u4f55\u7ed9\u5b9a\u7684\u65f6\u95f4\u70b9\u53ea\u80fd\u6ee1\u8db3\u4e00\u4e2aP\u7684\u8bf7\u6c42","title":"mheap"},{"location":"golang/docs/%E5%9B%BE%E8%A7%A3Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/#_2","text":"\u5927\u5c0f> 32k\u662f\u4e00\u4e2a\u5927\u5bf9\u8c61\uff0c\u76f4\u63a5\u4ecemheap\u5206\u914d\u3002 \u5927\u5c0f<16B\uff0c\u4f7f\u7528mcache\u7684tiny\u5206\u914d\u5668\u5206\u914d \u5927\u5c0f\u572816B\u301c32k\u4e4b\u95f4\uff0c\u8ba1\u7b97\u8981\u4f7f\u7528\u7684sizeClass\uff0c\u7136\u540e\u5728mcache\u4e2d\u4f7f\u7528\u76f8\u5e94\u7684sizeClass\u7684\u5757\u5206\u914d \u5982\u679c\u4e0emcache\u5bf9\u5e94\u7684sizeClass\u6ca1\u6709\u53ef\u7528\u7684\u5757\uff0c\u5219\u5411mcentral\u53d1\u8d77\u8bf7\u6c42\u3002 \u5982\u679cmcentral\u4e5f\u6ca1\u6709\u53ef\u7528\u7684\u5757\uff0c\u5219\u5411mheap\u8bf7\u6c42\u3002mheap\u4f7f\u7528BestFit\u67e5\u627e\u6700\u5408\u9002\u7684mspan\u3002\u5982\u679c\u8d85\u51fa\u4e86\u7533\u8bf7\u7684\u5927\u5c0f\uff0c\u5219\u4f1a\u6839\u636e\u9700\u8981\u8fdb\u884c\u5212\u5206\uff0c\u4ee5\u8fd4\u56de\u7528\u6237\u6240\u9700\u7684\u9875\u9762\u6570\u3002\u5176\u4f59\u9875\u9762\u6784\u6210\u4e00\u4e2a\u65b0\u7684mspan\uff0c\u5e76\u8fd4\u56demheap\u7a7a\u95f2\u5217\u8868\u3002 \u5982\u679cmheap\u6ca1\u6709\u53ef\u7528\u7684span\uff0c\u8bf7\u5411\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u4e00\u7ec4\u65b0\u7684\u9875\uff08\u81f3\u5c111MB\uff09\u3002 \u4f46\u662fGo\u5728OS\u7ea7\u522b\u5206\u914d\u7684\u9875\u9762\u751a\u81f3\u66f4\u5927\uff08\u79f0\u4e3aarena\uff09\u3002\u5206\u914d\u5927\u91cf\u9875\u9762\u5c06\u5206\u644a\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u5bf9\u8bdd\u7684\u6210\u672c\u3002 \u6240\u6709\u8bf7\u6c42\u7684\u5806\u5185\u5b58\u90fd\u6765\u81ea\u4e8earena\u3002\u8ba9\u6211\u4eec\u770b\u770barena\u662f\u4ec0\u4e48\u3002","title":"\u4e94. \u5bf9\u8c61\u5206\u914d\u6d41\u7a0b"},{"location":"golang/docs/%E5%9B%BE%E8%A7%A3Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/#go_1","text":"\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u7b80\u5355go\u7a0b\u5e8f\u7684\u5185\u5b58\u3002 func main\uff08\uff09{ for {} } \u7a0b\u5e8f\u7684\u8fdb\u7a0b\u72b6\u6001 \u56e0\u6b64\uff0c\u5373\u4f7f\u662f\u7b80\u5355\u7684go\u7a0b\u5e8f\uff0c\u5360\u7528\u7684\u865a\u62df\u7a7a\u95f4\u4e5f\u662f\u5927\u7ea6100MB\u800cRSS\u53ea\u6709696kB\u3002\u8ba9\u6211\u4eec\u5c1d\u8bd5\u9996\u5148\u627e\u51fa\u8fd9\u79cd\u5dee\u5f02\u7684\u539f\u56e0\u3002 map\u548csmap\u7edf\u8ba1\u4fe1\u606f \u56e0\u6b64\uff0c\u5185\u5b58\u533a\u57df\u7684\u5927\u5c0f\u7ea6\u4e3a\u301c2MB, 64MB and 32MB\u3002\u8fd9\u4e9b\u662f\u4ec0\u4e48\uff1f","title":"\u516d. Go\u865a\u62df\u5185\u5b58"},{"location":"golang/docs/%E5%9B%BE%E8%A7%A3Go%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/#arena","text":"\u539f\u6765\uff0cGo\u4e2d\u7684\u865a\u62df\u5185\u5b58\u5e03\u5c40\u7531\u4e00\u7ec4arena\u7ec4\u6210\u3002\u521d\u59cb\u5806\u6620\u5c04\u662f\u4e00\u4e2aarena\uff0c\u537364MB\uff08\u57fa\u4e8ego 1.11.5\uff09\u3002 \u5f53\u524d\u5728\u4e0d\u540c\u7cfb\u7edf\u4e0a\u7684arena\u5927\u5c0f\u3002 \u56e0\u6b64\uff0c\u5f53\u524d\u6839\u636e\u7a0b\u5e8f\u9700\u8981\uff0c\u5185\u5b58\u4ee5\u8f83\u5c0f\u7684\u589e\u91cf\u8fdb\u884c\u6620\u5c04\uff0c\u5e76\u4e14\u5b83\u4ee5\u4e00\u4e2aarena\uff08\u301c64MB\uff09\u5f00\u59cb\u3002 \u8fd9\u662f\u53ef\u53d8\u7684\u3002\u65e9\u671f\u7684go\u4fdd\u7559\u8fde\u7eed\u7684\u865a\u62df\u5730\u5740\uff0c\u572864\u4f4d\u7cfb\u7edf\u4e0a\uff0carena\u5927\u5c0f\u4e3a512 GB\u3002\uff08\u5982\u679c\u5206\u914d\u8db3\u591f\u5927\u5e76\u4e14\u88abmmap\u62d2\u7edd\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\uff09 \u8fd9\u4e2aarena\u96c6\u5408\u662f\u6211\u4eec\u6240\u8c13\u7684\u5806\u3002Go\u4ee58192B\u5927\u5c0f\u7c92\u5ea6\u7684\u9875\u9762\u7ba1\u7406\u6bcf\u4e2aarena\u3002 \u5355\u4e2aarena\uff0864 MB\uff09\u3002 Go\u8fd8\u6709\u4e24\u4e2aspan\u548cbitmap\u5757\u3002\u5b83\u4eec\u90fd\u5728\u5806\u5916\u5206\u914d\uff0c\u5e76\u5b58\u50a8\u7740\u6bcf\u4e2aarena\u7684\u5143\u6570\u636e\u3002\u5b83\u4e3b\u8981\u5728\u5783\u573e\u6536\u96c6\u671f\u95f4\u4f7f\u7528\uff08\u56e0\u6b64\u6211\u4eec\u73b0\u5728\u5c06\u5176\u4fdd\u7559\uff09\u3002 \u6211\u4eec\u521a\u521a\u8ba8\u8bba\u8fc7\u7684Go\u4e2d\u7684\u5185\u5b58\u5206\u914d\u7b56\u7565\uff0c\u4f46\u8fd9\u4e9b\u4e5f\u4ec5\u662f\u5947\u5999\u591a\u6837\u7684\u5185\u5b58\u5206\u914d\u7684\u4e00\u4e9b\u76ae\u6bdb\u3002 \u4f46\u662f\uff0cGo\u5185\u5b58\u7ba1\u7406\u7684\u603b\u4f53\u601d\u8def\u662f\u4f7f\u7528\u4e0d\u540c\u7684\u5185\u5b58\u7ed3\u6784\u4e3a\u4e0d\u540c\u5927\u5c0f\u7684\u5bf9\u8c61\u4f7f\u7528\u4e0d\u540c\u7684\u7f13\u5b58\u7ea7\u522b\u5185\u5b58\u6765\u5206\u914d\u5185\u5b58\u3002\u5c06\u4ece\u64cd\u4f5c\u7cfb\u7edf\u63a5\u6536\u7684\u5355\u4e2a\u8fde\u7eed\u5730\u5740\u5757\u5206\u5272\u4e3a\u591a\u7ea7\u7f13\u5b58\u4ee5\u51cf\u5c11\u9501\u7684\u4f7f\u7528\uff0c\u4ece\u800c\u63d0\u9ad8\u5185\u5b58\u5206\u914d\u6548\u7387\uff0c\u7136\u540e\u6839\u636e\u6307\u5b9a\u7684\u5927\u5c0f\u5206\u914d\u5185\u5b58\u5206\u914d\uff0c\u4ece\u800c\u51cf\u5c11\u5185\u5b58\u788e\u7247\uff0c\u5e76\u5728\u5185\u5b58\u91ca\u653ehouhou\u6709\u5229\u4e8e\u66f4\u5feb\u7684GC\u3002 \u73b0\u5728\uff0c\u6211\u5c06\u5411\u60a8\u63d0\u4f9b\u6b64Go Memory Allocator\u7684\u5168\u666f\u56fe\u3002 \u8fd0\u884c\u65f6\u5185\u5b58\u5206\u914d\u5668\u7684\u53ef\u89c6\u5316\u5168\u666f\u56fe\u3002","title":"Arena"},{"location":"golang/docs/%E5%BD%93%E7%BA%A2%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80Go%EF%BC%8C%E7%9C%9F%E7%9A%84%E6%98%AF%E6%9C%AA%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E4%B8%BB%E6%B5%81%E5%90%97%EF%BC%9F/","text":"\u6458\u8981\uff1a\u6587\u5c06\u8be6\u7ec6\u4ecb\u7ecd Golang \u7684\u8bed\u8a00\u7279\u70b9\u4ee5\u53ca\u5b83\u7684\u4f18\u7f3a\u70b9\u548c\u9002\u7528\u573a\u666f\uff0c\u5e26\u7740\u4e0a\u8ff0\u51e0\u4e2a\u7591\u95ee\uff0c\u4e3a\u8bfb\u8005\u5206\u6790 Go \u8bed\u8a00\u7684\u5404\u4e2a\u65b9\u9762\uff0c\u4ee5\u5e2e\u52a9\u521d\u5165 IT \u884c\u4e1a\u7684\u7a0b\u5e8f\u5458\u4ee5\u53ca\u5bf9 Go \u611f\u5174\u8da3\u7684\u5f00\u53d1\u8005\u8fdb\u4e00\u6b65\u4e86\u89e3\u8fd9\u4e2a\u70ed\u95e8\u8bed\u8a00\u3002 \u672c\u6587\u5206\u4eab\u81ea\u534e\u4e3a\u4e91\u793e\u533a\u300a\u5927\u7ea2\u5927\u7d2b\u7684 Golang \u771f\u7684\u662f\u540e\u7aef\u5f00\u53d1\u4e2d\u7684\u4e07\u80fd\u836f\u5417\uff1f\u300b\uff0c\u539f\u6587\u4f5c\u8005\uff1aMarvin Zhang \u3002 \u524d\u8a00 \u57ce\u5916\u7684\u4eba\u60f3\u8fdb\u53bb\uff0c\u57ce\u91cc\u7684\u4eba\u60f3\u51fa\u6765\u3002\u2013 \u94b1\u949f\u4e66\u300a\u56f4\u57ce\u300b \u968f\u7740\u5bb9\u5668\u7f16\u6392\uff08Container Orchestration\uff09\u3001\u5fae\u670d\u52a1\uff08Micro Services\uff09\u3001\u4e91\u6280\u672f\uff08Cloud Technology\uff09\u7b49\u5728 IT \u884c\u4e1a\u4e0d\u65ad\u76db\u884c\uff0c2009 \u5e74\u8bde\u751f\u4e8e Google \u7684 Golang\uff08Go \u8bed\u8a00\uff0c\u7b80\u79f0 Go\uff09\u8d8a\u6765\u8d8a\u53d7\u5230\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u6b22\u8fce\u548c\u8ffd\u6367\uff0c\u6210\u4e3a\u5982\u4eca\u7099\u624b\u53ef\u70ed\u7684\u540e\u7aef\u7f16\u7a0b\u8bed\u8a00\u3002\u5728\u7528 Golang \u5f00\u53d1\u7684\u8f6f\u4ef6\u9879\u76ee\u5217\u8868\u4e2d\uff0c\u6709 Docker\uff08\u5bb9\u5668\u6280\u672f\uff09\u3001Kubernetes\uff08\u5bb9\u5668\u7f16\u6392\uff09\u8fd9\u6837\u7684\u98a0\u8986\u6574\u4e2a IT \u884c\u4e1a\u7684\u660e\u661f\u7ea7\u4ea7\u54c1\uff0c\u4e5f\u6709\u50cf Prometheus\uff08\u76d1\u63a7\u7cfb\u7edf\uff09\u3001Etcd\uff08\u5206\u5e03\u5f0f\u5b58\u50a8\uff09\u3001InfluxDB\uff08\u65f6\u5e8f\u6570\u636e\u5e93\uff09\u8fd9\u6837\u7684\u5f3a\u5927\u5b9e\u7528\u7684\u77e5\u540d\u9879\u76ee\u3002\u5f53\u7136\uff0cGo \u8bed\u8a00\u7684\u5e94\u7528\u9886\u57df\u4e5f\u7edd\u4e0d\u5c40\u9650\u4e8e\u5bb9\u5668\u548c\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002\u5982\u4eca\u5f88\u591a\u5927\u578b\u4e92\u8054\u7f51\u4f01\u4e1a\u5728\u5927\u91cf\u4f7f\u7528 Golang \u6784\u5efa\u540e\u7aef Web \u5e94\u7528\uff0c\u4f8b\u5982\u4eca\u65e5\u5934\u6761\u3001\u4eac\u4e1c\u3001\u4e03\u725b\u4e91\u7b49\uff1b\u957f\u671f\u88ab Python \u7edf\u6cbb\u7684\u6846\u67b6\u722c\u866b\u9886\u57df\u4e5f\u56e0\u4e3a\u7b80\u5355\u800c\u6613\u7528\u7684\u722c\u866b\u6846\u67b6 Colly \u7684\u5d1b\u8d77\u800c\u4e0d\u65ad\u53d7\u5230 Golang \u7684\u6311\u6218\u3002Golang \u5df2\u7ecf\u6210\u4e3a\u4e86\u5982\u4eca\u5927\u591a\u6570\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u6700\u60f3\u5b66\u4e60\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u4e0b\u56fe\u662f HackerRank \u5728 2020 \u5e74\u8c03\u67e5\u7a0b\u5e8f\u5458\u6280\u80fd\u7684\u76f8\u5173\u7ed3\u679c\u3002 \u90a3\u4e48\uff0cGo \u8bed\u8a00\u771f\u7684\u662f\u540e\u7aef\u5f00\u53d1\u4eba\u5458\u7684\u6551\u547d\u826f\u836f\u5462\uff1f\u5b83\u662f\u5426\u80fd\u591f\u6709\u6548\u63d0\u9ad8\u7a0b\u5e8f\u5458\u4eec\u7684\u6280\u672f\u5b9e\u529b\u548c\u5f00\u53d1\u6548\u7387\uff0c\u4ece\u800c\u5e2e\u52a9\u4ed6\u4eec\u5728\u804c\u573a\u4e0a\u66f4\u8fdb\u4e00\u6b65\u5462\uff1fGo \u8bed\u8a00\u771f\u7684\u503c\u5f97\u6211\u4eec\u82b1\u5927\u91cf\u65f6\u95f4\u6df1\u5165\u5b66\u4e60\u4e48\uff1f\u672c\u6587\u5c06\u8be6\u7ec6\u4ecb\u7ecd Golang \u7684\u8bed\u8a00\u7279\u70b9\u4ee5\u53ca\u5b83\u7684\u4f18\u7f3a\u70b9\u548c\u9002\u7528\u573a\u666f\uff0c\u5e26\u7740\u4e0a\u8ff0\u51e0\u4e2a\u7591\u95ee\uff0c\u4e3a\u8bfb\u8005\u5206\u6790 Go \u8bed\u8a00\u7684\u5404\u4e2a\u65b9\u9762\uff0c\u4ee5\u5e2e\u52a9\u521d\u5165 IT \u884c\u4e1a\u7684\u7a0b\u5e8f\u5458\u4ee5\u53ca\u5bf9 Go \u611f\u5174\u8da3\u7684\u5f00\u53d1\u8005\u8fdb\u4e00\u6b65\u4e86\u89e3\u8fd9\u4e2a\u70ed\u95e8\u8bed\u8a00\u3002 Golang \u7b80\u4ecb Golang \u8bde\u751f\u4e8e\u4e92\u8054\u7f51\u5de8\u5934 Google\uff0c\u800c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u5de7\u5408\u3002\u6211\u4eec\u90fd\u77e5\u9053\uff0cGoogle \u6709\u4e00\u4e2a 20% \u505a\u4e1a\u4f59\u9879\u76ee\uff08Side Project\uff09\u7684\u4f01\u4e1a\u6587\u5316\uff0c\u5141\u8bb8\u5de5\u7a0b\u5e08\u4eec\u80fd\u591f\u5728\u8f7b\u677e\u7684\u73af\u5883\u4e0b\u521b\u9020\u4e00\u4e9b\u5177\u6709\u98a0\u8986\u6027\u521b\u65b0\u7684\u4ea7\u54c1\u3002\u800c Golang \u4e5f\u6b63\u662f\u5728\u8fd9 20% \u65f6\u95f4\u4e2d\u4e0d\u65ad\u5b75\u5316\u51fa\u6765\u3002Go \u8bed\u8a00\u7684\u521b\u59cb\u8005\u4e5f\u662f IT \u754c\u5185\u5927\u540d\u9f0e\u9f0e\u7684\u884c\u4e1a\u9886\u8896\uff0c\u5305\u62ec Unix \u6838\u5fc3\u56e2\u961f\u6210\u5458 Rob Pike\u3001C \u8bed\u8a00\u4f5c\u8005 Ken Thompson\u3001V8 \u5f15\u64ce\u6838\u5fc3\u8d21\u732e\u8005 Robert Griesemer\u3002Go \u8bed\u8a00\u88ab\u5927\u4f17\u6240\u719f\u77e5\u8fd8\u662f\u6e90\u4e8e\u5bb9\u5668\u6280\u672f Docker \u5728 2014 \u5e74\u88ab\u5f00\u6e90\u540e\u7684\u7206\u53d1\u5f0f\u53d1\u5c55\u3002\u4e4b\u540e\uff0cGo \u8bed\u8a00\u56e0\u4e3a\u5176\u7b80\u5355\u7684\u8bed\u6cd5\u4ee5\u53ca\u8fc5\u731b\u7684\u7f16\u8bd1\u901f\u5ea6\u53d7\u5230\u5927\u91cf\u5f00\u53d1\u8005\u7684\u8ffd\u6367\uff0c\u4e5f\u8bde\u751f\u4e86\u5f88\u591a\u4f18\u79c0\u7684\u9879\u76ee\uff0c\u4f8b\u5982 Kubernetes\u3002 Go \u8bed\u8a00\u76f8\u5bf9\u4e8e\u5176\u4ed6\u4f20\u7edf\u70ed\u95e8\u7f16\u7a0b\u8bed\u8a00\u6765\u8bf4\uff0c\u6709\u5f88\u591a\u4f18\u70b9\uff0c\u7279\u522b\u662f\u5176\u9ad8\u6548\u7f16\u8bd1\u901f\u5ea6\u548c\u5929\u7136\u5e76\u53d1\u7279\u6027\uff0c\u8ba9\u5176\u6210\u4e3a\u5feb\u901f\u5f00\u53d1\u5206\u5e03\u5f0f\u5e94\u7528\u7684\u9996\u9009\u8bed\u8a00\u3002Go \u8bed\u8a00\u662f\u9759\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u4e5f\u5c31\u662f\u8bf4 Go \u8bed\u8a00\u8ddf Java\u3001C# \u4e00\u6837\u9700\u8981\u7f16\u8bd1\uff0c\u800c\u4e14\u6709\u5b8c\u5907\u7684\u7c7b\u578b\u7cfb\u7edf\uff0c\u53ef\u4ee5\u6709\u6548\u51cf\u5c11\u56e0\u7c7b\u578b\u4e0d\u4e00\u81f4\u5bfc\u81f4\u7684\u4ee3\u7801\u8d28\u91cf\u95ee\u9898\u3002\u56e0\u6b64\uff0cGo \u8bed\u8a00\u975e\u5e38\u9002\u5408\u6784\u5efa\u5bf9\u7a33\u5b9a\u6027\u548c\u7075\u6d3b\u6027\u5747\u6709\u8981\u6c42\u7684\u5927\u578b IT \u7cfb\u7edf\uff0c\u8fd9\u4e5f\u662f\u5f88\u591a\u5927\u578b\u4e92\u8054\u7f51\u516c\u53f8\u7528 Golang \u91cd\u6784\u8001\u4ee3\u7801\u7684\u91cd\u8981\u539f\u56e0\uff1a\u4f20\u7edf\u7684\u9759\u6001 OOP \u8bed\u8a00\uff08\u4f8b\u5982 Java\u3001C#\uff09\u7a33\u5b9a\u6027\u9ad8\u4f46\u7f3a\u4e4f\u7075\u6d3b\u6027\uff1b\u800c\u52a8\u6001\u8bed\u8a00\uff08\u4f8b\u5982 PHP\u3001Python\u3001Ruby\u3001Node.js\uff09\u7075\u6d3b\u6027\u5f3a\u4f46\u7f3a\u4e4f\u7a33\u5b9a\u6027\u3002\u56e0\u6b64\uff0c\u201c\u718a\u638c\u548c\u9c7c\u517c\u5f97\u201d \u7684 Golang\uff0c\u53d7\u5230\u5f00\u53d1\u8005\u4eec\u7684\u8ffd\u6367\u662f\u81ea\u7136\u800c\u7136\u7684\u4e8b\u60c5\uff0c\u6bd5\u7adf\uff0c\u201c\u5929\u4e0b\u82e6 Java/PHP/Python/Ruby \u4eec\u4e45\u77e3\u201c\u3002 \u4e0d\u8fc7\uff0cGo \u8bed\u8a00\u5e76\u4e0d\u662f\u6ca1\u6709\u7f3a\u70b9\u3002\u7528\u8fa9\u8bc1\u6cd5\u7684\u601d\u7ef4\u65b9\u5f0f\u53ef\u4ee5\u63a8\u6d4b\uff0cGolang \u7684\u4e00\u4e9b\u7a81\u51fa\u7279\u6027\u5c06\u6210\u4e3a\u5b83\u7684\u53cc\u5203\u5251\u3002\u4f8b\u5982\uff0cGolang \u8bed\u6cd5\u7b80\u5355\u7684\u4f18\u52bf\u7279\u70b9\u5c06\u9650\u5236\u5b83\u5904\u7406\u590d\u6742\u95ee\u9898\u7684\u80fd\u529b\u3002\u5c24\u5176\u662f Go \u8bed\u8a00\u7f3a\u4e4f\u6cdb\u578b\uff08Generics\uff09\u7684\u95ee\u9898\uff0c\u5bfc\u81f4\u5b83\u6784\u5efa\u901a\u7528\u6846\u67b6\u7684\u590d\u6742\u5ea6\u5927\u589e\u3002\u867d\u7136\u8fd9\u4e2a\u7a81\u51fa\u95ee\u9898\u5728 2.0 \u7248\u672c\u5f88\u53ef\u80fd\u4f1a\u6709\u6548\u89e3\u51b3\uff0c\u4f46\u8fd9\u4e5f\u53cd\u6620\u51fa\u6765\u660e\u661f\u7f16\u7a0b\u8bed\u8a00\u4e5f\u4f1a\u6709\u7f3a\u70b9\u3002\u5f53\u7136\uff0cGo \u7684\u7f3a\u70b9\u8fd8\u4e0d\u6b62\u4e8e\u6b64\uff0cGo \u8bed\u8a00\u4f7f\u7528\u8005\u8fd8\u4f1a\u5410\u69fd\u5176\u5570\u55e6\u7684\u9519\u8bef\u5904\u7406\u65b9\u5f0f\uff08Error Handling\uff09\u3001\u7f3a\u5c11\u4e25\u683c\u7ea6\u675f\u7684\u9e2d\u5b50\u7c7b\u578b\uff08Duck Typing\uff09\u3001\u65e5\u671f\u683c\u5f0f\u95ee\u9898\u7b49\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u5c06\u4ece Golang \u8bed\u8a00\u7279\u70b9\u5f00\u59cb\uff0c\u7531\u6d45\u5165\u6df1\u591a\u7ef4\u5ea6\u6df1\u5165\u5206\u6790 Golang \u7684\u4f18\u7f3a\u70b9\u4ee5\u53ca\u9879\u76ee\u9002\u7528\u573a\u666f\u3002 \u8bed\u8a00\u7279\u70b9 \u7b80\u6d01\u7684\u8bed\u6cd5\u7279\u5f81 Go \u8bed\u8a00\u7684\u8bed\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u81f3\u5c11\u5728\u53d8\u91cf\u58f0\u660e\u3001\u7ed3\u6784\u4f53\u58f0\u660e\u3001\u51fd\u6570\u5b9a\u4e49\u7b49\u65b9\u9762\u663e\u5f97\u975e\u5e38\u7b80\u6d01\u3002 \u53d8\u91cf\u7684\u58f0\u660e\u4e0d\u50cf Java \u6216 C \u90a3\u6837\u5570\u55e6\uff0c\u5728 Golang \u4e2d\u53ef\u4ee5\u7528 := \u8fd9\u4e2a\u8bed\u6cd5\u6765\u58f0\u660e\u65b0\u53d8\u91cf\u3002\u4f8b\u5982\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5f53\u4f60\u76f4\u63a5\u4f7f\u7528 := \u6765\u5b9a\u4e49\u53d8\u91cf\u65f6\uff0cGo \u4f1a\u81ea\u52a8\u5c06\u8d4b\u503c\u5bf9\u8c61\u7684\u7c7b\u578b\u58f0\u660e\u4e3a\u8d4b\u503c\u6765\u6e90\u7684\u7c7b\u578b\uff0c\u8fd9\u8282\u7701\u4e86\u5927\u91cf\u7684\u4ee3\u7801\u3002 func main() { valInt := 1 // \u81ea\u52a8\u63a8\u65ad int \u7c7b\u578b valStr := \"hello\" // \u81ea\u52a8\u63a8\u65ad\u4e3a string \u7c7b\u578b valBool := false // \u81ea\u52a8\u63a8\u65ad\u4e3a bool \u7c7b\u578b } Golang \u8fd8\u6709\u5f88\u591a\u5e2e\u4f60\u8282\u7701\u4ee3\u7801\u7684\u5730\u65b9\u3002\u4f60\u53ef\u4ee5\u53d1\u73b0 Go \u4e2d\u4e0d\u4f1a\u5f3a\u5236\u8981\u6c42\u7528 new \u8fd9\u4e2a\u5173\u952e\u8bcd\u6765\u751f\u6210\u67d0\u4e2a\u7c7b\uff08Class\uff09\u7684\u65b0\u5b9e\u4f8b\uff08Instance\uff09\u3002\u800c\u4e14\uff0c\u5bf9\u4e8e\u516c\u5171\u548c\u79c1\u6709\u5c5e\u6027\uff08\u53d8\u91cf\u548c\u65b9\u6cd5\uff09\u7684\u7ea6\u5b9a\u4e0d\u518d\u4f7f\u7528\u4f20\u7edf\u7684 public \u548c private \u5173\u952e\u8bcd\uff0c\u800c\u662f\u76f4\u63a5\u7528\u5c5e\u6027\u53d8\u91cf\u9996\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u6765\u533a\u5206\u3002\u4e0b\u9762\u4e00\u4e9b\u4f8b\u5b50\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u7406\u89e3\u8fd9\u4e9b\u7279\u70b9\u3002 // \u5b9a\u4e49\u4e00\u4e2a struct \u7c7b type SomeClass struct { PublicVariable string // \u516c\u5171\u53d8\u91cf privateVariable string // \u79c1\u6709\u53d8\u91cf } // \u516c\u5171\u65b9\u6cd5 func (c *SomeClass) PublicMethod() (result string) { return \"This can be called by external modules\" } // \u79c1\u6709\u65b9\u6cd5 func (c *SomeClass) privateMethod() (result string) { return \"This can only be called in SomeClass\" } func main() { // \u751f\u6210\u5b9e\u4f8b someInstance := SomeClass{ PublicVariable: \"hello\", privateVariable: \"world\", } } \u5982\u679c\u4f60\u7528 Java \u6765\u5b9e\u73b0\u4e0a\u8ff0\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u53ef\u80fd\u4f1a\u770b\u5230\u5197\u957f\u7684 .java \u7c7b\u6587\u4ef6\uff0c\u4f8b\u5982\u8fd9\u6837\u3002 // SomeClass.java public SomeClass { public String PublicVariable; // \u516c\u5171\u53d8\u91cf private String privateVariable; // \u79c1\u6709\u53d8\u91cf // \u6784\u9020\u51fd\u6570 public SomeClass(String val1, String val2) { this.PublicVariable = val1; this.privateVariable = val2; } // \u516c\u5171\u65b9\u6cd5 public String PublicMethod() { return \"This can be called by external modules\"; } // \u79c1\u6709\u65b9\u6cd5 public String privateMethod() { return \"This can only be called in SomeClass\"; } } ... // Application.java public Application { public static void main(String[] args) { // \u751f\u6210\u5b9e\u4f8b SomeClass someInstance = new SomeClass(\"hello\", \"world\"); } } \u53ef\u4ee5\u770b\u5230\uff0c\u5728 Java \u4ee3\u7801\u4e2d\u9664\u4e86\u5bb9\u6613\u770b\u82b1\u773c\u7684\u591a\u5c42\u82b1\u62ec\u53f7\u4ee5\u5916\uff0c\u8fd8\u5145\u65a5\u7740\u5927\u91cf\u7684 public\u3001private\u3001static\u3001this \u7b49\u4fee\u9970\u7528\u7684\u5173\u952e\u8bcd\uff0c\u663e\u5f97\u5f02\u5e38\u5570\u55e6\uff1b\u800c Golang \u4ee3\u7801\u4e2d\u5219\u9760\u7b80\u5355\u7684\u7ea6\u5b9a\uff0c\u4f8b\u5982\u9996\u5b57\u6bcd\u5927\u5c0f\u5199\uff0c\u907f\u514d\u4e86\u5f88\u591a\u91cd\u590d\u6027\u7684\u4fee\u9970\u8bcd\u3002\u5f53\u7136\uff0cJava \u548c Go \u5728\u7c7b\u578b\u7cfb\u7edf\u4e0a\u8fd8\u662f\u6709\u4e00\u4e9b\u533a\u522b\u7684\uff0c\u8fd9\u4e5f\u5bfc\u81f4 Go \u5728\u5904\u7406\u590d\u6742\u95ee\u9898\u663e\u5f97\u6709\u4e9b\u529b\u4e0d\u4ece\u5fc3\uff0c\u8fd9\u662f\u540e\u8bdd\uff0c\u540e\u9762\u518d\u8ba8\u8bba\u3002\u603b\u4e4b\uff0c\u7ed3\u8bba\u5c31\u662f Go \u7684\u8bed\u6cd5\u5728\u9759\u6001\u7c7b\u578b\u7f16\u7a0b\u8bed\u8a00\u4e2d\u975e\u5e38\u7b80\u6d01\u3002 \u5185\u7f6e\u5e76\u53d1\u7f16\u7a0b Go \u8bed\u8a00\u4e4b\u6240\u4ee5\u6210\u4e3a\u5206\u5e03\u5f0f\u5e94\u7528\u7684\u9996\u9009\uff0c\u9664\u4e86\u5b83\u6027\u80fd\u5f3a\u5927\u4ee5\u5916\uff0c\u5176\u6700\u4e3b\u8981\u7684\u539f\u56e0\u5c31\u662f\u5b83\u5929\u7136\u7684\u5e76\u53d1\u7f16\u7a0b\u3002\u8fd9\u4e2a\u5e76\u53d1\u7f16\u7a0b\u7279\u6027\u4e3b\u8981\u6765\u81ea\u4e8e Golang \u4e2d\u7684\u534f\u7a0b\uff08Goroutine\uff09\u548c\u901a\u9053\uff08Channel\uff09\u3002\u4e0b\u9762\u662f\u4f7f\u7528\u534f\u7a0b\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002 func asyncTask() { fmt.Printf(\"This is an asynchronized task\") } func syncTask() { fmt.Printf(\"This is a synchronized task\") } func main() { go asyncTask() // \u5f02\u6b65\u6267\u884c\uff0c\u4e0d\u963b\u585e syncTask() // \u540c\u6b65\u6267\u884c\uff0c\u963b\u585e go asyncTask() // \u7b49\u5f85\u524d\u9762 syncTask \u5b8c\u6210\u4e4b\u540e\uff0c\u518d\u5f02\u6b65\u6267\u884c\uff0c\u4e0d\u963b\u585e } \u53ef\u4ee5\u770b\u5230\uff0c\u5173\u952e\u8bcd go \u52a0\u51fd\u6570\u8c03\u7528\u53ef\u4ee5\u8ba9\u5176\u4f5c\u4e3a\u4e00\u4e2a\u5f02\u6b65\u51fd\u6570\u6267\u884c\uff0c\u4e0d\u4f1a\u963b\u585e\u540e\u9762\u7684\u4ee3\u7801\u3002\u800c\u5982\u679c\u4e0d\u52a0 go \u5173\u952e\u8bcd\uff0c\u5219\u4f1a\u88ab\u5f53\u6210\u662f\u540c\u6b65\u4ee3\u7801\u6267\u884c\u3002\u5982\u679c\u8bfb\u8005\u719f\u6089 JavaScript \u4e2d\u7684 async/await\u3001Promise \u8bed\u6cd5\uff0c\u751a\u81f3\u662f Java\u3001Python \u4e2d\u7684\u591a\u7ebf\u7a0b\u5f02\u6b65\u7f16\u7a0b\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u4eec\u8ddf Go \u5f02\u6b65\u7f16\u7a0b\u7684\u7b80\u5355\u7a0b\u5ea6\u4e0d\u662f\u4e00\u4e2a\u91cf\u7ea7\u7684\uff01 \u5f02\u6b65\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u534f\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u53ef\u4ee5\u7528 Go \u8bed\u8a00\u7279\u6709\u7684\u901a\u9053\u6765\u5b9e\u73b0\u3002\u4e0b\u9762\u662f\u5173\u4e8e\u901a\u9053\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002 func longTask(signal chan int) { // \u4e0d\u5e26\u53c2\u6570\u7684 for // \u76f8\u5f53\u4e8e while \u5faa\u73af for { // \u63a5\u6536 signal \u901a\u9053\u4f20\u503c v := <- signal // \u5982\u679c\u63a5\u6536\u503c\u4e3a 1\uff0c\u505c\u6b62\u5faa\u73af if v == 1 { break } time.Sleep(1 * Second) } } func main() { // \u58f0\u660e\u901a\u9053 sig := make(chan int) // \u5f02\u6b65\u8c03\u7528 longTask go longTask(sig) // \u7b49\u5f85 1 \u79d2\u949f time.Sleep(1 * time.Second) // \u5411\u901a\u9053 sig \u4f20\u503c sig <- 1 // \u7136\u540e longTask \u4f1a\u63a5\u6536 sig \u4f20\u503c\uff0c\u7ec8\u6b62\u5faa\u73af } \u9762\u5411\u63a5\u53e3\u7f16\u7a0b Go \u8bed\u8a00\u4e0d\u662f\u4e25\u683c\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff08OOP\uff09\uff0c\u5b83\u91c7\u7528\u7684\u662f\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\uff08IOP\uff09\uff0c\u662f\u76f8\u5bf9\u4e8e OOP \u66f4\u5148\u8fdb\u7684\u7f16\u7a0b\u6a21\u5f0f\u3002\u4f5c\u4e3a OOP \u4f53\u7cfb\u7684\u4e00\u90e8\u5206\uff0cIOP \u66f4\u52a0\u5f3a\u8c03\u89c4\u5219\u548c\u7ea6\u675f\uff0c\u4ee5\u53ca\u63a5\u53e3\u7c7b\u578b\u65b9\u6cd5\u7684\u7ea6\u5b9a\uff0c\u4ece\u800c\u8ba9\u5f00\u53d1\u4eba\u5458\u5c3d\u53ef\u80fd\u7684\u5173\u6ce8\u66f4\u62bd\u8c61\u7684\u7a0b\u5e8f\u903b\u8f91\uff0c\u800c\u4e0d\u662f\u5728\u66f4\u7ec6\u8282\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e0a\u6d6a\u8d39\u65f6\u95f4\u3002\u5f88\u591a\u5927\u578b\u9879\u76ee\u91c7\u7528\u7684\u90fd\u662f IOP \u7684\u7f16\u7a0b\u6a21\u5f0f\u3002\u5982\u679c\u60f3\u4e86\u89e3\u66f4\u591a\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\uff0c\u8bf7\u67e5\u770b \u201c\u7801\u4e4b\u9053\u201d \u4e2a\u4eba\u6280\u672f\u535a\u5ba2\u7684\u5f80\u671f\u6587\u7ae0\u300a\u4e3a\u4ec0\u4e48\u8bf4 TypeScript \u662f\u5f00\u53d1\u5927\u578b\u524d\u7aef\u9879\u76ee\u7684\u5fc5\u5907\u8bed\u8a00\u300b\uff0c\u5176\u4e2d\u6709\u5173\u4e8e\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\u7684\u8be6\u7ec6\u8bb2\u89e3\u3002 Go \u8bed\u8a00\u8ddf TypeScript \u4e00\u6837\uff0c\u4e5f\u662f\u91c7\u7528\u9e2d\u5b50\u7c7b\u578b\u7684\u65b9\u5f0f\u6765\u6821\u9a8c\u63a5\u53e3\u7ee7\u627f\u3002\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u53ef\u4ee5\u63cf\u8ff0 Go \u8bed\u8a00\u7684\u9e2d\u5b50\u7c7b\u578b\u7279\u6027\u3002 // \u5b9a\u4e49 Animal \u63a5\u53e3 interface Animal { Eat() // \u58f0\u660e Eat \u65b9\u6cd5 Move() // \u58f0\u660e Move \u65b9\u6cd5 } // ==== \u5b9a\u4e49 Dog Start ==== // \u5b9a\u4e49 Dog \u7c7b type Dog struct { } // \u5b9e\u73b0 Eat \u65b9\u6cd5 func (d *Dog) Eat() { fmt.Printf(\"Eating bones\") } // \u5b9e\u73b0 Move \u65b9\u6cd5 func (d *Dog) Move() { fmt.Printf(\"Moving with four legs\") } // ==== \u5b9a\u4e49 Dog End ==== // ==== \u5b9a\u4e49 Human Start ==== // \u5b9a\u4e49 Human \u7c7b type Human struct { } // \u5b9e\u73b0 Eat \u65b9\u6cd5 func (h *Human) Eat() { fmt.Printf(\"Eating rice\") } // \u5b9e\u73b0 Move \u65b9\u6cd5 func (h *Human) Move() { fmt.Printf(\"Moving with two legs\") } // ==== \u5b9a\u4e49 Human End ==== \u53ef\u4ee5\u770b\u5230\uff0c\u867d\u7136 Go \u8bed\u8a00\u53ef\u4ee5\u5b9a\u4e49\u63a5\u53e3\uff0c\u4f46\u8ddf Java \u4e0d\u540c\u7684\u662f\uff0cGo \u8bed\u8a00\u4e2d\u6ca1\u6709\u663e\u793a\u58f0\u660e\u63a5\u53e3\u5b9e\u73b0\uff08Implementation\uff09\u7684\u5173\u952e\u8bcd\u4fee\u9970\u8bed\u6cd5\u3002\u5728 Go \u8bed\u8a00\u4e2d\uff0c\u5982\u679c\u8981\u7ee7\u627f\u4e00\u4e2a\u63a5\u53e3\uff0c\u4f60\u53ea\u9700\u8981\u5728\u7ed3\u6784\u4f53\u4e2d\u5b9e\u73b0\u8be5\u63a5\u53e3\u58f0\u660e\u7684\u6240\u6709\u65b9\u6cd5\u3002\u8fd9\u6837\uff0c\u5bf9\u4e8e Go \u7f16\u8bd1\u5668\u6765\u8bf4\u4f60\u5b9a\u4e49\u7684\u7c7b\u5c31\u76f8\u5f53\u4e8e\u7ee7\u627f\u4e86\u8be5\u63a5\u53e3\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u89c4\u5b9a\uff0c\u53ea\u8981\u65e2\u80fd\u5403\uff08Eat\uff09\u53c8\u80fd\u6d3b\u52a8\uff08Move\uff09\u7684\u4e1c\u897f\u5c31\u662f\u52a8\u7269\uff08Animal\uff09\u3002\u800c\u72d7\uff08Dog\uff09\u548c\u4eba\uff08Human\uff09\u6070\u5de7\u90fd\u53ef\u4ee5\u5403\u548c\u52a8\uff0c\u56e0\u6b64\u5b83\u4eec\u90fd\u88ab\u7b97\u4f5c\u52a8\u7269\u3002\u8fd9\u79cd\u4f9d\u9760\u5b9e\u73b0\u65b9\u6cd5\u5339\u914d\u5ea6\u7684\u7ee7\u627f\u65b9\u5f0f\uff0c\u5c31\u662f\u9e2d\u5b50\u7c7b\u578b\uff1a\u5982\u679c\u4e00\u4e2a\u52a8\u7269\u770b\u8d77\u6765\u50cf\u9e2d\u5b50\uff0c\u53eb\u8d77\u6765\u4e5f\u50cf\u9e2d\u5b50\uff0c\u90a3\u5b83\u4e00\u5b9a\u662f\u9e2d\u5b50\u3002\u8fd9\u79cd\u9e2d\u5b50\u7c7b\u578b\u76f8\u5bf9\u4e8e\u4f20\u7edf OOP \u7f16\u7a0b\u8bed\u8a00\u663e\u5f97\u66f4\u7075\u6d3b\u3002\u4f46\u662f\uff0c\u540e\u9762\u6211\u4eec\u4f1a\u8ba8\u8bba\u5230\uff0c\u8fd9\u79cd\u7f16\u7a0b\u65b9\u5f0f\u4f1a\u5e26\u6765\u4e00\u4e9b\u9ebb\u70e6\u3002 \u9519\u8bef\u5904\u7406 Go \u8bed\u8a00\u7684\u9519\u8bef\u5904\u7406\u662f\u81ed\u540d\u662d\u8457\u7684\u5570\u55e6\u3002\u8fd9\u91cc\u5148\u7ed9\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\u3002 package main import \"fmt\" func isValid(text string) (valid bool, err error){ if text == \"\" { return false, error(\"text cannot be empty\") } return text == \"valid text\", nil } func validateForm(form map[string]string) (res bool, err error) { for _, text := range form { valid, err := isValid(text) if err != nil { return false, err } if !valid { return false, nil } } return true, nil } func submitForm(form map[string]string) (err error) { if res, err := validateForm(form); err != nil || !res { return error(\"submit error\") } fmt.Printf(\"submitted\") return nil } func main() { form := map[string]string{ \"field1\": \"\", \"field2\": \"invalid text\", \"field2\": \"valid text\", } if err := submitForm(form); err != nil { panic(err) } } \u867d\u7136\u4e0a\u9762\u6574\u4e2a\u4ee3\u7801\u662f\u865a\u6784\u7684\uff0c\u4f46\u53ef\u4ee5\u4ece\u4e2d\u770b\u51fa\uff0cGo \u4ee3\u7801\u4e2d\u5145\u65a5\u7740 if err := \u2026; err != nil { \u2026 } \u4e4b\u7c7b\u7684\u9519\u8bef\u5224\u65ad\u8bed\u53e5\u3002\u8fd9\u662f\u56e0\u4e3a Go \u8bed\u8a00\u8981\u6c42\u5f00\u53d1\u8005\u81ea\u5df1\u7ba1\u7406\u9519\u8bef\uff0c\u4e5f\u5c31\u662f\u5728\u51fd\u6570\u4e2d\u7684\u9519\u8bef\u9700\u8981\u663e\u5f0f\u629b\u51fa\u6765\uff0c\u5426\u5219 Go \u7a0b\u5e8f\u4e0d\u4f1a\u505a\u4efb\u4f55\u9519\u8bef\u5904\u7406\u3002\u56e0\u4e3a Go \u6ca1\u6709\u4f20\u7edf\u7f16\u7a0b\u8bed\u8a00\u7684 try/catch \u9488\u5bf9\u9519\u8bef\u5904\u7406\u7684\u8bed\u6cd5\uff0c\u6240\u4ee5\u5728\u9519\u8bef\u7ba1\u7406\u4e0a\u7f3a\u5c11\u7075\u6d3b\u5ea6\uff0c\u5bfc\u81f4\u4e86 \u201cerr \u6ee1\u5929\u98de\u201d \u7684\u5c40\u9762\u3002 \u4e0d\u8fc7\uff0c\u8fa9\u8bc1\u6cd5\u5219\u544a\u8bc9\u6211\u4eec\uff0c\u8fd9\u79cd\u505a\u6cd5\u4e5f\u662f\u6709\u597d\u5904\u7684\u3002\u7b2c\u4e00\uff0c\u5b83\u5f3a\u5236\u8981\u6c42 Go \u8bed\u8a00\u5f00\u53d1\u8005\u4ece\u4ee3\u7801\u5c42\u9762\u6765\u89c4\u8303\u9519\u8bef\u7684\u7ba1\u7406\u65b9\u5f0f\uff0c\u8fd9\u9a71\u4f7f\u5f00\u53d1\u8005\u5199\u51fa\u66f4\u5065\u58ee\u7684\u4ee3\u7801\uff1b\u7b2c\u4e8c\uff0c\u8fd9\u79cd\u663e\u5f0f\u8fd4\u56de\u9519\u8bef\u7684\u65b9\u5f0f\u907f\u514d\u4e86 \u201ctry/catch \u4e00\u628a\u68ad\u201d\uff0c\u56e0\u4e3a\u8fd9\u79cd \u201c\u4e00\u65f6\u723d\u201d \u7684\u505a\u6cd5\u5f88\u53ef\u80fd\u5bfc\u81f4 Bug \u65e0\u6cd5\u51c6\u786e\u5b9a\u4f4d\uff0c\u4ece\u800c\u4ea7\u751f\u5f88\u591a\u4e0d\u53ef\u9884\u6d4b\u7684\u95ee\u9898\uff1b\u7b2c\u4e09\uff0c\u7531\u4e8e\u6ca1\u6709 try/catch \u7684\u62ec\u53f7\u6216\u989d\u5916\u7684\u4ee3\u7801\u5757\uff0cGo \u7a0b\u5e8f\u4ee3\u7801\u6574\u4f53\u770b\u8d77\u6765\u66f4\u6e05\u723d\uff0c\u53ef\u8bfb\u6027\u8f83\u5f3a\u3002 \u5176\u4ed6 Go \u8bed\u8a00\u80af\u5b9a\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7279\u6027\uff0c\u4f46\u7b14\u8005\u8ba4\u4e3a\u4ee5\u4e0a\u7684\u7279\u6027\u662f Go \u8bed\u8a00\u4e2d\u6bd4\u8f83\u6709\u7279\u8272\u7684\uff0c\u662f\u533a\u5206\u5ea6\u6bd4\u8f83\u5f3a\u7684\u7279\u6027\u3002Go \u8bed\u8a00\u5176\u4ed6\u4e00\u4e9b\u7279\u6027\u8fd8\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u5982\u4e0b\u5185\u5bb9\u3002 \u7f16\u8bd1\u8fc5\u901f \u8de8\u5e73\u53f0 defer \u5ef6\u8fdf\u6267\u884c select/case \u901a\u9053\u9009\u62e9 \u76f4\u63a5\u7f16\u8bd1\u6210\u53ef\u6267\u884c\u7a0b\u5e8f \u975e\u5e38\u89c4\u4f9d\u8d56\u7ba1\u7406\uff08\u53ef\u4ee5\u76f4\u63a5\u5f15\u7528 Github \u4ed3\u5e93\u4f5c\u4e3a\u4f9d\u8d56\uff0c\u4f8b\u5982 import \"github.com/crawlab-team/go-trace\"\uff09 \u975e\u5e38\u89c4\u65e5\u671f\u683c\u5f0f\uff08\u683c\u5f0f\u4e3a \u201c2006-01-02 15:04:05\u201d\uff0c\u4f60\u6ca1\u770b\u9519\uff0c\u636e\u8bf4\u8fd9\u5c31\u662f Golang \u7684\u521b\u59cb\u65f6\u95f4\uff01\uff09 \u4f18\u7f3a\u70b9\u6982\u8ff0 \u524d\u9762\u4ecb\u7ecd\u4e86 Go \u7684\u5f88\u591a\u8bed\u8a00\u7279\u6027\uff0c\u60f3\u5fc5\u8bfb\u8005\u5df2\u7ecf\u5bf9 Golang \u6709\u4e86\u4e00\u4e9b\u57fa\u672c\u7684\u4e86\u89e3\u3002\u5176\u4e2d\u7684\u4e00\u4e9b\u8bed\u8a00\u7279\u6027\u4e5f\u6697\u793a\u4e86\u5b83\u76f8\u5bf9\u4e8e\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u7684\u4f18\u7f3a\u70b9\u3002Go \u8bed\u8a00\u867d\u7136\u73b0\u5728\u5f88\u706b\uff0c\u5728\u79f0\u8d5e\u5e76\u62e5\u62b1 Golang \u7684\u540c\u65f6\uff0c\u4e0d\u5f97\u4e0d\u4e86\u89e3\u5b83\u7684\u4e00\u4e9b\u7f3a\u70b9\u3002 \u8fd9\u91cc\u7b14\u8005\u4e0d\u6253\u7b97\u957f\u7bc7\u5927\u8bba\u7684\u89e3\u6790 Go \u8bed\u8a00\u7684\u4f18\u52a3\uff0c\u800c\u662f\u5c06\u5176\u4e2d\u76f8\u5173\u7684\u4e00\u4e9b\u4e8b\u5b9e\u5217\u4e3e\u51fa\u6765\uff0c\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u5224\u65ad\u3002\u4ee5\u4e0b\u662f\u7b14\u8005\u603b\u7ed3\u7684 Golang \u8bed\u8a00\u7279\u6027\u7684\u4e0d\u5b8c\u6574\u4f18\u7f3a\u70b9\u5bf9\u6bd4\u5217\u8868\u3002 \u5176\u5b9e\uff0c\u6bcf\u4e00\u4e2a\u7279\u6027\u5728\u67d0\u79cd\u60c5\u5883\u4e0b\u90fd\u6709\u5176\u76f8\u5e94\u7684\u4f18\u52bf\u548c\u52a3\u52bf\uff0c\u4e0d\u80fd\u4e00\u6982\u800c\u8bba\u3002\u5c31\u50cf Go \u8bed\u8a00\u91c7\u7528\u7684\u9759\u6001\u7c7b\u578b\u548c\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\uff0c\u65e2\u4e0d\u7f3a\u5c11\u7c7b\u578b\u7ea6\u675f\uff0c\u4e5f\u4e0d\u50cf\u4e25\u683c OOP \u90a3\u6837\u5197\u957f\u7e41\u6742\uff0c\u662f\u4ecb\u4e8e\u52a8\u6001\u8bed\u8a00\u548c\u4f20\u7edf\u9759\u6001\u7c7b\u578b OOP \u8bed\u8a00\u4e4b\u95f4\u7684\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u3002\u8fd9\u4e2a\u5b9a\u4f4d\u5728\u63d0\u5347 Golang \u5f00\u53d1\u6548\u7387\u7684\u540c\u65f6\uff0c\u4e5f\u9609\u5272\u4e86\u4e0d\u5c11\u5fc5\u8981 OOP \u8bed\u6cd5\u7279\u6027\uff0c\u4ece\u800c\u7f3a\u4e4f\u5feb\u901f\u6784\u5efa\u901a\u7528\u5de5\u7a0b\u6846\u67b6\u7684\u80fd\u529b\uff08\u8fd9\u91cc\u4e0d\u662f\u8bf4 Go \u65e0\u6cd5\u6784\u5efa\u901a\u7528\u6846\u67b6\uff0c\u800c\u662f\u5b83\u6ca1\u6709 Java\u3001C# \u8fd9\u4e48\u5bb9\u6613\uff09\u3002\u53e6\u5916\uff0cGo \u8bed\u8a00 \u201c\u5947\u8469\u201d \u7684\u9519\u8bef\u5904\u7406\u89c4\u8303\uff0c\u8ba9 Go \u5f00\u53d1\u8005\u4eec\u53c8\u7231\u53c8\u6068\uff1a\u53ef\u4ee5\u5f00\u53d1\u51fa\u66f4\u5065\u58ee\u7684\u5e94\u7528\uff0c\u4f46\u540c\u65f6\u4e5f\u727a\u7272\u4e86\u4e00\u90e8\u5206\u4ee3\u7801\u7684\u7b80\u6d01\u6027\u3002\u8981\u77e5\u9053\uff0cGo \u8bed\u8a00\u7684\u8bbe\u8ba1\u7406\u5ff5\u662f\u4e3a\u4e86 \u201c\u5927\u9053\u81f3\u7b80\u201d\uff0c\u56e0\u6b64\u624d\u4f1a\u5728\u8ffd\u6c42\u9ad8\u6027\u80fd\u7684\u540c\u65f6\u8bbe\u8ba1\u5f97\u5c3d\u53ef\u80fd\u7b80\u5355\u3002 \u65e0\u53ef\u5426\u8ba4\u7684\u662f\uff0cGo \u8bed\u8a00\u5185\u7f6e\u7684\u5e76\u53d1\u652f\u6301\u662f\u975e\u5e38\u8fd1\u5e74\u6765\u975e\u5e38\u521b\u65b0\u7684\u7279\u6027\uff0c\u8fd9\u4e5f\u662f\u5b83\u88ab\u5206\u5e03\u5f0f\u7cfb\u7edf\u5e7f\u6cdb\u91c7\u7528\u7684\u91cd\u8981\u539f\u56e0\u3002\u540c\u65f6\uff0c\u5b83\u76f8\u5bf9\u4e8e\u52a8\u8f84\u7f16\u8bd1\u5341\u51e0\u5206\u949f\u7684 Java \u6765\u8bf4\u662f\u975e\u5e38\u5feb\u7684\u3002\u6b64\u5916\uff0cGo \u8bed\u8a00\u6ca1\u6709\u56e0\u4e3a\u8bed\u6cd5\u7b80\u5355\u800c\u727a\u7272\u4e86\u7a33\u5b9a\u6027\uff1b\u76f8\u53cd\uff0c\u5b83\u4ece\u7b80\u5355\u7684\u7ea6\u675f\u89c4\u8303\u4e86\u6574\u4e2a Go \u9879\u76ee\u4ee3\u7801\u98ce\u683c\u3002\u56e0\u6b64\uff0c \u201c\u5feb\u201d\uff08Fast\uff09\u3001\u201c\u7b80\u201d\uff08Concise\uff09\u3001\u201c\u7a33\u201d\uff08Robust\uff09 \u662f Go \u8bed\u8a00\u7684\u8bbe\u8ba1\u76ee\u7684\u3002\u6211\u4eec\u5728\u5bf9\u5b66\u4e60 Golang \u7684\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u65e0\u8111\u7684\u63a5\u7eb3\u5b83\u7684\u4e00\u5207\uff0c\u800c\u662f\u5e94\u8be5\u6839\u636e\u5b83\u81ea\u8eab\u7684\u7279\u6027\u5224\u65ad\u5728\u5b9e\u9645\u9879\u76ee\u5e94\u7528\u4e2d\u7684\u60c5\u51b5\u3002 \u9002\u7528\u573a\u666f \u7ecf\u8fc7\u524d\u6587\u5173\u4e8e Golang \u5404\u4e2a\u7ef4\u5ea6\u7684\u8ba8\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff1aGo \u8bed\u8a00\u5e76\u4e0d\u662f\u540e\u7aef\u5f00\u53d1\u7684\u4e07\u80fd\u836f\u3002\u5728\u5b9e\u9645\u5f00\u53d1\u5de5\u4f5c\u4e2d\uff0c\u5f00\u53d1\u8005\u5e94\u8be5\u907f\u514d\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u65e0\u8111\u4f7f\u7528 Golang \u4f5c\u4e3a\u540e\u7aef\u5f00\u53d1\u8bed\u8a00\u3002\u76f8\u53cd\uff0c\u5de5\u7a0b\u5e08\u5728\u51b3\u5b9a\u6280\u672f\u9009\u578b\u4e4b\u524d\u5e94\u8be5\u5168\u9762\u4e86\u89e3\u5019\u9009\u6280\u672f\uff08\u8bed\u8a00\u3001\u6846\u67b6\u6216\u67b6\u6784\uff09\u7684\u65b9\u65b9\u9762\u9762\uff0c\u5305\u62ec\u5019\u9009\u6280\u672f\u4e0e\u4e1a\u52a1\u9700\u6c42\u7684\u5207\u5408\u5ea6\uff0c\u4e0e\u5f00\u53d1\u56e2\u961f\u7684\u878d\u5408\u5ea6\uff0c\u4ee5\u53ca\u5176\u5b66\u4e60\u3001\u5f00\u53d1\u3001\u65f6\u95f4\u6210\u672c\u7b49\u56e0\u7d20\u3002\u7b14\u8005\u5728\u5b66\u4e60\u4e86\u5305\u62ec\u524d\u540e\u7aef\u7684\u4e00\u4e9b\u7f16\u7a0b\u8bed\u8a00\u4e4b\u540e\uff0c\u53d1\u73b0\u5b83\u4eec\u5404\u81ea\u6709\u5404\u81ea\u7684\u4f18\u52bf\uff0c\u4e5f\u6709\u76f8\u5e94\u7684\u52a3\u52bf\u3002\u5982\u679c\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u80fd\u5e7f\u4e3a\u4eba\u77e5\uff0c\u90a3\u5b83\u7edd\u5bf9\u4e0d\u4f1a\u662f\u4e00\u95e8\u7cdf\u7cd5\u8bed\u8a00\u3002\u56e0\u6b64\uff0c\u7b14\u8005\u4e0d\u4f1a\u65ad\u8a00 \u201cXXX \u662f\u4e16\u754c\u4e0a\u6700\u597d\u7684\u8bed\u8a00\u201c\uff0c\u800c\u662f\u7ed9\u8bfb\u8005\u5206\u4eab\u4e2a\u4eba\u5173\u4e8e\u7279\u5b9a\u5e94\u7528\u573a\u666f\u4e0b\u6280\u672f\u9009\u578b\u7684\u601d\u8def\u3002\u5f53\u7136\uff0c\u672c\u6587\u662f\u9488\u5bf9 Go \u8bed\u8a00\u7684\u6280\u672f\u6587\uff0c\u63a5\u4e0b\u6765\u7b14\u8005\u5c06\u5206\u4eab\u4e00\u4e0b\u4e2a\u4eba\u8ba4\u4e3a Golang \u6700\u9002\u5408\u7684\u5e94\u7528\u573a\u666f\u3002 \u5206\u5e03\u5f0f\u5e94\u7528 Golang \u662f\u975e\u5e38\u9002\u5408\u5728\u5206\u5e03\u5f0f\u5e94\u7528\u573a\u666f\u4e0b\u5f00\u53d1\u7684\u3002\u5206\u5e03\u5f0f\u5e94\u7528\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5c3d\u53ef\u80fd\u591a\u7684\u5229\u7528\u8ba1\u7b97\u8d44\u6e90\u548c\u7f51\u7edc\u5e26\u5bbd\uff0c\u4ee5\u6c42\u6700\u5927\u5316\u7cfb\u7edf\u7684\u6574\u4f53\u6027\u80fd\u548c\u6548\u7387\uff0c\u5176\u4e2d\u91cd\u8981\u7684\u9700\u6c42\u529f\u80fd\u5c31\u662f\u5e76\u53d1\uff08Concurrency\uff09\u3002\u800c Go \u662f\u652f\u6301\u9ad8\u5e76\u53d1\u548c\u5f02\u6b65\u7f16\u7a0b\u65b9\u9762\u7684\u4f7c\u4f7c\u8005\u3002 \u524d\u9762\u5df2\u7ecf\u63d0\u5230\uff0cGo \u8bed\u8a00\u5185\u7f6e\u4e86\u534f\u7a0b\uff08Goroutine\uff09\u548c\u901a\u9053\uff08Channel\uff09\u4e24\u5927\u5e76\u53d1\u7279\u6027\uff0c\u8fd9\u4f7f\u540e\u7aef\u5f00\u53d1\u8005\u8fdb\u884c\u5f02\u6b65\u7f16\u7a0b\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u3002Golang \u4e2d\u8fd8\u5185\u7f6e\u4e86sync \u5e93\uff0c\u5305\u542b Mutex\uff08\u4e92\u65a5\u9501\uff09\u3001WaitGroup\uff08\u7b49\u5f85\u7ec4\uff09\u3001Pool\uff08\u4e34\u65f6\u5bf9\u8c61\u6c60\uff09\u7b49\u63a5\u53e3\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u5728\u5e76\u53d1\u7f16\u7a0b\u4e2d\u80fd\u66f4\u5b89\u5168\u7684\u638c\u63a7 Go \u7a0b\u5e8f\u7684\u5e76\u53d1\u884c\u4e3a\u3002Golang \u8fd8\u6709\u5f88\u591a\u5206\u5e03\u5f0f\u5e94\u7528\u5f00\u53d1\u5de5\u5177\uff0c\u4f8b\u5982\u5206\u5e03\u5f0f\u50a8\u5b58\u7cfb\u7edf\uff08Etcd\u3001SeaweedFS\uff09\u3001RPC \u5e93\uff08gRPC\u3001Thrift\uff09\u3001\u4e3b\u6d41\u6570\u636e\u5e93 SDK\uff08mongo-driver\u3001gnorm\u3001redigo\uff09\u7b49\u3002\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u6709\u6548\u7684\u6784\u5efa\u5206\u5e03\u5f0f\u5e94\u7528\u3002 \u7f51\u7edc\u722c\u866b \u7a0d\u5fae\u4e86\u89e3\u7f51\u7edc\u722c\u866b\u7684\u5f00\u53d1\u8005\u5e94\u8be5\u4f1a\u542c\u8bf4\u8fc7 Scrapy\uff0c\u518d\u4e0d\u6d4e\u4e5f\u662f Python\u3002\u5e02\u9762\u4e0a\u5173\u4e8e Python \u7f51\u7edc\u722c\u866b\u7684\u6280\u672f\u4e66\u7c4d\u6570\u4e0d\u80dc\u6570\uff0c\u4f8b\u5982\u5d14\u5e86\u624d\u7684\u300aPython 3 \u7f51\u7edc\u5f00\u53d1\u5b9e\u6218\u300b\u548c\u97e6\u4e16\u4e1c\u7684\u300aPython 3 \u7f51\u7edc\u722c\u866b\u5b9d\u5178\u300b\u3002\u7528 Python \u7f16\u5199\u7684\u9ad8\u6027\u80fd\u722c\u866b\u6846\u67b6 Scrapy\uff0c\u81ea\u53d1\u5e03\u4ee5\u6765\u4e00\u76f4\u662f\u722c\u866b\u5de5\u7a0b\u5e08\u7684\u9996\u9009\u3002 \u4e0d\u8fc7\uff0c\u7531\u4e8e\u8fd1\u671f Go \u8bed\u8a00\u7684\u8fc5\u901f\u53d1\u5c55\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u722c\u866b\u5de5\u7a0b\u5e08\u6ce8\u610f\u5230\u7528 Golang \u5f00\u53d1\u7f51\u8def\u722c\u866b\u7684\u5de8\u5927\u4f18\u52bf\u3002\u5176\u4e2d\uff0c\u7528 Go \u8bed\u8a00\u7f16\u5199\u7684 Colly \u722c\u866b\u6846\u67b6\uff0c\u5982\u4eca\u5728 Github \u4e0a\u5df2\u7ecf\u6709 13k+ \u6807\u661f\u3002\u5176\u7b80\u6d01\u7684 API \u4ee5\u53ca\u9ad8\u6548\u7684\u91c7\u96c6\u901f\u5ea6\uff0c\u5438\u5f15\u4e86\u5f88\u591a\u722c\u866b\u5de5\u7a0b\u5e08\uff0c\u5360\u636e\u4e86\u722c\u866b\u754c\u4e00\u54e5 Scrapy \u7684\u90e8\u5206\u4efd\u989d\u3002\u524d\u9762\u5df2\u7ecf\u63d0\u5230\uff0cGo \u8bed\u8a00\u5185\u7f6e\u7684\u5e76\u53d1\u7279\u6027\u8ba9\u4e25\u91cd\u4f9d\u8d56\u7f51\u7edc\u5e26\u5bbd\u7684\u722c\u866b\u7a0b\u5e8f\u66f4\u52a0\u9ad8\u6548\uff0c\u5f88\u5927\u7684\u63d0\u9ad8\u4e86\u6570\u636e\u91c7\u96c6\u6548\u7387\u3002\u53e6\u5916\uff0cGo \u8bed\u8a00\u4f5c\u4e3a\u9759\u6001\u8bed\u8a00\uff0c\u76f8\u5bf9\u4e8e\u52a8\u6001\u8bed\u8a00 Python \u6765\u8bf4\u6709\u66f4\u597d\u7684\u7ea6\u675f\u4e0b\uff0c\u56e0\u6b64\u5065\u58ee\u6027\u548c\u7a33\u5b9a\u6027\u90fd\u66f4\u597d\u3002 \u540e\u7aef API Golang \u6709\u5f88\u591a\u4f18\u79c0\u7684\u540e\u7aef\u6846\u67b6\uff0c\u5b83\u4eec\u5927\u90e8\u5206\u90fd\u975e\u5e38\u5b8c\u5907\u7684\u652f\u6301\u4e86\u73b0\u4ee3\u540e\u7aef\u7cfb\u7edf\u7684\u5404\u79cd\u529f\u80fd\u9700\u6c42\uff1aRESTful API\u3001\u8def\u7531\u3001\u4e2d\u95f4\u4ef6\u3001\u914d\u7f6e\u3001\u9274\u6743\u7b49\u6a21\u5757\u3002\u800c\u4e14\u7528 Golang \u5199\u7684\u540e\u7aef\u5e94\u7528\u6027\u80fd\u5f88\u9ad8\uff0c\u901a\u5e38\u6709\u975e\u5e38\u5feb\u7684\u54cd\u5e94\u901f\u5ea6\u3002\u7b14\u8005\u66fe\u7ecf\u5728\u5f00\u6e90\u722c\u866b\u7ba1\u7406\u5e73\u53f0 Crawlab \u4e2d\u7528 Golang \u91cd\u6784\u4e86 Python \u7684\u540e\u7aef API\uff0c\u54cd\u5e94\u901f\u5ea6\u4ece\u4e4b\u524d\u7684\u51e0\u767e\u6beb\u79d2\u4f18\u5316\u5230\u4e86\u51e0\u5341\u6beb\u79d2\u751a\u81f3\u662f\u51e0\u6beb\u79d2\uff0c\u7528\u5b9e\u8df5\u8bc1\u660e Go \u8bed\u8a00\u5728\u540e\u7aef\u6027\u80fd\u65b9\u9762\u5168\u9762\u78be\u538b\u52a8\u6001\u8bed\u8a00\u3002Go \u8bed\u8a00\u4e2d\u6bd4\u8f83\u77e5\u540d\u7684\u540e\u7aef\u6846\u67b6\u6709 Gin\u3001Beego\u3001Echo\u3001Iris\u3002 \u5f53\u7136\uff0c\u8fd9\u91cc\u5e76\u4e0d\u662f\u8bf4\u7528 Golang \u5199\u540e\u7aef\u5c31\u5b8c\u5168\u662f\u4e00\u4e2a\u6b63\u786e\u7684\u9009\u62e9\u3002\u7b14\u8005\u5728\u5de5\u4f5c\u4e2d\u4f1a\u7528\u5230 Java \u548c C#\uff0c\u7528\u4e86\u5404\u81ea\u7684\u4e3b\u6d41\u6846\u67b6\uff08SpringBoot \u548c .Net Core\uff09\u4e4b\u540e\uff0c\u53d1\u73b0\u8fd9\u4e24\u95e8\u4f20\u7edf OOP \u8bed\u8a00\u867d\u7136\u8bed\u6cd5\u5570\u55e6\uff0c\u4f46\u5b83\u4eec\u7684\u8bed\u6cd5\u7279\u6027\u5f88\u4e30\u5bcc\uff0c\u7279\u522b\u662f\u6cdb\u578b\uff0c\u80fd\u591f\u8f7b\u677e\u5e94\u5bf9\u4e00\u4e9b\u903b\u8f91\u590d\u6742\u3001\u91cd\u590d\u6027\u9ad8\u7684\u4e1a\u52a1\u9700\u6c42\u3002\u56e0\u6b64\uff0c\u7b14\u8005\u8ba4\u4e3a\u5728\u8003\u8651\u7528 Go \u6765\u7f16\u5199\u540e\u7aef API \u65f6\u5019\uff0c\u53ef\u4ee5\u63d0\u524d\u8c03\u7814\u4e00\u4e0b Java \u6216 C#\uff0c\u5b83\u4eec\u5728\u5199\u540e\u7aef\u4e1a\u52a1\u529f\u80fd\u65b9\u9762\u505a\u5f97\u975e\u5e38\u68d2\u3002 \u603b\u7ed3 \u672c\u7bc7\u6587\u7ae0\u4ece Go \u8bed\u8a00\u7684\u4e3b\u8981\u8bed\u6cd5\u7279\u6027\u5165\u624b\uff0c\u5faa\u5e8f\u6e10\u8fdb\u5206\u6790\u4e86 Go \u8bed\u8a00\u4f5c\u4e3a\u540e\u7aef\u7f16\u7a0b\u8bed\u8a00\u7684\u4f18\u70b9\u548c\u7f3a\u70b9\uff0c\u4ee5\u53ca\u5176\u5728\u5b9e\u9645\u8f6f\u4ef6\u9879\u76ee\u5f00\u53d1\u4e2d\u7684\u8bd5\u7528\u573a\u666f\u3002\u7b14\u8005\u8ba4\u4e3a Go \u8bed\u8a00\u4e0e\u5176\u4ed6\u8bed\u8a00\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u8bed\u6cd5\u7b80\u6d01\u3001\u5929\u7136\u652f\u6301\u5e76\u53d1\u3001\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\u3001\u9519\u8bef\u5904\u7406\u7b49\u65b9\u9762\uff0c\u5e76\u4e14\u5bf9\u5404\u4e2a\u8bed\u8a00\u7279\u6027\u5728\u6b63\u53cd\u4e24\u65b9\u9762\u8fdb\u884c\u4e86\u5206\u6790\u3002\u6700\u540e\uff0c\u7b14\u8005\u6839\u636e\u4e4b\u524d\u7684\u5206\u6790\u5185\u5bb9\uff0c\u5f97\u51fa\u4e86 Go \u8bed\u8a00\u4f5c\u4e3a\u540e\u7aef\u5f00\u53d1\u7f16\u7a0b\u8bed\u8a00\u7684\u9002\u7528\u573a\u666f\uff0c\u4e5f\u5c31\u662f\u5206\u5e03\u5f0f\u5e94\u7528\u3001\u7f51\u7edc\u722c\u866b\u4ee5\u53ca\u540e\u7aefAPI\u3002 \u5f53\u7136\uff0cGo \u8bed\u8a00\u7684\u5b9e\u9645\u5e94\u7528\u9886\u57df\u8fd8\u4e0d\u9650\u4e8e\u6b64\u3002\u5b9e\u9645\u4e0a\uff0c\u4e0d\u5c11\u77e5\u540d\u6570\u636e\u5e93\u90fd\u662f\u7528 Golang \u5f00\u53d1\u7684\uff0c\u4f8b\u5982\u65f6\u5e8f\u6570\u636e\u5e93 Prometheus \u548c InfluxDB\u3001\u4ee5\u53ca\u6709 NewSQL \u4e4b\u79f0\u7684 TiDB\u3002\u6b64\u5916\uff0c\u5728\u673a\u5668\u5b66\u4e60\u65b9\u9762\uff0cGo \u8bed\u8a00\u4e5f\u6709\u4e00\u5b9a\u7684\u4f18\u52bf\uff0c\u53ea\u662f\u76ee\u524d\u6765\u8bf4\uff0cGoogle \u56e0\u4e3a Swift \u8ddf TensorFlow \u7684\u610f\u5411\u5408\u4f5c\uff0c\u4f3c\u4e4e\u8fd8\u6ca1\u6709\u5927\u529b\u63a8\u5e7f Go \u5728\u673a\u5668\u5b66\u4e60\u65b9\u9762\u7684\u5e94\u7528\uff0c\u4e0d\u8fc7\u4e00\u4e9b\u6f5c\u5728\u7684\u5f00\u6e90\u9879\u76ee\u5df2\u7ecf\u6d8c\u73b0\u51fa\u6765\uff0c\u4f8b\u5982 GoLearn\u3001GoML\u3001Gorgonia \u7b49\u3002 \u5728\u7406\u89e3 Go \u8bed\u8a00\u7684\u4f18\u52bf\u548c\u9002\u7528\u573a\u666f\u7684\u540c\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u610f\u8bc6\u5230 Go \u8bed\u8a00\u5e76\u4e0d\u662f\u5168\u80fd\u7684\u3002\u5b83\u76f8\u8f83\u4e8e\u5176\u4ed6\u4e00\u4e9b\u4e3b\u6d41\u6846\u67b6\u6765\u8bf4\u4e5f\u6709\u4e00\u4e9b\u7f3a\u70b9\u3002\u5f00\u53d1\u8005\u5728\u51c6\u5907\u91c7\u7528 Go \u4f5c\u4e3a\u5b9e\u9645\u5de5\u4f5c\u5f00\u53d1\u8bed\u8a00\u7684\u65f6\u5019\uff0c\u9700\u8981\u5168\u9762\u4e86\u89e3\u5176\u8bed\u8a00\u7279\u6027\uff0c\u4ece\u800c\u505a\u51fa\u6700\u5408\u7406\u7684\u6280\u672f\u9009\u578b\u3002\u5c31\u50cf\u6253\u7f51\u7403\u4e00\u6837\uff0c\u4e0d\u4ec5\u9700\u8981\u638c\u63e1\u6b63\u53cd\u624b\uff0c\u8fd8\u8981\u4f1a\u53d1\u7403\u3001\u9ad8\u538b\u7403\u3001\u622a\u51fb\u7403\u7b49\u6280\u672f\u52a8\u4f5c\uff0c\u8fd9\u6837\u624d\u80fd\u628a\u7f51\u7403\u6253\u597d\u3002","title":"\u5f53\u7ea2\u5f00\u53d1\u8bed\u8a00Go\uff0c\u771f\u7684\u662f\u672a\u6765\u7684\u6280\u672f\u4e3b\u6d41\u5417\uff1f"},{"location":"golang/docs/%E5%BD%93%E7%BA%A2%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80Go%EF%BC%8C%E7%9C%9F%E7%9A%84%E6%98%AF%E6%9C%AA%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E4%B8%BB%E6%B5%81%E5%90%97%EF%BC%9F/#_1","text":"\u57ce\u5916\u7684\u4eba\u60f3\u8fdb\u53bb\uff0c\u57ce\u91cc\u7684\u4eba\u60f3\u51fa\u6765\u3002\u2013 \u94b1\u949f\u4e66\u300a\u56f4\u57ce\u300b \u968f\u7740\u5bb9\u5668\u7f16\u6392\uff08Container Orchestration\uff09\u3001\u5fae\u670d\u52a1\uff08Micro Services\uff09\u3001\u4e91\u6280\u672f\uff08Cloud Technology\uff09\u7b49\u5728 IT \u884c\u4e1a\u4e0d\u65ad\u76db\u884c\uff0c2009 \u5e74\u8bde\u751f\u4e8e Google \u7684 Golang\uff08Go \u8bed\u8a00\uff0c\u7b80\u79f0 Go\uff09\u8d8a\u6765\u8d8a\u53d7\u5230\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u6b22\u8fce\u548c\u8ffd\u6367\uff0c\u6210\u4e3a\u5982\u4eca\u7099\u624b\u53ef\u70ed\u7684\u540e\u7aef\u7f16\u7a0b\u8bed\u8a00\u3002\u5728\u7528 Golang \u5f00\u53d1\u7684\u8f6f\u4ef6\u9879\u76ee\u5217\u8868\u4e2d\uff0c\u6709 Docker\uff08\u5bb9\u5668\u6280\u672f\uff09\u3001Kubernetes\uff08\u5bb9\u5668\u7f16\u6392\uff09\u8fd9\u6837\u7684\u98a0\u8986\u6574\u4e2a IT \u884c\u4e1a\u7684\u660e\u661f\u7ea7\u4ea7\u54c1\uff0c\u4e5f\u6709\u50cf Prometheus\uff08\u76d1\u63a7\u7cfb\u7edf\uff09\u3001Etcd\uff08\u5206\u5e03\u5f0f\u5b58\u50a8\uff09\u3001InfluxDB\uff08\u65f6\u5e8f\u6570\u636e\u5e93\uff09\u8fd9\u6837\u7684\u5f3a\u5927\u5b9e\u7528\u7684\u77e5\u540d\u9879\u76ee\u3002\u5f53\u7136\uff0cGo \u8bed\u8a00\u7684\u5e94\u7528\u9886\u57df\u4e5f\u7edd\u4e0d\u5c40\u9650\u4e8e\u5bb9\u5668\u548c\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002\u5982\u4eca\u5f88\u591a\u5927\u578b\u4e92\u8054\u7f51\u4f01\u4e1a\u5728\u5927\u91cf\u4f7f\u7528 Golang \u6784\u5efa\u540e\u7aef Web \u5e94\u7528\uff0c\u4f8b\u5982\u4eca\u65e5\u5934\u6761\u3001\u4eac\u4e1c\u3001\u4e03\u725b\u4e91\u7b49\uff1b\u957f\u671f\u88ab Python \u7edf\u6cbb\u7684\u6846\u67b6\u722c\u866b\u9886\u57df\u4e5f\u56e0\u4e3a\u7b80\u5355\u800c\u6613\u7528\u7684\u722c\u866b\u6846\u67b6 Colly \u7684\u5d1b\u8d77\u800c\u4e0d\u65ad\u53d7\u5230 Golang \u7684\u6311\u6218\u3002Golang \u5df2\u7ecf\u6210\u4e3a\u4e86\u5982\u4eca\u5927\u591a\u6570\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u6700\u60f3\u5b66\u4e60\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u4e0b\u56fe\u662f HackerRank \u5728 2020 \u5e74\u8c03\u67e5\u7a0b\u5e8f\u5458\u6280\u80fd\u7684\u76f8\u5173\u7ed3\u679c\u3002 \u90a3\u4e48\uff0cGo \u8bed\u8a00\u771f\u7684\u662f\u540e\u7aef\u5f00\u53d1\u4eba\u5458\u7684\u6551\u547d\u826f\u836f\u5462\uff1f\u5b83\u662f\u5426\u80fd\u591f\u6709\u6548\u63d0\u9ad8\u7a0b\u5e8f\u5458\u4eec\u7684\u6280\u672f\u5b9e\u529b\u548c\u5f00\u53d1\u6548\u7387\uff0c\u4ece\u800c\u5e2e\u52a9\u4ed6\u4eec\u5728\u804c\u573a\u4e0a\u66f4\u8fdb\u4e00\u6b65\u5462\uff1fGo \u8bed\u8a00\u771f\u7684\u503c\u5f97\u6211\u4eec\u82b1\u5927\u91cf\u65f6\u95f4\u6df1\u5165\u5b66\u4e60\u4e48\uff1f\u672c\u6587\u5c06\u8be6\u7ec6\u4ecb\u7ecd Golang \u7684\u8bed\u8a00\u7279\u70b9\u4ee5\u53ca\u5b83\u7684\u4f18\u7f3a\u70b9\u548c\u9002\u7528\u573a\u666f\uff0c\u5e26\u7740\u4e0a\u8ff0\u51e0\u4e2a\u7591\u95ee\uff0c\u4e3a\u8bfb\u8005\u5206\u6790 Go \u8bed\u8a00\u7684\u5404\u4e2a\u65b9\u9762\uff0c\u4ee5\u5e2e\u52a9\u521d\u5165 IT \u884c\u4e1a\u7684\u7a0b\u5e8f\u5458\u4ee5\u53ca\u5bf9 Go \u611f\u5174\u8da3\u7684\u5f00\u53d1\u8005\u8fdb\u4e00\u6b65\u4e86\u89e3\u8fd9\u4e2a\u70ed\u95e8\u8bed\u8a00\u3002","title":"\u524d\u8a00"},{"location":"golang/docs/%E5%BD%93%E7%BA%A2%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80Go%EF%BC%8C%E7%9C%9F%E7%9A%84%E6%98%AF%E6%9C%AA%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E4%B8%BB%E6%B5%81%E5%90%97%EF%BC%9F/#golang","text":"Golang \u8bde\u751f\u4e8e\u4e92\u8054\u7f51\u5de8\u5934 Google\uff0c\u800c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u5de7\u5408\u3002\u6211\u4eec\u90fd\u77e5\u9053\uff0cGoogle \u6709\u4e00\u4e2a 20% \u505a\u4e1a\u4f59\u9879\u76ee\uff08Side Project\uff09\u7684\u4f01\u4e1a\u6587\u5316\uff0c\u5141\u8bb8\u5de5\u7a0b\u5e08\u4eec\u80fd\u591f\u5728\u8f7b\u677e\u7684\u73af\u5883\u4e0b\u521b\u9020\u4e00\u4e9b\u5177\u6709\u98a0\u8986\u6027\u521b\u65b0\u7684\u4ea7\u54c1\u3002\u800c Golang \u4e5f\u6b63\u662f\u5728\u8fd9 20% \u65f6\u95f4\u4e2d\u4e0d\u65ad\u5b75\u5316\u51fa\u6765\u3002Go \u8bed\u8a00\u7684\u521b\u59cb\u8005\u4e5f\u662f IT \u754c\u5185\u5927\u540d\u9f0e\u9f0e\u7684\u884c\u4e1a\u9886\u8896\uff0c\u5305\u62ec Unix \u6838\u5fc3\u56e2\u961f\u6210\u5458 Rob Pike\u3001C \u8bed\u8a00\u4f5c\u8005 Ken Thompson\u3001V8 \u5f15\u64ce\u6838\u5fc3\u8d21\u732e\u8005 Robert Griesemer\u3002Go \u8bed\u8a00\u88ab\u5927\u4f17\u6240\u719f\u77e5\u8fd8\u662f\u6e90\u4e8e\u5bb9\u5668\u6280\u672f Docker \u5728 2014 \u5e74\u88ab\u5f00\u6e90\u540e\u7684\u7206\u53d1\u5f0f\u53d1\u5c55\u3002\u4e4b\u540e\uff0cGo \u8bed\u8a00\u56e0\u4e3a\u5176\u7b80\u5355\u7684\u8bed\u6cd5\u4ee5\u53ca\u8fc5\u731b\u7684\u7f16\u8bd1\u901f\u5ea6\u53d7\u5230\u5927\u91cf\u5f00\u53d1\u8005\u7684\u8ffd\u6367\uff0c\u4e5f\u8bde\u751f\u4e86\u5f88\u591a\u4f18\u79c0\u7684\u9879\u76ee\uff0c\u4f8b\u5982 Kubernetes\u3002 Go \u8bed\u8a00\u76f8\u5bf9\u4e8e\u5176\u4ed6\u4f20\u7edf\u70ed\u95e8\u7f16\u7a0b\u8bed\u8a00\u6765\u8bf4\uff0c\u6709\u5f88\u591a\u4f18\u70b9\uff0c\u7279\u522b\u662f\u5176\u9ad8\u6548\u7f16\u8bd1\u901f\u5ea6\u548c\u5929\u7136\u5e76\u53d1\u7279\u6027\uff0c\u8ba9\u5176\u6210\u4e3a\u5feb\u901f\u5f00\u53d1\u5206\u5e03\u5f0f\u5e94\u7528\u7684\u9996\u9009\u8bed\u8a00\u3002Go \u8bed\u8a00\u662f\u9759\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u4e5f\u5c31\u662f\u8bf4 Go \u8bed\u8a00\u8ddf Java\u3001C# \u4e00\u6837\u9700\u8981\u7f16\u8bd1\uff0c\u800c\u4e14\u6709\u5b8c\u5907\u7684\u7c7b\u578b\u7cfb\u7edf\uff0c\u53ef\u4ee5\u6709\u6548\u51cf\u5c11\u56e0\u7c7b\u578b\u4e0d\u4e00\u81f4\u5bfc\u81f4\u7684\u4ee3\u7801\u8d28\u91cf\u95ee\u9898\u3002\u56e0\u6b64\uff0cGo \u8bed\u8a00\u975e\u5e38\u9002\u5408\u6784\u5efa\u5bf9\u7a33\u5b9a\u6027\u548c\u7075\u6d3b\u6027\u5747\u6709\u8981\u6c42\u7684\u5927\u578b IT \u7cfb\u7edf\uff0c\u8fd9\u4e5f\u662f\u5f88\u591a\u5927\u578b\u4e92\u8054\u7f51\u516c\u53f8\u7528 Golang \u91cd\u6784\u8001\u4ee3\u7801\u7684\u91cd\u8981\u539f\u56e0\uff1a\u4f20\u7edf\u7684\u9759\u6001 OOP \u8bed\u8a00\uff08\u4f8b\u5982 Java\u3001C#\uff09\u7a33\u5b9a\u6027\u9ad8\u4f46\u7f3a\u4e4f\u7075\u6d3b\u6027\uff1b\u800c\u52a8\u6001\u8bed\u8a00\uff08\u4f8b\u5982 PHP\u3001Python\u3001Ruby\u3001Node.js\uff09\u7075\u6d3b\u6027\u5f3a\u4f46\u7f3a\u4e4f\u7a33\u5b9a\u6027\u3002\u56e0\u6b64\uff0c\u201c\u718a\u638c\u548c\u9c7c\u517c\u5f97\u201d \u7684 Golang\uff0c\u53d7\u5230\u5f00\u53d1\u8005\u4eec\u7684\u8ffd\u6367\u662f\u81ea\u7136\u800c\u7136\u7684\u4e8b\u60c5\uff0c\u6bd5\u7adf\uff0c\u201c\u5929\u4e0b\u82e6 Java/PHP/Python/Ruby \u4eec\u4e45\u77e3\u201c\u3002 \u4e0d\u8fc7\uff0cGo \u8bed\u8a00\u5e76\u4e0d\u662f\u6ca1\u6709\u7f3a\u70b9\u3002\u7528\u8fa9\u8bc1\u6cd5\u7684\u601d\u7ef4\u65b9\u5f0f\u53ef\u4ee5\u63a8\u6d4b\uff0cGolang \u7684\u4e00\u4e9b\u7a81\u51fa\u7279\u6027\u5c06\u6210\u4e3a\u5b83\u7684\u53cc\u5203\u5251\u3002\u4f8b\u5982\uff0cGolang \u8bed\u6cd5\u7b80\u5355\u7684\u4f18\u52bf\u7279\u70b9\u5c06\u9650\u5236\u5b83\u5904\u7406\u590d\u6742\u95ee\u9898\u7684\u80fd\u529b\u3002\u5c24\u5176\u662f Go \u8bed\u8a00\u7f3a\u4e4f\u6cdb\u578b\uff08Generics\uff09\u7684\u95ee\u9898\uff0c\u5bfc\u81f4\u5b83\u6784\u5efa\u901a\u7528\u6846\u67b6\u7684\u590d\u6742\u5ea6\u5927\u589e\u3002\u867d\u7136\u8fd9\u4e2a\u7a81\u51fa\u95ee\u9898\u5728 2.0 \u7248\u672c\u5f88\u53ef\u80fd\u4f1a\u6709\u6548\u89e3\u51b3\uff0c\u4f46\u8fd9\u4e5f\u53cd\u6620\u51fa\u6765\u660e\u661f\u7f16\u7a0b\u8bed\u8a00\u4e5f\u4f1a\u6709\u7f3a\u70b9\u3002\u5f53\u7136\uff0cGo \u7684\u7f3a\u70b9\u8fd8\u4e0d\u6b62\u4e8e\u6b64\uff0cGo \u8bed\u8a00\u4f7f\u7528\u8005\u8fd8\u4f1a\u5410\u69fd\u5176\u5570\u55e6\u7684\u9519\u8bef\u5904\u7406\u65b9\u5f0f\uff08Error Handling\uff09\u3001\u7f3a\u5c11\u4e25\u683c\u7ea6\u675f\u7684\u9e2d\u5b50\u7c7b\u578b\uff08Duck Typing\uff09\u3001\u65e5\u671f\u683c\u5f0f\u95ee\u9898\u7b49\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u5c06\u4ece Golang \u8bed\u8a00\u7279\u70b9\u5f00\u59cb\uff0c\u7531\u6d45\u5165\u6df1\u591a\u7ef4\u5ea6\u6df1\u5165\u5206\u6790 Golang \u7684\u4f18\u7f3a\u70b9\u4ee5\u53ca\u9879\u76ee\u9002\u7528\u573a\u666f\u3002","title":"Golang \u7b80\u4ecb"},{"location":"golang/docs/%E5%BD%93%E7%BA%A2%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80Go%EF%BC%8C%E7%9C%9F%E7%9A%84%E6%98%AF%E6%9C%AA%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E4%B8%BB%E6%B5%81%E5%90%97%EF%BC%9F/#_2","text":"","title":"\u8bed\u8a00\u7279\u70b9"},{"location":"golang/docs/%E5%BD%93%E7%BA%A2%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80Go%EF%BC%8C%E7%9C%9F%E7%9A%84%E6%98%AF%E6%9C%AA%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E4%B8%BB%E6%B5%81%E5%90%97%EF%BC%9F/#_3","text":"Go \u8bed\u8a00\u7684\u8bed\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u81f3\u5c11\u5728\u53d8\u91cf\u58f0\u660e\u3001\u7ed3\u6784\u4f53\u58f0\u660e\u3001\u51fd\u6570\u5b9a\u4e49\u7b49\u65b9\u9762\u663e\u5f97\u975e\u5e38\u7b80\u6d01\u3002 \u53d8\u91cf\u7684\u58f0\u660e\u4e0d\u50cf Java \u6216 C \u90a3\u6837\u5570\u55e6\uff0c\u5728 Golang \u4e2d\u53ef\u4ee5\u7528 := \u8fd9\u4e2a\u8bed\u6cd5\u6765\u58f0\u660e\u65b0\u53d8\u91cf\u3002\u4f8b\u5982\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5f53\u4f60\u76f4\u63a5\u4f7f\u7528 := \u6765\u5b9a\u4e49\u53d8\u91cf\u65f6\uff0cGo \u4f1a\u81ea\u52a8\u5c06\u8d4b\u503c\u5bf9\u8c61\u7684\u7c7b\u578b\u58f0\u660e\u4e3a\u8d4b\u503c\u6765\u6e90\u7684\u7c7b\u578b\uff0c\u8fd9\u8282\u7701\u4e86\u5927\u91cf\u7684\u4ee3\u7801\u3002 func main() { valInt := 1 // \u81ea\u52a8\u63a8\u65ad int \u7c7b\u578b valStr := \"hello\" // \u81ea\u52a8\u63a8\u65ad\u4e3a string \u7c7b\u578b valBool := false // \u81ea\u52a8\u63a8\u65ad\u4e3a bool \u7c7b\u578b } Golang \u8fd8\u6709\u5f88\u591a\u5e2e\u4f60\u8282\u7701\u4ee3\u7801\u7684\u5730\u65b9\u3002\u4f60\u53ef\u4ee5\u53d1\u73b0 Go \u4e2d\u4e0d\u4f1a\u5f3a\u5236\u8981\u6c42\u7528 new \u8fd9\u4e2a\u5173\u952e\u8bcd\u6765\u751f\u6210\u67d0\u4e2a\u7c7b\uff08Class\uff09\u7684\u65b0\u5b9e\u4f8b\uff08Instance\uff09\u3002\u800c\u4e14\uff0c\u5bf9\u4e8e\u516c\u5171\u548c\u79c1\u6709\u5c5e\u6027\uff08\u53d8\u91cf\u548c\u65b9\u6cd5\uff09\u7684\u7ea6\u5b9a\u4e0d\u518d\u4f7f\u7528\u4f20\u7edf\u7684 public \u548c private \u5173\u952e\u8bcd\uff0c\u800c\u662f\u76f4\u63a5\u7528\u5c5e\u6027\u53d8\u91cf\u9996\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u6765\u533a\u5206\u3002\u4e0b\u9762\u4e00\u4e9b\u4f8b\u5b50\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u7406\u89e3\u8fd9\u4e9b\u7279\u70b9\u3002 // \u5b9a\u4e49\u4e00\u4e2a struct \u7c7b type SomeClass struct { PublicVariable string // \u516c\u5171\u53d8\u91cf privateVariable string // \u79c1\u6709\u53d8\u91cf } // \u516c\u5171\u65b9\u6cd5 func (c *SomeClass) PublicMethod() (result string) { return \"This can be called by external modules\" } // \u79c1\u6709\u65b9\u6cd5 func (c *SomeClass) privateMethod() (result string) { return \"This can only be called in SomeClass\" } func main() { // \u751f\u6210\u5b9e\u4f8b someInstance := SomeClass{ PublicVariable: \"hello\", privateVariable: \"world\", } } \u5982\u679c\u4f60\u7528 Java \u6765\u5b9e\u73b0\u4e0a\u8ff0\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u53ef\u80fd\u4f1a\u770b\u5230\u5197\u957f\u7684 .java \u7c7b\u6587\u4ef6\uff0c\u4f8b\u5982\u8fd9\u6837\u3002 // SomeClass.java public SomeClass { public String PublicVariable; // \u516c\u5171\u53d8\u91cf private String privateVariable; // \u79c1\u6709\u53d8\u91cf // \u6784\u9020\u51fd\u6570 public SomeClass(String val1, String val2) { this.PublicVariable = val1; this.privateVariable = val2; } // \u516c\u5171\u65b9\u6cd5 public String PublicMethod() { return \"This can be called by external modules\"; } // \u79c1\u6709\u65b9\u6cd5 public String privateMethod() { return \"This can only be called in SomeClass\"; } } ... // Application.java public Application { public static void main(String[] args) { // \u751f\u6210\u5b9e\u4f8b SomeClass someInstance = new SomeClass(\"hello\", \"world\"); } } \u53ef\u4ee5\u770b\u5230\uff0c\u5728 Java \u4ee3\u7801\u4e2d\u9664\u4e86\u5bb9\u6613\u770b\u82b1\u773c\u7684\u591a\u5c42\u82b1\u62ec\u53f7\u4ee5\u5916\uff0c\u8fd8\u5145\u65a5\u7740\u5927\u91cf\u7684 public\u3001private\u3001static\u3001this \u7b49\u4fee\u9970\u7528\u7684\u5173\u952e\u8bcd\uff0c\u663e\u5f97\u5f02\u5e38\u5570\u55e6\uff1b\u800c Golang \u4ee3\u7801\u4e2d\u5219\u9760\u7b80\u5355\u7684\u7ea6\u5b9a\uff0c\u4f8b\u5982\u9996\u5b57\u6bcd\u5927\u5c0f\u5199\uff0c\u907f\u514d\u4e86\u5f88\u591a\u91cd\u590d\u6027\u7684\u4fee\u9970\u8bcd\u3002\u5f53\u7136\uff0cJava \u548c Go \u5728\u7c7b\u578b\u7cfb\u7edf\u4e0a\u8fd8\u662f\u6709\u4e00\u4e9b\u533a\u522b\u7684\uff0c\u8fd9\u4e5f\u5bfc\u81f4 Go \u5728\u5904\u7406\u590d\u6742\u95ee\u9898\u663e\u5f97\u6709\u4e9b\u529b\u4e0d\u4ece\u5fc3\uff0c\u8fd9\u662f\u540e\u8bdd\uff0c\u540e\u9762\u518d\u8ba8\u8bba\u3002\u603b\u4e4b\uff0c\u7ed3\u8bba\u5c31\u662f Go \u7684\u8bed\u6cd5\u5728\u9759\u6001\u7c7b\u578b\u7f16\u7a0b\u8bed\u8a00\u4e2d\u975e\u5e38\u7b80\u6d01\u3002","title":"\u7b80\u6d01\u7684\u8bed\u6cd5\u7279\u5f81"},{"location":"golang/docs/%E5%BD%93%E7%BA%A2%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80Go%EF%BC%8C%E7%9C%9F%E7%9A%84%E6%98%AF%E6%9C%AA%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E4%B8%BB%E6%B5%81%E5%90%97%EF%BC%9F/#_4","text":"Go \u8bed\u8a00\u4e4b\u6240\u4ee5\u6210\u4e3a\u5206\u5e03\u5f0f\u5e94\u7528\u7684\u9996\u9009\uff0c\u9664\u4e86\u5b83\u6027\u80fd\u5f3a\u5927\u4ee5\u5916\uff0c\u5176\u6700\u4e3b\u8981\u7684\u539f\u56e0\u5c31\u662f\u5b83\u5929\u7136\u7684\u5e76\u53d1\u7f16\u7a0b\u3002\u8fd9\u4e2a\u5e76\u53d1\u7f16\u7a0b\u7279\u6027\u4e3b\u8981\u6765\u81ea\u4e8e Golang \u4e2d\u7684\u534f\u7a0b\uff08Goroutine\uff09\u548c\u901a\u9053\uff08Channel\uff09\u3002\u4e0b\u9762\u662f\u4f7f\u7528\u534f\u7a0b\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002 func asyncTask() { fmt.Printf(\"This is an asynchronized task\") } func syncTask() { fmt.Printf(\"This is a synchronized task\") } func main() { go asyncTask() // \u5f02\u6b65\u6267\u884c\uff0c\u4e0d\u963b\u585e syncTask() // \u540c\u6b65\u6267\u884c\uff0c\u963b\u585e go asyncTask() // \u7b49\u5f85\u524d\u9762 syncTask \u5b8c\u6210\u4e4b\u540e\uff0c\u518d\u5f02\u6b65\u6267\u884c\uff0c\u4e0d\u963b\u585e } \u53ef\u4ee5\u770b\u5230\uff0c\u5173\u952e\u8bcd go \u52a0\u51fd\u6570\u8c03\u7528\u53ef\u4ee5\u8ba9\u5176\u4f5c\u4e3a\u4e00\u4e2a\u5f02\u6b65\u51fd\u6570\u6267\u884c\uff0c\u4e0d\u4f1a\u963b\u585e\u540e\u9762\u7684\u4ee3\u7801\u3002\u800c\u5982\u679c\u4e0d\u52a0 go \u5173\u952e\u8bcd\uff0c\u5219\u4f1a\u88ab\u5f53\u6210\u662f\u540c\u6b65\u4ee3\u7801\u6267\u884c\u3002\u5982\u679c\u8bfb\u8005\u719f\u6089 JavaScript \u4e2d\u7684 async/await\u3001Promise \u8bed\u6cd5\uff0c\u751a\u81f3\u662f Java\u3001Python \u4e2d\u7684\u591a\u7ebf\u7a0b\u5f02\u6b65\u7f16\u7a0b\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u4eec\u8ddf Go \u5f02\u6b65\u7f16\u7a0b\u7684\u7b80\u5355\u7a0b\u5ea6\u4e0d\u662f\u4e00\u4e2a\u91cf\u7ea7\u7684\uff01 \u5f02\u6b65\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u534f\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u53ef\u4ee5\u7528 Go \u8bed\u8a00\u7279\u6709\u7684\u901a\u9053\u6765\u5b9e\u73b0\u3002\u4e0b\u9762\u662f\u5173\u4e8e\u901a\u9053\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002 func longTask(signal chan int) { // \u4e0d\u5e26\u53c2\u6570\u7684 for // \u76f8\u5f53\u4e8e while \u5faa\u73af for { // \u63a5\u6536 signal \u901a\u9053\u4f20\u503c v := <- signal // \u5982\u679c\u63a5\u6536\u503c\u4e3a 1\uff0c\u505c\u6b62\u5faa\u73af if v == 1 { break } time.Sleep(1 * Second) } } func main() { // \u58f0\u660e\u901a\u9053 sig := make(chan int) // \u5f02\u6b65\u8c03\u7528 longTask go longTask(sig) // \u7b49\u5f85 1 \u79d2\u949f time.Sleep(1 * time.Second) // \u5411\u901a\u9053 sig \u4f20\u503c sig <- 1 // \u7136\u540e longTask \u4f1a\u63a5\u6536 sig \u4f20\u503c\uff0c\u7ec8\u6b62\u5faa\u73af }","title":"\u5185\u7f6e\u5e76\u53d1\u7f16\u7a0b"},{"location":"golang/docs/%E5%BD%93%E7%BA%A2%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80Go%EF%BC%8C%E7%9C%9F%E7%9A%84%E6%98%AF%E6%9C%AA%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E4%B8%BB%E6%B5%81%E5%90%97%EF%BC%9F/#_5","text":"Go \u8bed\u8a00\u4e0d\u662f\u4e25\u683c\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff08OOP\uff09\uff0c\u5b83\u91c7\u7528\u7684\u662f\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\uff08IOP\uff09\uff0c\u662f\u76f8\u5bf9\u4e8e OOP \u66f4\u5148\u8fdb\u7684\u7f16\u7a0b\u6a21\u5f0f\u3002\u4f5c\u4e3a OOP \u4f53\u7cfb\u7684\u4e00\u90e8\u5206\uff0cIOP \u66f4\u52a0\u5f3a\u8c03\u89c4\u5219\u548c\u7ea6\u675f\uff0c\u4ee5\u53ca\u63a5\u53e3\u7c7b\u578b\u65b9\u6cd5\u7684\u7ea6\u5b9a\uff0c\u4ece\u800c\u8ba9\u5f00\u53d1\u4eba\u5458\u5c3d\u53ef\u80fd\u7684\u5173\u6ce8\u66f4\u62bd\u8c61\u7684\u7a0b\u5e8f\u903b\u8f91\uff0c\u800c\u4e0d\u662f\u5728\u66f4\u7ec6\u8282\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e0a\u6d6a\u8d39\u65f6\u95f4\u3002\u5f88\u591a\u5927\u578b\u9879\u76ee\u91c7\u7528\u7684\u90fd\u662f IOP \u7684\u7f16\u7a0b\u6a21\u5f0f\u3002\u5982\u679c\u60f3\u4e86\u89e3\u66f4\u591a\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\uff0c\u8bf7\u67e5\u770b \u201c\u7801\u4e4b\u9053\u201d \u4e2a\u4eba\u6280\u672f\u535a\u5ba2\u7684\u5f80\u671f\u6587\u7ae0\u300a\u4e3a\u4ec0\u4e48\u8bf4 TypeScript \u662f\u5f00\u53d1\u5927\u578b\u524d\u7aef\u9879\u76ee\u7684\u5fc5\u5907\u8bed\u8a00\u300b\uff0c\u5176\u4e2d\u6709\u5173\u4e8e\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\u7684\u8be6\u7ec6\u8bb2\u89e3\u3002 Go \u8bed\u8a00\u8ddf TypeScript \u4e00\u6837\uff0c\u4e5f\u662f\u91c7\u7528\u9e2d\u5b50\u7c7b\u578b\u7684\u65b9\u5f0f\u6765\u6821\u9a8c\u63a5\u53e3\u7ee7\u627f\u3002\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u53ef\u4ee5\u63cf\u8ff0 Go \u8bed\u8a00\u7684\u9e2d\u5b50\u7c7b\u578b\u7279\u6027\u3002 // \u5b9a\u4e49 Animal \u63a5\u53e3 interface Animal { Eat() // \u58f0\u660e Eat \u65b9\u6cd5 Move() // \u58f0\u660e Move \u65b9\u6cd5 } // ==== \u5b9a\u4e49 Dog Start ==== // \u5b9a\u4e49 Dog \u7c7b type Dog struct { } // \u5b9e\u73b0 Eat \u65b9\u6cd5 func (d *Dog) Eat() { fmt.Printf(\"Eating bones\") } // \u5b9e\u73b0 Move \u65b9\u6cd5 func (d *Dog) Move() { fmt.Printf(\"Moving with four legs\") } // ==== \u5b9a\u4e49 Dog End ==== // ==== \u5b9a\u4e49 Human Start ==== // \u5b9a\u4e49 Human \u7c7b type Human struct { } // \u5b9e\u73b0 Eat \u65b9\u6cd5 func (h *Human) Eat() { fmt.Printf(\"Eating rice\") } // \u5b9e\u73b0 Move \u65b9\u6cd5 func (h *Human) Move() { fmt.Printf(\"Moving with two legs\") } // ==== \u5b9a\u4e49 Human End ==== \u53ef\u4ee5\u770b\u5230\uff0c\u867d\u7136 Go \u8bed\u8a00\u53ef\u4ee5\u5b9a\u4e49\u63a5\u53e3\uff0c\u4f46\u8ddf Java \u4e0d\u540c\u7684\u662f\uff0cGo \u8bed\u8a00\u4e2d\u6ca1\u6709\u663e\u793a\u58f0\u660e\u63a5\u53e3\u5b9e\u73b0\uff08Implementation\uff09\u7684\u5173\u952e\u8bcd\u4fee\u9970\u8bed\u6cd5\u3002\u5728 Go \u8bed\u8a00\u4e2d\uff0c\u5982\u679c\u8981\u7ee7\u627f\u4e00\u4e2a\u63a5\u53e3\uff0c\u4f60\u53ea\u9700\u8981\u5728\u7ed3\u6784\u4f53\u4e2d\u5b9e\u73b0\u8be5\u63a5\u53e3\u58f0\u660e\u7684\u6240\u6709\u65b9\u6cd5\u3002\u8fd9\u6837\uff0c\u5bf9\u4e8e Go \u7f16\u8bd1\u5668\u6765\u8bf4\u4f60\u5b9a\u4e49\u7684\u7c7b\u5c31\u76f8\u5f53\u4e8e\u7ee7\u627f\u4e86\u8be5\u63a5\u53e3\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u89c4\u5b9a\uff0c\u53ea\u8981\u65e2\u80fd\u5403\uff08Eat\uff09\u53c8\u80fd\u6d3b\u52a8\uff08Move\uff09\u7684\u4e1c\u897f\u5c31\u662f\u52a8\u7269\uff08Animal\uff09\u3002\u800c\u72d7\uff08Dog\uff09\u548c\u4eba\uff08Human\uff09\u6070\u5de7\u90fd\u53ef\u4ee5\u5403\u548c\u52a8\uff0c\u56e0\u6b64\u5b83\u4eec\u90fd\u88ab\u7b97\u4f5c\u52a8\u7269\u3002\u8fd9\u79cd\u4f9d\u9760\u5b9e\u73b0\u65b9\u6cd5\u5339\u914d\u5ea6\u7684\u7ee7\u627f\u65b9\u5f0f\uff0c\u5c31\u662f\u9e2d\u5b50\u7c7b\u578b\uff1a\u5982\u679c\u4e00\u4e2a\u52a8\u7269\u770b\u8d77\u6765\u50cf\u9e2d\u5b50\uff0c\u53eb\u8d77\u6765\u4e5f\u50cf\u9e2d\u5b50\uff0c\u90a3\u5b83\u4e00\u5b9a\u662f\u9e2d\u5b50\u3002\u8fd9\u79cd\u9e2d\u5b50\u7c7b\u578b\u76f8\u5bf9\u4e8e\u4f20\u7edf OOP \u7f16\u7a0b\u8bed\u8a00\u663e\u5f97\u66f4\u7075\u6d3b\u3002\u4f46\u662f\uff0c\u540e\u9762\u6211\u4eec\u4f1a\u8ba8\u8bba\u5230\uff0c\u8fd9\u79cd\u7f16\u7a0b\u65b9\u5f0f\u4f1a\u5e26\u6765\u4e00\u4e9b\u9ebb\u70e6\u3002","title":"\u9762\u5411\u63a5\u53e3\u7f16\u7a0b"},{"location":"golang/docs/%E5%BD%93%E7%BA%A2%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80Go%EF%BC%8C%E7%9C%9F%E7%9A%84%E6%98%AF%E6%9C%AA%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E4%B8%BB%E6%B5%81%E5%90%97%EF%BC%9F/#_6","text":"Go \u8bed\u8a00\u7684\u9519\u8bef\u5904\u7406\u662f\u81ed\u540d\u662d\u8457\u7684\u5570\u55e6\u3002\u8fd9\u91cc\u5148\u7ed9\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\u3002 package main import \"fmt\" func isValid(text string) (valid bool, err error){ if text == \"\" { return false, error(\"text cannot be empty\") } return text == \"valid text\", nil } func validateForm(form map[string]string) (res bool, err error) { for _, text := range form { valid, err := isValid(text) if err != nil { return false, err } if !valid { return false, nil } } return true, nil } func submitForm(form map[string]string) (err error) { if res, err := validateForm(form); err != nil || !res { return error(\"submit error\") } fmt.Printf(\"submitted\") return nil } func main() { form := map[string]string{ \"field1\": \"\", \"field2\": \"invalid text\", \"field2\": \"valid text\", } if err := submitForm(form); err != nil { panic(err) } } \u867d\u7136\u4e0a\u9762\u6574\u4e2a\u4ee3\u7801\u662f\u865a\u6784\u7684\uff0c\u4f46\u53ef\u4ee5\u4ece\u4e2d\u770b\u51fa\uff0cGo \u4ee3\u7801\u4e2d\u5145\u65a5\u7740 if err := \u2026; err != nil { \u2026 } \u4e4b\u7c7b\u7684\u9519\u8bef\u5224\u65ad\u8bed\u53e5\u3002\u8fd9\u662f\u56e0\u4e3a Go \u8bed\u8a00\u8981\u6c42\u5f00\u53d1\u8005\u81ea\u5df1\u7ba1\u7406\u9519\u8bef\uff0c\u4e5f\u5c31\u662f\u5728\u51fd\u6570\u4e2d\u7684\u9519\u8bef\u9700\u8981\u663e\u5f0f\u629b\u51fa\u6765\uff0c\u5426\u5219 Go \u7a0b\u5e8f\u4e0d\u4f1a\u505a\u4efb\u4f55\u9519\u8bef\u5904\u7406\u3002\u56e0\u4e3a Go \u6ca1\u6709\u4f20\u7edf\u7f16\u7a0b\u8bed\u8a00\u7684 try/catch \u9488\u5bf9\u9519\u8bef\u5904\u7406\u7684\u8bed\u6cd5\uff0c\u6240\u4ee5\u5728\u9519\u8bef\u7ba1\u7406\u4e0a\u7f3a\u5c11\u7075\u6d3b\u5ea6\uff0c\u5bfc\u81f4\u4e86 \u201cerr \u6ee1\u5929\u98de\u201d \u7684\u5c40\u9762\u3002 \u4e0d\u8fc7\uff0c\u8fa9\u8bc1\u6cd5\u5219\u544a\u8bc9\u6211\u4eec\uff0c\u8fd9\u79cd\u505a\u6cd5\u4e5f\u662f\u6709\u597d\u5904\u7684\u3002\u7b2c\u4e00\uff0c\u5b83\u5f3a\u5236\u8981\u6c42 Go \u8bed\u8a00\u5f00\u53d1\u8005\u4ece\u4ee3\u7801\u5c42\u9762\u6765\u89c4\u8303\u9519\u8bef\u7684\u7ba1\u7406\u65b9\u5f0f\uff0c\u8fd9\u9a71\u4f7f\u5f00\u53d1\u8005\u5199\u51fa\u66f4\u5065\u58ee\u7684\u4ee3\u7801\uff1b\u7b2c\u4e8c\uff0c\u8fd9\u79cd\u663e\u5f0f\u8fd4\u56de\u9519\u8bef\u7684\u65b9\u5f0f\u907f\u514d\u4e86 \u201ctry/catch \u4e00\u628a\u68ad\u201d\uff0c\u56e0\u4e3a\u8fd9\u79cd \u201c\u4e00\u65f6\u723d\u201d \u7684\u505a\u6cd5\u5f88\u53ef\u80fd\u5bfc\u81f4 Bug \u65e0\u6cd5\u51c6\u786e\u5b9a\u4f4d\uff0c\u4ece\u800c\u4ea7\u751f\u5f88\u591a\u4e0d\u53ef\u9884\u6d4b\u7684\u95ee\u9898\uff1b\u7b2c\u4e09\uff0c\u7531\u4e8e\u6ca1\u6709 try/catch \u7684\u62ec\u53f7\u6216\u989d\u5916\u7684\u4ee3\u7801\u5757\uff0cGo \u7a0b\u5e8f\u4ee3\u7801\u6574\u4f53\u770b\u8d77\u6765\u66f4\u6e05\u723d\uff0c\u53ef\u8bfb\u6027\u8f83\u5f3a\u3002","title":"\u9519\u8bef\u5904\u7406"},{"location":"golang/docs/%E5%BD%93%E7%BA%A2%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80Go%EF%BC%8C%E7%9C%9F%E7%9A%84%E6%98%AF%E6%9C%AA%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E4%B8%BB%E6%B5%81%E5%90%97%EF%BC%9F/#_7","text":"Go \u8bed\u8a00\u80af\u5b9a\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7279\u6027\uff0c\u4f46\u7b14\u8005\u8ba4\u4e3a\u4ee5\u4e0a\u7684\u7279\u6027\u662f Go \u8bed\u8a00\u4e2d\u6bd4\u8f83\u6709\u7279\u8272\u7684\uff0c\u662f\u533a\u5206\u5ea6\u6bd4\u8f83\u5f3a\u7684\u7279\u6027\u3002Go \u8bed\u8a00\u5176\u4ed6\u4e00\u4e9b\u7279\u6027\u8fd8\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u5982\u4e0b\u5185\u5bb9\u3002 \u7f16\u8bd1\u8fc5\u901f \u8de8\u5e73\u53f0 defer \u5ef6\u8fdf\u6267\u884c select/case \u901a\u9053\u9009\u62e9 \u76f4\u63a5\u7f16\u8bd1\u6210\u53ef\u6267\u884c\u7a0b\u5e8f \u975e\u5e38\u89c4\u4f9d\u8d56\u7ba1\u7406\uff08\u53ef\u4ee5\u76f4\u63a5\u5f15\u7528 Github \u4ed3\u5e93\u4f5c\u4e3a\u4f9d\u8d56\uff0c\u4f8b\u5982 import \"github.com/crawlab-team/go-trace\"\uff09 \u975e\u5e38\u89c4\u65e5\u671f\u683c\u5f0f\uff08\u683c\u5f0f\u4e3a \u201c2006-01-02 15:04:05\u201d\uff0c\u4f60\u6ca1\u770b\u9519\uff0c\u636e\u8bf4\u8fd9\u5c31\u662f Golang \u7684\u521b\u59cb\u65f6\u95f4\uff01\uff09","title":"\u5176\u4ed6"},{"location":"golang/docs/%E5%BD%93%E7%BA%A2%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80Go%EF%BC%8C%E7%9C%9F%E7%9A%84%E6%98%AF%E6%9C%AA%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E4%B8%BB%E6%B5%81%E5%90%97%EF%BC%9F/#_8","text":"\u524d\u9762\u4ecb\u7ecd\u4e86 Go \u7684\u5f88\u591a\u8bed\u8a00\u7279\u6027\uff0c\u60f3\u5fc5\u8bfb\u8005\u5df2\u7ecf\u5bf9 Golang \u6709\u4e86\u4e00\u4e9b\u57fa\u672c\u7684\u4e86\u89e3\u3002\u5176\u4e2d\u7684\u4e00\u4e9b\u8bed\u8a00\u7279\u6027\u4e5f\u6697\u793a\u4e86\u5b83\u76f8\u5bf9\u4e8e\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u7684\u4f18\u7f3a\u70b9\u3002Go \u8bed\u8a00\u867d\u7136\u73b0\u5728\u5f88\u706b\uff0c\u5728\u79f0\u8d5e\u5e76\u62e5\u62b1 Golang \u7684\u540c\u65f6\uff0c\u4e0d\u5f97\u4e0d\u4e86\u89e3\u5b83\u7684\u4e00\u4e9b\u7f3a\u70b9\u3002 \u8fd9\u91cc\u7b14\u8005\u4e0d\u6253\u7b97\u957f\u7bc7\u5927\u8bba\u7684\u89e3\u6790 Go \u8bed\u8a00\u7684\u4f18\u52a3\uff0c\u800c\u662f\u5c06\u5176\u4e2d\u76f8\u5173\u7684\u4e00\u4e9b\u4e8b\u5b9e\u5217\u4e3e\u51fa\u6765\uff0c\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u5224\u65ad\u3002\u4ee5\u4e0b\u662f\u7b14\u8005\u603b\u7ed3\u7684 Golang \u8bed\u8a00\u7279\u6027\u7684\u4e0d\u5b8c\u6574\u4f18\u7f3a\u70b9\u5bf9\u6bd4\u5217\u8868\u3002 \u5176\u5b9e\uff0c\u6bcf\u4e00\u4e2a\u7279\u6027\u5728\u67d0\u79cd\u60c5\u5883\u4e0b\u90fd\u6709\u5176\u76f8\u5e94\u7684\u4f18\u52bf\u548c\u52a3\u52bf\uff0c\u4e0d\u80fd\u4e00\u6982\u800c\u8bba\u3002\u5c31\u50cf Go \u8bed\u8a00\u91c7\u7528\u7684\u9759\u6001\u7c7b\u578b\u548c\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\uff0c\u65e2\u4e0d\u7f3a\u5c11\u7c7b\u578b\u7ea6\u675f\uff0c\u4e5f\u4e0d\u50cf\u4e25\u683c OOP \u90a3\u6837\u5197\u957f\u7e41\u6742\uff0c\u662f\u4ecb\u4e8e\u52a8\u6001\u8bed\u8a00\u548c\u4f20\u7edf\u9759\u6001\u7c7b\u578b OOP \u8bed\u8a00\u4e4b\u95f4\u7684\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u3002\u8fd9\u4e2a\u5b9a\u4f4d\u5728\u63d0\u5347 Golang \u5f00\u53d1\u6548\u7387\u7684\u540c\u65f6\uff0c\u4e5f\u9609\u5272\u4e86\u4e0d\u5c11\u5fc5\u8981 OOP \u8bed\u6cd5\u7279\u6027\uff0c\u4ece\u800c\u7f3a\u4e4f\u5feb\u901f\u6784\u5efa\u901a\u7528\u5de5\u7a0b\u6846\u67b6\u7684\u80fd\u529b\uff08\u8fd9\u91cc\u4e0d\u662f\u8bf4 Go \u65e0\u6cd5\u6784\u5efa\u901a\u7528\u6846\u67b6\uff0c\u800c\u662f\u5b83\u6ca1\u6709 Java\u3001C# \u8fd9\u4e48\u5bb9\u6613\uff09\u3002\u53e6\u5916\uff0cGo \u8bed\u8a00 \u201c\u5947\u8469\u201d \u7684\u9519\u8bef\u5904\u7406\u89c4\u8303\uff0c\u8ba9 Go \u5f00\u53d1\u8005\u4eec\u53c8\u7231\u53c8\u6068\uff1a\u53ef\u4ee5\u5f00\u53d1\u51fa\u66f4\u5065\u58ee\u7684\u5e94\u7528\uff0c\u4f46\u540c\u65f6\u4e5f\u727a\u7272\u4e86\u4e00\u90e8\u5206\u4ee3\u7801\u7684\u7b80\u6d01\u6027\u3002\u8981\u77e5\u9053\uff0cGo \u8bed\u8a00\u7684\u8bbe\u8ba1\u7406\u5ff5\u662f\u4e3a\u4e86 \u201c\u5927\u9053\u81f3\u7b80\u201d\uff0c\u56e0\u6b64\u624d\u4f1a\u5728\u8ffd\u6c42\u9ad8\u6027\u80fd\u7684\u540c\u65f6\u8bbe\u8ba1\u5f97\u5c3d\u53ef\u80fd\u7b80\u5355\u3002 \u65e0\u53ef\u5426\u8ba4\u7684\u662f\uff0cGo \u8bed\u8a00\u5185\u7f6e\u7684\u5e76\u53d1\u652f\u6301\u662f\u975e\u5e38\u8fd1\u5e74\u6765\u975e\u5e38\u521b\u65b0\u7684\u7279\u6027\uff0c\u8fd9\u4e5f\u662f\u5b83\u88ab\u5206\u5e03\u5f0f\u7cfb\u7edf\u5e7f\u6cdb\u91c7\u7528\u7684\u91cd\u8981\u539f\u56e0\u3002\u540c\u65f6\uff0c\u5b83\u76f8\u5bf9\u4e8e\u52a8\u8f84\u7f16\u8bd1\u5341\u51e0\u5206\u949f\u7684 Java \u6765\u8bf4\u662f\u975e\u5e38\u5feb\u7684\u3002\u6b64\u5916\uff0cGo \u8bed\u8a00\u6ca1\u6709\u56e0\u4e3a\u8bed\u6cd5\u7b80\u5355\u800c\u727a\u7272\u4e86\u7a33\u5b9a\u6027\uff1b\u76f8\u53cd\uff0c\u5b83\u4ece\u7b80\u5355\u7684\u7ea6\u675f\u89c4\u8303\u4e86\u6574\u4e2a Go \u9879\u76ee\u4ee3\u7801\u98ce\u683c\u3002\u56e0\u6b64\uff0c \u201c\u5feb\u201d\uff08Fast\uff09\u3001\u201c\u7b80\u201d\uff08Concise\uff09\u3001\u201c\u7a33\u201d\uff08Robust\uff09 \u662f Go \u8bed\u8a00\u7684\u8bbe\u8ba1\u76ee\u7684\u3002\u6211\u4eec\u5728\u5bf9\u5b66\u4e60 Golang \u7684\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u65e0\u8111\u7684\u63a5\u7eb3\u5b83\u7684\u4e00\u5207\uff0c\u800c\u662f\u5e94\u8be5\u6839\u636e\u5b83\u81ea\u8eab\u7684\u7279\u6027\u5224\u65ad\u5728\u5b9e\u9645\u9879\u76ee\u5e94\u7528\u4e2d\u7684\u60c5\u51b5\u3002","title":"\u4f18\u7f3a\u70b9\u6982\u8ff0"},{"location":"golang/docs/%E5%BD%93%E7%BA%A2%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80Go%EF%BC%8C%E7%9C%9F%E7%9A%84%E6%98%AF%E6%9C%AA%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E4%B8%BB%E6%B5%81%E5%90%97%EF%BC%9F/#_9","text":"\u7ecf\u8fc7\u524d\u6587\u5173\u4e8e Golang \u5404\u4e2a\u7ef4\u5ea6\u7684\u8ba8\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff1aGo \u8bed\u8a00\u5e76\u4e0d\u662f\u540e\u7aef\u5f00\u53d1\u7684\u4e07\u80fd\u836f\u3002\u5728\u5b9e\u9645\u5f00\u53d1\u5de5\u4f5c\u4e2d\uff0c\u5f00\u53d1\u8005\u5e94\u8be5\u907f\u514d\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u65e0\u8111\u4f7f\u7528 Golang \u4f5c\u4e3a\u540e\u7aef\u5f00\u53d1\u8bed\u8a00\u3002\u76f8\u53cd\uff0c\u5de5\u7a0b\u5e08\u5728\u51b3\u5b9a\u6280\u672f\u9009\u578b\u4e4b\u524d\u5e94\u8be5\u5168\u9762\u4e86\u89e3\u5019\u9009\u6280\u672f\uff08\u8bed\u8a00\u3001\u6846\u67b6\u6216\u67b6\u6784\uff09\u7684\u65b9\u65b9\u9762\u9762\uff0c\u5305\u62ec\u5019\u9009\u6280\u672f\u4e0e\u4e1a\u52a1\u9700\u6c42\u7684\u5207\u5408\u5ea6\uff0c\u4e0e\u5f00\u53d1\u56e2\u961f\u7684\u878d\u5408\u5ea6\uff0c\u4ee5\u53ca\u5176\u5b66\u4e60\u3001\u5f00\u53d1\u3001\u65f6\u95f4\u6210\u672c\u7b49\u56e0\u7d20\u3002\u7b14\u8005\u5728\u5b66\u4e60\u4e86\u5305\u62ec\u524d\u540e\u7aef\u7684\u4e00\u4e9b\u7f16\u7a0b\u8bed\u8a00\u4e4b\u540e\uff0c\u53d1\u73b0\u5b83\u4eec\u5404\u81ea\u6709\u5404\u81ea\u7684\u4f18\u52bf\uff0c\u4e5f\u6709\u76f8\u5e94\u7684\u52a3\u52bf\u3002\u5982\u679c\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u80fd\u5e7f\u4e3a\u4eba\u77e5\uff0c\u90a3\u5b83\u7edd\u5bf9\u4e0d\u4f1a\u662f\u4e00\u95e8\u7cdf\u7cd5\u8bed\u8a00\u3002\u56e0\u6b64\uff0c\u7b14\u8005\u4e0d\u4f1a\u65ad\u8a00 \u201cXXX \u662f\u4e16\u754c\u4e0a\u6700\u597d\u7684\u8bed\u8a00\u201c\uff0c\u800c\u662f\u7ed9\u8bfb\u8005\u5206\u4eab\u4e2a\u4eba\u5173\u4e8e\u7279\u5b9a\u5e94\u7528\u573a\u666f\u4e0b\u6280\u672f\u9009\u578b\u7684\u601d\u8def\u3002\u5f53\u7136\uff0c\u672c\u6587\u662f\u9488\u5bf9 Go \u8bed\u8a00\u7684\u6280\u672f\u6587\uff0c\u63a5\u4e0b\u6765\u7b14\u8005\u5c06\u5206\u4eab\u4e00\u4e0b\u4e2a\u4eba\u8ba4\u4e3a Golang \u6700\u9002\u5408\u7684\u5e94\u7528\u573a\u666f\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"golang/docs/%E5%BD%93%E7%BA%A2%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80Go%EF%BC%8C%E7%9C%9F%E7%9A%84%E6%98%AF%E6%9C%AA%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E4%B8%BB%E6%B5%81%E5%90%97%EF%BC%9F/#_10","text":"Golang \u662f\u975e\u5e38\u9002\u5408\u5728\u5206\u5e03\u5f0f\u5e94\u7528\u573a\u666f\u4e0b\u5f00\u53d1\u7684\u3002\u5206\u5e03\u5f0f\u5e94\u7528\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5c3d\u53ef\u80fd\u591a\u7684\u5229\u7528\u8ba1\u7b97\u8d44\u6e90\u548c\u7f51\u7edc\u5e26\u5bbd\uff0c\u4ee5\u6c42\u6700\u5927\u5316\u7cfb\u7edf\u7684\u6574\u4f53\u6027\u80fd\u548c\u6548\u7387\uff0c\u5176\u4e2d\u91cd\u8981\u7684\u9700\u6c42\u529f\u80fd\u5c31\u662f\u5e76\u53d1\uff08Concurrency\uff09\u3002\u800c Go \u662f\u652f\u6301\u9ad8\u5e76\u53d1\u548c\u5f02\u6b65\u7f16\u7a0b\u65b9\u9762\u7684\u4f7c\u4f7c\u8005\u3002 \u524d\u9762\u5df2\u7ecf\u63d0\u5230\uff0cGo \u8bed\u8a00\u5185\u7f6e\u4e86\u534f\u7a0b\uff08Goroutine\uff09\u548c\u901a\u9053\uff08Channel\uff09\u4e24\u5927\u5e76\u53d1\u7279\u6027\uff0c\u8fd9\u4f7f\u540e\u7aef\u5f00\u53d1\u8005\u8fdb\u884c\u5f02\u6b65\u7f16\u7a0b\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u3002Golang \u4e2d\u8fd8\u5185\u7f6e\u4e86sync \u5e93\uff0c\u5305\u542b Mutex\uff08\u4e92\u65a5\u9501\uff09\u3001WaitGroup\uff08\u7b49\u5f85\u7ec4\uff09\u3001Pool\uff08\u4e34\u65f6\u5bf9\u8c61\u6c60\uff09\u7b49\u63a5\u53e3\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u5728\u5e76\u53d1\u7f16\u7a0b\u4e2d\u80fd\u66f4\u5b89\u5168\u7684\u638c\u63a7 Go \u7a0b\u5e8f\u7684\u5e76\u53d1\u884c\u4e3a\u3002Golang \u8fd8\u6709\u5f88\u591a\u5206\u5e03\u5f0f\u5e94\u7528\u5f00\u53d1\u5de5\u5177\uff0c\u4f8b\u5982\u5206\u5e03\u5f0f\u50a8\u5b58\u7cfb\u7edf\uff08Etcd\u3001SeaweedFS\uff09\u3001RPC \u5e93\uff08gRPC\u3001Thrift\uff09\u3001\u4e3b\u6d41\u6570\u636e\u5e93 SDK\uff08mongo-driver\u3001gnorm\u3001redigo\uff09\u7b49\u3002\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u6709\u6548\u7684\u6784\u5efa\u5206\u5e03\u5f0f\u5e94\u7528\u3002","title":"\u5206\u5e03\u5f0f\u5e94\u7528"},{"location":"golang/docs/%E5%BD%93%E7%BA%A2%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80Go%EF%BC%8C%E7%9C%9F%E7%9A%84%E6%98%AF%E6%9C%AA%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E4%B8%BB%E6%B5%81%E5%90%97%EF%BC%9F/#_11","text":"\u7a0d\u5fae\u4e86\u89e3\u7f51\u7edc\u722c\u866b\u7684\u5f00\u53d1\u8005\u5e94\u8be5\u4f1a\u542c\u8bf4\u8fc7 Scrapy\uff0c\u518d\u4e0d\u6d4e\u4e5f\u662f Python\u3002\u5e02\u9762\u4e0a\u5173\u4e8e Python \u7f51\u7edc\u722c\u866b\u7684\u6280\u672f\u4e66\u7c4d\u6570\u4e0d\u80dc\u6570\uff0c\u4f8b\u5982\u5d14\u5e86\u624d\u7684\u300aPython 3 \u7f51\u7edc\u5f00\u53d1\u5b9e\u6218\u300b\u548c\u97e6\u4e16\u4e1c\u7684\u300aPython 3 \u7f51\u7edc\u722c\u866b\u5b9d\u5178\u300b\u3002\u7528 Python \u7f16\u5199\u7684\u9ad8\u6027\u80fd\u722c\u866b\u6846\u67b6 Scrapy\uff0c\u81ea\u53d1\u5e03\u4ee5\u6765\u4e00\u76f4\u662f\u722c\u866b\u5de5\u7a0b\u5e08\u7684\u9996\u9009\u3002 \u4e0d\u8fc7\uff0c\u7531\u4e8e\u8fd1\u671f Go \u8bed\u8a00\u7684\u8fc5\u901f\u53d1\u5c55\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u722c\u866b\u5de5\u7a0b\u5e08\u6ce8\u610f\u5230\u7528 Golang \u5f00\u53d1\u7f51\u8def\u722c\u866b\u7684\u5de8\u5927\u4f18\u52bf\u3002\u5176\u4e2d\uff0c\u7528 Go \u8bed\u8a00\u7f16\u5199\u7684 Colly \u722c\u866b\u6846\u67b6\uff0c\u5982\u4eca\u5728 Github \u4e0a\u5df2\u7ecf\u6709 13k+ \u6807\u661f\u3002\u5176\u7b80\u6d01\u7684 API \u4ee5\u53ca\u9ad8\u6548\u7684\u91c7\u96c6\u901f\u5ea6\uff0c\u5438\u5f15\u4e86\u5f88\u591a\u722c\u866b\u5de5\u7a0b\u5e08\uff0c\u5360\u636e\u4e86\u722c\u866b\u754c\u4e00\u54e5 Scrapy \u7684\u90e8\u5206\u4efd\u989d\u3002\u524d\u9762\u5df2\u7ecf\u63d0\u5230\uff0cGo \u8bed\u8a00\u5185\u7f6e\u7684\u5e76\u53d1\u7279\u6027\u8ba9\u4e25\u91cd\u4f9d\u8d56\u7f51\u7edc\u5e26\u5bbd\u7684\u722c\u866b\u7a0b\u5e8f\u66f4\u52a0\u9ad8\u6548\uff0c\u5f88\u5927\u7684\u63d0\u9ad8\u4e86\u6570\u636e\u91c7\u96c6\u6548\u7387\u3002\u53e6\u5916\uff0cGo \u8bed\u8a00\u4f5c\u4e3a\u9759\u6001\u8bed\u8a00\uff0c\u76f8\u5bf9\u4e8e\u52a8\u6001\u8bed\u8a00 Python \u6765\u8bf4\u6709\u66f4\u597d\u7684\u7ea6\u675f\u4e0b\uff0c\u56e0\u6b64\u5065\u58ee\u6027\u548c\u7a33\u5b9a\u6027\u90fd\u66f4\u597d\u3002","title":"\u7f51\u7edc\u722c\u866b"},{"location":"golang/docs/%E5%BD%93%E7%BA%A2%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80Go%EF%BC%8C%E7%9C%9F%E7%9A%84%E6%98%AF%E6%9C%AA%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E4%B8%BB%E6%B5%81%E5%90%97%EF%BC%9F/#api","text":"Golang \u6709\u5f88\u591a\u4f18\u79c0\u7684\u540e\u7aef\u6846\u67b6\uff0c\u5b83\u4eec\u5927\u90e8\u5206\u90fd\u975e\u5e38\u5b8c\u5907\u7684\u652f\u6301\u4e86\u73b0\u4ee3\u540e\u7aef\u7cfb\u7edf\u7684\u5404\u79cd\u529f\u80fd\u9700\u6c42\uff1aRESTful API\u3001\u8def\u7531\u3001\u4e2d\u95f4\u4ef6\u3001\u914d\u7f6e\u3001\u9274\u6743\u7b49\u6a21\u5757\u3002\u800c\u4e14\u7528 Golang \u5199\u7684\u540e\u7aef\u5e94\u7528\u6027\u80fd\u5f88\u9ad8\uff0c\u901a\u5e38\u6709\u975e\u5e38\u5feb\u7684\u54cd\u5e94\u901f\u5ea6\u3002\u7b14\u8005\u66fe\u7ecf\u5728\u5f00\u6e90\u722c\u866b\u7ba1\u7406\u5e73\u53f0 Crawlab \u4e2d\u7528 Golang \u91cd\u6784\u4e86 Python \u7684\u540e\u7aef API\uff0c\u54cd\u5e94\u901f\u5ea6\u4ece\u4e4b\u524d\u7684\u51e0\u767e\u6beb\u79d2\u4f18\u5316\u5230\u4e86\u51e0\u5341\u6beb\u79d2\u751a\u81f3\u662f\u51e0\u6beb\u79d2\uff0c\u7528\u5b9e\u8df5\u8bc1\u660e Go \u8bed\u8a00\u5728\u540e\u7aef\u6027\u80fd\u65b9\u9762\u5168\u9762\u78be\u538b\u52a8\u6001\u8bed\u8a00\u3002Go \u8bed\u8a00\u4e2d\u6bd4\u8f83\u77e5\u540d\u7684\u540e\u7aef\u6846\u67b6\u6709 Gin\u3001Beego\u3001Echo\u3001Iris\u3002 \u5f53\u7136\uff0c\u8fd9\u91cc\u5e76\u4e0d\u662f\u8bf4\u7528 Golang \u5199\u540e\u7aef\u5c31\u5b8c\u5168\u662f\u4e00\u4e2a\u6b63\u786e\u7684\u9009\u62e9\u3002\u7b14\u8005\u5728\u5de5\u4f5c\u4e2d\u4f1a\u7528\u5230 Java \u548c C#\uff0c\u7528\u4e86\u5404\u81ea\u7684\u4e3b\u6d41\u6846\u67b6\uff08SpringBoot \u548c .Net Core\uff09\u4e4b\u540e\uff0c\u53d1\u73b0\u8fd9\u4e24\u95e8\u4f20\u7edf OOP \u8bed\u8a00\u867d\u7136\u8bed\u6cd5\u5570\u55e6\uff0c\u4f46\u5b83\u4eec\u7684\u8bed\u6cd5\u7279\u6027\u5f88\u4e30\u5bcc\uff0c\u7279\u522b\u662f\u6cdb\u578b\uff0c\u80fd\u591f\u8f7b\u677e\u5e94\u5bf9\u4e00\u4e9b\u903b\u8f91\u590d\u6742\u3001\u91cd\u590d\u6027\u9ad8\u7684\u4e1a\u52a1\u9700\u6c42\u3002\u56e0\u6b64\uff0c\u7b14\u8005\u8ba4\u4e3a\u5728\u8003\u8651\u7528 Go \u6765\u7f16\u5199\u540e\u7aef API \u65f6\u5019\uff0c\u53ef\u4ee5\u63d0\u524d\u8c03\u7814\u4e00\u4e0b Java \u6216 C#\uff0c\u5b83\u4eec\u5728\u5199\u540e\u7aef\u4e1a\u52a1\u529f\u80fd\u65b9\u9762\u505a\u5f97\u975e\u5e38\u68d2\u3002","title":"\u540e\u7aef API"},{"location":"golang/docs/%E5%BD%93%E7%BA%A2%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80Go%EF%BC%8C%E7%9C%9F%E7%9A%84%E6%98%AF%E6%9C%AA%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E4%B8%BB%E6%B5%81%E5%90%97%EF%BC%9F/#_12","text":"\u672c\u7bc7\u6587\u7ae0\u4ece Go \u8bed\u8a00\u7684\u4e3b\u8981\u8bed\u6cd5\u7279\u6027\u5165\u624b\uff0c\u5faa\u5e8f\u6e10\u8fdb\u5206\u6790\u4e86 Go \u8bed\u8a00\u4f5c\u4e3a\u540e\u7aef\u7f16\u7a0b\u8bed\u8a00\u7684\u4f18\u70b9\u548c\u7f3a\u70b9\uff0c\u4ee5\u53ca\u5176\u5728\u5b9e\u9645\u8f6f\u4ef6\u9879\u76ee\u5f00\u53d1\u4e2d\u7684\u8bd5\u7528\u573a\u666f\u3002\u7b14\u8005\u8ba4\u4e3a Go \u8bed\u8a00\u4e0e\u5176\u4ed6\u8bed\u8a00\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u8bed\u6cd5\u7b80\u6d01\u3001\u5929\u7136\u652f\u6301\u5e76\u53d1\u3001\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\u3001\u9519\u8bef\u5904\u7406\u7b49\u65b9\u9762\uff0c\u5e76\u4e14\u5bf9\u5404\u4e2a\u8bed\u8a00\u7279\u6027\u5728\u6b63\u53cd\u4e24\u65b9\u9762\u8fdb\u884c\u4e86\u5206\u6790\u3002\u6700\u540e\uff0c\u7b14\u8005\u6839\u636e\u4e4b\u524d\u7684\u5206\u6790\u5185\u5bb9\uff0c\u5f97\u51fa\u4e86 Go \u8bed\u8a00\u4f5c\u4e3a\u540e\u7aef\u5f00\u53d1\u7f16\u7a0b\u8bed\u8a00\u7684\u9002\u7528\u573a\u666f\uff0c\u4e5f\u5c31\u662f\u5206\u5e03\u5f0f\u5e94\u7528\u3001\u7f51\u7edc\u722c\u866b\u4ee5\u53ca\u540e\u7aefAPI\u3002 \u5f53\u7136\uff0cGo \u8bed\u8a00\u7684\u5b9e\u9645\u5e94\u7528\u9886\u57df\u8fd8\u4e0d\u9650\u4e8e\u6b64\u3002\u5b9e\u9645\u4e0a\uff0c\u4e0d\u5c11\u77e5\u540d\u6570\u636e\u5e93\u90fd\u662f\u7528 Golang \u5f00\u53d1\u7684\uff0c\u4f8b\u5982\u65f6\u5e8f\u6570\u636e\u5e93 Prometheus \u548c InfluxDB\u3001\u4ee5\u53ca\u6709 NewSQL \u4e4b\u79f0\u7684 TiDB\u3002\u6b64\u5916\uff0c\u5728\u673a\u5668\u5b66\u4e60\u65b9\u9762\uff0cGo \u8bed\u8a00\u4e5f\u6709\u4e00\u5b9a\u7684\u4f18\u52bf\uff0c\u53ea\u662f\u76ee\u524d\u6765\u8bf4\uff0cGoogle \u56e0\u4e3a Swift \u8ddf TensorFlow \u7684\u610f\u5411\u5408\u4f5c\uff0c\u4f3c\u4e4e\u8fd8\u6ca1\u6709\u5927\u529b\u63a8\u5e7f Go \u5728\u673a\u5668\u5b66\u4e60\u65b9\u9762\u7684\u5e94\u7528\uff0c\u4e0d\u8fc7\u4e00\u4e9b\u6f5c\u5728\u7684\u5f00\u6e90\u9879\u76ee\u5df2\u7ecf\u6d8c\u73b0\u51fa\u6765\uff0c\u4f8b\u5982 GoLearn\u3001GoML\u3001Gorgonia \u7b49\u3002 \u5728\u7406\u89e3 Go \u8bed\u8a00\u7684\u4f18\u52bf\u548c\u9002\u7528\u573a\u666f\u7684\u540c\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u610f\u8bc6\u5230 Go \u8bed\u8a00\u5e76\u4e0d\u662f\u5168\u80fd\u7684\u3002\u5b83\u76f8\u8f83\u4e8e\u5176\u4ed6\u4e00\u4e9b\u4e3b\u6d41\u6846\u67b6\u6765\u8bf4\u4e5f\u6709\u4e00\u4e9b\u7f3a\u70b9\u3002\u5f00\u53d1\u8005\u5728\u51c6\u5907\u91c7\u7528 Go \u4f5c\u4e3a\u5b9e\u9645\u5de5\u4f5c\u5f00\u53d1\u8bed\u8a00\u7684\u65f6\u5019\uff0c\u9700\u8981\u5168\u9762\u4e86\u89e3\u5176\u8bed\u8a00\u7279\u6027\uff0c\u4ece\u800c\u505a\u51fa\u6700\u5408\u7406\u7684\u6280\u672f\u9009\u578b\u3002\u5c31\u50cf\u6253\u7f51\u7403\u4e00\u6837\uff0c\u4e0d\u4ec5\u9700\u8981\u638c\u63e1\u6b63\u53cd\u624b\uff0c\u8fd8\u8981\u4f1a\u53d1\u7403\u3001\u9ad8\u538b\u7403\u3001\u622a\u51fb\u7403\u7b49\u6280\u672f\u52a8\u4f5c\uff0c\u8fd9\u6837\u624d\u80fd\u628a\u7f51\u7403\u6253\u597d\u3002","title":"\u603b\u7ed3"},{"location":"golang/docs/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Go%20Map/","text":"\u54c8\u5e0c\u8868\u7684\u610f\u4e49\u4e0d\u8a00\u800c\u55bb\uff0c\u5b83\u80fd\u63d0\u4f9b O(1) \u590d\u6742\u5ea6\u7684\u8bfb\u5199\u6027\u80fd\uff0c\u6240\u4ee5\u4e3b\u6d41\u7f16\u7a0b\u8bed\u8a00\u4e2d\u90fd\u5185\u7f6e\u6709\u54c8\u5e0c\u8868\u3002 \u54c8\u5e0c\u8868\u7684\u5173\u952e\u5728\u4e8e\u54c8\u5e0c\u51fd\u6570\uff0c \u597d\u7684\u54c8\u5e0c\u51fd\u6570\u80fd\u51cf\u5c11\u54c8\u5e0c\u78b0\u649e\uff0c\u63d0\u4f9b\u6700\u4f18\u79c0\u7684\u8bfb\u5199\u6027\u80fd\u3002 \u54c8\u5e0c\u78b0\u649e \u56e0\u4e3a\u6ca1\u6709\u5b8c\u7f8e\u7684\u54c8\u5e0c\u51fd\u6570\uff0c \u6240\u4ee5\u54c8\u5e0c\u78b0\u649e\u4e0d\u53ef\u907f\u514d\uff0c\u4e00\u822c\u6709\u5f00\u653e\u5bfb\u5740\u6cd5\u548c\u62c9\u94fe\u6cd5\uff0c\u5176\u4e2d\u62c9\u94fe\u6cd5\u662f\u4e3b\u6d41 \u5f00\u653e\u5bfb\u5740\u6cd5\uff1a\u5f53\u5411\u54c8\u5e0c\u8868\u5199\u5165\u65b0\u7684\u6570\u636e\u65f6\uff0c\u5982\u679c\u53d1\u751f\u4e86\u51b2\u7a81\uff0c\u5c31\u4f1a\u5c06\u952e\u503c\u5bf9\u5199\u5165\u5230\u4e0b\u4e00\u4e2a\u7d22\u5f15\u4e0d\u4e3a\u7a7a\u7684\u4f4d\u7f6e \u62c9\u94fe\u6cd5\uff1a\u62c9\u94fe\u6cd5\u4e00\u822c\u4f7f\u7528\u6570\u7ec4\u548c\u94fe\u8868\u7ec4\u6210\uff0c\u6570\u636e\u7ecf\u8fc7\u54c8\u5e0c\u51fd\u6570\u5f97\u5230\u4e00\u4e2a\u6876\u65f6\uff0c\u5148\u904d\u5386\u6876\u4e2d\u7684\u94fe\u8868\uff0c\u5b58\u5728\u76f8\u540c\u7684\u952e\u503c\u5bf9\uff0c\u5219\u66f4\u65b0\uff0c\u4e0d\u5b58\u5728\u5219\u5728\u94fe\u8868\u672b\u5c3e\u8ffd\u52a0\u65b0\u952e\u503c\u5bf9 Go \u8868\u793a\u54c8\u5e0c\u8868\u7684\u6570\u636e\u7ed3\u6784 type hmap struct { // \u8868\u793a\u54c8\u5e0c\u8868\u4e2d\u5143\u7d20\u7684\u6570\u91cf count int flags uint8 // \u8868\u793a\u54c8\u5e0c\u8868\u4e2d\u6876\u7684\u6570\u91cf\uff0c len(buckets) = 2^B B uint8 noverflow uint16 // hash\u51fd\u6570\u7684\u79cd\u5b50 hash0 uint32 buckets unsafe.Pointer // \u7528\u4e8e\u5728\u6269\u5bb9\u65f6\u4fdd\u5b58\u4e4b\u524d buckets // \u56e0\u4e3a\u6bcf\u6b21\u6269\u5bb9\u90fd\u662f2\u7684\u500d\u6570\uff0c\u6240\u4ee5 bucket = 2oldbuckets oldbuckets unsafe.Pointer nevacuate uintptr extra *mapextra } type mapextra struct { overflow *[]*bmap oldoverflow *[]*bmap nextOverflow *bmap } \u54c8\u5e0c\u8868 hmap \u7684\u6876\u662f bmap\uff0c\u6bcf\u4e2a bmap \u90fd\u80fd\u5b58\u50a8 8 \u4e2a\u952e\u503c\u5bf9\uff0c\u5355\u4e2a\u6876\u88c5\u6ee1\u65f6\u4f1a\u4f7f\u7528 nextOverflow \u6876\u5b58\u50a8\u6ea2\u51fa\u7684\u6570\u636e type bmap struct { // \u5b58\u50a8\u4e86\u952e\u7684\u54c8\u5e0c\u7684\u9ad8 8 \u4f4d // \u901a\u8fc7\u6bd4\u8f83\u4e0d\u540c\u952e\u7684\u54c8\u5e0c\u7684\u9ad8 8 \u4f4d\u53ef\u4ee5\u51cf\u5c11\u8bbf\u95ee\u952e\u503c\u5bf9\u6b21\u6570\u4ee5\u63d0\u9ad8\u6027\u80fd tophash [bucketCnt]uint8 } \u8bbf\u95ee map \u4e2d\u7684\u6570\u636e \u5982\u4e0a\u56fe\u6240\u793a\uff0c\u6bcf\u4e00\u4e2a\u6876\u90fd\u662f\u4e00\u6574\u7247\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5f53\u53d1\u73b0\u6876\u4e2d\u7684 tophash \u4e0e\u4f20\u5165\u952e\u7684 tophash \u5339\u914d\u4e4b\u540e\uff0c\u6211\u4eec\u4f1a\u901a\u8fc7\u6307\u9488\u548c\u504f\u79fb\u91cf\u83b7\u53d6\u54c8\u5e0c\u4e2d\u5b58\u50a8\u7684\u952e keys[0] \u5e76\u4e0e key \u6bd4\u8f83\uff0c\u5982\u679c\u4e24\u8005\u76f8\u540c\u5c31\u4f1a\u83b7\u53d6\u76ee\u6807\u503c\u7684\u6307\u9488 values[0] \u5e76\u8fd4\u56de \u5411 map \u5199\u5165\u6570\u636e \u51fd\u6570\u4f1a\u6839\u636e\u4f20\u5165\u7684\u952e\u62ff\u5230\u5bf9\u5e94\u7684\u54c8\u5e0c\u548c\u6876\uff0c\u901a\u8fc7\u904d\u5386\u6bd4\u8f83\u6876\u4e2d\u5b58\u50a8\u7684 tophash \u548c\u952e\u7684\u54c8\u5e0c\uff0c\u5982\u679c\u627e\u5230\u4e86\u76f8\u540c\u7ed3\u679c\u5c31\u4f1a\u8fd4\u56de\u76ee\u6807\u4f4d\u7f6e\u7684\u5730\u5740\uff0c\u83b7\u5f97\u76ee\u6807\u5730\u5740\u4e4b\u540e\u4f1a\u901a\u8fc7\u7b97\u672f\u8ba1\u7b97\u5bfb\u5740\u83b7\u5f97\u952e\u503c\u5bf9 k \u548c val\uff0c \u5982\u679c\u5f53\u524d\u952e\u503c\u5bf9\u5728\u54c8\u5e0c\u4e2d\u4e0d\u5b58\u5728\uff0c\u54c8\u5e0c\u4f1a\u4e3a\u65b0\u952e\u503c\u5bf9\u89c4\u5212\u5b58\u50a8\u7684\u5185\u5b58\u5730\u5740\uff0c\u8fd9\u671f\u95f4\u53ea\u4f1a\u8fd4\u56de\u5185\u5b58\u5730\u5740\uff0c\u771f\u6b63\u7684\u8d4b\u503c\u64cd\u4f5c\u662f\u5728\u7f16\u8bd1\u671f\u95f4\u63d2\u5165\u7684\u3002 00018 (+5) CALL runtime.mapassign_fast64(SB) 00020 (5) MOVQ 24(SP), DI ;; DI = &value 00026 (5) LEAQ go.string.\"88\"(SB), AX ;; AX = &\"88\" 00027 (5) MOVQ AX, (DI) ;; *DI = AX \u6211\u4eec\u901a\u8fc7 LEAQ \u6307\u4ee4\u5c06\u5b57\u7b26\u4e32\u7684\u5730\u5740\u5b58\u50a8\u5230\u5bc4\u5b58\u5668 AX \u4e2d\uff0cMOVQ \u6307\u4ee4\u5c06\u5b57\u7b26\u4e32 \"88\" \u5b58\u50a8\u5230\u4e86\u76ee\u6807\u5730\u5740\u4e0a\u5b8c\u6210\u4e86\u8fd9\u6b21\u54c8\u5e0c\u7684\u5199\u5165 \u6269\u5bb9 \u968f\u7740\u54c8\u5e0c\u8868\u4e2d\u5143\u7d20\u7684\u9010\u6e10\u589e\u52a0\uff0c\u54c8\u5e0c\u8868\u7684\u6027\u80fd\u4f1a\u9010\u6e10\u6076\u5316\uff0c\u5f53\u88c5\u8f7d\u56e0\u5b50 > 6.5 \u65f6\uff0c \u6216\u8005 \u54c8\u5e0c\u8868\u521b\u5efa\u4e86\u592a\u591a\u7684\u6ea2\u51fa\u6876\uff0c \u4f1a\u89e6\u53d1\u6269\u5bb9 \u88c5\u8f7d\u56e0\u5b50 = \u5143\u7d20\u6570\u91cf / \u6876\u6570\u91cf \u54c8\u5e0c\u8868\u5728\u6269\u5bb9\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u521b\u5efa\u4e00\u7ec4\u65b0\u6876\u548c\u6ea2\u51fa\u6876\uff0c\u968f\u540e\u5c06\u539f\u6cb9\u7684\u6876\u6570\u7ec4\u8bbe\u7f6e\u5230 oldbuckets \u4e0a\uff0c\u5c06\u65b0\u6876\u8bbe\u7f6e\u5230 buckets \u4e0a\uff0c\u65b0\u8ba1\u7b97\u65e7\u6876\u5185\u5143\u7d20\u7684\u54c8\u5e0c\u5230\u65b0\u6876\u4e0a\uff0c \u5728\u6269\u5bb9\u671f\u95f4\u8bbf\u95ee\u54c8\u5e0c\u8868\u65f6\u4f1a\u4f7f\u7528\u65e7\u6876\uff0c\u6574\u4e2a\u671f\u95f4\u5143\u7d20\u518d\u5206\u914d\u7684\u8fc7\u7a0b\u4e5f\u662f\u5728\u8c03\u7528\u5199\u64cd\u4f5c\u65f6\u589e\u91cf\u8fdb\u884c\u7684\uff0c\u4e0d\u4f1a\u9020\u6210\u6027\u80fd\u7684\u77ac\u65f6\u5de8\u5927\u6296\u52a8","title":"\u6df1\u5165\u7406\u89e3 Go Map"},{"location":"golang/docs/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Go%20Map/#_1","text":"\u56e0\u4e3a\u6ca1\u6709\u5b8c\u7f8e\u7684\u54c8\u5e0c\u51fd\u6570\uff0c \u6240\u4ee5\u54c8\u5e0c\u78b0\u649e\u4e0d\u53ef\u907f\u514d\uff0c\u4e00\u822c\u6709\u5f00\u653e\u5bfb\u5740\u6cd5\u548c\u62c9\u94fe\u6cd5\uff0c\u5176\u4e2d\u62c9\u94fe\u6cd5\u662f\u4e3b\u6d41 \u5f00\u653e\u5bfb\u5740\u6cd5\uff1a\u5f53\u5411\u54c8\u5e0c\u8868\u5199\u5165\u65b0\u7684\u6570\u636e\u65f6\uff0c\u5982\u679c\u53d1\u751f\u4e86\u51b2\u7a81\uff0c\u5c31\u4f1a\u5c06\u952e\u503c\u5bf9\u5199\u5165\u5230\u4e0b\u4e00\u4e2a\u7d22\u5f15\u4e0d\u4e3a\u7a7a\u7684\u4f4d\u7f6e \u62c9\u94fe\u6cd5\uff1a\u62c9\u94fe\u6cd5\u4e00\u822c\u4f7f\u7528\u6570\u7ec4\u548c\u94fe\u8868\u7ec4\u6210\uff0c\u6570\u636e\u7ecf\u8fc7\u54c8\u5e0c\u51fd\u6570\u5f97\u5230\u4e00\u4e2a\u6876\u65f6\uff0c\u5148\u904d\u5386\u6876\u4e2d\u7684\u94fe\u8868\uff0c\u5b58\u5728\u76f8\u540c\u7684\u952e\u503c\u5bf9\uff0c\u5219\u66f4\u65b0\uff0c\u4e0d\u5b58\u5728\u5219\u5728\u94fe\u8868\u672b\u5c3e\u8ffd\u52a0\u65b0\u952e\u503c\u5bf9","title":"\u54c8\u5e0c\u78b0\u649e"},{"location":"golang/docs/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Go%20Map/#go","text":"type hmap struct { // \u8868\u793a\u54c8\u5e0c\u8868\u4e2d\u5143\u7d20\u7684\u6570\u91cf count int flags uint8 // \u8868\u793a\u54c8\u5e0c\u8868\u4e2d\u6876\u7684\u6570\u91cf\uff0c len(buckets) = 2^B B uint8 noverflow uint16 // hash\u51fd\u6570\u7684\u79cd\u5b50 hash0 uint32 buckets unsafe.Pointer // \u7528\u4e8e\u5728\u6269\u5bb9\u65f6\u4fdd\u5b58\u4e4b\u524d buckets // \u56e0\u4e3a\u6bcf\u6b21\u6269\u5bb9\u90fd\u662f2\u7684\u500d\u6570\uff0c\u6240\u4ee5 bucket = 2oldbuckets oldbuckets unsafe.Pointer nevacuate uintptr extra *mapextra } type mapextra struct { overflow *[]*bmap oldoverflow *[]*bmap nextOverflow *bmap } \u54c8\u5e0c\u8868 hmap \u7684\u6876\u662f bmap\uff0c\u6bcf\u4e2a bmap \u90fd\u80fd\u5b58\u50a8 8 \u4e2a\u952e\u503c\u5bf9\uff0c\u5355\u4e2a\u6876\u88c5\u6ee1\u65f6\u4f1a\u4f7f\u7528 nextOverflow \u6876\u5b58\u50a8\u6ea2\u51fa\u7684\u6570\u636e type bmap struct { // \u5b58\u50a8\u4e86\u952e\u7684\u54c8\u5e0c\u7684\u9ad8 8 \u4f4d // \u901a\u8fc7\u6bd4\u8f83\u4e0d\u540c\u952e\u7684\u54c8\u5e0c\u7684\u9ad8 8 \u4f4d\u53ef\u4ee5\u51cf\u5c11\u8bbf\u95ee\u952e\u503c\u5bf9\u6b21\u6570\u4ee5\u63d0\u9ad8\u6027\u80fd tophash [bucketCnt]uint8 }","title":"Go \u8868\u793a\u54c8\u5e0c\u8868\u7684\u6570\u636e\u7ed3\u6784"},{"location":"golang/docs/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Go%20Map/#map","text":"\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u6bcf\u4e00\u4e2a\u6876\u90fd\u662f\u4e00\u6574\u7247\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5f53\u53d1\u73b0\u6876\u4e2d\u7684 tophash \u4e0e\u4f20\u5165\u952e\u7684 tophash \u5339\u914d\u4e4b\u540e\uff0c\u6211\u4eec\u4f1a\u901a\u8fc7\u6307\u9488\u548c\u504f\u79fb\u91cf\u83b7\u53d6\u54c8\u5e0c\u4e2d\u5b58\u50a8\u7684\u952e keys[0] \u5e76\u4e0e key \u6bd4\u8f83\uff0c\u5982\u679c\u4e24\u8005\u76f8\u540c\u5c31\u4f1a\u83b7\u53d6\u76ee\u6807\u503c\u7684\u6307\u9488 values[0] \u5e76\u8fd4\u56de","title":"\u8bbf\u95ee map \u4e2d\u7684\u6570\u636e"},{"location":"golang/docs/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Go%20Map/#map_1","text":"\u51fd\u6570\u4f1a\u6839\u636e\u4f20\u5165\u7684\u952e\u62ff\u5230\u5bf9\u5e94\u7684\u54c8\u5e0c\u548c\u6876\uff0c\u901a\u8fc7\u904d\u5386\u6bd4\u8f83\u6876\u4e2d\u5b58\u50a8\u7684 tophash \u548c\u952e\u7684\u54c8\u5e0c\uff0c\u5982\u679c\u627e\u5230\u4e86\u76f8\u540c\u7ed3\u679c\u5c31\u4f1a\u8fd4\u56de\u76ee\u6807\u4f4d\u7f6e\u7684\u5730\u5740\uff0c\u83b7\u5f97\u76ee\u6807\u5730\u5740\u4e4b\u540e\u4f1a\u901a\u8fc7\u7b97\u672f\u8ba1\u7b97\u5bfb\u5740\u83b7\u5f97\u952e\u503c\u5bf9 k \u548c val\uff0c \u5982\u679c\u5f53\u524d\u952e\u503c\u5bf9\u5728\u54c8\u5e0c\u4e2d\u4e0d\u5b58\u5728\uff0c\u54c8\u5e0c\u4f1a\u4e3a\u65b0\u952e\u503c\u5bf9\u89c4\u5212\u5b58\u50a8\u7684\u5185\u5b58\u5730\u5740\uff0c\u8fd9\u671f\u95f4\u53ea\u4f1a\u8fd4\u56de\u5185\u5b58\u5730\u5740\uff0c\u771f\u6b63\u7684\u8d4b\u503c\u64cd\u4f5c\u662f\u5728\u7f16\u8bd1\u671f\u95f4\u63d2\u5165\u7684\u3002 00018 (+5) CALL runtime.mapassign_fast64(SB) 00020 (5) MOVQ 24(SP), DI ;; DI = &value 00026 (5) LEAQ go.string.\"88\"(SB), AX ;; AX = &\"88\" 00027 (5) MOVQ AX, (DI) ;; *DI = AX \u6211\u4eec\u901a\u8fc7 LEAQ \u6307\u4ee4\u5c06\u5b57\u7b26\u4e32\u7684\u5730\u5740\u5b58\u50a8\u5230\u5bc4\u5b58\u5668 AX \u4e2d\uff0cMOVQ \u6307\u4ee4\u5c06\u5b57\u7b26\u4e32 \"88\" \u5b58\u50a8\u5230\u4e86\u76ee\u6807\u5730\u5740\u4e0a\u5b8c\u6210\u4e86\u8fd9\u6b21\u54c8\u5e0c\u7684\u5199\u5165","title":"\u5411 map \u5199\u5165\u6570\u636e"},{"location":"golang/docs/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Go%20Map/#_2","text":"\u968f\u7740\u54c8\u5e0c\u8868\u4e2d\u5143\u7d20\u7684\u9010\u6e10\u589e\u52a0\uff0c\u54c8\u5e0c\u8868\u7684\u6027\u80fd\u4f1a\u9010\u6e10\u6076\u5316\uff0c\u5f53\u88c5\u8f7d\u56e0\u5b50 > 6.5 \u65f6\uff0c \u6216\u8005 \u54c8\u5e0c\u8868\u521b\u5efa\u4e86\u592a\u591a\u7684\u6ea2\u51fa\u6876\uff0c \u4f1a\u89e6\u53d1\u6269\u5bb9 \u88c5\u8f7d\u56e0\u5b50 = \u5143\u7d20\u6570\u91cf / \u6876\u6570\u91cf \u54c8\u5e0c\u8868\u5728\u6269\u5bb9\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u521b\u5efa\u4e00\u7ec4\u65b0\u6876\u548c\u6ea2\u51fa\u6876\uff0c\u968f\u540e\u5c06\u539f\u6cb9\u7684\u6876\u6570\u7ec4\u8bbe\u7f6e\u5230 oldbuckets \u4e0a\uff0c\u5c06\u65b0\u6876\u8bbe\u7f6e\u5230 buckets \u4e0a\uff0c\u65b0\u8ba1\u7b97\u65e7\u6876\u5185\u5143\u7d20\u7684\u54c8\u5e0c\u5230\u65b0\u6876\u4e0a\uff0c \u5728\u6269\u5bb9\u671f\u95f4\u8bbf\u95ee\u54c8\u5e0c\u8868\u65f6\u4f1a\u4f7f\u7528\u65e7\u6876\uff0c\u6574\u4e2a\u671f\u95f4\u5143\u7d20\u518d\u5206\u914d\u7684\u8fc7\u7a0b\u4e5f\u662f\u5728\u8c03\u7528\u5199\u64cd\u4f5c\u65f6\u589e\u91cf\u8fdb\u884c\u7684\uff0c\u4e0d\u4f1a\u9020\u6210\u6027\u80fd\u7684\u77ac\u65f6\u5de8\u5927\u6296\u52a8","title":"\u6269\u5bb9"},{"location":"golang/docs/%E7%94%A8go%E5%AE%9E%E7%8E%B0%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","text":"1 golang\u5e38\u89c1\u6570\u636e\u7ed3\u6784\u5b9e\u73b0 1.1 \u94fe\u8868 \u4e3e\u5355\u94fe\u8868\u7684\u4f8b\u5b50\uff0c\u53cc\u5411\u94fe\u8868\u540c\u7406\u53ea\u662f\u591a\u4e86pre\u6307\u9488\u3002 \u5b9a\u4e49\u5355\u94fe\u8868\u7ed3\u6784\uff1a type LinkNode struct { Data int64 NextNode *LinkNode } \u6784\u9020\u94fe\u8868\u53ca\u6253\u5370\u94fe\u8868\uff1a func main() { node := new(LinkNode) node.Data = 1 node1 := new(LinkNode) node1.Data = 2 node.NextNode = node1 // node1 \u94fe\u63a5\u5230 node \u8282\u70b9\u4e0a node2 := new(LinkNode) node2.Data = 3 node1.NextNode = node2 // node2 \u94fe\u63a5\u5230 node1 \u8282\u70b9\u4e0a // \u987a\u5e8f\u6253\u5370\u3002\u628a\u539f\u94fe\u8868\u5934\u7ed3\u70b9\u8d4b\u503c\u5230\u65b0\u7684NowNode\u4e0a // \u8fd9\u6837\u4ecd\u7136\u4fdd\u7559\u4e86\u539f\u94fe\u8868\u5934\u7ed3\u70b9node\u4e0d\u53d8 nowNode := node for nowNode != nil { fmt.Println(nowNode.Data) // \u83b7\u53d6\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002\u94fe\u8868\u5411\u4e0b\u6ed1\u52a8 nowNode = nowNode.NextNode } } 1.2 \u53ef\u53d8\u6570\u7ec4 \u53ef\u53d8\u6570\u7ec4\u5728\u5404\u79cd\u8bed\u8a00\u4e2d\u90fd\u975e\u5e38\u5e38\u7528\uff0c\u5728golang\u4e2d\uff0c\u53ef\u53d8\u6570\u7ec4\u8bed\u8a00\u672c\u8eab\u5df2\u7ecf\u5b9e\u73b0\uff0c\u5c31\u662f\u6211\u4eec\u7684\u5207\u7247slice\u3002 1.3 \u6808\u548c\u961f\u5217 1.3.1 \u539f\u751f\u5207\u7247\u5b9e\u73b0\u6808\u548c\u961f\u5217 \u6808\uff1a\u5148\u8fdb\u540e\u51fa\uff0c\u540e\u8fdb\u5148\u51fa\uff0c\u7c7b\u4f3c\u5f39\u5939 \u961f\u5217\uff1a\u5148\u8fdb\u5148\u51fa golang\u4e2d\uff0c\u5b9e\u73b0\u5e76\u53d1\u4e0d\u5b89\u5168\u7684\u6808\u548c\u961f\u5217\uff0c\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u539f\u751f\u5207\u7247\u5373\u53ef\u3002 1.3.1.1 \u5207\u7247\u539f\u751f\u6808\u5b9e\u73b0 func main() { // \u7528\u5207\u7247\u5236\u4f5c\u4e00\u4e2a\u6808 var stack []int // \u5143\u7d201 \u5165\u6808 stack = append(stack, 1, 5, 7, 2) // \u6808\u53d6\u51fa\u6700\u8fd1\u6dfb\u52a0\u7684\u6570\u636e\u3002\u4f8b\u5982[1,5,7,2] \uff0clen = 4 x := stack[len(stack)-1] // 2 // \u5207\u6389\u6700\u8fd1\u6dfb\u52a0\u7684\u6570\u636e\uff0c\u4e0a\u4e00\u6b65\u548c\u8fd9\u4e00\u6b65\u6a21\u4eff\u6808\u7684pop\u3002 stack = stack[:len(stack)-1] // [1,5,7] fmt.Printf(\"%d\", x) } 1.3.1.2 \u5207\u7247\u539f\u751f\u961f\u5217\u5b9e\u73b0 func main() { // \u7528\u5207\u7247\u6a21\u4eff\u961f\u5217 var queue []int // \u8fdb\u961f\u5217 queue = append(queue, 1, 5, 7, 2) // \u961f\u5934\u5f39\u51fa\uff0c\u518d\u628a\u961f\u5934\u5207\u6389\uff0c\u6a21\u4eff\u961f\u5217\u7684poll\u64cd\u4f5c cur := queue[0] queue = queue[1:] fmt.Printf(\"%d\", cur) } 1.3.2 \u5e76\u53d1\u5b89\u5168\u7684\u6808\u548c\u961f\u5217 1.3.2.1 \u5207\u7247\u5b9e\u73b0\u5e76\u53d1\u5b89\u5168\u7684\u6808 \u5e76\u53d1\u5b89\u5168\u7684\u6808 // \u6570\u7ec4\u6808\uff0c\u540e\u8fdb\u5148\u51fa type Mystack struct { array []string // \u5e95\u5c42\u5207\u7247 size int // \u6808\u7684\u5143\u7d20\u6570\u91cf lock sync.Mutex // \u4e3a\u4e86\u5e76\u53d1\u5b89\u5168\u4f7f\u7528\u7684\u9501 } \u5165\u6808 // \u5165\u6808 func (stack *Mytack) Push(v string) { stack.lock.Lock() defer stack.lock.Unlock() // \u653e\u5165\u5207\u7247\u4e2d\uff0c\u540e\u8fdb\u7684\u5143\u7d20\u653e\u5728\u6570\u7ec4\u6700\u540e\u9762 stack.array = append(stack.array, v) // \u6808\u4e2d\u5143\u7d20\u6570\u91cf+1 stack.size = stack.size + 1 } \u51fa\u6808 1\u3001\u5982\u679c\u5207\u7247\u504f\u79fb\u91cf\u5411\u524d\u79fb\u52a8 stack.array[0 : stack.size-1]\uff0c\u8868\u660e\u6700\u540e\u7684\u5143\u7d20\u5df2\u7ecf\u4e0d\u5c5e\u4e8e\u8be5\u6570\u7ec4\u4e86\uff0c\u6570\u7ec4\u53d8\u76f8\u7684\u7f29\u5bb9\u4e86\u3002\u6b64\u65f6\uff0c\u5207\u7247\u88ab\u7f29\u5bb9\u7684\u90e8\u5206\u5e76\u4e0d\u4f1a\u88ab\u56de\u6536\uff0c\u4ecd\u7136\u5360\u7528\u7740\u7a7a\u95f4\uff0c\u6240\u4ee5\u7a7a\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u4f46\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1aO(1)\u3002 2\u3001\u5982\u679c\u6211\u4eec\u521b\u5efa\u65b0\u7684\u6570\u7ec4 newArray\uff0c\u7136\u540e\u628a\u8001\u6570\u7ec4\u7684\u5143\u7d20\u590d\u5236\u5230\u65b0\u6570\u7ec4\uff0c\u5c31\u4e0d\u4f1a\u5360\u7528\u591a\u4f59\u7684\u7a7a\u95f4\uff0c\u4f46\u79fb\u52a8\u6b21\u6570\u8fc7\u591a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1aO(n)\u3002 func (stack *Mystack) Pop() string { stack.lock.Lock() defer stack.lock.Unlock() // \u6808\u4e2d\u5143\u7d20\u5df2\u7a7a if stack.size == 0 { panic(\"empty\") } // \u6808\u9876\u5143\u7d20 v := stack.array[stack.size-1] // \u5207\u7247\u6536\u7f29\uff0c\u4f46\u53ef\u80fd\u5360\u7528\u7a7a\u95f4\u8d8a\u6765\u8d8a\u5927 //stack.array = stack.array[0 : stack.size-1] // \u521b\u5efa\u65b0\u7684\u6570\u7ec4\uff0c\u7a7a\u95f4\u5360\u7528\u4e0d\u4f1a\u8d8a\u6765\u8d8a\u5927\uff0c\u4f46\u53ef\u80fd\u79fb\u52a8\u5143\u7d20\u6b21\u6570\u8fc7\u591a newArray := make([]string, stack.size-1, stack.size-1) for i := 0; i < stack.size-1; i++ { newArray[i] = stack.array[i] } stack.array = newArray // \u6808\u4e2d\u5143\u7d20\u6570\u91cf-1 stack.size = stack.size - 1 return v } \u83b7\u53d6\u6808\u9876\u5143\u7d20 // \u83b7\u53d6\u6808\u9876\u5143\u7d20 func (stack *Mystack) Peek() string { // \u6808\u4e2d\u5143\u7d20\u5df2\u7a7a if stack.size == 0 { panic(\"empty\") } // \u6808\u9876\u5143\u7d20\u503c v := stack.array[stack.size-1] return v } \u83b7\u53d6\u6808\u5927\u5c0f\u548c\u5224\u5b9a\u662f\u5426\u4e3a\u7a7a // \u6808\u5927\u5c0f func (stack *Mystack) Size() int { return stack.size } // \u6808\u662f\u5426\u4e3a\u7a7a func (stack *Mystack) IsEmpty() bool { return stack.size == 0 } 1.3.2.2 \u5207\u7247\u5b9e\u73b0\u5e76\u53d1\u5b89\u5168\u7684\u961f\u5217 \u961f\u5217\u7ed3\u6784 // \u6570\u7ec4\u961f\u5217\uff0c\u5148\u8fdb\u5148\u51fa type Myqueue struct { array []string // \u5e95\u5c42\u5207\u7247 size int // \u961f\u5217\u7684\u5143\u7d20\u6570\u91cf lock sync.Mutex // \u4e3a\u4e86\u5e76\u53d1\u5b89\u5168\u4f7f\u7528\u7684\u9501 } \u5165\u961f // \u5165\u961f func (queue *Myqueue) Add(v string) { queue.lock.Lock() defer queue.lock.Unlock() // \u653e\u5165\u5207\u7247\u4e2d\uff0c\u540e\u8fdb\u7684\u5143\u7d20\u653e\u5728\u6570\u7ec4\u6700\u540e\u9762 queue.array = append(queue.array, v) // \u961f\u4e2d\u5143\u7d20\u6570\u91cf+1 queue.size = queue.size + 1 } \u51fa\u961f 1\u3001\u539f\u5730\u632a\u4f4d\uff0c\u4f9d\u6b21\u8865\u4f4d queue.array[i-1] = queue.array[i]\uff0c\u7136\u540e\u6570\u7ec4\u7f29\u5bb9\uff1aqueue.array = queue.array[0 : queue.size-1]\uff0c\u4f46\u662f\u8fd9\u6837\u5207\u7247\u7f29\u5bb9\u7684\u90a3\u90e8\u5206\u5185\u5b58\u7a7a\u95f4\u4e0d\u4f1a\u91ca\u653e\u3002 2\u3001\u521b\u5efa\u65b0\u7684\u6570\u7ec4\uff0c\u5c06\u8001\u6570\u7ec4\u4e2d\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ee5\u5916\u7684\u5143\u7d20\u79fb\u52a8\u5230\u65b0\u6570\u7ec4\u3002 // \u51fa\u961f func (queue *Myqueue) Remove() string { queue.lock.Lock() defer queue.lock.Unlock() // \u961f\u4e2d\u5143\u7d20\u5df2\u7a7a if queue.size == 0 { panic(\"empty\") } // \u961f\u5217\u6700\u524d\u9762\u5143\u7d20 v := queue.array[0] /* \u76f4\u63a5\u539f\u4f4d\u79fb\u52a8\uff0c\u4f46\u7f29\u5bb9\u540e\u7ee7\u7684\u7a7a\u95f4\u4e0d\u4f1a\u88ab\u91ca\u653e for i := 1; i < queue.size; i++ { // \u4ece\u7b2c\u4e00\u4f4d\u5f00\u59cb\u8fdb\u884c\u6570\u636e\u79fb\u52a8 queue.array[i-1] = queue.array[i] } // \u539f\u6570\u7ec4\u7f29\u5bb9 queue.array = queue.array[0 : queue.size-1] */ // \u521b\u5efa\u65b0\u7684\u6570\u7ec4\uff0c\u79fb\u52a8\u6b21\u6570\u8fc7\u591a newArray := make([]string, queue.size-1, queue.size-1) for i := 1; i < queue.size; i++ { // \u4ece\u8001\u6570\u7ec4\u7684\u7b2c\u4e00\u4f4d\u5f00\u59cb\u8fdb\u884c\u6570\u636e\u79fb\u52a8 newArray[i-1] = queue.array[i] } queue.array = newArray // \u961f\u4e2d\u5143\u7d20\u6570\u91cf-1 queue.size = queue.size - 1 return v } 1.4 \u5b57\u5178Map\u548c\u96c6\u5408Set 1.4.1 Map \u5b57\u5178\u4e5f\u662f\u7a0b\u5e8f\u8bed\u8a00\u7ecf\u5e38\u4f7f\u7528\u7684\u7ed3\u6784\uff0cgolang\u4e2d\u7684\u5b57\u5178\u662f\u5176\u81ea\u8eab\u5b9e\u73b0\u7684map\u7ed3\u6784\u3002\u5177\u4f53\u64cd\u4f5c\u53ef\u4ee5\u67e5\u770b\u8bed\u8a00api \u5e76\u53d1\u5b89\u5168\u7684map\uff0c\u53ef\u4ee5\u5b9a\u4e49\u7ed3\u6784\uff0c\u7ed3\u6784\u4e2d\u6709\u4e00\u4e2amap\u6210\u5458\u548c\u4e00\u4e2a\u9501\u53d8\u91cf\u6210\u5458\uff0c\u53c2\u8003\u5e76\u53d1\u5b89\u5168\u7684\u6808\u548c\u961f\u5217\u7684\u5b9e\u73b0\u3002go\u8bed\u8a00\u4e5f\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5e76\u53d1\u5b89\u5168\u7684map,\u5177\u4f53\u53c2\u8003sync.map\u7684api 1.4.2 Set \u6211\u4eec\u53ef\u4ee5\u501f\u52a9map\u7684\u7279\u6027\uff0c\u5b9e\u73b0\u4e00\u4e2aSet\u7ed3\u6784\u3002 Set\u7ed3\u6784 map\u7684\u503c\u6211\u4eec\u4e0d\u9002\u7528\uff0c\u5b9a\u4e49\u4e3a\u7a7a\u7684\u7ed3\u6784\u4f53struct{} // \u96c6\u5408\u7ed3\u6784\u4f53 type Set struct { m map[int]struct{} // \u7528\u5b57\u5178\u6765\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5b57\u6bb5\u952e\u4e0d\u80fd\u91cd\u590d len int // \u96c6\u5408\u7684\u5927\u5c0f sync.RWMutex // \u9501\uff0c\u5b9e\u73b0\u5e76\u53d1\u5b89\u5168 } \u521d\u59cb\u5316Set // \u65b0\u5efa\u4e00\u4e2a\u7a7a\u96c6\u5408 func NewSet(cap int64) *Set { temp := make(map[int]struct{}, cap) return &Set{ m: temp, } } \u5f80set\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 // \u589e\u52a0\u4e00\u4e2a\u5143\u7d20 func (s *Set) Add(item int) { s.Lock() defer s.Unlock() s.m[item] = struct{}{} // \u5b9e\u9645\u5f80\u5b57\u5178\u6dfb\u52a0\u8fd9\u4e2a\u952e s.len = len(s.m) // \u91cd\u65b0\u8ba1\u7b97\u5143\u7d20\u6570\u91cf } \u5220\u9664\u4e00\u4e2a\u5143\u7d20 // \u79fb\u9664\u4e00\u4e2a\u5143\u7d20 func (s *Set) Remove(item int) { s.Lock() s.Unlock() // \u96c6\u5408\u6ca1\u5143\u7d20\u76f4\u63a5\u8fd4\u56de if s.len == 0 { return } delete(s.m, item) // \u5b9e\u9645\u4ece\u5b57\u5178\u5220\u9664\u8fd9\u4e2a\u952e s.len = len(s.m) // \u91cd\u65b0\u8ba1\u7b97\u5143\u7d20\u6570\u91cf } \u67e5\u770b\u5143\u7d20\u662f\u5426\u5728\u96c6\u5408set\u4e2d // \u67e5\u770b\u662f\u5426\u5b58\u5728\u5143\u7d20 func (s *Set) Has(item int) bool { s.RLock() defer s.RUnlock() _, ok := s.m[item] return ok } \u67e5\u770b\u96c6\u5408\u5927\u5c0f // \u67e5\u770b\u96c6\u5408\u5927\u5c0f func (s *Set) Len() int { return s.len } \u67e5\u770b\u96c6\u5408\u662f\u5426\u4e3a\u7a7a // \u96c6\u5408\u662f\u591f\u4e3a\u7a7a func (s *Set) IsEmpty() bool { if s.Len() == 0 { return true } return false } \u6e05\u9664\u96c6\u5408\u6240\u6709\u5143\u7d20 // \u6e05\u9664\u96c6\u5408\u6240\u6709\u5143\u7d20 func (s *Set) Clear() { s.Lock() defer s.Unlock() s.m = map[int]struct{}{} // \u5b57\u5178\u91cd\u65b0\u8d4b\u503c s.len = 0 // \u5927\u5c0f\u5f52\u96f6 } \u5c06\u96c6\u5408\u8f6c\u5316\u4e3a\u5207\u7247 func (s *Set) List() []int { s.RLock() defer s.RUnlock() list := make([]int, 0, s.len) for item := range s.m { list = append(list, item) } return list } 1.5 \u4e8c\u53c9\u6811 \u4e8c\u53c9\u6811\uff1a\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u53ea\u6709\u4e24\u4e2a\u513f\u5b50\u8282\u70b9\u7684\u6811\u3002 \u6ee1\u4e8c\u53c9\u6811\uff1a\u53f6\u5b50\u8282\u70b9\u4e0e\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u7684\u9ad8\u5ea6\u5dee\u4e3a 0 \u7684\u4e8c\u53c9\u6811\uff0c\u5373\u6574\u68f5\u6811\u662f\u6ee1\u7684\uff0c\u6811\u5448\u6ee1\u4e09\u89d2\u5f62\u7ed3\u6784\u3002\u5728\u56fd\u5916\u7684\u5b9a\u4e49\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u513f\u5b50\u90fd\u662f\u6ee1\u7684\u6811\u5c31\u662f\u6ee1\u4e8c\u53c9\u6811\u3002\u6211\u4eec\u4ee5\u56fd\u5185\u4e3a\u51c6\u3002 \u5b8c\u5168\u4e8c\u53c9\u6811\uff1a\u5b8c\u5168\u4e8c\u53c9\u6811\u662f\u7531\u6ee1\u4e8c\u53c9\u6811\u800c\u5f15\u51fa\u6765\u7684\uff0c\u8bbe\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3a k\uff0c\u9664\u7b2c k \u5c42\u5916\uff0c\u5176\u4ed6\u5404\u5c42\u7684\u8282\u70b9\u6570\u90fd\u8fbe\u5230\u6700\u5927\u503c\uff0c\u4e14\u7b2c k \u5c42\u6240\u6709\u7684\u8282\u70b9\u90fd\u8fde\u7eed\u96c6\u4e2d\u5728\u6700\u5de6\u8fb9\u3002 \u4e8c\u53c9\u6811\u7ed3\u6784\u5b9a\u4e49 // \u4e8c\u53c9\u6811 type TreeNode struct { Data string // \u8282\u70b9\u7528\u6765\u5b58\u653e\u6570\u636e Left *TreeNode // \u5de6\u5b50\u6811 Right *TreeNode // \u53f3\u5b57\u6811 } \u6811\u7684\u904d\u5386 1\u3001\u5148\u5e8f\u904d\u5386\uff1a\u5148\u8bbf\u95ee\u6839\u8282\u70b9\uff0c\u518d\u8bbf\u95ee\u5de6\u5b50\u6811\uff0c\u6700\u540e\u8bbf\u95ee\u53f3\u5b50\u6811\u3002 2\u3001\u540e\u5e8f\u904d\u5386\uff1a\u5148\u8bbf\u95ee\u5de6\u5b50\u6811\uff0c\u518d\u8bbf\u95ee\u53f3\u5b50\u6811\uff0c\u6700\u540e\u8bbf\u95ee\u6839\u8282\u70b9\u3002 3\u3001\u4e2d\u5e8f\u904d\u5386\uff1a\u5148\u8bbf\u95ee\u5de6\u5b50\u6811\uff0c\u518d\u8bbf\u95ee\u6839\u8282\u70b9\uff0c\u6700\u540e\u8bbf\u95ee\u53f3\u5b50\u6811\u3002 4\u3001\u5c42\u6b21\u904d\u5386\uff1a\u6bcf\u4e00\u5c42\u4ece\u5de6\u5230\u53f3\u8bbf\u95ee\u6bcf\u4e00\u4e2a\u8282\u70b9\u3002 // \u5148\u5e8f\u904d\u5386 func PreOrder(tree *TreeNode) { if tree == nil { return } // \u5148\u6253\u5370\u6839\u8282\u70b9 fmt.Print(tree.Data, \" \") // \u518d\u6253\u5370\u5de6\u5b50\u6811 PreOrder(tree.Left) // \u518d\u6253\u5370\u53f3\u5b57\u6811 PreOrder(tree.Right) } // \u4e2d\u5e8f\u904d\u5386 func MidOrder(tree *TreeNode) { if tree == nil { return } // \u5148\u6253\u5370\u5de6\u5b50\u6811 MidOrder(tree.Left) // \u518d\u6253\u5370\u6839\u8282\u70b9 fmt.Print(tree.Data, \" \") // \u518d\u6253\u5370\u53f3\u5b57\u6811 MidOrder(tree.Right) } // \u540e\u5e8f\u904d\u5386 func PostOrder(tree *TreeNode) { if tree == nil { return } // \u5148\u6253\u5370\u5de6\u5b50\u6811 MidOrder(tree.Left) // \u518d\u6253\u5370\u53f3\u5b57\u6811 MidOrder(tree.Right) // \u518d\u6253\u5370\u6839\u8282\u70b9 fmt.Print(tree.Data, \" \") } \u6309\u5c42\u904d\u5386\uff1a func Level(head *TreeNode) { if head == nil { return } // \u7528\u5207\u7247\u6a21\u4eff\u961f\u5217 var queue []*TreeNode queue = append(queue, head) for len(queue) != 0 { // \u961f\u5934\u5f39\u51fa\uff0c\u518d\u628a\u961f\u5934\u5207\u6389\uff0c\u6a21\u4eff\u961f\u5217\u7684poll\u64cd\u4f5c cur := queue[0] queue = queue[1:] fmt.Printf(\"%d\", (*cur).Data) // \u5f53\u524d\u8282\u70b9\u6709\u5de6\u5b69\u5b50\uff0c\u52a0\u5165\u5de6\u5b69\u5b50\u8fdb\u961f\u5217 if cur.Left != nil { queue = append(queue, cur.Left) } // \u5f53\u524d\u8282\u70b9\u6709\u53f3\u5b69\u5b50\uff0c\u52a0\u5165\u53f3\u5b69\u5b50\u8fdb\u961f\u5217 if cur.Right != nil { queue = append(queue, cur.Right) } } }","title":"1 golang\u5e38\u89c1\u6570\u636e\u7ed3\u6784\u5b9e\u73b0"},{"location":"golang/docs/%E7%94%A8go%E5%AE%9E%E7%8E%B0%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#1-golang","text":"","title":"1 golang\u5e38\u89c1\u6570\u636e\u7ed3\u6784\u5b9e\u73b0"},{"location":"golang/docs/%E7%94%A8go%E5%AE%9E%E7%8E%B0%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#11","text":"\u4e3e\u5355\u94fe\u8868\u7684\u4f8b\u5b50\uff0c\u53cc\u5411\u94fe\u8868\u540c\u7406\u53ea\u662f\u591a\u4e86pre\u6307\u9488\u3002 \u5b9a\u4e49\u5355\u94fe\u8868\u7ed3\u6784\uff1a type LinkNode struct { Data int64 NextNode *LinkNode } \u6784\u9020\u94fe\u8868\u53ca\u6253\u5370\u94fe\u8868\uff1a func main() { node := new(LinkNode) node.Data = 1 node1 := new(LinkNode) node1.Data = 2 node.NextNode = node1 // node1 \u94fe\u63a5\u5230 node \u8282\u70b9\u4e0a node2 := new(LinkNode) node2.Data = 3 node1.NextNode = node2 // node2 \u94fe\u63a5\u5230 node1 \u8282\u70b9\u4e0a // \u987a\u5e8f\u6253\u5370\u3002\u628a\u539f\u94fe\u8868\u5934\u7ed3\u70b9\u8d4b\u503c\u5230\u65b0\u7684NowNode\u4e0a // \u8fd9\u6837\u4ecd\u7136\u4fdd\u7559\u4e86\u539f\u94fe\u8868\u5934\u7ed3\u70b9node\u4e0d\u53d8 nowNode := node for nowNode != nil { fmt.Println(nowNode.Data) // \u83b7\u53d6\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002\u94fe\u8868\u5411\u4e0b\u6ed1\u52a8 nowNode = nowNode.NextNode } }","title":"1.1 \u94fe\u8868"},{"location":"golang/docs/%E7%94%A8go%E5%AE%9E%E7%8E%B0%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#12","text":"\u53ef\u53d8\u6570\u7ec4\u5728\u5404\u79cd\u8bed\u8a00\u4e2d\u90fd\u975e\u5e38\u5e38\u7528\uff0c\u5728golang\u4e2d\uff0c\u53ef\u53d8\u6570\u7ec4\u8bed\u8a00\u672c\u8eab\u5df2\u7ecf\u5b9e\u73b0\uff0c\u5c31\u662f\u6211\u4eec\u7684\u5207\u7247slice\u3002","title":"1.2 \u53ef\u53d8\u6570\u7ec4"},{"location":"golang/docs/%E7%94%A8go%E5%AE%9E%E7%8E%B0%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#13","text":"","title":"1.3 \u6808\u548c\u961f\u5217"},{"location":"golang/docs/%E7%94%A8go%E5%AE%9E%E7%8E%B0%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#131","text":"\u6808\uff1a\u5148\u8fdb\u540e\u51fa\uff0c\u540e\u8fdb\u5148\u51fa\uff0c\u7c7b\u4f3c\u5f39\u5939 \u961f\u5217\uff1a\u5148\u8fdb\u5148\u51fa golang\u4e2d\uff0c\u5b9e\u73b0\u5e76\u53d1\u4e0d\u5b89\u5168\u7684\u6808\u548c\u961f\u5217\uff0c\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u539f\u751f\u5207\u7247\u5373\u53ef\u3002","title":"1.3.1 \u539f\u751f\u5207\u7247\u5b9e\u73b0\u6808\u548c\u961f\u5217"},{"location":"golang/docs/%E7%94%A8go%E5%AE%9E%E7%8E%B0%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#1311","text":"func main() { // \u7528\u5207\u7247\u5236\u4f5c\u4e00\u4e2a\u6808 var stack []int // \u5143\u7d201 \u5165\u6808 stack = append(stack, 1, 5, 7, 2) // \u6808\u53d6\u51fa\u6700\u8fd1\u6dfb\u52a0\u7684\u6570\u636e\u3002\u4f8b\u5982[1,5,7,2] \uff0clen = 4 x := stack[len(stack)-1] // 2 // \u5207\u6389\u6700\u8fd1\u6dfb\u52a0\u7684\u6570\u636e\uff0c\u4e0a\u4e00\u6b65\u548c\u8fd9\u4e00\u6b65\u6a21\u4eff\u6808\u7684pop\u3002 stack = stack[:len(stack)-1] // [1,5,7] fmt.Printf(\"%d\", x) }","title":"1.3.1.1 \u5207\u7247\u539f\u751f\u6808\u5b9e\u73b0"},{"location":"golang/docs/%E7%94%A8go%E5%AE%9E%E7%8E%B0%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#1312","text":"func main() { // \u7528\u5207\u7247\u6a21\u4eff\u961f\u5217 var queue []int // \u8fdb\u961f\u5217 queue = append(queue, 1, 5, 7, 2) // \u961f\u5934\u5f39\u51fa\uff0c\u518d\u628a\u961f\u5934\u5207\u6389\uff0c\u6a21\u4eff\u961f\u5217\u7684poll\u64cd\u4f5c cur := queue[0] queue = queue[1:] fmt.Printf(\"%d\", cur) }","title":"1.3.1.2 \u5207\u7247\u539f\u751f\u961f\u5217\u5b9e\u73b0"},{"location":"golang/docs/%E7%94%A8go%E5%AE%9E%E7%8E%B0%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#132","text":"","title":"1.3.2 \u5e76\u53d1\u5b89\u5168\u7684\u6808\u548c\u961f\u5217"},{"location":"golang/docs/%E7%94%A8go%E5%AE%9E%E7%8E%B0%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#1321","text":"\u5e76\u53d1\u5b89\u5168\u7684\u6808 // \u6570\u7ec4\u6808\uff0c\u540e\u8fdb\u5148\u51fa type Mystack struct { array []string // \u5e95\u5c42\u5207\u7247 size int // \u6808\u7684\u5143\u7d20\u6570\u91cf lock sync.Mutex // \u4e3a\u4e86\u5e76\u53d1\u5b89\u5168\u4f7f\u7528\u7684\u9501 } \u5165\u6808 // \u5165\u6808 func (stack *Mytack) Push(v string) { stack.lock.Lock() defer stack.lock.Unlock() // \u653e\u5165\u5207\u7247\u4e2d\uff0c\u540e\u8fdb\u7684\u5143\u7d20\u653e\u5728\u6570\u7ec4\u6700\u540e\u9762 stack.array = append(stack.array, v) // \u6808\u4e2d\u5143\u7d20\u6570\u91cf+1 stack.size = stack.size + 1 } \u51fa\u6808 1\u3001\u5982\u679c\u5207\u7247\u504f\u79fb\u91cf\u5411\u524d\u79fb\u52a8 stack.array[0 : stack.size-1]\uff0c\u8868\u660e\u6700\u540e\u7684\u5143\u7d20\u5df2\u7ecf\u4e0d\u5c5e\u4e8e\u8be5\u6570\u7ec4\u4e86\uff0c\u6570\u7ec4\u53d8\u76f8\u7684\u7f29\u5bb9\u4e86\u3002\u6b64\u65f6\uff0c\u5207\u7247\u88ab\u7f29\u5bb9\u7684\u90e8\u5206\u5e76\u4e0d\u4f1a\u88ab\u56de\u6536\uff0c\u4ecd\u7136\u5360\u7528\u7740\u7a7a\u95f4\uff0c\u6240\u4ee5\u7a7a\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u4f46\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1aO(1)\u3002 2\u3001\u5982\u679c\u6211\u4eec\u521b\u5efa\u65b0\u7684\u6570\u7ec4 newArray\uff0c\u7136\u540e\u628a\u8001\u6570\u7ec4\u7684\u5143\u7d20\u590d\u5236\u5230\u65b0\u6570\u7ec4\uff0c\u5c31\u4e0d\u4f1a\u5360\u7528\u591a\u4f59\u7684\u7a7a\u95f4\uff0c\u4f46\u79fb\u52a8\u6b21\u6570\u8fc7\u591a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1aO(n)\u3002 func (stack *Mystack) Pop() string { stack.lock.Lock() defer stack.lock.Unlock() // \u6808\u4e2d\u5143\u7d20\u5df2\u7a7a if stack.size == 0 { panic(\"empty\") } // \u6808\u9876\u5143\u7d20 v := stack.array[stack.size-1] // \u5207\u7247\u6536\u7f29\uff0c\u4f46\u53ef\u80fd\u5360\u7528\u7a7a\u95f4\u8d8a\u6765\u8d8a\u5927 //stack.array = stack.array[0 : stack.size-1] // \u521b\u5efa\u65b0\u7684\u6570\u7ec4\uff0c\u7a7a\u95f4\u5360\u7528\u4e0d\u4f1a\u8d8a\u6765\u8d8a\u5927\uff0c\u4f46\u53ef\u80fd\u79fb\u52a8\u5143\u7d20\u6b21\u6570\u8fc7\u591a newArray := make([]string, stack.size-1, stack.size-1) for i := 0; i < stack.size-1; i++ { newArray[i] = stack.array[i] } stack.array = newArray // \u6808\u4e2d\u5143\u7d20\u6570\u91cf-1 stack.size = stack.size - 1 return v } \u83b7\u53d6\u6808\u9876\u5143\u7d20 // \u83b7\u53d6\u6808\u9876\u5143\u7d20 func (stack *Mystack) Peek() string { // \u6808\u4e2d\u5143\u7d20\u5df2\u7a7a if stack.size == 0 { panic(\"empty\") } // \u6808\u9876\u5143\u7d20\u503c v := stack.array[stack.size-1] return v } \u83b7\u53d6\u6808\u5927\u5c0f\u548c\u5224\u5b9a\u662f\u5426\u4e3a\u7a7a // \u6808\u5927\u5c0f func (stack *Mystack) Size() int { return stack.size } // \u6808\u662f\u5426\u4e3a\u7a7a func (stack *Mystack) IsEmpty() bool { return stack.size == 0 }","title":"1.3.2.1 \u5207\u7247\u5b9e\u73b0\u5e76\u53d1\u5b89\u5168\u7684\u6808"},{"location":"golang/docs/%E7%94%A8go%E5%AE%9E%E7%8E%B0%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#1322","text":"\u961f\u5217\u7ed3\u6784 // \u6570\u7ec4\u961f\u5217\uff0c\u5148\u8fdb\u5148\u51fa type Myqueue struct { array []string // \u5e95\u5c42\u5207\u7247 size int // \u961f\u5217\u7684\u5143\u7d20\u6570\u91cf lock sync.Mutex // \u4e3a\u4e86\u5e76\u53d1\u5b89\u5168\u4f7f\u7528\u7684\u9501 } \u5165\u961f // \u5165\u961f func (queue *Myqueue) Add(v string) { queue.lock.Lock() defer queue.lock.Unlock() // \u653e\u5165\u5207\u7247\u4e2d\uff0c\u540e\u8fdb\u7684\u5143\u7d20\u653e\u5728\u6570\u7ec4\u6700\u540e\u9762 queue.array = append(queue.array, v) // \u961f\u4e2d\u5143\u7d20\u6570\u91cf+1 queue.size = queue.size + 1 } \u51fa\u961f 1\u3001\u539f\u5730\u632a\u4f4d\uff0c\u4f9d\u6b21\u8865\u4f4d queue.array[i-1] = queue.array[i]\uff0c\u7136\u540e\u6570\u7ec4\u7f29\u5bb9\uff1aqueue.array = queue.array[0 : queue.size-1]\uff0c\u4f46\u662f\u8fd9\u6837\u5207\u7247\u7f29\u5bb9\u7684\u90a3\u90e8\u5206\u5185\u5b58\u7a7a\u95f4\u4e0d\u4f1a\u91ca\u653e\u3002 2\u3001\u521b\u5efa\u65b0\u7684\u6570\u7ec4\uff0c\u5c06\u8001\u6570\u7ec4\u4e2d\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ee5\u5916\u7684\u5143\u7d20\u79fb\u52a8\u5230\u65b0\u6570\u7ec4\u3002 // \u51fa\u961f func (queue *Myqueue) Remove() string { queue.lock.Lock() defer queue.lock.Unlock() // \u961f\u4e2d\u5143\u7d20\u5df2\u7a7a if queue.size == 0 { panic(\"empty\") } // \u961f\u5217\u6700\u524d\u9762\u5143\u7d20 v := queue.array[0] /* \u76f4\u63a5\u539f\u4f4d\u79fb\u52a8\uff0c\u4f46\u7f29\u5bb9\u540e\u7ee7\u7684\u7a7a\u95f4\u4e0d\u4f1a\u88ab\u91ca\u653e for i := 1; i < queue.size; i++ { // \u4ece\u7b2c\u4e00\u4f4d\u5f00\u59cb\u8fdb\u884c\u6570\u636e\u79fb\u52a8 queue.array[i-1] = queue.array[i] } // \u539f\u6570\u7ec4\u7f29\u5bb9 queue.array = queue.array[0 : queue.size-1] */ // \u521b\u5efa\u65b0\u7684\u6570\u7ec4\uff0c\u79fb\u52a8\u6b21\u6570\u8fc7\u591a newArray := make([]string, queue.size-1, queue.size-1) for i := 1; i < queue.size; i++ { // \u4ece\u8001\u6570\u7ec4\u7684\u7b2c\u4e00\u4f4d\u5f00\u59cb\u8fdb\u884c\u6570\u636e\u79fb\u52a8 newArray[i-1] = queue.array[i] } queue.array = newArray // \u961f\u4e2d\u5143\u7d20\u6570\u91cf-1 queue.size = queue.size - 1 return v }","title":"1.3.2.2 \u5207\u7247\u5b9e\u73b0\u5e76\u53d1\u5b89\u5168\u7684\u961f\u5217"},{"location":"golang/docs/%E7%94%A8go%E5%AE%9E%E7%8E%B0%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#14-mapset","text":"","title":"1.4 \u5b57\u5178Map\u548c\u96c6\u5408Set"},{"location":"golang/docs/%E7%94%A8go%E5%AE%9E%E7%8E%B0%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#141-map","text":"\u5b57\u5178\u4e5f\u662f\u7a0b\u5e8f\u8bed\u8a00\u7ecf\u5e38\u4f7f\u7528\u7684\u7ed3\u6784\uff0cgolang\u4e2d\u7684\u5b57\u5178\u662f\u5176\u81ea\u8eab\u5b9e\u73b0\u7684map\u7ed3\u6784\u3002\u5177\u4f53\u64cd\u4f5c\u53ef\u4ee5\u67e5\u770b\u8bed\u8a00api \u5e76\u53d1\u5b89\u5168\u7684map\uff0c\u53ef\u4ee5\u5b9a\u4e49\u7ed3\u6784\uff0c\u7ed3\u6784\u4e2d\u6709\u4e00\u4e2amap\u6210\u5458\u548c\u4e00\u4e2a\u9501\u53d8\u91cf\u6210\u5458\uff0c\u53c2\u8003\u5e76\u53d1\u5b89\u5168\u7684\u6808\u548c\u961f\u5217\u7684\u5b9e\u73b0\u3002go\u8bed\u8a00\u4e5f\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5e76\u53d1\u5b89\u5168\u7684map,\u5177\u4f53\u53c2\u8003sync.map\u7684api","title":"1.4.1 Map"},{"location":"golang/docs/%E7%94%A8go%E5%AE%9E%E7%8E%B0%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#142-set","text":"\u6211\u4eec\u53ef\u4ee5\u501f\u52a9map\u7684\u7279\u6027\uff0c\u5b9e\u73b0\u4e00\u4e2aSet\u7ed3\u6784\u3002 Set\u7ed3\u6784 map\u7684\u503c\u6211\u4eec\u4e0d\u9002\u7528\uff0c\u5b9a\u4e49\u4e3a\u7a7a\u7684\u7ed3\u6784\u4f53struct{} // \u96c6\u5408\u7ed3\u6784\u4f53 type Set struct { m map[int]struct{} // \u7528\u5b57\u5178\u6765\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5b57\u6bb5\u952e\u4e0d\u80fd\u91cd\u590d len int // \u96c6\u5408\u7684\u5927\u5c0f sync.RWMutex // \u9501\uff0c\u5b9e\u73b0\u5e76\u53d1\u5b89\u5168 } \u521d\u59cb\u5316Set // \u65b0\u5efa\u4e00\u4e2a\u7a7a\u96c6\u5408 func NewSet(cap int64) *Set { temp := make(map[int]struct{}, cap) return &Set{ m: temp, } } \u5f80set\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 // \u589e\u52a0\u4e00\u4e2a\u5143\u7d20 func (s *Set) Add(item int) { s.Lock() defer s.Unlock() s.m[item] = struct{}{} // \u5b9e\u9645\u5f80\u5b57\u5178\u6dfb\u52a0\u8fd9\u4e2a\u952e s.len = len(s.m) // \u91cd\u65b0\u8ba1\u7b97\u5143\u7d20\u6570\u91cf } \u5220\u9664\u4e00\u4e2a\u5143\u7d20 // \u79fb\u9664\u4e00\u4e2a\u5143\u7d20 func (s *Set) Remove(item int) { s.Lock() s.Unlock() // \u96c6\u5408\u6ca1\u5143\u7d20\u76f4\u63a5\u8fd4\u56de if s.len == 0 { return } delete(s.m, item) // \u5b9e\u9645\u4ece\u5b57\u5178\u5220\u9664\u8fd9\u4e2a\u952e s.len = len(s.m) // \u91cd\u65b0\u8ba1\u7b97\u5143\u7d20\u6570\u91cf } \u67e5\u770b\u5143\u7d20\u662f\u5426\u5728\u96c6\u5408set\u4e2d // \u67e5\u770b\u662f\u5426\u5b58\u5728\u5143\u7d20 func (s *Set) Has(item int) bool { s.RLock() defer s.RUnlock() _, ok := s.m[item] return ok } \u67e5\u770b\u96c6\u5408\u5927\u5c0f // \u67e5\u770b\u96c6\u5408\u5927\u5c0f func (s *Set) Len() int { return s.len } \u67e5\u770b\u96c6\u5408\u662f\u5426\u4e3a\u7a7a // \u96c6\u5408\u662f\u591f\u4e3a\u7a7a func (s *Set) IsEmpty() bool { if s.Len() == 0 { return true } return false } \u6e05\u9664\u96c6\u5408\u6240\u6709\u5143\u7d20 // \u6e05\u9664\u96c6\u5408\u6240\u6709\u5143\u7d20 func (s *Set) Clear() { s.Lock() defer s.Unlock() s.m = map[int]struct{}{} // \u5b57\u5178\u91cd\u65b0\u8d4b\u503c s.len = 0 // \u5927\u5c0f\u5f52\u96f6 } \u5c06\u96c6\u5408\u8f6c\u5316\u4e3a\u5207\u7247 func (s *Set) List() []int { s.RLock() defer s.RUnlock() list := make([]int, 0, s.len) for item := range s.m { list = append(list, item) } return list }","title":"1.4.2 Set"},{"location":"golang/docs/%E7%94%A8go%E5%AE%9E%E7%8E%B0%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#15","text":"\u4e8c\u53c9\u6811\uff1a\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u53ea\u6709\u4e24\u4e2a\u513f\u5b50\u8282\u70b9\u7684\u6811\u3002 \u6ee1\u4e8c\u53c9\u6811\uff1a\u53f6\u5b50\u8282\u70b9\u4e0e\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u7684\u9ad8\u5ea6\u5dee\u4e3a 0 \u7684\u4e8c\u53c9\u6811\uff0c\u5373\u6574\u68f5\u6811\u662f\u6ee1\u7684\uff0c\u6811\u5448\u6ee1\u4e09\u89d2\u5f62\u7ed3\u6784\u3002\u5728\u56fd\u5916\u7684\u5b9a\u4e49\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u513f\u5b50\u90fd\u662f\u6ee1\u7684\u6811\u5c31\u662f\u6ee1\u4e8c\u53c9\u6811\u3002\u6211\u4eec\u4ee5\u56fd\u5185\u4e3a\u51c6\u3002 \u5b8c\u5168\u4e8c\u53c9\u6811\uff1a\u5b8c\u5168\u4e8c\u53c9\u6811\u662f\u7531\u6ee1\u4e8c\u53c9\u6811\u800c\u5f15\u51fa\u6765\u7684\uff0c\u8bbe\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3a k\uff0c\u9664\u7b2c k \u5c42\u5916\uff0c\u5176\u4ed6\u5404\u5c42\u7684\u8282\u70b9\u6570\u90fd\u8fbe\u5230\u6700\u5927\u503c\uff0c\u4e14\u7b2c k \u5c42\u6240\u6709\u7684\u8282\u70b9\u90fd\u8fde\u7eed\u96c6\u4e2d\u5728\u6700\u5de6\u8fb9\u3002 \u4e8c\u53c9\u6811\u7ed3\u6784\u5b9a\u4e49 // \u4e8c\u53c9\u6811 type TreeNode struct { Data string // \u8282\u70b9\u7528\u6765\u5b58\u653e\u6570\u636e Left *TreeNode // \u5de6\u5b50\u6811 Right *TreeNode // \u53f3\u5b57\u6811 } \u6811\u7684\u904d\u5386 1\u3001\u5148\u5e8f\u904d\u5386\uff1a\u5148\u8bbf\u95ee\u6839\u8282\u70b9\uff0c\u518d\u8bbf\u95ee\u5de6\u5b50\u6811\uff0c\u6700\u540e\u8bbf\u95ee\u53f3\u5b50\u6811\u3002 2\u3001\u540e\u5e8f\u904d\u5386\uff1a\u5148\u8bbf\u95ee\u5de6\u5b50\u6811\uff0c\u518d\u8bbf\u95ee\u53f3\u5b50\u6811\uff0c\u6700\u540e\u8bbf\u95ee\u6839\u8282\u70b9\u3002 3\u3001\u4e2d\u5e8f\u904d\u5386\uff1a\u5148\u8bbf\u95ee\u5de6\u5b50\u6811\uff0c\u518d\u8bbf\u95ee\u6839\u8282\u70b9\uff0c\u6700\u540e\u8bbf\u95ee\u53f3\u5b50\u6811\u3002 4\u3001\u5c42\u6b21\u904d\u5386\uff1a\u6bcf\u4e00\u5c42\u4ece\u5de6\u5230\u53f3\u8bbf\u95ee\u6bcf\u4e00\u4e2a\u8282\u70b9\u3002 // \u5148\u5e8f\u904d\u5386 func PreOrder(tree *TreeNode) { if tree == nil { return } // \u5148\u6253\u5370\u6839\u8282\u70b9 fmt.Print(tree.Data, \" \") // \u518d\u6253\u5370\u5de6\u5b50\u6811 PreOrder(tree.Left) // \u518d\u6253\u5370\u53f3\u5b57\u6811 PreOrder(tree.Right) } // \u4e2d\u5e8f\u904d\u5386 func MidOrder(tree *TreeNode) { if tree == nil { return } // \u5148\u6253\u5370\u5de6\u5b50\u6811 MidOrder(tree.Left) // \u518d\u6253\u5370\u6839\u8282\u70b9 fmt.Print(tree.Data, \" \") // \u518d\u6253\u5370\u53f3\u5b57\u6811 MidOrder(tree.Right) } // \u540e\u5e8f\u904d\u5386 func PostOrder(tree *TreeNode) { if tree == nil { return } // \u5148\u6253\u5370\u5de6\u5b50\u6811 MidOrder(tree.Left) // \u518d\u6253\u5370\u53f3\u5b57\u6811 MidOrder(tree.Right) // \u518d\u6253\u5370\u6839\u8282\u70b9 fmt.Print(tree.Data, \" \") } \u6309\u5c42\u904d\u5386\uff1a func Level(head *TreeNode) { if head == nil { return } // \u7528\u5207\u7247\u6a21\u4eff\u961f\u5217 var queue []*TreeNode queue = append(queue, head) for len(queue) != 0 { // \u961f\u5934\u5f39\u51fa\uff0c\u518d\u628a\u961f\u5934\u5207\u6389\uff0c\u6a21\u4eff\u961f\u5217\u7684poll\u64cd\u4f5c cur := queue[0] queue = queue[1:] fmt.Printf(\"%d\", (*cur).Data) // \u5f53\u524d\u8282\u70b9\u6709\u5de6\u5b69\u5b50\uff0c\u52a0\u5165\u5de6\u5b69\u5b50\u8fdb\u961f\u5217 if cur.Left != nil { queue = append(queue, cur.Left) } // \u5f53\u524d\u8282\u70b9\u6709\u53f3\u5b69\u5b50\uff0c\u52a0\u5165\u53f3\u5b69\u5b50\u8fdb\u961f\u5217 if cur.Right != nil { queue = append(queue, cur.Right) } } }","title":"1.5 \u4e8c\u53c9\u6811"},{"location":"lua/c/","text":"Lua\u548cc\u8bed\u8a00\u8c03\u7528 c\u8c03\u7528Lua lua\u51fd\u6570\u5165\u6808 lua_getglobal(L, \"lua_funcName\") lua_pushnumber(L, 2) //\u53c2\u6570\u5165\u6808 ... //\u5982\u679c\u591a\u4e2a\u53c2\u6570\uff0c \u8981\u8003\u8651\u68c0\u67e5\u6808\u7a7a\u95f4\u591f\u4e0d\u591f lua_pcall(L, n, r, 0) //\u8c03\u7528lua \u51fd\u6570, n\u8868\u793a\u53c2\u6570\u4e2a\u6570\uff0cr\u8fd4\u56de\u503c\u4e2a\u6570 //\u9519\u8bef\u68c0\u67e5 //\u5f39\u51fa\u8fd4\u56de\u503c lua\u8c03\u7528c","title":"Lua \u548c c"},{"location":"lua/c/#luac","text":"","title":"Lua\u548cc\u8bed\u8a00\u8c03\u7528"},{"location":"lua/c/#clua","text":"lua\u51fd\u6570\u5165\u6808 lua_getglobal(L, \"lua_funcName\") lua_pushnumber(L, 2) //\u53c2\u6570\u5165\u6808 ... //\u5982\u679c\u591a\u4e2a\u53c2\u6570\uff0c \u8981\u8003\u8651\u68c0\u67e5\u6808\u7a7a\u95f4\u591f\u4e0d\u591f lua_pcall(L, n, r, 0) //\u8c03\u7528lua \u51fd\u6570, n\u8868\u793a\u53c2\u6570\u4e2a\u6570\uff0cr\u8fd4\u56de\u503c\u4e2a\u6570 //\u9519\u8bef\u68c0\u67e5 //\u5f39\u51fa\u8fd4\u56de\u503c","title":"c\u8c03\u7528Lua"},{"location":"lua/c/#luac_1","text":"","title":"lua\u8c03\u7528c"},{"location":"os/memory/","text":"Zero Copy \u7528\u6237\u7f13\u51b2\u533a <-> \u5185\u6838\u7f13\u51b2\u533a <-> IO\u8bbe\u5907 \u4e8c\u6b21\u5185\u5b58\u62f7\u8d1d \u96f6\u62f7\u8d1d\u7684\u76ee\u6807\u6709\u4ee5\u4e0b\u4e8c\u4e2a + \u907f\u514d\u6570\u636e\u62f7\u8d1d * \u907f\u514d\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7f13\u51b2\u533a\u4e4b\u95f4\u8fdb\u884c\u6570\u636e\u62f7\u8d1d\u64cd\u4f5c\u3002 * \u907f\u514d\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u548c\u7528\u6237\u5e94\u7528\u7a0b\u5e8f\u5730\u5740\u7a7a\u95f4\u8fd9\u4e24\u8005\u4e4b\u95f4\u8fdb\u884c\u6570\u636e\u62f7\u8d1d\u64cd\u4f5c\u3002 * \u7528\u6237\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u907f\u5f00\u64cd\u4f5c\u7cfb\u7edf\u76f4\u63a5\u8bbf\u95ee\u786c\u4ef6\u5b58\u50a8\u3002 * \u6570\u636e\u4f20\u8f93\u5c3d\u91cf\u8ba9 DMA \u6765\u505a\u3002 * \u5c06\u591a\u79cd\u64cd\u4f5c\u7ed3\u5408\u5728\u4e00\u8d77 * \u907f\u514d\u4e0d\u5fc5\u8981\u7684\u7cfb\u7edf\u8c03\u7528\u548c\u4e0a\u4e0b\u6587\u5207\u6362\u3002 * \u9700\u8981\u62f7\u8d1d\u7684\u6570\u636e\u53ef\u4ee5\u5148\u88ab\u7f13\u5b58\u8d77\u6765\u3002 * \u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406\u5c3d\u91cf\u8ba9\u786c\u4ef6\u6765\u505a\u3002 mmap \u5c06\u8bfb\u7f13\u51b2\u533a\u548c\u7528\u6237\u7f13\u51b2\u533a\u5730\u5740\u8fdb\u884c\u6620\u5c04\uff0c\u5185\u6838\u548c\u5e94\u7528\u5171\u4eab\u8fd9\u5757\u7f13\u51b2\u533a\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u8bfb\u7f13\u51b2\u533a\u5230\u7528\u6237\u7684\u7f13\u51b2\u533a\u7684\u4e00\u6b21\u62f7\u8d1d\u3002 \u8981\u6ce8\u610f\u7684\u70b9: * mmap\u7684\u6587\u4ef6\u88ab\u5176\u5b83\u6587\u4ef6\u66f4\u6539\uff0c\u622a\u65ad \u53d1\u751fsigbus\u4fe1\u53f7\u4e2d\u65ad\uff0c\u89e3\u51b3\u65b9\u5f0f\uff1a * \u5904\u7406sigbus * \u5bf9\u6587\u4ef6\u52a0\u9501 \uff08\u63a8\u8350\uff09 * \u4f7f\u7528sendfile \uff08linux kernal 2.1\uff09 sendfile \u53ea\u80fd\u4ece\u6587\u4ef6\u4f20\u8f93\u5230\u5957\u95f4\u5b57 ssize_t sendfile(int out_fd, int in_fd, off_t *offset, size_t count); out_fd \u5fc5\u987b\u662fsocket in_fd \u5fc5\u987b\u662f\u53ef\u4ee5mmap\u7684file splice \u57fa\u4e8elinux \u7ba1\u9053\u7f13\u51b2\u673a\u5236\u7684\u590d\u5236 kernal 2.6.21 O_DIRECT flag kernal 2.4.10 \u7ed5\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7684page cache, \u76f4\u63a5\u8fdb\u5165\u901a\u7528\u5757\u8bbe\u5907\u5c42 Copy On Write","title":"Memory"},{"location":"os/memory/#zero-copy","text":"\u7528\u6237\u7f13\u51b2\u533a <-> \u5185\u6838\u7f13\u51b2\u533a <-> IO\u8bbe\u5907 \u4e8c\u6b21\u5185\u5b58\u62f7\u8d1d \u96f6\u62f7\u8d1d\u7684\u76ee\u6807\u6709\u4ee5\u4e0b\u4e8c\u4e2a + \u907f\u514d\u6570\u636e\u62f7\u8d1d * \u907f\u514d\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7f13\u51b2\u533a\u4e4b\u95f4\u8fdb\u884c\u6570\u636e\u62f7\u8d1d\u64cd\u4f5c\u3002 * \u907f\u514d\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u548c\u7528\u6237\u5e94\u7528\u7a0b\u5e8f\u5730\u5740\u7a7a\u95f4\u8fd9\u4e24\u8005\u4e4b\u95f4\u8fdb\u884c\u6570\u636e\u62f7\u8d1d\u64cd\u4f5c\u3002 * \u7528\u6237\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u907f\u5f00\u64cd\u4f5c\u7cfb\u7edf\u76f4\u63a5\u8bbf\u95ee\u786c\u4ef6\u5b58\u50a8\u3002 * \u6570\u636e\u4f20\u8f93\u5c3d\u91cf\u8ba9 DMA \u6765\u505a\u3002 * \u5c06\u591a\u79cd\u64cd\u4f5c\u7ed3\u5408\u5728\u4e00\u8d77 * \u907f\u514d\u4e0d\u5fc5\u8981\u7684\u7cfb\u7edf\u8c03\u7528\u548c\u4e0a\u4e0b\u6587\u5207\u6362\u3002 * \u9700\u8981\u62f7\u8d1d\u7684\u6570\u636e\u53ef\u4ee5\u5148\u88ab\u7f13\u5b58\u8d77\u6765\u3002 * \u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406\u5c3d\u91cf\u8ba9\u786c\u4ef6\u6765\u505a\u3002","title":"Zero Copy"},{"location":"os/memory/#mmap","text":"\u5c06\u8bfb\u7f13\u51b2\u533a\u548c\u7528\u6237\u7f13\u51b2\u533a\u5730\u5740\u8fdb\u884c\u6620\u5c04\uff0c\u5185\u6838\u548c\u5e94\u7528\u5171\u4eab\u8fd9\u5757\u7f13\u51b2\u533a\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u8bfb\u7f13\u51b2\u533a\u5230\u7528\u6237\u7684\u7f13\u51b2\u533a\u7684\u4e00\u6b21\u62f7\u8d1d\u3002 \u8981\u6ce8\u610f\u7684\u70b9: * mmap\u7684\u6587\u4ef6\u88ab\u5176\u5b83\u6587\u4ef6\u66f4\u6539\uff0c\u622a\u65ad \u53d1\u751fsigbus\u4fe1\u53f7\u4e2d\u65ad\uff0c\u89e3\u51b3\u65b9\u5f0f\uff1a * \u5904\u7406sigbus * \u5bf9\u6587\u4ef6\u52a0\u9501 \uff08\u63a8\u8350\uff09 * \u4f7f\u7528sendfile \uff08linux kernal 2.1\uff09","title":"mmap"},{"location":"os/memory/#sendfile","text":"\u53ea\u80fd\u4ece\u6587\u4ef6\u4f20\u8f93\u5230\u5957\u95f4\u5b57 ssize_t sendfile(int out_fd, int in_fd, off_t *offset, size_t count); out_fd \u5fc5\u987b\u662fsocket in_fd \u5fc5\u987b\u662f\u53ef\u4ee5mmap\u7684file","title":"sendfile"},{"location":"os/memory/#splice","text":"\u57fa\u4e8elinux \u7ba1\u9053\u7f13\u51b2\u673a\u5236\u7684\u590d\u5236 kernal 2.6.21","title":"splice"},{"location":"os/memory/#o_direct-flag","text":"kernal 2.4.10 \u7ed5\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7684page cache, \u76f4\u63a5\u8fdb\u5165\u901a\u7528\u5757\u8bbe\u5907\u5c42","title":"O_DIRECT flag"},{"location":"os/memory/#copy-on-write","text":"","title":"Copy On Write"},{"location":"os/shell/","text":"shell command grep find sed \u6309\u884c\u6765\u5339\u914d\u4fee\u6539\u6570\u636e\uff0c\u5e76\u8f93\u51fa\u7f13\u51b2\u533a sed [\u9009\u9879] [\u811a\u672c\u547d\u4ee4] \u6587\u4ef6\u540d -e \u811a\u672c\u547d\u4ee4 \u8be5\u9009\u9879\u4f1a\u5c06\u5176\u540e\u8ddf\u7684\u811a\u672c\u547d\u4ee4\u6dfb\u52a0\u5230\u5df2\u6709\u7684\u547d\u4ee4\u4e2d\u3002 -f \u811a\u672c\u547d\u4ee4\u6587\u4ef6 \u8be5\u9009\u9879\u4f1a\u5c06\u5176\u540e\u6587\u4ef6\u4e2d\u7684\u811a\u672c\u547d\u4ee4\u6dfb\u52a0\u5230\u5df2\u6709\u7684\u547d\u4ee4\u4e2d\u3002 -n \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0csed \u4f1a\u5728\u6240\u6709\u7684\u811a\u672c\u6307\u5b9a\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u4f1a\u81ea\u52a8\u8f93\u51fa\u5904\u7406\u540e\u7684\u5185\u5bb9\uff0c\u800c\u8be5\u9009\u9879\u4f1a\u5c4f\u853d\u542f\u52a8\u8f93\u51fa\uff0c\u9700\u4f7f\u7528 print \u547d\u4ee4\u6765\u5b8c\u6210\u8f93\u51fa\u3002 -i \u6b64\u9009\u9879\u4f1a\u76f4\u63a5\u4fee\u6539\u6e90\u6587\u4ef6\uff0c\u8981\u614e\u7528\u3002 sed 's/test/trial/g' a.txt \u5168\u66ff\u6362 \u6ca1\u6709g \u53ea\u66ff\u6362\u4e00\u6b21 sed 's/test/trial/2' a.txt \u66ff\u6362\u7b2c2\u6b21\u51fa\u73b0 vim \u4e0b/s \u4e00\u6837\u7684 awk \u5bf9\u6587\u4ef6\u5185\u7a7a\u6309\u6307\u5b9a\u5206\u9694\u7b26\u5206\u9694\u540e\u8f93\u51fa awk [\u9009\u9879\u53c2\u6570] 'script' var=value file(s) awk [\u9009\u9879\u53c2\u6570] -f scriptfile var=value file(s) # \u6bcf\u884c\u6309\u7a7a\u683c\u6216TAB\u5206\u5272\uff0c\u8f93\u51fa\u6587\u672c\u4e2d\u76841\u30014\u9879 awk '{print $1,$4}' log.txt # \u683c\u5f0f\u5316\u8f93\u51fa awk '{printf \"%-8s %-10s\\n\",$1,$4}' log.txt # \u4f7f\u7528\",\"\u5206\u5272 awk -F, '{print $1,$2}' log.txt # \u4f7f\u7528\u591a\u4e2a\u5206\u9694\u7b26.\u5148\u4f7f\u7528\u7a7a\u683c\u5206\u5272\uff0c\u7136\u540e\u5bf9\u5206\u5272\u7ed3\u679c\u518d\u4f7f\u7528\",\"\u5206\u5272 awk -F '[ ,]' '{print $1,$2,$5}' log.txt","title":"Linux shell"},{"location":"os/shell/#shell-command","text":"","title":"shell command"},{"location":"os/shell/#grep","text":"","title":"grep"},{"location":"os/shell/#find","text":"","title":"find"},{"location":"os/shell/#sed","text":"\u6309\u884c\u6765\u5339\u914d\u4fee\u6539\u6570\u636e\uff0c\u5e76\u8f93\u51fa\u7f13\u51b2\u533a sed [\u9009\u9879] [\u811a\u672c\u547d\u4ee4] \u6587\u4ef6\u540d -e \u811a\u672c\u547d\u4ee4 \u8be5\u9009\u9879\u4f1a\u5c06\u5176\u540e\u8ddf\u7684\u811a\u672c\u547d\u4ee4\u6dfb\u52a0\u5230\u5df2\u6709\u7684\u547d\u4ee4\u4e2d\u3002 -f \u811a\u672c\u547d\u4ee4\u6587\u4ef6 \u8be5\u9009\u9879\u4f1a\u5c06\u5176\u540e\u6587\u4ef6\u4e2d\u7684\u811a\u672c\u547d\u4ee4\u6dfb\u52a0\u5230\u5df2\u6709\u7684\u547d\u4ee4\u4e2d\u3002 -n \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0csed \u4f1a\u5728\u6240\u6709\u7684\u811a\u672c\u6307\u5b9a\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u4f1a\u81ea\u52a8\u8f93\u51fa\u5904\u7406\u540e\u7684\u5185\u5bb9\uff0c\u800c\u8be5\u9009\u9879\u4f1a\u5c4f\u853d\u542f\u52a8\u8f93\u51fa\uff0c\u9700\u4f7f\u7528 print \u547d\u4ee4\u6765\u5b8c\u6210\u8f93\u51fa\u3002 -i \u6b64\u9009\u9879\u4f1a\u76f4\u63a5\u4fee\u6539\u6e90\u6587\u4ef6\uff0c\u8981\u614e\u7528\u3002 sed 's/test/trial/g' a.txt \u5168\u66ff\u6362 \u6ca1\u6709g \u53ea\u66ff\u6362\u4e00\u6b21 sed 's/test/trial/2' a.txt \u66ff\u6362\u7b2c2\u6b21\u51fa\u73b0 vim \u4e0b/s \u4e00\u6837\u7684","title":"sed"},{"location":"os/shell/#awk","text":"\u5bf9\u6587\u4ef6\u5185\u7a7a\u6309\u6307\u5b9a\u5206\u9694\u7b26\u5206\u9694\u540e\u8f93\u51fa awk [\u9009\u9879\u53c2\u6570] 'script' var=value file(s) awk [\u9009\u9879\u53c2\u6570] -f scriptfile var=value file(s) # \u6bcf\u884c\u6309\u7a7a\u683c\u6216TAB\u5206\u5272\uff0c\u8f93\u51fa\u6587\u672c\u4e2d\u76841\u30014\u9879 awk '{print $1,$4}' log.txt # \u683c\u5f0f\u5316\u8f93\u51fa awk '{printf \"%-8s %-10s\\n\",$1,$4}' log.txt # \u4f7f\u7528\",\"\u5206\u5272 awk -F, '{print $1,$2}' log.txt # \u4f7f\u7528\u591a\u4e2a\u5206\u9694\u7b26.\u5148\u4f7f\u7528\u7a7a\u683c\u5206\u5272\uff0c\u7136\u540e\u5bf9\u5206\u5272\u7ed3\u679c\u518d\u4f7f\u7528\",\"\u5206\u5272 awk -F '[ ,]' '{print $1,$2,$5}' log.txt","title":"awk"},{"location":"os/tcp/","text":"tcp \u4e09\u6b21\u63e1\u624b \u300c\u7b2c\u4e00\u6b21\u63e1\u624b\u300d \uff1a\u5ba2\u6237\u7aef\u5148\u5411\u670d\u52a1\u7aef\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\u8fde\u63a5\u7684\u62a5\u6587\u6bb5\uff0c\u8fd9\u4e2a\u62a5\u6587\u6bb5SYN\u4f4d\u8bbe\u7f6e\u4e3a1,\u5e8f\u5217\u53f7Seq\u8bbe\u7f6e\u4e3a\u67d0\u4e00\u503c\uff0c\u5047\u8bbe\u4e3aX\uff0c\u53d1\u9001\u51fa\u53bb\u4e4b\u540e\u5ba2\u6237\u7aef\u8fdb\u5165SYN_SEND\u72b6\u6001\uff0c\u7b49\u5f85\u670d\u52a1\u5668\u7684\u786e\u8ba4\uff1b \u300c\u7b2c\u4e8c\u6b21\u63e1\u624b\u300d \uff1a\u670d\u52a1\u5668\u6536\u5230\u5ba2\u6237\u7aef\u7684SYN\u62a5\u6587\u6bb5\uff0c\u9700\u8981\u5bf9\u8fd9\u4e2aSYN\u62a5\u6587\u6bb5\u8fdb\u884c\u786e\u8ba4\uff0c\u8bbe\u7f6eAck X+1\uff1b\u540c\u65f6\uff0c\u81ea\u5df1\u81ea\u5df1\u8fd8\u8981\u53d1\u9001SYN\u8bf7\u6c42\u4fe1\u606f\uff0c\u5c06SYN\u4f4d\u7f6e\u4e3a1\uff0cSeq\u4e3aY\uff1b\u670d\u52a1\u5668\u7aef\u5c06\u4e0a\u8ff0\u6240\u6709\u4fe1\u606f\u653e\u5230\u4e00\u4e2a\u62a5\u6587\u6bb5\uff08\u5373SYN+ACK\u62a5\u6587\u6bb5\uff09\u4e2d\uff0c\u4e00\u5e76\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\uff0c\u6b64\u65f6\u670d\u52a1\u5668\u8fdb\u5165SYN_RECV\u72b6\u6001\uff1b \u300c\u7b2c\u4e09\u6b21\u63e1\u624b\u300d \uff1a\u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u7684SYN+ACK\u62a5\u6587\u6bb5\u3002\u7136\u540e\u5c06Ack \u8bbe\u7f6e\u4e3aY+1\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001ACK\u62a5\u6587\u6bb5\uff0c\u8fd9\u4e2a\u62a5\u6587\u6bb5\u53d1\u9001\u5b8c\u6bd5\u4ee5\u540e\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u90fd\u8fdb\u5165ESTABLISHED\u72b6\u6001\uff0c\u5b8c\u6210TCP\u4e09\u6b21\u63e1\u624b\u3002 \u56db\u6b21\u6325\u624b \u300c\u7b2c\u4e00\u6b21\u5206\u624b\u300d \uff1a\u4e3b\u673a1\uff0c\u8bbe\u7f6e\u5e8f\u5217\u53f7Seq\u548c\u786e\u8ba4\u5305ACK\uff0c\u5047\u8bbeseq\u4e3ax+2,ACK=y+1,\u518d\u5c06FIN\u6807\u5fd7\u4f4d\u8bbe\u7f6e\u4e3a1,\u5411\u4e3b\u673a2\u53d1\u9001FIN\u62a5\u6587\u6bb5\uff1b\u4e4b\u540e\u4e3b\u673a1\u8fdb\u5165FIN_WAIT_1\u72b6\u6001\uff1b\u8fd9\u8868\u793a\u4e3b\u673a1\u6ca1\u6709\u6570\u636e\u8981\u53d1\u9001\u7ed9\u4e3b\u673a2\u4e86\uff1b \u300c\u7b2c\u4e8c\u6b21\u5206\u624b\u300d \uff1a\u4e3b\u673a2\u6536\u5230\u4e86\u4e3b\u673a1\u53d1\u9001\u7684FIN\u62a5\u6587\u6bb5\uff0c\u5411\u4e3b\u673a1\u56de\u4e00\u4e2aACK\u62a5\u6587\u6bb5(\u5176\u503c\u4e3a\u63a5\u6536\u5230\u7684FIN\u62a5\u6587\u7684seq\u503c+1)\uff1b\u4e3b\u673a1\u8fdb\u5165FIN_WAIT_2\u72b6\u6001,\u7b49\u5f85\u4e3b\u673a\u4e8c\u7684\u65ad\u5f00\u8bf7\u6c42\u5305FIN\uff1b \u300c\u7b2c\u4e09\u6b21\u5206\u624b\u300d \uff1a\u4e3b\u673a2\u5411\u4e3b\u673a1\u53d1\u9001FIN\u62a5\u6587\u6bb5\uff0c\u610f\u601d\u662f\u6211\u53ef\u4ee5\u65ad\u5f00\u8fde\u63a5\u4e86,\u8bf7\u6c42\u5173\u95ed\u8fde\u63a5\uff0c\u540c\u65f6\u4e3b\u673a2\u8fdb\u5165CLOSE_WAIT\u72b6\u6001\uff1b \u300c\u7b2c\u56db\u6b21\u5206\u624b\u300d \uff1a\u4e3b\u673a1\u6536\u5230\u4e3b\u673a2\u53d1\u9001\u7684FIN\u62a5\u6587\u6bb5\uff0c\u5411\u4e3b\u673a2\u53d1\u9001ACK\u62a5\u6587\u6bb5,\u503c\u4e3a\u521a\u521a\u63a5\u6536\u5230\u7684FIN\u5305Seq\u503c+1\uff0c\u7136\u540e\u4e3b\u673a1\u8fdb\u5165TIME_WAIT\u72b6\u6001\uff1b\u4e3b\u673a2\u6536\u5230\u4e3b\u673a1\u7684ACK\u62a5\u6587\u6bb5\u4ee5\u540e\uff0c\u5c31\u5173\u95ed\u8fde\u63a5\uff1b\u6b64\u65f6\uff0c\u4e3b\u673a1\u7b49\u5f852MSL\u540e\u4f9d\u7136\u6ca1\u6709\u6536\u5230\u56de\u590d\uff0c\u5219\u8bc1\u660eServer\u7aef\u5df2\u6b63\u5e38\u5173\u95ed\uff0c\u90a3\u597d\uff0c\u4e3b\u673a1\u4e5f\u53ef\u4ee5\u5173\u95ed\u8fde\u63a5\u4e86\u3002 \u4e3a\u4ec0\u4e48\u8981\u8bbe\u8ba1 TIME_WAIT \u72b6\u6001 \u539f\u56e0\u4e00\uff1a\u9632\u6b62\u5386\u53f2\u8fde\u63a5\u4e2d\u7684\u6570\u636e\uff0c\u88ab\u540e\u9762\u76f8\u540c\u56db\u5143\u7ec4\u7684\u8fde\u63a5\u9519\u8bef\u7684\u63a5\u6536 \u539f\u56e0\u4e8c\uff1a\u4fdd\u8bc1\u300c\u88ab\u52a8\u5173\u95ed\u8fde\u63a5\u300d\u7684\u4e00\u65b9\uff0c\u80fd\u88ab\u6b63\u786e\u7684\u5173\u95ed \uff0c \u65ad\u5f00\u8fde\u63a5\u4e00\u65b9\u592a\u65e9close \u72b6\u6001\uff0c \u88ab\u52a8\u65b9\u53ef\u80fd\u6ca1\u6709\u6536\u5230\u6700\u540e\u7684 ack , \u91cd\u53d1\u540e\u9762\u72b6\u6001\u5c31\u574f\u4e86 tcp_tw_reuse \u98ce\u9669 \u5f00\u542f tcp_tw_reuse \u98ce\u9669\uff0c\u56e0\u4e3a\u5feb\u901f\u590d\u7528 TIME_WAIT, \u72b6\u6001\u7684\u7aef\u53e3\uff0c\u5bfc\u81f4\u65b0\u8fde\u63a5\u53ef\u80fd\u88ab\u56de\u7ed5\u5e8f\u5217\u53f7\u7684 RST \u62a5\u6587\u65ad\u5f00\u4e86\uff0c\u800c\u5982\u679c\u4e0d\u8df3\u8fc7 TIME_WAIT \u72b6\u6001\uff0c\u800c\u662f\u505c\u7559 2MSL \u65f6\u957f\uff0c\u90a3\u4e48\u8fd9\u4e2a RST \u62a5\u6587\u5c31\u4e0d\u4f1a\u51fa\u73b0\u4e0b\u4e00\u4e2a\u65b0\u7684\u8fde\u63a5\u3002 \u6d41\u91cf\u63a7\u5236 B\u8fdb\u884c\u4e86\u4e09\u6b21\u6d41\u91cf\u63a7\u5236\u3002\u7b2c\u4e00\u6b21\u628a\u7a97\u53e3\u51cf\u5c11\u5230 rwnd = 300 \uff0c\u7b2c\u4e8c\u6b21\u53c8\u51cf\u5230\u4e86 rwnd = 100 \uff0c\u6700\u540e\u51cf\u5230 rwnd = 0 \uff0c\u5373\u4e0d\u5141\u8bb8\u53d1\u9001\u65b9\u518d\u53d1\u9001\u6570\u636e\u4e86\u3002\u8fd9\u79cd\u4f7f\u53d1\u9001\u65b9\u6682\u505c\u53d1\u9001\u7684\u72b6\u6001\u5c06\u6301\u7eed\u5230\u4e3b\u673aB\u91cd\u65b0\u53d1\u51fa\u4e00\u4e2a\u65b0\u7684\u7a97\u53e3\u503c\u4e3a\u6b62\u3002B\u5411A\u53d1\u9001\u7684\u4e09\u4e2a\u62a5\u6587\u6bb5\u90fd\u8bbe\u7f6e\u4e86 ACK = 1 \uff0c\u53ea\u6709\u5728ACK=1\u65f6\u786e\u8ba4\u53f7\u5b57\u6bb5\u624d\u6709\u610f\u4e49\u3002 TCP\u4e3a\u6bcf\u4e00\u4e2a\u8fde\u63a5\u8bbe\u6709\u4e00\u4e2a\u6301\u7eed\u8ba1\u65f6\u5668(persistence timer)\u3002\u53ea\u8981TCP\u8fde\u63a5\u7684\u4e00\u65b9\u6536\u5230\u5bf9\u65b9\u7684\u96f6\u7a97\u53e3\u901a\u77e5\uff0c\u5c31\u542f\u52a8\u6301\u7eed\u8ba1\u65f6\u5668\u3002\u82e5\u6301\u7eed\u8ba1\u65f6\u5668\u8bbe\u7f6e\u7684\u65f6\u95f4\u5230\u671f\uff0c\u5c31\u53d1\u9001\u4e00\u4e2a\u96f6\u7a97\u53e3\u63a7\u6d4b\u62a5\u6587\u6bb5\uff08\u643a1\u5b57\u8282\u7684\u6570\u636e\uff09\uff0c\u90a3\u4e48\u6536\u5230\u8fd9\u4e2a\u62a5\u6587\u6bb5\u7684\u4e00\u65b9\u5c31\u91cd\u65b0\u8bbe\u7f6e\u6301\u7eed\u8ba1\u65f6\u5668\u3002 \u8c03\u4f18 tcp \u6700\u5927\u7f13\u51b2\u533a\u5927\u5c0f tcp \u7a97\u53e3 udp \u7a97\u53e3 syn \u6d2a\u6c34\u653b\u51fb\u4fdd\u62a4 \u5185\u6838\u653e\u5f03\u94fe\u63a5\u4e4b\u524d\u53d1\u9001SYN+ACK\u5305\u7684\u6570\u91cf net.ipv4.tcp_synack_retries=3 //default = 2 \u672a\u6536\u5230ack\u7684SYN\u961f\u5217\u7684\u957f\u5ea6 net.ipv4.tcp_max_syn_backlog=81920 default = 128 \u95f4\u9694\u591a\u5c11\u79d2\u53d1\u90011\u6b21keepalive\u63a2\u6d4b\u5305\uff08\u9ed8\u8ba4\u503c\uff1a7200\uff09net.ipv4.tcp_keepalive_time = 300 Linux \u7f51\u7edc\u8c03\u4f18\uff1a\u5185\u6838\u7f51\u7edc\u6808\u53c2\u6570\u7bc7","title":"Tcp"},{"location":"os/tcp/#tcp","text":"","title":"tcp"},{"location":"os/tcp/#_1","text":"\u300c\u7b2c\u4e00\u6b21\u63e1\u624b\u300d \uff1a\u5ba2\u6237\u7aef\u5148\u5411\u670d\u52a1\u7aef\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\u8fde\u63a5\u7684\u62a5\u6587\u6bb5\uff0c\u8fd9\u4e2a\u62a5\u6587\u6bb5SYN\u4f4d\u8bbe\u7f6e\u4e3a1,\u5e8f\u5217\u53f7Seq\u8bbe\u7f6e\u4e3a\u67d0\u4e00\u503c\uff0c\u5047\u8bbe\u4e3aX\uff0c\u53d1\u9001\u51fa\u53bb\u4e4b\u540e\u5ba2\u6237\u7aef\u8fdb\u5165SYN_SEND\u72b6\u6001\uff0c\u7b49\u5f85\u670d\u52a1\u5668\u7684\u786e\u8ba4\uff1b \u300c\u7b2c\u4e8c\u6b21\u63e1\u624b\u300d \uff1a\u670d\u52a1\u5668\u6536\u5230\u5ba2\u6237\u7aef\u7684SYN\u62a5\u6587\u6bb5\uff0c\u9700\u8981\u5bf9\u8fd9\u4e2aSYN\u62a5\u6587\u6bb5\u8fdb\u884c\u786e\u8ba4\uff0c\u8bbe\u7f6eAck X+1\uff1b\u540c\u65f6\uff0c\u81ea\u5df1\u81ea\u5df1\u8fd8\u8981\u53d1\u9001SYN\u8bf7\u6c42\u4fe1\u606f\uff0c\u5c06SYN\u4f4d\u7f6e\u4e3a1\uff0cSeq\u4e3aY\uff1b\u670d\u52a1\u5668\u7aef\u5c06\u4e0a\u8ff0\u6240\u6709\u4fe1\u606f\u653e\u5230\u4e00\u4e2a\u62a5\u6587\u6bb5\uff08\u5373SYN+ACK\u62a5\u6587\u6bb5\uff09\u4e2d\uff0c\u4e00\u5e76\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\uff0c\u6b64\u65f6\u670d\u52a1\u5668\u8fdb\u5165SYN_RECV\u72b6\u6001\uff1b \u300c\u7b2c\u4e09\u6b21\u63e1\u624b\u300d \uff1a\u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u7684SYN+ACK\u62a5\u6587\u6bb5\u3002\u7136\u540e\u5c06Ack \u8bbe\u7f6e\u4e3aY+1\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001ACK\u62a5\u6587\u6bb5\uff0c\u8fd9\u4e2a\u62a5\u6587\u6bb5\u53d1\u9001\u5b8c\u6bd5\u4ee5\u540e\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u90fd\u8fdb\u5165ESTABLISHED\u72b6\u6001\uff0c\u5b8c\u6210TCP\u4e09\u6b21\u63e1\u624b\u3002","title":"\u4e09\u6b21\u63e1\u624b"},{"location":"os/tcp/#_2","text":"\u300c\u7b2c\u4e00\u6b21\u5206\u624b\u300d \uff1a\u4e3b\u673a1\uff0c\u8bbe\u7f6e\u5e8f\u5217\u53f7Seq\u548c\u786e\u8ba4\u5305ACK\uff0c\u5047\u8bbeseq\u4e3ax+2,ACK=y+1,\u518d\u5c06FIN\u6807\u5fd7\u4f4d\u8bbe\u7f6e\u4e3a1,\u5411\u4e3b\u673a2\u53d1\u9001FIN\u62a5\u6587\u6bb5\uff1b\u4e4b\u540e\u4e3b\u673a1\u8fdb\u5165FIN_WAIT_1\u72b6\u6001\uff1b\u8fd9\u8868\u793a\u4e3b\u673a1\u6ca1\u6709\u6570\u636e\u8981\u53d1\u9001\u7ed9\u4e3b\u673a2\u4e86\uff1b \u300c\u7b2c\u4e8c\u6b21\u5206\u624b\u300d \uff1a\u4e3b\u673a2\u6536\u5230\u4e86\u4e3b\u673a1\u53d1\u9001\u7684FIN\u62a5\u6587\u6bb5\uff0c\u5411\u4e3b\u673a1\u56de\u4e00\u4e2aACK\u62a5\u6587\u6bb5(\u5176\u503c\u4e3a\u63a5\u6536\u5230\u7684FIN\u62a5\u6587\u7684seq\u503c+1)\uff1b\u4e3b\u673a1\u8fdb\u5165FIN_WAIT_2\u72b6\u6001,\u7b49\u5f85\u4e3b\u673a\u4e8c\u7684\u65ad\u5f00\u8bf7\u6c42\u5305FIN\uff1b \u300c\u7b2c\u4e09\u6b21\u5206\u624b\u300d \uff1a\u4e3b\u673a2\u5411\u4e3b\u673a1\u53d1\u9001FIN\u62a5\u6587\u6bb5\uff0c\u610f\u601d\u662f\u6211\u53ef\u4ee5\u65ad\u5f00\u8fde\u63a5\u4e86,\u8bf7\u6c42\u5173\u95ed\u8fde\u63a5\uff0c\u540c\u65f6\u4e3b\u673a2\u8fdb\u5165CLOSE_WAIT\u72b6\u6001\uff1b \u300c\u7b2c\u56db\u6b21\u5206\u624b\u300d \uff1a\u4e3b\u673a1\u6536\u5230\u4e3b\u673a2\u53d1\u9001\u7684FIN\u62a5\u6587\u6bb5\uff0c\u5411\u4e3b\u673a2\u53d1\u9001ACK\u62a5\u6587\u6bb5,\u503c\u4e3a\u521a\u521a\u63a5\u6536\u5230\u7684FIN\u5305Seq\u503c+1\uff0c\u7136\u540e\u4e3b\u673a1\u8fdb\u5165TIME_WAIT\u72b6\u6001\uff1b\u4e3b\u673a2\u6536\u5230\u4e3b\u673a1\u7684ACK\u62a5\u6587\u6bb5\u4ee5\u540e\uff0c\u5c31\u5173\u95ed\u8fde\u63a5\uff1b\u6b64\u65f6\uff0c\u4e3b\u673a1\u7b49\u5f852MSL\u540e\u4f9d\u7136\u6ca1\u6709\u6536\u5230\u56de\u590d\uff0c\u5219\u8bc1\u660eServer\u7aef\u5df2\u6b63\u5e38\u5173\u95ed\uff0c\u90a3\u597d\uff0c\u4e3b\u673a1\u4e5f\u53ef\u4ee5\u5173\u95ed\u8fde\u63a5\u4e86\u3002","title":"\u56db\u6b21\u6325\u624b"},{"location":"os/tcp/#time_wait","text":"\u539f\u56e0\u4e00\uff1a\u9632\u6b62\u5386\u53f2\u8fde\u63a5\u4e2d\u7684\u6570\u636e\uff0c\u88ab\u540e\u9762\u76f8\u540c\u56db\u5143\u7ec4\u7684\u8fde\u63a5\u9519\u8bef\u7684\u63a5\u6536 \u539f\u56e0\u4e8c\uff1a\u4fdd\u8bc1\u300c\u88ab\u52a8\u5173\u95ed\u8fde\u63a5\u300d\u7684\u4e00\u65b9\uff0c\u80fd\u88ab\u6b63\u786e\u7684\u5173\u95ed \uff0c \u65ad\u5f00\u8fde\u63a5\u4e00\u65b9\u592a\u65e9close \u72b6\u6001\uff0c \u88ab\u52a8\u65b9\u53ef\u80fd\u6ca1\u6709\u6536\u5230\u6700\u540e\u7684 ack , \u91cd\u53d1\u540e\u9762\u72b6\u6001\u5c31\u574f\u4e86","title":"\u4e3a\u4ec0\u4e48\u8981\u8bbe\u8ba1 TIME_WAIT \u72b6\u6001"},{"location":"os/tcp/#tcp_tw_reuse","text":"\u5f00\u542f tcp_tw_reuse \u98ce\u9669\uff0c\u56e0\u4e3a\u5feb\u901f\u590d\u7528 TIME_WAIT, \u72b6\u6001\u7684\u7aef\u53e3\uff0c\u5bfc\u81f4\u65b0\u8fde\u63a5\u53ef\u80fd\u88ab\u56de\u7ed5\u5e8f\u5217\u53f7\u7684 RST \u62a5\u6587\u65ad\u5f00\u4e86\uff0c\u800c\u5982\u679c\u4e0d\u8df3\u8fc7 TIME_WAIT \u72b6\u6001\uff0c\u800c\u662f\u505c\u7559 2MSL \u65f6\u957f\uff0c\u90a3\u4e48\u8fd9\u4e2a RST \u62a5\u6587\u5c31\u4e0d\u4f1a\u51fa\u73b0\u4e0b\u4e00\u4e2a\u65b0\u7684\u8fde\u63a5\u3002","title":"tcp_tw_reuse \u98ce\u9669"},{"location":"os/tcp/#_3","text":"B\u8fdb\u884c\u4e86\u4e09\u6b21\u6d41\u91cf\u63a7\u5236\u3002\u7b2c\u4e00\u6b21\u628a\u7a97\u53e3\u51cf\u5c11\u5230 rwnd = 300 \uff0c\u7b2c\u4e8c\u6b21\u53c8\u51cf\u5230\u4e86 rwnd = 100 \uff0c\u6700\u540e\u51cf\u5230 rwnd = 0 \uff0c\u5373\u4e0d\u5141\u8bb8\u53d1\u9001\u65b9\u518d\u53d1\u9001\u6570\u636e\u4e86\u3002\u8fd9\u79cd\u4f7f\u53d1\u9001\u65b9\u6682\u505c\u53d1\u9001\u7684\u72b6\u6001\u5c06\u6301\u7eed\u5230\u4e3b\u673aB\u91cd\u65b0\u53d1\u51fa\u4e00\u4e2a\u65b0\u7684\u7a97\u53e3\u503c\u4e3a\u6b62\u3002B\u5411A\u53d1\u9001\u7684\u4e09\u4e2a\u62a5\u6587\u6bb5\u90fd\u8bbe\u7f6e\u4e86 ACK = 1 \uff0c\u53ea\u6709\u5728ACK=1\u65f6\u786e\u8ba4\u53f7\u5b57\u6bb5\u624d\u6709\u610f\u4e49\u3002 TCP\u4e3a\u6bcf\u4e00\u4e2a\u8fde\u63a5\u8bbe\u6709\u4e00\u4e2a\u6301\u7eed\u8ba1\u65f6\u5668(persistence timer)\u3002\u53ea\u8981TCP\u8fde\u63a5\u7684\u4e00\u65b9\u6536\u5230\u5bf9\u65b9\u7684\u96f6\u7a97\u53e3\u901a\u77e5\uff0c\u5c31\u542f\u52a8\u6301\u7eed\u8ba1\u65f6\u5668\u3002\u82e5\u6301\u7eed\u8ba1\u65f6\u5668\u8bbe\u7f6e\u7684\u65f6\u95f4\u5230\u671f\uff0c\u5c31\u53d1\u9001\u4e00\u4e2a\u96f6\u7a97\u53e3\u63a7\u6d4b\u62a5\u6587\u6bb5\uff08\u643a1\u5b57\u8282\u7684\u6570\u636e\uff09\uff0c\u90a3\u4e48\u6536\u5230\u8fd9\u4e2a\u62a5\u6587\u6bb5\u7684\u4e00\u65b9\u5c31\u91cd\u65b0\u8bbe\u7f6e\u6301\u7eed\u8ba1\u65f6\u5668\u3002","title":"\u6d41\u91cf\u63a7\u5236"},{"location":"os/tcp/#_4","text":"tcp \u6700\u5927\u7f13\u51b2\u533a\u5927\u5c0f tcp \u7a97\u53e3 udp \u7a97\u53e3 syn \u6d2a\u6c34\u653b\u51fb\u4fdd\u62a4 \u5185\u6838\u653e\u5f03\u94fe\u63a5\u4e4b\u524d\u53d1\u9001SYN+ACK\u5305\u7684\u6570\u91cf net.ipv4.tcp_synack_retries=3 //default = 2 \u672a\u6536\u5230ack\u7684SYN\u961f\u5217\u7684\u957f\u5ea6 net.ipv4.tcp_max_syn_backlog=81920 default = 128 \u95f4\u9694\u591a\u5c11\u79d2\u53d1\u90011\u6b21keepalive\u63a2\u6d4b\u5305\uff08\u9ed8\u8ba4\u503c\uff1a7200\uff09net.ipv4.tcp_keepalive_time = 300 Linux \u7f51\u7edc\u8c03\u4f18\uff1a\u5185\u6838\u7f51\u7edc\u6808\u53c2\u6570\u7bc7","title":"\u8c03\u4f18"},{"location":"os/tools/","text":"\u6027\u80fd\u5de5\u5177 proc\u76ee\u5f55","title":"Tools"},{"location":"os/tools/#_1","text":"","title":"\u6027\u80fd\u5de5\u5177"},{"location":"os/tools/#proc","text":"","title":"proc\u76ee\u5f55"},{"location":"third_party/cellnet/","text":"cellnet\u6e90\u7801\u9605\u8bfb peer","title":"cellnet\u6e90\u7801\u9605\u8bfb"},{"location":"third_party/cellnet/#cellnet","text":"","title":"cellnet\u6e90\u7801\u9605\u8bfb"},{"location":"third_party/cellnet/#peer","text":"","title":"peer"},{"location":"third_party/etcd/","text":"\u4ec0\u4e48\u662fetcd ETCD\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u3001\u53ef\u9760\u7684key-value\u5b58\u50a8\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u7528\u4e8e\u5b58\u50a8\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684\u5173\u952e\u6570\u636e\uff1b\u5f53\u7136\uff0c\u5b83\u4e0d\u4ec5\u4ec5\u7528\u4e8e\u5b58\u50a8\uff0c\u8fd8\u63d0\u4f9b\u914d\u7f6e\u5171\u4eab\u53ca\u670d\u52a1\u53d1\u73b0\uff1b\u57fa\u4e8eGo\u8bed\u8a00\u5b9e\u73b0 \u3002 etcd\u7684\u7279\u70b9 \u5b8c\u5168\u590d\u5236\uff1a\u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u4f7f\u7528\u5b8c\u6574\u7684\u5b58\u6863 \u9ad8\u53ef\u7528\u6027\uff1aEtcd\u53ef\u7528\u4e8e\u907f\u514d\u786c\u4ef6\u7684\u5355\u70b9\u6545\u969c\u6216\u7f51\u7edc\u95ee\u9898 \u4e00\u81f4\u6027\uff1a\u6bcf\u6b21\u8bfb\u53d6\u90fd\u4f1a\u8fd4\u56de\u8de8\u591a\u4e3b\u673a\u7684\u6700\u65b0\u5199\u5165 \u7b80\u5355\uff1a\u5305\u62ec\u4e00\u4e2a\u5b9a\u4e49\u826f\u597d\u3001\u9762\u5411\u7528\u6237\u7684API\uff08gRPC\uff09 \u5b89\u5168\uff1a\u5b9e\u73b0\u4e86\u5e26\u6709\u53ef\u9009\u7684\u5ba2\u6237\u7aef\u8bc1\u4e66\u8eab\u4efd\u9a8c\u8bc1\u7684\u81ea\u52a8\u5316TLS \u53ef\u9760\uff1a\u4f7f\u7528Raft\u7b97\u6cd5\u5b9e\u73b0\u4e86\u5f3a\u4e00\u81f4\u3001\u9ad8\u53ef\u7528\u7684\u670d\u52a1\u5b58\u50a8\u76ee\u5f55 etcd\u7684\u5e94\u7528\u573a\u666f \u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0 \u670d\u52a1\u53d1\u73b0\u8fd8\u80fd\u6ce8\u518c \u670d\u52a1\u6ce8\u518c\u53d1\u73b0\u89e3\u51b3\u7684\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u6700\u5e38\u89c1\u7684\u95ee\u9898\u4e4b\u4e00\uff0c\u5373\u5728\u540c\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\u76ee\u6807\u670d\u52a1\uff0c\u5efa\u7acb\u8fde\u63a5\uff0c\u7136\u540e\u5b8c\u6210\u6574\u4e2a\u94fe\u8def\u7684\u8c03\u5ea6\u3002 \u672c\u8d28\u4e0a\u6765\u8bf4\uff0c\u670d\u52a1\u53d1\u73b0\u5c31\u662f\u60f3\u8981\u4e86\u89e3\u96c6\u7fa4\u4e2d\u662f\u5426\u6709\u8fdb\u7a0b\u5728\u76d1\u542c udp \u6216 tcp \u7aef\u53e3\uff0c\u5e76\u4e14\u901a\u8fc7\u540d\u5b57\u5c31\u53ef\u4ee5\u67e5\u627e\u548c\u8fde\u63a5\u3002\u8981\u89e3\u51b3\u670d\u52a1\u53d1\u73b0\u7684\u95ee\u9898\uff0c\u9700\u8981\u6709\u4e0b\u9762\u4e09\u5927\u652f\u67f1\uff0c\u7f3a\u4e00\u4e0d\u53ef\u3002 1\u3001\u4e00\u4e2a\u5f3a\u4e00\u81f4\u6027\u3001\u9ad8\u53ef\u7528\u7684\u670d\u52a1\u5b58\u50a8\u76ee\u5f55\u3002\u57fa\u4e8eRaft\u7b97\u6cd5\u7684etcd\u5929\u751f\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u5f3a\u4e00\u81f4\u6027\u9ad8\u53ef\u7528\u7684\u670d\u52a1\u5b58\u50a8\u76ee\u5f55\u3002 2\u3001\u4e00\u79cd\u6ce8\u518c\u670d\u52a1\u548c\u76d1\u63a7\u670d\u52a1\u5065\u5eb7\u72b6\u6001\u7684\u673a\u5236\u3002\u7528\u6237\u53ef\u4ee5\u5728etcd\u4e2d\u6ce8\u518c\u670d\u52a1\uff0c\u5e76\u4e14\u5bf9\u6ce8\u518c\u7684\u670d\u52a1\u8bbe\u7f6ekey TTL\uff0c\u5b9a\u65f6\u4fdd\u6301\u670d\u52a1\u7684\u5fc3\u8df3\u4ee5\u8fbe\u5230\u76d1\u63a7\u5065\u5eb7\u72b6\u6001\u7684\u6548\u679c\u3002 3\u3001\u4e00\u79cd\u67e5\u627e\u548c\u8fde\u63a5\u670d\u52a1\u7684\u673a\u5236\u3002\u901a\u8fc7\u5728 etcd \u6307\u5b9a\u7684\u4e3b\u9898\u4e0b\u6ce8\u518c\u7684\u670d\u52a1\u4e5f\u80fd\u5728\u5bf9\u5e94\u7684\u4e3b\u9898\u4e0b\u67e5\u627e\u5230\u3002\u4e3a\u4e86\u786e\u4fdd\u8fde\u63a5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u670d\u52a1\u673a\u5668\u4e0a\u90fd\u90e8\u7f72\u4e00\u4e2aProxy\u6a21\u5f0f\u7684etcd\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u786e\u4fdd\u80fd\u8bbf\u95eeetcd\u96c6\u7fa4\u7684\u670d\u52a1\u90fd\u80fd\u4e92\u76f8\u8fde\u63a5\u3002 \u4e00\u4e2a\u7528\u6237\u7684api\u8bf7\u6c42\uff0c\u53ef\u80fd\u8c03\u7528\u591a\u4e2a\u5fae\u670d\u52a1\u8d44\u6e90\uff0c\u8fd9\u4e9b\u670d\u52a1\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528etcd\u8fdb\u884c\u670d\u52a1\u6ce8\u518c\u548c\u670d\u52a1\u53d1\u73b0\uff0c\u5f53\u6bcf\u4e2a\u670d\u52a1\u542f\u52a8\u7684\u65f6\u5019\u5c31\u6ce8\u518c\u5230etcd\u4e2d\uff0c\u5f53\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5728etcd\u4e2d\u5bfb\u627e\uff0c\u8c03\u7528\u5373\u53ef\u3002 \u5f53\u7136\uff0c\u6bcf\u4e2a\u670d\u52a1\u7684\u5b9e\u4f8b\u4e0d\u6b62\u4e00\u4e2a\uff0c\u6bd4\u5982\u6211\u4eec\u7684\u7528\u6237\u670d\u52a1\uff0c\u6211\u4eec\u53ef\u80fd\u542f\u52a8\u4e86\u591a\u4e2a\u5b9e\u4f8b\uff0c\u8fd9\u4e9b\u5b9e\u4f8b\u5728\u670d\u52a1\u542f\u52a8\u8fc7\u7a0b\u4e2d\u5168\u90e8\u6ce8\u518c\u5230\u4e86etcd\u4e2d\uff0c\u4f46\u662f\u67d0\u4e2a\u5b9e\u4f8b\u53ef\u80fd\u51fa\u73b0\u6545\u969c\u91cd\u542f\uff0c\u8fd9\u65f6\u5019\u5c31etcd\u5728\u8fdb\u884c\u8f6c\u53d1\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5c4f\u853d\u5230\u6545\u969c\u7684\u5b9e\u4f8b\u8282\u70b9\uff0c\u53ea\u5411\u6b63\u5e38\u8fd0\u884c\u7684\u5b9e\u4f8b\uff0c\u8fdb\u884c\u8bf7\u6c42\u8f6c\u53d1\u3002 \u6765\u770b\u4e2a\u670d\u52a1\u6ce8\u518c\u53d1\u73b0\u7684demo \u8fd9\u91cc\u653e\u4e00\u6bb5\u6bd4\u8f83\u6838\u5fc3\u7684\u4ee3\u7801\uff0c\u8fd9\u91cc\u6458\u5f55\u4e86\u6211\u4eec\u7ebf\u4e0a\u6b63\u5728\u4f7f\u7528\u7684etcd\u5b9e\u73b0grpc\u670d\u52a1\u6ce8\u518c\u548c\u53d1\u73b0\u7684\u5b9e\u73b0\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u53ef\u53c2\u8003\uff0cetcd\u5b9e\u73b0grpc\u7684\u670d\u52a1\u6ce8\u518c\u548c\u670d\u52a1\u53d1\u73b0 \u5bf9\u4e8eetcd\u4e2d\u7684\u8fde\u63a5\uff0c\u6211\u4eec\u6bcf\u4e2a\u90fd\u7ef4\u62a4\u4e00\u4e2a\u79df\u7ea6\uff0c\u901a\u8fc7KeepAlive\u81ea\u52a8\u7eed\u4fdd\u3002\u5982\u679c\u79df\u7ea6\u8fc7\u671f\u5219\u6240\u6709\u9644\u52a0\u5728\u79df\u7ea6\u4e0a\u7684key\u5c06\u8fc7\u671f\u5e76\u88ab\u5220\u9664\uff0c\u5373\u6240\u5bf9\u5e94\u7684\u670d\u52a1\u88ab\u62ff\u6389\u3002 package discovery import ( \"context\" \"encoding/json\" \"errors\" \"net/http\" \"strconv\" \"strings\" \"time\" clientv3 \"go.etcd.io/etcd/client/v3\" \"go.uber.org/zap\" ) // Register for grpc server type Register struct { EtcdAddrs []string DialTimeout int closeCh chan struct{} leasesID clientv3.LeaseID keepAliveCh <-chan *clientv3.LeaseKeepAliveResponse srvInfo Server srvTTL int64 cli *clientv3.Client logger *zap.Logger } // NewRegister create a register base on etcd func NewRegister(etcdAddrs []string, logger *zap.Logger) *Register { return &Register{ EtcdAddrs: etcdAddrs, DialTimeout: 3, logger: logger, } } // Register a service func (r *Register) Register(srvInfo Server, ttl int64) (chan<- struct{}, error) { var err error if strings.Split(srvInfo.Addr, \":\")[0] == \"\" { return nil, errors.New(\"invalid ip\") } if r.cli, err = clientv3.New(clientv3.Config{ Endpoints: r.EtcdAddrs, DialTimeout: time.Duration(r.DialTimeout) * time.Second, }); err != nil { return nil, err } r.srvInfo = srvInfo r.srvTTL = ttl if err = r.register(); err != nil { return nil, err } r.closeCh = make(chan struct{}) go r.keepAlive() return r.closeCh, nil } // Stop stop register func (r *Register) Stop() { r.closeCh <- struct{}{} } // register \u6ce8\u518c\u8282\u70b9 func (r *Register) register() error { leaseCtx, cancel := context.WithTimeout(context.Background(), time.Duration(r.DialTimeout)*time.Second) defer cancel() leaseResp, err := r.cli.Grant(leaseCtx, r.srvTTL) if err != nil { return err } r.leasesID = leaseResp.ID if r.keepAliveCh, err = r.cli.KeepAlive(context.Background(), leaseResp.ID); err != nil { return err } data, err := json.Marshal(r.srvInfo) if err != nil { return err } _, err = r.cli.Put(context.Background(), BuildRegPath(r.srvInfo), string(data), clientv3.WithLease(r.leasesID)) return err } // unregister \u5220\u9664\u8282\u70b9 func (r *Register) unregister() error { _, err := r.cli.Delete(context.Background(), BuildRegPath(r.srvInfo)) return err } // keepAlive func (r *Register) keepAlive() { ticker := time.NewTicker(time.Duration(r.srvTTL) * time.Second) for { select { case <-r.closeCh: if err := r.unregister(); err != nil { r.logger.Error(\"unregister failed\", zap.Error(err)) } if _, err := r.cli.Revoke(context.Background(), r.leasesID); err != nil { r.logger.Error(\"revoke failed\", zap.Error(err)) } return case res := <-r.keepAliveCh: if res == nil { if err := r.register(); err != nil { r.logger.Error(\"register failed\", zap.Error(err)) } } case <-ticker.C: if r.keepAliveCh == nil { if err := r.register(); err != nil { r.logger.Error(\"register failed\", zap.Error(err)) } } } } } \u6d88\u606f\u53d1\u5e03\u548c\u8ba2\u9605 \u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u6700\u9002\u7528\u7684\u4e00\u79cd\u7ec4\u4ef6\u95f4\u901a\u4fe1\u65b9\u5f0f\u5c31\u662f\u6d88\u606f\u53d1\u5e03\u4e0e\u8ba2\u9605\u3002\u5373\u6784\u5efa\u4e00\u4e2a\u914d\u7f6e\u5171\u4eab\u4e2d\u5fc3\uff0c\u6570\u636e\u63d0\u4f9b\u8005\u5728\u8fd9\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u53d1\u5e03\u6d88\u606f\uff0c\u800c\u6d88\u606f\u4f7f\u7528\u8005\u5219\u8ba2\u9605\u4ed6\u4eec\u5173\u5fc3\u7684\u4e3b\u9898\uff0c\u4e00\u65e6\u4e3b\u9898\u6709\u6d88\u606f\u53d1\u5e03\uff0c\u5c31\u4f1a\u5b9e\u65f6\u901a\u77e5\u8ba2\u9605\u8005\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u505a\u5230\u5206\u5e03\u5f0f\u7cfb\u7edf\u914d\u7f6e\u7684\u96c6\u4e2d\u5f0f\u7ba1\u7406\u4e0e\u52a8\u6001\u66f4\u65b0 \u5e94\u7528\u4e2d\u7528\u5230\u7684\u4e00\u4e9b\u914d\u7f6e\u4fe1\u606f\u653e\u5230 etcd \u4e0a\u8fdb\u884c\u96c6\u4e2d\u7ba1\u7406\u3002\u8fd9\u7c7b\u573a\u666f\u7684\u4f7f\u7528\u65b9\u5f0f\u901a\u5e38\u662f\u8fd9\u6837\uff1a\u5e94\u7528\u5728\u542f\u52a8\u7684\u65f6\u5019\u4e3b\u52a8\u4eceetcd\u83b7\u53d6\u4e00\u6b21\u914d\u7f6e\u4fe1\u606f\uff0c\u540c\u65f6\uff0c\u5728etcd\u8282\u70b9\u4e0a\u6ce8\u518c\u4e00\u4e2aWatcher\u5e76\u7b49\u5f85\uff0c\u4ee5\u540e\u6bcf\u6b21\u914d\u7f6e\u6709\u66f4\u65b0\u7684\u65f6\u5019\uff0cetcd\u90fd\u4f1a\u5b9e\u65f6\u901a\u77e5\u8ba2\u9605\u8005\uff0c\u4ee5\u6b64\u8fbe\u5230\u83b7\u53d6\u6700\u65b0\u914d\u7f6e\u4fe1\u606f\u7684\u76ee\u7684\u3002 \u5206\u5e03\u5f0f\u641c\u7d22\u670d\u52a1\u4e2d\uff0c\u7d22\u5f15\u7684\u5143\u4fe1\u606f\u548c\u670d\u52a1\u5668\u96c6\u7fa4\u673a\u5668\u7684\u8282\u70b9\u72b6\u6001\u5b58\u653e\u5728etcd\u4e2d\uff0c\u4f9b\u5404\u4e2a\u5ba2\u6237\u7aef\u8ba2\u9605\u4f7f\u7528\u3002\u4f7f\u7528etcd\u7684key TTL\u529f\u80fd\u53ef\u4ee5\u786e\u4fdd\u673a\u5668\u72b6\u6001\u662f\u5b9e\u65f6\u66f4\u65b0\u7684\u3002 \u5206\u5e03\u5f0f\u65e5\u5fd7\u6536\u96c6\u7cfb\u7edf\u3002\u8fd9\u4e2a\u7cfb\u7edf\u7684\u6838\u5fc3\u5de5\u4f5c\u662f\u6536\u96c6\u5206\u5e03\u5728\u4e0d\u540c\u673a\u5668\u7684\u65e5\u5fd7\u3002\u6536\u96c6\u5668\u901a\u5e38\u662f\u6309\u7167\u5e94\u7528\uff08\u6216\u4e3b\u9898\uff09\u6765\u5206\u914d\u6536\u96c6\u4efb\u52a1\u5355\u5143\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728 etcd \u4e0a\u521b\u5efa\u4e00\u4e2a\u4ee5\u5e94\u7528\uff08\u4e3b\u9898\uff09\u547d\u540d\u7684\u76ee\u5f55 P\uff0c\u5e76\u5c06\u8fd9\u4e2a\u5e94\u7528\uff08\u4e3b\u9898\u76f8\u5173\uff09\u7684\u6240\u6709\u673a\u5668 ip\uff0c\u4ee5\u5b50\u76ee\u5f55\u7684\u5f62\u5f0f\u5b58\u50a8\u5230\u76ee\u5f55 P \u4e0a\uff0c\u7136\u540e\u8bbe\u7f6e\u4e00\u4e2aetcd\u9012\u5f52\u7684Watcher\uff0c\u9012\u5f52\u5f0f\u7684\u76d1\u63a7\u5e94\u7528\uff08\u4e3b\u9898\uff09\u76ee\u5f55\u4e0b\u6240\u6709\u4fe1\u606f\u7684\u53d8\u52a8\u3002\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u673a\u5668 IP\uff08\u6d88\u606f\uff09\u53d8\u52a8\u7684\u65f6\u5019\uff0c\u80fd\u591f\u5b9e\u65f6\u901a\u77e5\u5230\u6536\u96c6\u5668\u8c03\u6574\u4efb\u52a1\u5206\u914d\u3002 \u7cfb\u7edf\u4e2d\u4fe1\u606f\u9700\u8981\u52a8\u6001\u81ea\u52a8\u83b7\u53d6\u4e0e\u4eba\u5de5\u5e72\u9884\u4fee\u6539\u4fe1\u606f\u8bf7\u6c42\u5185\u5bb9\u7684\u60c5\u51b5\u3002\u901a\u5e38\u662f\u66b4\u9732\u51fa\u63a5\u53e3\uff0c\u4f8b\u5982 JMX \u63a5\u53e3\uff0c\u6765\u83b7\u53d6\u4e00\u4e9b\u8fd0\u884c\u65f6\u7684\u4fe1\u606f\u3002\u5f15\u5165 etcd \u4e4b\u540e\uff0c\u5c31\u4e0d\u7528\u81ea\u5df1\u5b9e\u73b0\u4e00\u5957\u65b9\u6848\u4e86\uff0c\u53ea\u8981\u5c06\u8fd9\u4e9b\u4fe1\u606f\u5b58\u653e\u5230\u6307\u5b9a\u7684 etcd \u76ee\u5f55\u4e2d\u5373\u53ef\uff0cetcd \u7684\u8fd9\u4e9b\u76ee\u5f55\u5c31\u53ef\u4ee5\u901a\u8fc7 HTTP \u7684\u63a5\u53e3\u5728\u5916\u90e8\u8bbf\u95ee\u3002 \u6d88\u606f\u53d1\u5e03\u88ab\u8ba2\u9605\u7684\u5b9e\u9645\u5e94\u7528 \u6211\u4eec\u4e00\u4e2a\u6027\u80fd\u8981\u6c42\u6bd4\u8f83\u9ad8\u7684\u9879\u76ee\uff0c\u6240\u9700\u8981\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u5b58\u653e\u5230\u672c\u5730\u7684localCache\u4e2d\uff0c\u901a\u8fc7etcd\u7684\u6d88\u606f\u53d1\u5e03\u548c\u8ba2\u9605\u5b9e\u73b0\uff0c\u5b9e\u73b0\u914d\u7f6e\u4fe1\u606f\u5728\u4e0d\u540c\u8282\u70b9\u540c\u6b65\u66f4\u65b0\u3002 \u6765\u770b\u4e0b\u5982\u4f55\u5b9e\u73b0 func init() { handleMap = make(map[string]func([]byte) error) } var handleMap map[string]func([]byte) error func RegisterUpdateHandle(key string, f func([]byte) error) { handleMap[key] = f } type PubClient interface { Pub(ctx context.Context, key string, val string) error } var Pub PubClient type PubClientImpl struct { client *clientv3.Client logger *zap.Logger prefix string } // \u76d1\u542c\u53d8\u5316\uff0c\u5b9e\u65f6\u66f4\u65b0\u5230\u672c\u5730\u7684map\u4e2d func (c *PubClientImpl) Watcher() { ctx, cancel := context.WithCancel(context.Background()) rch := c.client.Watch(ctx, c.prefix, clientv3.WithPrefix()) defer cancel() for wresp := range rch { for _, ev := range wresp.Events { switch ev.Type { case mvccpb.PUT: c.logger.Warn(\"Cache Update\", zap.Any(\"value\", ev.Kv)) err := handleCacheUpdate(ev.Kv) if err != nil { c.logger.Error(\"Cache Update\", zap.Error(err)) } case mvccpb.DELETE: c.logger.Error(\"Cache Delete NOT SUPPORT\") } } } } func handleCacheUpdate(val *mvccpb.KeyValue) error { if val == nil { return nil } f := handleMap[string(val.Key)] if f != nil { return f(val.Value) } return nil } func (c *PubClientImpl) Pub(ctx context.Context, key string, val string) error { ctx, _ = context.WithTimeout(ctx, time.Second*10) _, err := c.client.Put(ctx, key, val) if err != nil { return err } return nil } \u8d1f\u8f7d\u5747\u8861 \u5173\u4e8e\u8d1f\u8f7d\u5747\u8861\uff0c\u901a\u5e38\u610f\u4e49\u4e0a\u6709\u4e24\u79cd \u8f6f\u8d1f\u8f7d\uff0c\u987e\u540d\u601d\u4e49\u5c31\u662f\u9760\u8f6f\u4ef6\u624b\u6bb5\u6765\u5b9e\u73b0\u7684\u8d1f\u8f7d\u5747\u8861\u3002\u8f6f\u8d1f\u8f7d\u4e5f\u901a\u5e38\u88ab\u79f0\u4e3a 4\u5c42\u6216 7 \u5c42\u8d1f\u8f7d\uff01 \u786c\u8d1f\u8f7d\uff0c\u5c31\u662f\u9760\u786c\u4ef6\u5b9e\u73b0\u7684\u8d1f\u8f7d\u5747\u8861\uff0c\u6570\u636e\u5305\u8f6c\u53d1\u529f\u80fd\u3002\u5e38\u89c1\u7684\u5c31\u662f F5\u3002 \u901a\u8fc7etcd\u5b9e\u73b0\u7684\u8d1f\u8f7d\u5747\u8861\u5c31\u662f\u8f6f\u8d1f\u8f7d\uff0c\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u9ad8\u5e76\u53d1\u7684\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u6784\u5efa\u670d\u52a1\u7684\u96c6\u7fa4\uff0c\u5f53\u67d0\u4e00\u4e2a\u673a\u5668\u5b95\u673a\u4e86\uff0c\u522b\u7684\u673a\u5668\u53ef\u4ee5\u9a6c\u4e0a\u9876\u66ff\u4e0a\u6765\u3002 etcd\u4e2d\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\uff0c\u4f8b\u5982\u6211\u4eec\u4e0a\u6587\u7684\u4f8b\u5b50\u670d\u52a1\u6ce8\u518c\u548c\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7528\u6237\u670d\u52a1\u6765\u8bb2\uff0c\u540e\u9762\u7684\u7528\u6237\u670d\u52a1\u7684\u5b9e\u4f8b\u53ef\u80fd\u662f\u591a\u4e2a\uff0c\u6bcf\u4e2a\u90fd\u6709\u81ea\u5df1\u7684ip\u548cport\uff0c\u8fd9\u4e9b\u670d\u52a1\u4f1a\u5728\u9879\u76ee\u542f\u52a8\u7684\u65f6\u5019\u5168\u90e8\u6ce8\u518c\u5230etcd\u4e2d\uff0c\u6240\u4ee5\u5f53\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u6bcf\u6b21etcd\u4f1a\u8f6e\u8be2\u51fa\u4e00\u4e2a\u5065\u5eb7\u7684\u670d\u52a1\u5b9e\u4f8b\uff0c\u6765\u5904\u7406\u7528\u6237\u7684\u8bf7\u6c42\u3002 \u5206\u5e03\u5f0f\u901a\u77e5\u4e0e\u534f\u8c03 \u8fd9\u91cc\u8bf4\u5230\u7684\u5206\u5e03\u5f0f\u901a\u77e5\u4e0e\u534f\u8c03\uff0c\u4e0e\u6d88\u606f\u53d1\u5e03\u548c\u8ba2\u9605\u6709\u4e9b\u76f8\u4f3c\u3002\u90fd\u7528\u5230\u4e86etcd\u4e2d\u7684Watcher\u673a\u5236\uff0c\u901a\u8fc7\u6ce8\u518c\u4e0e\u5f02\u6b65\u901a\u77e5\u673a\u5236\uff0c\u5b9e\u73b0\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\u4e0d\u540c\u7cfb\u7edf\u4e4b\u95f4\u7684\u901a\u77e5\u4e0e\u534f\u8c03\uff0c\u4ece\u800c\u5bf9\u6570\u636e\u53d8\u66f4\u505a\u5230\u5b9e\u65f6\u5904\u7406\u3002\u5b9e\u73b0\u65b9\u5f0f\u901a\u5e38\u662f\u8fd9\u6837\uff1a\u4e0d\u540c\u7cfb\u7edf\u90fd\u5728etcd\u4e0a\u5bf9\u540c\u4e00\u4e2a\u76ee\u5f55\u8fdb\u884c\u6ce8\u518c\uff0c\u540c\u65f6\u8bbe\u7f6eWatcher\u89c2\u6d4b\u8be5\u76ee\u5f55\u7684\u53d8\u5316\uff08\u5982\u679c\u5bf9\u5b50\u76ee\u5f55\u7684\u53d8\u5316\u4e5f\u6709\u9700\u8981\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u9012\u5f52\u6a21\u5f0f\uff09\uff0c\u5f53\u67d0\u4e2a\u7cfb\u7edf\u66f4\u65b0\u4e86etcd\u7684\u76ee\u5f55\uff0c\u90a3\u4e48\u8bbe\u7f6e\u4e86Watcher\u7684\u7cfb\u7edf\u5c31\u4f1a\u6536\u5230\u901a\u77e5\uff0c\u5e76\u4f5c\u51fa\u76f8\u5e94\u5904\u7406\u3002 \u901a\u8fc7etcd\u8fdb\u884c\u4f4e\u8026\u5408\u7684\u5fc3\u8df3\u68c0\u6d4b\u3002\u68c0\u6d4b\u7cfb\u7edf\u548c\u88ab\u68c0\u6d4b\u7cfb\u7edf\u901a\u8fc7 etcd \u4e0a\u67d0\u4e2a\u76ee\u5f55\u5173\u8054\u800c\u975e\u76f4\u63a5\u5173\u8054\u8d77\u6765\uff0c\u8fd9\u6837\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u7cfb\u7edf\u7684\u8026\u5408\u6027\u3002 \u901a\u8fc7etcd\u5b8c\u6210\u7cfb\u7edf\u8c03\u5ea6\u3002\u67d0\u7cfb\u7edf\u6709\u63a7\u5236\u53f0\u548c\u63a8\u9001\u7cfb\u7edf\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u63a7\u5236\u53f0\u7684\u804c\u8d23\u662f\u63a7\u5236\u63a8\u9001\u7cfb\u7edf\u8fdb\u884c\u76f8\u5e94\u7684\u63a8\u9001\u5de5\u4f5c\u3002\u7ba1\u7406\u4eba\u5458\u5728\u63a7\u5236\u53f0\u4f5c\u7684\u4e00\u4e9b\u64cd\u4f5c\uff0c\u5b9e\u9645\u4e0a\u662f\u4fee\u6539\u4e86etcd\u4e0a\u67d0\u4e9b\u76ee\u5f55\u8282\u70b9\u7684\u72b6\u6001\uff0c\u800cetcd\u5c31\u628a\u8fd9\u4e9b\u53d8\u5316\u901a\u77e5\u7ed9\u6ce8\u518c\u4e86Watcher\u7684\u63a8\u9001\u7cfb\u7edf\u5ba2\u6237\u7aef\uff0c\u63a8\u9001\u7cfb\u7edf\u518d\u4f5c\u51fa\u76f8\u5e94\u7684\u63a8\u9001\u4efb\u52a1\u3002 \u901a\u8fc7etcd\u5b8c\u6210\u5de5\u4f5c\u6c47\u62a5\u3002\u5927\u90e8\u5206\u7c7b\u4f3c\u7684\u4efb\u52a1\u5206\u53d1\u7cfb\u7edf\uff0c\u5b50\u4efb\u52a1\u542f\u52a8\u540e\uff0c\u5230etcd\u6765\u6ce8\u518c\u4e00\u4e2a\u4e34\u65f6\u5de5\u4f5c\u76ee\u5f55\uff0c\u5e76\u4e14\u5b9a\u65f6\u5c06\u81ea\u5df1\u7684\u8fdb\u5ea6\u8fdb\u884c\u6c47\u62a5\uff08\u5c06\u8fdb\u5ea6\u5199\u5165\u5230\u8fd9\u4e2a\u4e34\u65f6\u76ee\u5f55\uff09\uff0c\u8fd9\u6837\u4efb\u52a1\u7ba1\u7406\u8005\u5c31\u80fd\u591f\u5b9e\u65f6\u77e5\u9053\u4efb\u52a1\u8fdb\u5ea6\u3002 \u5206\u5e03\u5f0f\u9501 \u56e0\u4e3aetcd\u4f7f\u7528Raft\u7b97\u6cd5\u4fdd\u6301\u4e86\u6570\u636e\u7684\u5f3a\u4e00\u81f4\u6027\uff0c\u67d0\u6b21\u64cd\u4f5c\u5b58\u50a8\u5230\u96c6\u7fa4\u4e2d\u7684\u503c\u5fc5\u7136\u662f\u5168\u5c40\u4e00\u81f4\u7684\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u3002\u9501\u670d\u52a1\u6709\u4e24\u79cd\u4f7f\u7528\u65b9\u5f0f\uff0c\u4e00\u662f\u4fdd\u6301\u72ec\u5360\uff0c\u4e8c\u662f\u63a7\u5236\u65f6\u5e8f\u3002 \u9996\u5148\uff0c\u6765\u770b\u4e00\u4e0b\u5206\u5e03\u5f0f\u9501\u5e94\u8be5\u5177\u5907\u54ea\u4e9b\u6761\u4ef6\u3002 \u4e92\u65a5\u6027\uff1a\u5728\u4efb\u610f\u65f6\u523b\uff0c\u5bf9\u4e8e\u540c\u4e00\u4e2a\u9501\uff0c\u53ea\u6709\u4e00\u4e2a\u5ba2\u6237\u7aef\u80fd\u6301\u6709\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e00\u4e2a\u5171\u4eab\u8d44\u6e90\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u88ab\u4e00\u4e2a\u5ba2\u6237\u7aef\u64cd\u4f5c\uff1b \u5b89\u5168\u6027\uff1a\u5373\u4e0d\u4f1a\u5f62\u6210\u6b7b\u9501\uff0c\u5f53\u4e00\u4e2a\u5ba2\u6237\u7aef\u5728\u6301\u6709\u9501\u7684\u671f\u95f4\u5d29\u6e83\u800c\u6ca1\u6709\u4e3b\u52a8\u89e3\u9501\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u6301\u6709\u7684\u9501\u4e5f\u80fd\u591f\u88ab\u6b63\u786e\u91ca\u653e\uff0c\u5e76\u4fdd\u8bc1\u540e\u7eed\u5176\u5b83\u5ba2\u6237\u7aef\u80fd\u52a0\u9501\uff1b \u53ef\u7528\u6027\uff1a\u5f53\u63d0\u4f9b\u9501\u670d\u52a1\u7684\u8282\u70b9\u53d1\u751f\u5b95\u673a\u7b49\u4e0d\u53ef\u6062\u590d\u6027\u6545\u969c\u65f6\uff0c\u201c\u70ed\u5907\u201d \u8282\u70b9\u80fd\u591f\u63a5\u66ff\u6545\u969c\u7684\u8282\u70b9\u7ee7\u7eed\u63d0\u4f9b\u670d\u52a1\uff0c\u5e76\u4fdd\u8bc1\u81ea\u8eab\u6301\u6709\u7684\u6570\u636e\u4e0e\u6545\u969c\u8282\u70b9\u4e00\u81f4\u3002 \u5bf9\u79f0\u6027\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u9501\uff0c\u5176\u52a0\u9501\u548c\u89e3\u9501\u5fc5\u987b\u662f\u540c\u4e00\u4e2a\u5ba2\u6237\u7aef\uff0c\u5373\u5ba2\u6237\u7aef A \u4e0d\u80fd\u628a\u5ba2\u6237\u7aef B \u52a0\u7684\u9501\u7ed9\u89e3\u4e86\u3002 etcd\u7684 Watch \u673a\u5236\u3001Lease \u673a\u5236\u3001Revision \u673a\u5236\u548c Prefix \u673a\u5236\uff0c\u8fd9\u4e9b\u673a\u5236\u8d4b\u4e88\u4e86 Etcd \u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u7684\u80fd\u529b\u3002 Lease \u673a\u5236 \u5373\u79df\u7ea6\u673a\u5236\uff08TTL\uff0cTime To Live\uff09\uff0cEtcd \u53ef\u4ee5\u4e3a\u5b58\u50a8\u7684 Key-Value \u5bf9\u8bbe\u7f6e\u79df\u7ea6\uff0c\u5f53\u79df\u7ea6\u5230\u671f\uff0cKey-Value \u5c06\u5931\u6548\u5220\u9664\uff1b\u540c\u65f6\u4e5f\u652f\u6301\u7eed\u7ea6\uff0c\u901a\u8fc7\u5ba2\u6237\u7aef\u53ef\u4ee5\u5728\u79df\u7ea6\u5230\u671f\u4e4b\u524d\u7eed\u7ea6\uff0c\u4ee5\u907f\u514d Key-Value \u5bf9\u8fc7\u671f\u5931\u6548\u3002Lease \u673a\u5236\u53ef\u4ee5\u4fdd\u8bc1\u5206\u5e03\u5f0f\u9501\u7684\u5b89\u5168\u6027\uff0c\u4e3a\u9501\u5bf9\u5e94\u7684 Key \u914d\u7f6e\u79df\u7ea6\uff0c\u5373\u4f7f\u9501\u7684\u6301\u6709\u8005\u56e0\u6545\u969c\u800c\u4e0d\u80fd\u4e3b\u52a8\u91ca\u653e\u9501\uff0c\u9501\u4e5f\u4f1a\u56e0\u79df\u7ea6\u5230\u671f\u800c\u81ea\u52a8\u91ca\u653e\u3002 Revision \u673a\u5236 \u6bcf\u4e2a Key \u5e26\u6709\u4e00\u4e2a Revision \u53f7\uff0c\u6bcf\u8fdb\u884c\u4e00\u6b21\u4e8b\u52a1\u4fbf\u52a0\u4e00\uff0c\u56e0\u6b64\u5b83\u662f\u5168\u5c40\u552f\u4e00\u7684\uff0c\u5982\u521d\u59cb\u503c\u4e3a 0\uff0c\u8fdb\u884c\u4e00\u6b21 put(key, value)\uff0cKey \u7684 Revision \u53d8\u4e3a 1\uff0c\u540c\u6837\u7684\u64cd\u4f5c\uff0c\u518d\u8fdb\u884c\u4e00\u6b21\uff0cRevision \u53d8\u4e3a 2\uff1b\u6362\u6210 key1 \u8fdb\u884cput(key1, value)\u64cd\u4f5c\uff0cRevision\u5c06\u53d8\u4e3a 3\uff1b\u8fd9\u79cd\u673a\u5236\u6709\u4e00\u4e2a\u4f5c\u7528\uff1a\u901a\u8fc7 Revision \u7684\u5927\u5c0f\u5c31\u53ef\u4ee5\u77e5\u9053\u5199\u64cd\u4f5c\u7684\u987a\u5e8f\u3002\u5728\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u65f6\uff0c\u591a\u4e2a\u5ba2\u6237\u7aef\u540c\u65f6\u62a2\u9501\uff0c\u6839\u636e Revision \u53f7\u5927\u5c0f\u4f9d\u6b21\u83b7\u5f97\u9501\uff0c\u53ef\u4ee5\u907f\u514d \u201c\u7f8a\u7fa4\u6548\u5e94\u201d \uff08\u4e5f\u79f0\u201c\u60ca\u7fa4\u6548\u5e94\u201d\uff09\uff0c\u5b9e\u73b0\u516c\u5e73\u9501\u3002 Prefix \u673a\u5236 \u5373\u524d\u7f00\u673a\u5236\uff0c\u4e5f\u79f0\u76ee\u5f55\u673a\u5236\uff0c\u4f8b\u5982\uff0c\u4e00\u4e2a\u540d\u4e3a /mylock \u7684\u9501\uff0c\u4e24\u4e2a\u4e89\u62a2\u5b83\u7684\u5ba2\u6237\u7aef\u8fdb\u884c\u5199\u64cd\u4f5c\uff0c\u5b9e\u9645\u5199\u5165\u7684Key\u5206\u522b\u4e3a\uff1akey1=\"/mylock/UUID1\",key2=\"/mylock/UUID2\"\uff0c\u5176\u4e2d\uff0cUUID\u8868\u793a\u5168\u5c40\u552f\u4e00\u7684ID\uff0c\u786e\u4fdd\u4e24\u4e2aKey\u7684\u552f\u4e00\u6027\u3002\u5f88\u663e\u7136\uff0c\u5199\u64cd\u4f5c\u90fd\u4f1a\u6210\u529f\uff0c\u4f46\u8fd4\u56de\u7684Revision\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\uff0c\u5982\u4f55\u5224\u65ad\u8c01\u83b7\u5f97\u4e86\u9501\u5462\uff1f\u901a\u8fc7\u524d\u7f00\u201c/mylock\u201d\u67e5\u8be2\uff0c\u8fd4\u56de\u5305\u542b\u4e24\u4e2aKey-Value\u5bf9\u7684Key-Value\u5217\u8868\uff0c\u540c\u65f6\u4e5f\u5305\u542b\u5b83\u4eec\u7684Revision\uff0c\u901a\u8fc7Revision\u5927\u5c0f\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u5224\u65ad\u81ea\u5df1\u662f\u5426\u83b7\u5f97\u9501\uff0c\u5982\u679c\u62a2\u9501\u5931\u8d25\uff0c\u5219\u7b49\u5f85\u9501\u91ca\u653e\uff08\u5bf9\u5e94\u7684 Key \u88ab\u5220\u9664\u6216\u8005\u79df\u7ea6\u8fc7\u671f\uff09\uff0c\u7136\u540e\u518d\u5224\u65ad\u81ea\u5df1\u662f\u5426\u53ef\u4ee5\u83b7\u5f97\u9501\u3002 Watch \u673a\u5236 \u5373\u76d1\u542c\u673a\u5236\uff0cWatch\u673a\u5236\u652f\u6301\u76d1\u542c\u67d0\u4e2a\u56fa\u5b9a\u7684Key\uff0c\u4e5f\u652f\u6301\u76d1\u542c\u4e00\u4e2a\u8303\u56f4\uff08\u524d\u7f00\u673a\u5236\uff09\uff0c\u5f53\u88ab\u76d1\u542c\u7684Key\u6216\u8303\u56f4\u53d1\u751f\u53d8\u5316\uff0c\u5ba2\u6237\u7aef\u5c06\u6536\u5230\u901a\u77e5\uff1b\u5728\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u65f6\uff0c\u5982\u679c\u62a2\u9501\u5931\u8d25\uff0c\u53ef\u901a\u8fc7Prefix\u673a\u5236\u8fd4\u56de\u7684Key-Value\u5217\u8868\u83b7\u5f97Revision\u6bd4\u81ea\u5df1\u5c0f\u4e14\u76f8\u5dee\u6700\u5c0f\u7684 Key\uff08\u79f0\u4e3a Pre-Key\uff09\uff0c\u5bf9Pre-Key\u8fdb\u884c\u76d1\u542c\uff0c\u56e0\u4e3a\u53ea\u6709\u5b83\u91ca\u653e\u9501\uff0c\u81ea\u5df1\u624d\u80fd\u83b7\u5f97\u9501\uff0c\u5982\u679c\u76d1\u542c\u5230Pre-Key\u7684DELETE\u4e8b\u4ef6\uff0c\u5219\u8bf4\u660ePre-Key\u5df2\u7ecf\u91ca\u653e\uff0c\u81ea\u5df1\u5df2\u7ecf\u6301\u6709\u9501\u3002 \u6765\u770b\u4e0betcd\u4e2d\u9501\u662f\u5982\u4f55\u5b9e\u73b0\u7684 // Mutex implements the sync Locker interface with etcd type Mutex struct { s *Session pfx string // \u524d\u7f00 myKey string // key myRev int64 // \u81ea\u589e\u7684Revision hdr *pb.ResponseHeader } // Lock \u4f7f\u7528\u53ef\u53d6\u6d88\u7684context\u9501\u5b9a\u4e92\u65a5\u9501\u3002\u5982\u679ccontext\u88ab\u53d6\u6d88 // \u5728\u5c1d\u8bd5\u83b7\u53d6\u9501\u65f6\uff0c\u4e92\u65a5\u9501\u4f1a\u5c1d\u8bd5\u6e05\u9664\u5176\u8fc7\u65f6\u7684\u9501\u6761\u76ee\u3002 func (m *Mutex) Lock(ctx context.Context) error { resp, err := m.tryAcquire(ctx) if err != nil { return err } // if no key on prefix / the minimum rev is key, already hold the lock ownerKey := resp.Responses[1].GetResponseRange().Kvs if len(ownerKey) == 0 || ownerKey[0].CreateRevision == m.myRev { m.hdr = resp.Header return nil } client := m.s.Client() // waitDeletes \u6709\u6548\u5730\u7b49\u5f85\uff0c\u76f4\u5230\u6240\u6709\u952e\u5339\u914d\u524d\u7f00\u4e14\u4e0d\u5927\u4e8e // \u521b\u5efa\u7684version\u3002 _, werr := waitDeletes(ctx, client, m.pfx, m.myRev-1) // release lock key if wait failed if werr != nil { m.Unlock(client.Ctx()) return werr } // make sure the session is not expired, and the owner key still exists. gresp, werr := client.Get(ctx, m.myKey) if werr != nil { m.Unlock(client.Ctx()) return werr } if len(gresp.Kvs) == 0 { // is the session key lost? return ErrSessionExpired } m.hdr = gresp.Header return nil } func (m *Mutex) tryAcquire(ctx context.Context) (*v3.TxnResponse, error) { s := m.s client := m.s.Client() // s.Lease()\u79df\u7ea6 m.myKey = fmt.Sprintf(\"%s%x\", m.pfx, s.Lease()) // \u6bd4\u8f83Revision, \u8fd9\u91cc\u6784\u5efa\u4e86\u4e00\u4e2a\u6bd4\u8f83\u8868\u8fbe\u5f0f // \u5177\u4f53\u7684\u6bd4\u8f83\u903b\u8f91\u5728\u4e0b\u9762\u7684client.Txn\u7528\u5230 // \u5982\u679c\u7b49\u4e8e0\uff0c\u5199\u5165\u5f53\u524d\u7684key\uff0c\u5e76\u8bbe\u7f6e\u79df\u7ea6\uff0c // \u5426\u5219\u83b7\u53d6\u8fd9\u4e2akey,\u91cd\u7528\u79df\u7ea6\u4e2d\u7684\u9501(\u8fd9\u91cc\u4e3b\u8981\u76ee\u7684\u662f\u5728\u4e8e\u91cd\u5165) // \u901a\u8fc7\u7b2c\u4e8c\u6b21\u83b7\u53d6\u9501,\u5224\u65ad\u9501\u662f\u5426\u5b58\u5728\u6765\u652f\u6301\u91cd\u5165 // \u6240\u4ee5\u53ea\u8981\u79df\u7ea6\u4e00\u81f4,\u90a3\u4e48\u662f\u53ef\u4ee5\u91cd\u5165\u7684. cmp := v3.Compare(v3.CreateRevision(m.myKey), \"=\", 0) // \u901a\u8fc7 myKey \u5c06\u81ea\u5df1\u9501\u5728waiters\uff1b\u6700\u65e9\u7684waiters\u5c06\u83b7\u5f97\u9501 put := v3.OpPut(m.myKey, \"\", v3.WithLease(s.Lease())) // \u83b7\u53d6\u5df2\u7ecf\u62ff\u5230\u9501\u7684key\u7684\u4fe1\u606f get := v3.OpGet(m.myKey) // \u4ec5\u4f7f\u7528\u4e00\u4e2a RPC \u83b7\u53d6\u5f53\u524d\u6301\u6709\u8005\u4ee5\u5b8c\u6210\u65e0\u7ade\u4e89\u8def\u5f84 getOwner := v3.OpGet(m.pfx, v3.WithFirstCreate()...) // \u8fd9\u91cc\u662f\u6bd4\u8f83\u7684\u903b\u8f91\uff0c\u5982\u679c\u7b49\u4e8e0\uff0c\u5199\u5165\u5f53\u524d\u7684key\uff0c\u5426\u5219\u5219\u8bfb\u53d6\u8fd9\u4e2akey // \u5927\u4f6c\u7684\u4ee3\u7801\u5199\u7684\u5c31\u662f\u5947\u5999 resp, err := client.Txn(ctx).If(cmp).Then(put, getOwner).Else(get, getOwner).Commit() if err != nil { return nil, err } // \u6839\u636e\u6bd4\u8f83\u64cd\u4f5c\u7684\u7ed3\u679c\u5199\u5165Revision\u5230m.myRev\u4e2d m.myRev = resp.Header.Revision if !resp.Succeeded { m.myRev = resp.Responses[0].GetResponseRange().Kvs[0].CreateRevision } return resp, nil } // \u62bd\u8c61\u51fa\u4e86\u4e00\u4e2asession\u5bf9\u8c61\u6765\u6301\u7eed\u4fdd\u6301\u79df\u7ea6\u4e0d\u8fc7\u671f func NewSession(client *v3.Client, opts ...SessionOption) (*Session, error) { ... ctx, cancel := context.WithCancel(ops.ctx) // \u4fdd\u8bc1\u9501\uff0c\u5728\u7ebf\u7a0b\u7684\u6d3b\u52a8\u671f\u95f4\uff0c\u5b9e\u73b0\u9501\u7684\u7684\u7eed\u79df keepAlive, err := client.KeepAlive(ctx, id) if err != nil || keepAlive == nil { cancel() return nil, err } ... return s, nil } \u8bbe\u8ba1\u601d\u8def\uff1a 1\u3001\u591a\u4e2a\u8bf7\u6c42\u6765\u524d\u62a2\u5360\u9501\uff0c\u901a\u8fc7Revision\u6765\u5224\u65ad\u9501\u7684\u5148\u540e\u987a\u5e8f\uff1b 2\u3001\u5982\u679c\u6709\u6bd4\u5f53\u524dkey\u7684Revision\u5c0f\u7684Revision\u5b58\u5728\uff0c\u8bf4\u660e\u6709key\u5df2\u7ecf\u83b7\u5f97\u4e86\u9501\uff1b 3\u3001\u7b49\u5f85\u76f4\u5230\u524d\u9762\u7684key\u88ab\u5220\u9664\uff0c\u7136\u540e\u81ea\u5df1\u5c31\u83b7\u5f97\u4e86\u9501\u3002 \u901a\u8fc7etcd\u5b9e\u73b0\u7684\u9501\uff0c\u76f4\u63a5\u5305\u542b\u4e86\u9501\u7684\u7eed\u79df\uff0c\u5982\u679c\u4f7f\u7528Redis\u8fd8\u8981\u81ea\u5df1\u53bb\u5b9e\u73b0\uff0c\u76f8\u6bd4\u8f83\u4f7f\u7528\u66f4\u7b80\u5355\u3002 \u6765\u5b9e\u73b0\u4e00\u4e2aetcd\u7684\u9501 package main import ( \"context\" \"fmt\" \"log\" \"time\" clientv3 \"go.etcd.io/etcd/client/v3\" \"go.etcd.io/etcd/client/v3/concurrency\" ) func main() { cli, err := clientv3.New(clientv3.Config{ Endpoints: []string{\"localhost:2379\"}, DialTimeout: 5 * time.Second, }) if err != nil { log.Fatal(err) } defer cli.Close() // m1\u6765\u62a2\u9501 go func() { s1, err := concurrency.NewSession(cli) if err != nil { log.Fatal(err) } defer s1.Close() m1 := concurrency.NewMutex(s1, \"/my-lock/\") // acquire lock for s1 if err := m1.Lock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\"m1---\u83b7\u5f97\u4e86\u9501\") time.Sleep(time.Second * 3) // \u91ca\u653e\u9501 if err := m1.Unlock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\"m1++\u91ca\u653e\u4e86\u9501\") }() // m2\u6765\u62a2\u9501 go func() { s2, err := concurrency.NewSession(cli) if err != nil { log.Fatal(err) } defer s2.Close() m2 := concurrency.NewMutex(s2, \"/my-lock/\") if err := m2.Lock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\"m2---\u83b7\u5f97\u4e86\u9501\") // mock\u4e1a\u52a1\u6267\u884c\u7684\u65f6\u95f4 time.Sleep(time.Second * 3) // \u91ca\u653e\u9501 if err := m2.Unlock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\"m2++\u91ca\u653e\u4e86\u9501\") }() time.Sleep(time.Second * 10) } \u6253\u5370\u4e0b\u8f93\u51fa m2---\u83b7\u5f97\u4e86\u9501 m2++\u91ca\u653e\u4e86\u9501 m1---\u83b7\u5f97\u4e86\u9501 m1++\u91ca\u653e\u4e86\u9501 \u5206\u5e03\u5f0f\u961f\u5217 \u5373\u521b\u5efa\u4e00\u4e2a\u5148\u8fdb\u5148\u51fa\u7684\u961f\u5217\u4fdd\u6301\u987a\u5e8f\u3002\u53e6\u4e00\u79cd\u6bd4\u8f83\u6709\u610f\u601d\u7684\u5b9e\u73b0\u662f\u5728\u4fdd\u8bc1\u961f\u5217\u8fbe\u5230\u67d0\u4e2a\u6761\u4ef6\u65f6\u518d\u7edf\u4e00\u6309\u987a\u5e8f\u6267\u884c\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u5b9e\u73b0\u53ef\u4ee5\u5728/queue\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u53e6\u5916\u5efa\u7acb\u4e00\u4e2a/queue/condition\u8282\u70b9\u3002 condition \u53ef\u4ee5\u8868\u793a\u961f\u5217\u5927\u5c0f\u3002\u6bd4\u5982\u4e00\u4e2a\u5927\u7684\u4efb\u52a1\u9700\u8981\u5f88\u591a\u5c0f\u4efb\u52a1\u5c31\u7eea\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u6267\u884c\uff0c\u6bcf\u6b21\u6709\u4e00\u4e2a\u5c0f\u4efb\u52a1\u5c31\u7eea\uff0c\u5c31\u7ed9\u8fd9\u4e2a condition \u6570\u5b57\u52a0 1\uff0c\u76f4\u5230\u8fbe\u5230\u5927\u4efb\u52a1\u89c4\u5b9a\u7684\u6570\u5b57\uff0c\u518d\u5f00\u59cb\u6267\u884c\u961f\u5217\u91cc\u7684\u4e00\u7cfb\u5217\u5c0f\u4efb\u52a1\uff0c\u6700\u7ec8\u6267\u884c\u5927\u4efb\u52a1\u3002 condition \u53ef\u4ee5\u8868\u793a\u67d0\u4e2a\u4efb\u52a1\u5728\u4e0d\u5728\u961f\u5217\u3002\u8fd9\u4e2a\u4efb\u52a1\u53ef\u4ee5\u662f\u6240\u6709\u6392\u5e8f\u4efb\u52a1\u7684\u9996\u4e2a\u6267\u884c\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u662f\u62d3\u6251\u7ed3\u6784\u4e2d\u6ca1\u6709\u4f9d\u8d56\u7684\u70b9\u3002\u901a\u5e38\uff0c\u5fc5\u987b\u6267\u884c\u8fd9\u4e9b\u4efb\u52a1\u540e\u624d\u80fd\u6267\u884c\u961f\u5217\u4e2d\u7684\u5176\u4ed6\u4efb\u52a1\u3002 condition \u8fd8\u53ef\u4ee5\u8868\u793a\u5176\u5b83\u7684\u4e00\u7c7b\u5f00\u59cb\u6267\u884c\u4efb\u52a1\u7684\u901a\u77e5\u3002\u53ef\u4ee5\u7531\u63a7\u5236\u7a0b\u5e8f\u6307\u5b9a\uff0c\u5f53 condition \u51fa\u73b0\u53d8\u5316\u65f6\uff0c\u5f00\u59cb\u6267\u884c\u961f\u5217\u4efb\u52a1\u3002 \u6765\u770b\u4e0b\u5b9e\u73b0 \u5165\u961f func newUniqueKV(kv v3.KV, prefix string, val string) (*RemoteKV, error) { for { newKey := fmt.Sprintf(\"%s/%v\", prefix, time.Now().UnixNano()) // \u521b\u5efa\u5bf9\u5e94\u7684key rev, err := putNewKV(kv, newKey, val, v3.NoLease) if err == nil { return &RemoteKV{kv, newKey, rev, val}, nil } // \u5982\u679c\u4e4b\u524d\u5df2\u7ecf\u521b\u5efa\u4e86\uff0c\u5c31\u8fd4\u56de if err != ErrKeyExists { return nil, err } } } // \u53ea\u6709\u5728\u6ca1\u6709\u521b\u5efa\u7684\u65f6\u5019\u624d\u80fd\u521b\u5efa\u6210\u529f func putNewKV(kv v3.KV, key, val string, leaseID v3.LeaseID) (int64, error) { cmp := v3.Compare(v3.Version(key), \"=\", 0) req := v3.OpPut(key, val, v3.WithLease(leaseID)) // \u8fd9\u91cc\u8fd8\u7528\u5230\u4e86\u8fd9\u79cd\u6bd4\u8f83\u7684\u903b\u8f91 txnresp, err := kv.Txn(context.TODO()).If(cmp).Then(req).Commit() if err != nil { return 0, err } // \u5df2\u7ecf\u5b58\u5728\u5219\u8fd4\u56de\u9519\u8bef if !txnresp.Succeeded { return 0, ErrKeyExists } return txnresp.Header.Revision, nil } \u51fa\u961f // Dequeue\u5904\u7406\u7684\u662f\u4e00\u4e2a\u5148\u8fdb\u65b0\u51fa\u7684\u961f\u5217 // \u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0cDequeue\u5c06\u4f1a\u963b\u585e\u76f4\u5230\u91cc\u9762\u6709\u503c\u585e\u5165 func (q *Queue) Dequeue() (string, error) { resp, err := q.client.Get(q.ctx, q.keyPrefix, v3.WithFirstRev()...) if err != nil { return \"\", err } kv, err := claimFirstKey(q.client, resp.Kvs) if err != nil { return \"\", err } else if kv != nil { return string(kv.Value), nil // more \u8868\u793a\u5728\u8bf7\u6c42\u7684\u8303\u56f4\u5185\u662f\u5426\u8fd8\u6709\u66f4\u591a\u7684\u952e\u8981\u8fd4\u56de\u3002 // \u5219\u8fdb\u884cDequeue\u91cd\u8bd5 } else if resp.More { // missed some items, retry to read in more return q.Dequeue() } // nothing yet; wait on elements ev, err := WaitPrefixEvents( q.client, q.keyPrefix, resp.Header.Revision, []mvccpb.Event_EventType{mvccpb.PUT}) if err != nil { return \"\", err } ok, err := deleteRevKey(q.client, string(ev.Kv.Key), ev.Kv.ModRevision) if err != nil { return \"\", err } else if !ok { // \u5982\u679c\u5220\u9664\u5931\u8d25\uff0c\u91cd\u8bd5 return q.Dequeue() } return string(ev.Kv.Value), err } \u603b\u7ed3 1\u3001\u8fd9\u91cc\u7684\u5165\u961f\u662f\u4e00\u4e2a\u5148\u8fdb\u65b0\u51fa\u7684\u961f\u5217\uff1b 2\u3001\u51fa\u961f\u7684\u5b9e\u73b0\u4e5f\u5f88\u7b80\u5355\uff0c\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0cDequeue\u5c06\u4f1a\u963b\u585e\u76f4\u5230\u91cc\u9762\u6709\u503c\u585e\u5165\uff1b \u6765\u4e2ademo package main import ( \"fmt\" \"log\" \"time\" clientv3 \"go.etcd.io/etcd/client/v3\" recipe \"go.etcd.io/etcd/client/v3/experimental/recipes\" ) func main() { cli, err := clientv3.New(clientv3.Config{ Endpoints: []string{\"localhost:2379\"}, }) if err != nil { log.Fatalf(\"error New (%v)\", err) } go func() { q := recipe.NewQueue(cli, \"testq\") for i := 0; i < 5; i++ { if err := q.Enqueue(fmt.Sprintf(\"%d\", i)); err != nil { log.Fatalf(\"error enqueuing (%v)\", err) } } }() go func() { q := recipe.NewQueue(cli, \"testq\") for i := 10; i < 100; i++ { if err := q.Enqueue(fmt.Sprintf(\"%d\", i)); err != nil { log.Fatalf(\"error enqueuing (%v)\", err) } } }() q := recipe.NewQueue(cli, \"testq\") for i := 0; i < 100; i++ { s, err := q.Dequeue() if err != nil { log.Fatalf(\"error dequeueing (%v)\", err) } fmt.Println(s) } time.Sleep(time.Second * 3) } \u96c6\u7fa4\u76d1\u63a7\u4e0eLeader\u7ade\u9009 \u901a\u8fc7etcd\u6765\u8fdb\u884c\u76d1\u63a7\u5b9e\u73b0\u8d77\u6765\u975e\u5e38\u7b80\u5355\u5e76\u4e14\u5b9e\u65f6\u6027\u5f3a 1\u3001\u524d\u9762\u51e0\u4e2a\u573a\u666f\u5df2\u7ecf\u63d0\u5230Watcher\u673a\u5236\uff0c\u5f53\u67d0\u4e2a\u8282\u70b9\u6d88\u5931\u6216\u6709\u53d8\u52a8\u65f6\uff0cWatcher\u4f1a\u7b2c\u4e00\u65f6\u95f4\u53d1\u73b0\u5e76\u544a\u77e5\u7528\u6237\u3002 2\u3001\u8282\u70b9\u53ef\u4ee5\u8bbe\u7f6eTTL key\uff0c\u6bd4\u5982\u6bcf\u9694 30s \u53d1\u9001\u4e00\u6b21\u5fc3\u8df3\u4f7f\u4ee3\u8868\u8be5\u673a\u5668\u5b58\u6d3b\u7684\u8282\u70b9\u7ee7\u7eed\u5b58\u5728\uff0c\u5426\u5219\u8282\u70b9\u6d88\u5931\u3002 \u8fd9\u6837\u5c31\u53ef\u4ee5\u7b2c\u4e00\u65f6\u95f4\u68c0\u6d4b\u5230\u5404\u8282\u70b9\u7684\u5065\u5eb7\u72b6\u6001\uff0c\u4ee5\u5b8c\u6210\u96c6\u7fa4\u7684\u76d1\u63a7\u8981\u6c42 \u53e6\u5916\uff0c\u4f7f\u7528\u5206\u5e03\u5f0f\u9501\uff0c\u53ef\u4ee5\u5b8c\u6210Leader\u7ade\u9009\u3002\u8fd9\u79cd\u573a\u666f\u901a\u5e38\u662f\u4e00\u4e9b\u957f\u65f6\u95f4CPU\u8ba1\u7b97\u6216\u8005\u4f7f\u7528IO\u64cd\u4f5c\u7684\u673a\u5668\uff0c\u53ea\u9700\u8981\u7ade\u9009\u51fa\u7684Leader\u8ba1\u7b97\u6216\u5904\u7406\u4e00\u6b21\uff0c\u5c31\u53ef\u4ee5\u628a\u7ed3\u679c\u590d\u5236\u7ed9\u5176\u4ed6\u7684Follower\u3002\u4ece\u800c\u907f\u514d\u91cd\u590d\u52b3\u52a8\uff0c\u8282\u7701\u8ba1\u7b97\u8d44\u6e90\u3002 \u8fd9\u4e2a\u7684\u7ecf\u5178\u573a\u666f\u662f\u641c\u7d22\u7cfb\u7edf\u4e2d\u5efa\u7acb\u5168\u91cf\u7d22\u5f15\u3002\u5982\u679c\u6bcf\u4e2a\u673a\u5668\u90fd\u8fdb\u884c\u4e00\u904d\u7d22\u5f15\u7684\u5efa\u7acb\uff0c\u4e0d\u4f46\u8017\u65f6\u800c\u4e14\u5efa\u7acb\u7d22\u5f15\u7684\u4e00\u81f4\u6027\u4e0d\u80fd\u4fdd\u8bc1\u3002\u901a\u8fc7\u5728etcd\u7684CAS\u673a\u5236\u540c\u65f6\u521b\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u521b\u5efa\u6210\u529f\u7684\u673a\u5668\u4f5c\u4e3aLeader\uff0c\u8fdb\u884c\u7d22\u5f15\u8ba1\u7b97\uff0c\u7136\u540e\u628a\u8ba1\u7b97\u7ed3\u679c\u5206\u53d1\u5230\u5176\u5b83\u8282\u70b9\u3002","title":"Etcd"},{"location":"third_party/etcd/#etcd","text":"ETCD\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u3001\u53ef\u9760\u7684key-value\u5b58\u50a8\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u7528\u4e8e\u5b58\u50a8\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684\u5173\u952e\u6570\u636e\uff1b\u5f53\u7136\uff0c\u5b83\u4e0d\u4ec5\u4ec5\u7528\u4e8e\u5b58\u50a8\uff0c\u8fd8\u63d0\u4f9b\u914d\u7f6e\u5171\u4eab\u53ca\u670d\u52a1\u53d1\u73b0\uff1b\u57fa\u4e8eGo\u8bed\u8a00\u5b9e\u73b0 \u3002","title":"\u4ec0\u4e48\u662fetcd"},{"location":"third_party/etcd/#etcd_1","text":"\u5b8c\u5168\u590d\u5236\uff1a\u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u4f7f\u7528\u5b8c\u6574\u7684\u5b58\u6863 \u9ad8\u53ef\u7528\u6027\uff1aEtcd\u53ef\u7528\u4e8e\u907f\u514d\u786c\u4ef6\u7684\u5355\u70b9\u6545\u969c\u6216\u7f51\u7edc\u95ee\u9898 \u4e00\u81f4\u6027\uff1a\u6bcf\u6b21\u8bfb\u53d6\u90fd\u4f1a\u8fd4\u56de\u8de8\u591a\u4e3b\u673a\u7684\u6700\u65b0\u5199\u5165 \u7b80\u5355\uff1a\u5305\u62ec\u4e00\u4e2a\u5b9a\u4e49\u826f\u597d\u3001\u9762\u5411\u7528\u6237\u7684API\uff08gRPC\uff09 \u5b89\u5168\uff1a\u5b9e\u73b0\u4e86\u5e26\u6709\u53ef\u9009\u7684\u5ba2\u6237\u7aef\u8bc1\u4e66\u8eab\u4efd\u9a8c\u8bc1\u7684\u81ea\u52a8\u5316TLS \u53ef\u9760\uff1a\u4f7f\u7528Raft\u7b97\u6cd5\u5b9e\u73b0\u4e86\u5f3a\u4e00\u81f4\u3001\u9ad8\u53ef\u7528\u7684\u670d\u52a1\u5b58\u50a8\u76ee\u5f55","title":"etcd\u7684\u7279\u70b9"},{"location":"third_party/etcd/#etcd_2","text":"","title":"etcd\u7684\u5e94\u7528\u573a\u666f"},{"location":"third_party/etcd/#_1","text":"\u670d\u52a1\u53d1\u73b0\u8fd8\u80fd\u6ce8\u518c \u670d\u52a1\u6ce8\u518c\u53d1\u73b0\u89e3\u51b3\u7684\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u6700\u5e38\u89c1\u7684\u95ee\u9898\u4e4b\u4e00\uff0c\u5373\u5728\u540c\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\u76ee\u6807\u670d\u52a1\uff0c\u5efa\u7acb\u8fde\u63a5\uff0c\u7136\u540e\u5b8c\u6210\u6574\u4e2a\u94fe\u8def\u7684\u8c03\u5ea6\u3002 \u672c\u8d28\u4e0a\u6765\u8bf4\uff0c\u670d\u52a1\u53d1\u73b0\u5c31\u662f\u60f3\u8981\u4e86\u89e3\u96c6\u7fa4\u4e2d\u662f\u5426\u6709\u8fdb\u7a0b\u5728\u76d1\u542c udp \u6216 tcp \u7aef\u53e3\uff0c\u5e76\u4e14\u901a\u8fc7\u540d\u5b57\u5c31\u53ef\u4ee5\u67e5\u627e\u548c\u8fde\u63a5\u3002\u8981\u89e3\u51b3\u670d\u52a1\u53d1\u73b0\u7684\u95ee\u9898\uff0c\u9700\u8981\u6709\u4e0b\u9762\u4e09\u5927\u652f\u67f1\uff0c\u7f3a\u4e00\u4e0d\u53ef\u3002 1\u3001\u4e00\u4e2a\u5f3a\u4e00\u81f4\u6027\u3001\u9ad8\u53ef\u7528\u7684\u670d\u52a1\u5b58\u50a8\u76ee\u5f55\u3002\u57fa\u4e8eRaft\u7b97\u6cd5\u7684etcd\u5929\u751f\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u5f3a\u4e00\u81f4\u6027\u9ad8\u53ef\u7528\u7684\u670d\u52a1\u5b58\u50a8\u76ee\u5f55\u3002 2\u3001\u4e00\u79cd\u6ce8\u518c\u670d\u52a1\u548c\u76d1\u63a7\u670d\u52a1\u5065\u5eb7\u72b6\u6001\u7684\u673a\u5236\u3002\u7528\u6237\u53ef\u4ee5\u5728etcd\u4e2d\u6ce8\u518c\u670d\u52a1\uff0c\u5e76\u4e14\u5bf9\u6ce8\u518c\u7684\u670d\u52a1\u8bbe\u7f6ekey TTL\uff0c\u5b9a\u65f6\u4fdd\u6301\u670d\u52a1\u7684\u5fc3\u8df3\u4ee5\u8fbe\u5230\u76d1\u63a7\u5065\u5eb7\u72b6\u6001\u7684\u6548\u679c\u3002 3\u3001\u4e00\u79cd\u67e5\u627e\u548c\u8fde\u63a5\u670d\u52a1\u7684\u673a\u5236\u3002\u901a\u8fc7\u5728 etcd \u6307\u5b9a\u7684\u4e3b\u9898\u4e0b\u6ce8\u518c\u7684\u670d\u52a1\u4e5f\u80fd\u5728\u5bf9\u5e94\u7684\u4e3b\u9898\u4e0b\u67e5\u627e\u5230\u3002\u4e3a\u4e86\u786e\u4fdd\u8fde\u63a5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u670d\u52a1\u673a\u5668\u4e0a\u90fd\u90e8\u7f72\u4e00\u4e2aProxy\u6a21\u5f0f\u7684etcd\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u786e\u4fdd\u80fd\u8bbf\u95eeetcd\u96c6\u7fa4\u7684\u670d\u52a1\u90fd\u80fd\u4e92\u76f8\u8fde\u63a5\u3002 \u4e00\u4e2a\u7528\u6237\u7684api\u8bf7\u6c42\uff0c\u53ef\u80fd\u8c03\u7528\u591a\u4e2a\u5fae\u670d\u52a1\u8d44\u6e90\uff0c\u8fd9\u4e9b\u670d\u52a1\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528etcd\u8fdb\u884c\u670d\u52a1\u6ce8\u518c\u548c\u670d\u52a1\u53d1\u73b0\uff0c\u5f53\u6bcf\u4e2a\u670d\u52a1\u542f\u52a8\u7684\u65f6\u5019\u5c31\u6ce8\u518c\u5230etcd\u4e2d\uff0c\u5f53\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5728etcd\u4e2d\u5bfb\u627e\uff0c\u8c03\u7528\u5373\u53ef\u3002 \u5f53\u7136\uff0c\u6bcf\u4e2a\u670d\u52a1\u7684\u5b9e\u4f8b\u4e0d\u6b62\u4e00\u4e2a\uff0c\u6bd4\u5982\u6211\u4eec\u7684\u7528\u6237\u670d\u52a1\uff0c\u6211\u4eec\u53ef\u80fd\u542f\u52a8\u4e86\u591a\u4e2a\u5b9e\u4f8b\uff0c\u8fd9\u4e9b\u5b9e\u4f8b\u5728\u670d\u52a1\u542f\u52a8\u8fc7\u7a0b\u4e2d\u5168\u90e8\u6ce8\u518c\u5230\u4e86etcd\u4e2d\uff0c\u4f46\u662f\u67d0\u4e2a\u5b9e\u4f8b\u53ef\u80fd\u51fa\u73b0\u6545\u969c\u91cd\u542f\uff0c\u8fd9\u65f6\u5019\u5c31etcd\u5728\u8fdb\u884c\u8f6c\u53d1\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5c4f\u853d\u5230\u6545\u969c\u7684\u5b9e\u4f8b\u8282\u70b9\uff0c\u53ea\u5411\u6b63\u5e38\u8fd0\u884c\u7684\u5b9e\u4f8b\uff0c\u8fdb\u884c\u8bf7\u6c42\u8f6c\u53d1\u3002 \u6765\u770b\u4e2a\u670d\u52a1\u6ce8\u518c\u53d1\u73b0\u7684demo \u8fd9\u91cc\u653e\u4e00\u6bb5\u6bd4\u8f83\u6838\u5fc3\u7684\u4ee3\u7801\uff0c\u8fd9\u91cc\u6458\u5f55\u4e86\u6211\u4eec\u7ebf\u4e0a\u6b63\u5728\u4f7f\u7528\u7684etcd\u5b9e\u73b0grpc\u670d\u52a1\u6ce8\u518c\u548c\u53d1\u73b0\u7684\u5b9e\u73b0\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u53ef\u53c2\u8003\uff0cetcd\u5b9e\u73b0grpc\u7684\u670d\u52a1\u6ce8\u518c\u548c\u670d\u52a1\u53d1\u73b0 \u5bf9\u4e8eetcd\u4e2d\u7684\u8fde\u63a5\uff0c\u6211\u4eec\u6bcf\u4e2a\u90fd\u7ef4\u62a4\u4e00\u4e2a\u79df\u7ea6\uff0c\u901a\u8fc7KeepAlive\u81ea\u52a8\u7eed\u4fdd\u3002\u5982\u679c\u79df\u7ea6\u8fc7\u671f\u5219\u6240\u6709\u9644\u52a0\u5728\u79df\u7ea6\u4e0a\u7684key\u5c06\u8fc7\u671f\u5e76\u88ab\u5220\u9664\uff0c\u5373\u6240\u5bf9\u5e94\u7684\u670d\u52a1\u88ab\u62ff\u6389\u3002 package discovery import ( \"context\" \"encoding/json\" \"errors\" \"net/http\" \"strconv\" \"strings\" \"time\" clientv3 \"go.etcd.io/etcd/client/v3\" \"go.uber.org/zap\" ) // Register for grpc server type Register struct { EtcdAddrs []string DialTimeout int closeCh chan struct{} leasesID clientv3.LeaseID keepAliveCh <-chan *clientv3.LeaseKeepAliveResponse srvInfo Server srvTTL int64 cli *clientv3.Client logger *zap.Logger } // NewRegister create a register base on etcd func NewRegister(etcdAddrs []string, logger *zap.Logger) *Register { return &Register{ EtcdAddrs: etcdAddrs, DialTimeout: 3, logger: logger, } } // Register a service func (r *Register) Register(srvInfo Server, ttl int64) (chan<- struct{}, error) { var err error if strings.Split(srvInfo.Addr, \":\")[0] == \"\" { return nil, errors.New(\"invalid ip\") } if r.cli, err = clientv3.New(clientv3.Config{ Endpoints: r.EtcdAddrs, DialTimeout: time.Duration(r.DialTimeout) * time.Second, }); err != nil { return nil, err } r.srvInfo = srvInfo r.srvTTL = ttl if err = r.register(); err != nil { return nil, err } r.closeCh = make(chan struct{}) go r.keepAlive() return r.closeCh, nil } // Stop stop register func (r *Register) Stop() { r.closeCh <- struct{}{} } // register \u6ce8\u518c\u8282\u70b9 func (r *Register) register() error { leaseCtx, cancel := context.WithTimeout(context.Background(), time.Duration(r.DialTimeout)*time.Second) defer cancel() leaseResp, err := r.cli.Grant(leaseCtx, r.srvTTL) if err != nil { return err } r.leasesID = leaseResp.ID if r.keepAliveCh, err = r.cli.KeepAlive(context.Background(), leaseResp.ID); err != nil { return err } data, err := json.Marshal(r.srvInfo) if err != nil { return err } _, err = r.cli.Put(context.Background(), BuildRegPath(r.srvInfo), string(data), clientv3.WithLease(r.leasesID)) return err } // unregister \u5220\u9664\u8282\u70b9 func (r *Register) unregister() error { _, err := r.cli.Delete(context.Background(), BuildRegPath(r.srvInfo)) return err } // keepAlive func (r *Register) keepAlive() { ticker := time.NewTicker(time.Duration(r.srvTTL) * time.Second) for { select { case <-r.closeCh: if err := r.unregister(); err != nil { r.logger.Error(\"unregister failed\", zap.Error(err)) } if _, err := r.cli.Revoke(context.Background(), r.leasesID); err != nil { r.logger.Error(\"revoke failed\", zap.Error(err)) } return case res := <-r.keepAliveCh: if res == nil { if err := r.register(); err != nil { r.logger.Error(\"register failed\", zap.Error(err)) } } case <-ticker.C: if r.keepAliveCh == nil { if err := r.register(); err != nil { r.logger.Error(\"register failed\", zap.Error(err)) } } } } }","title":"\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0"},{"location":"third_party/etcd/#_2","text":"\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u6700\u9002\u7528\u7684\u4e00\u79cd\u7ec4\u4ef6\u95f4\u901a\u4fe1\u65b9\u5f0f\u5c31\u662f\u6d88\u606f\u53d1\u5e03\u4e0e\u8ba2\u9605\u3002\u5373\u6784\u5efa\u4e00\u4e2a\u914d\u7f6e\u5171\u4eab\u4e2d\u5fc3\uff0c\u6570\u636e\u63d0\u4f9b\u8005\u5728\u8fd9\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u53d1\u5e03\u6d88\u606f\uff0c\u800c\u6d88\u606f\u4f7f\u7528\u8005\u5219\u8ba2\u9605\u4ed6\u4eec\u5173\u5fc3\u7684\u4e3b\u9898\uff0c\u4e00\u65e6\u4e3b\u9898\u6709\u6d88\u606f\u53d1\u5e03\uff0c\u5c31\u4f1a\u5b9e\u65f6\u901a\u77e5\u8ba2\u9605\u8005\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u505a\u5230\u5206\u5e03\u5f0f\u7cfb\u7edf\u914d\u7f6e\u7684\u96c6\u4e2d\u5f0f\u7ba1\u7406\u4e0e\u52a8\u6001\u66f4\u65b0 \u5e94\u7528\u4e2d\u7528\u5230\u7684\u4e00\u4e9b\u914d\u7f6e\u4fe1\u606f\u653e\u5230 etcd \u4e0a\u8fdb\u884c\u96c6\u4e2d\u7ba1\u7406\u3002\u8fd9\u7c7b\u573a\u666f\u7684\u4f7f\u7528\u65b9\u5f0f\u901a\u5e38\u662f\u8fd9\u6837\uff1a\u5e94\u7528\u5728\u542f\u52a8\u7684\u65f6\u5019\u4e3b\u52a8\u4eceetcd\u83b7\u53d6\u4e00\u6b21\u914d\u7f6e\u4fe1\u606f\uff0c\u540c\u65f6\uff0c\u5728etcd\u8282\u70b9\u4e0a\u6ce8\u518c\u4e00\u4e2aWatcher\u5e76\u7b49\u5f85\uff0c\u4ee5\u540e\u6bcf\u6b21\u914d\u7f6e\u6709\u66f4\u65b0\u7684\u65f6\u5019\uff0cetcd\u90fd\u4f1a\u5b9e\u65f6\u901a\u77e5\u8ba2\u9605\u8005\uff0c\u4ee5\u6b64\u8fbe\u5230\u83b7\u53d6\u6700\u65b0\u914d\u7f6e\u4fe1\u606f\u7684\u76ee\u7684\u3002 \u5206\u5e03\u5f0f\u641c\u7d22\u670d\u52a1\u4e2d\uff0c\u7d22\u5f15\u7684\u5143\u4fe1\u606f\u548c\u670d\u52a1\u5668\u96c6\u7fa4\u673a\u5668\u7684\u8282\u70b9\u72b6\u6001\u5b58\u653e\u5728etcd\u4e2d\uff0c\u4f9b\u5404\u4e2a\u5ba2\u6237\u7aef\u8ba2\u9605\u4f7f\u7528\u3002\u4f7f\u7528etcd\u7684key TTL\u529f\u80fd\u53ef\u4ee5\u786e\u4fdd\u673a\u5668\u72b6\u6001\u662f\u5b9e\u65f6\u66f4\u65b0\u7684\u3002 \u5206\u5e03\u5f0f\u65e5\u5fd7\u6536\u96c6\u7cfb\u7edf\u3002\u8fd9\u4e2a\u7cfb\u7edf\u7684\u6838\u5fc3\u5de5\u4f5c\u662f\u6536\u96c6\u5206\u5e03\u5728\u4e0d\u540c\u673a\u5668\u7684\u65e5\u5fd7\u3002\u6536\u96c6\u5668\u901a\u5e38\u662f\u6309\u7167\u5e94\u7528\uff08\u6216\u4e3b\u9898\uff09\u6765\u5206\u914d\u6536\u96c6\u4efb\u52a1\u5355\u5143\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728 etcd \u4e0a\u521b\u5efa\u4e00\u4e2a\u4ee5\u5e94\u7528\uff08\u4e3b\u9898\uff09\u547d\u540d\u7684\u76ee\u5f55 P\uff0c\u5e76\u5c06\u8fd9\u4e2a\u5e94\u7528\uff08\u4e3b\u9898\u76f8\u5173\uff09\u7684\u6240\u6709\u673a\u5668 ip\uff0c\u4ee5\u5b50\u76ee\u5f55\u7684\u5f62\u5f0f\u5b58\u50a8\u5230\u76ee\u5f55 P \u4e0a\uff0c\u7136\u540e\u8bbe\u7f6e\u4e00\u4e2aetcd\u9012\u5f52\u7684Watcher\uff0c\u9012\u5f52\u5f0f\u7684\u76d1\u63a7\u5e94\u7528\uff08\u4e3b\u9898\uff09\u76ee\u5f55\u4e0b\u6240\u6709\u4fe1\u606f\u7684\u53d8\u52a8\u3002\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u673a\u5668 IP\uff08\u6d88\u606f\uff09\u53d8\u52a8\u7684\u65f6\u5019\uff0c\u80fd\u591f\u5b9e\u65f6\u901a\u77e5\u5230\u6536\u96c6\u5668\u8c03\u6574\u4efb\u52a1\u5206\u914d\u3002 \u7cfb\u7edf\u4e2d\u4fe1\u606f\u9700\u8981\u52a8\u6001\u81ea\u52a8\u83b7\u53d6\u4e0e\u4eba\u5de5\u5e72\u9884\u4fee\u6539\u4fe1\u606f\u8bf7\u6c42\u5185\u5bb9\u7684\u60c5\u51b5\u3002\u901a\u5e38\u662f\u66b4\u9732\u51fa\u63a5\u53e3\uff0c\u4f8b\u5982 JMX \u63a5\u53e3\uff0c\u6765\u83b7\u53d6\u4e00\u4e9b\u8fd0\u884c\u65f6\u7684\u4fe1\u606f\u3002\u5f15\u5165 etcd \u4e4b\u540e\uff0c\u5c31\u4e0d\u7528\u81ea\u5df1\u5b9e\u73b0\u4e00\u5957\u65b9\u6848\u4e86\uff0c\u53ea\u8981\u5c06\u8fd9\u4e9b\u4fe1\u606f\u5b58\u653e\u5230\u6307\u5b9a\u7684 etcd \u76ee\u5f55\u4e2d\u5373\u53ef\uff0cetcd \u7684\u8fd9\u4e9b\u76ee\u5f55\u5c31\u53ef\u4ee5\u901a\u8fc7 HTTP \u7684\u63a5\u53e3\u5728\u5916\u90e8\u8bbf\u95ee\u3002 \u6d88\u606f\u53d1\u5e03\u88ab\u8ba2\u9605\u7684\u5b9e\u9645\u5e94\u7528 \u6211\u4eec\u4e00\u4e2a\u6027\u80fd\u8981\u6c42\u6bd4\u8f83\u9ad8\u7684\u9879\u76ee\uff0c\u6240\u9700\u8981\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u5b58\u653e\u5230\u672c\u5730\u7684localCache\u4e2d\uff0c\u901a\u8fc7etcd\u7684\u6d88\u606f\u53d1\u5e03\u548c\u8ba2\u9605\u5b9e\u73b0\uff0c\u5b9e\u73b0\u914d\u7f6e\u4fe1\u606f\u5728\u4e0d\u540c\u8282\u70b9\u540c\u6b65\u66f4\u65b0\u3002 \u6765\u770b\u4e0b\u5982\u4f55\u5b9e\u73b0 func init() { handleMap = make(map[string]func([]byte) error) } var handleMap map[string]func([]byte) error func RegisterUpdateHandle(key string, f func([]byte) error) { handleMap[key] = f } type PubClient interface { Pub(ctx context.Context, key string, val string) error } var Pub PubClient type PubClientImpl struct { client *clientv3.Client logger *zap.Logger prefix string } // \u76d1\u542c\u53d8\u5316\uff0c\u5b9e\u65f6\u66f4\u65b0\u5230\u672c\u5730\u7684map\u4e2d func (c *PubClientImpl) Watcher() { ctx, cancel := context.WithCancel(context.Background()) rch := c.client.Watch(ctx, c.prefix, clientv3.WithPrefix()) defer cancel() for wresp := range rch { for _, ev := range wresp.Events { switch ev.Type { case mvccpb.PUT: c.logger.Warn(\"Cache Update\", zap.Any(\"value\", ev.Kv)) err := handleCacheUpdate(ev.Kv) if err != nil { c.logger.Error(\"Cache Update\", zap.Error(err)) } case mvccpb.DELETE: c.logger.Error(\"Cache Delete NOT SUPPORT\") } } } } func handleCacheUpdate(val *mvccpb.KeyValue) error { if val == nil { return nil } f := handleMap[string(val.Key)] if f != nil { return f(val.Value) } return nil } func (c *PubClientImpl) Pub(ctx context.Context, key string, val string) error { ctx, _ = context.WithTimeout(ctx, time.Second*10) _, err := c.client.Put(ctx, key, val) if err != nil { return err } return nil }","title":"\u6d88\u606f\u53d1\u5e03\u548c\u8ba2\u9605"},{"location":"third_party/etcd/#_3","text":"\u5173\u4e8e\u8d1f\u8f7d\u5747\u8861\uff0c\u901a\u5e38\u610f\u4e49\u4e0a\u6709\u4e24\u79cd \u8f6f\u8d1f\u8f7d\uff0c\u987e\u540d\u601d\u4e49\u5c31\u662f\u9760\u8f6f\u4ef6\u624b\u6bb5\u6765\u5b9e\u73b0\u7684\u8d1f\u8f7d\u5747\u8861\u3002\u8f6f\u8d1f\u8f7d\u4e5f\u901a\u5e38\u88ab\u79f0\u4e3a 4\u5c42\u6216 7 \u5c42\u8d1f\u8f7d\uff01 \u786c\u8d1f\u8f7d\uff0c\u5c31\u662f\u9760\u786c\u4ef6\u5b9e\u73b0\u7684\u8d1f\u8f7d\u5747\u8861\uff0c\u6570\u636e\u5305\u8f6c\u53d1\u529f\u80fd\u3002\u5e38\u89c1\u7684\u5c31\u662f F5\u3002 \u901a\u8fc7etcd\u5b9e\u73b0\u7684\u8d1f\u8f7d\u5747\u8861\u5c31\u662f\u8f6f\u8d1f\u8f7d\uff0c\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u9ad8\u5e76\u53d1\u7684\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u6784\u5efa\u670d\u52a1\u7684\u96c6\u7fa4\uff0c\u5f53\u67d0\u4e00\u4e2a\u673a\u5668\u5b95\u673a\u4e86\uff0c\u522b\u7684\u673a\u5668\u53ef\u4ee5\u9a6c\u4e0a\u9876\u66ff\u4e0a\u6765\u3002 etcd\u4e2d\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\uff0c\u4f8b\u5982\u6211\u4eec\u4e0a\u6587\u7684\u4f8b\u5b50\u670d\u52a1\u6ce8\u518c\u548c\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7528\u6237\u670d\u52a1\u6765\u8bb2\uff0c\u540e\u9762\u7684\u7528\u6237\u670d\u52a1\u7684\u5b9e\u4f8b\u53ef\u80fd\u662f\u591a\u4e2a\uff0c\u6bcf\u4e2a\u90fd\u6709\u81ea\u5df1\u7684ip\u548cport\uff0c\u8fd9\u4e9b\u670d\u52a1\u4f1a\u5728\u9879\u76ee\u542f\u52a8\u7684\u65f6\u5019\u5168\u90e8\u6ce8\u518c\u5230etcd\u4e2d\uff0c\u6240\u4ee5\u5f53\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u6bcf\u6b21etcd\u4f1a\u8f6e\u8be2\u51fa\u4e00\u4e2a\u5065\u5eb7\u7684\u670d\u52a1\u5b9e\u4f8b\uff0c\u6765\u5904\u7406\u7528\u6237\u7684\u8bf7\u6c42\u3002","title":"\u8d1f\u8f7d\u5747\u8861"},{"location":"third_party/etcd/#_4","text":"\u8fd9\u91cc\u8bf4\u5230\u7684\u5206\u5e03\u5f0f\u901a\u77e5\u4e0e\u534f\u8c03\uff0c\u4e0e\u6d88\u606f\u53d1\u5e03\u548c\u8ba2\u9605\u6709\u4e9b\u76f8\u4f3c\u3002\u90fd\u7528\u5230\u4e86etcd\u4e2d\u7684Watcher\u673a\u5236\uff0c\u901a\u8fc7\u6ce8\u518c\u4e0e\u5f02\u6b65\u901a\u77e5\u673a\u5236\uff0c\u5b9e\u73b0\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\u4e0d\u540c\u7cfb\u7edf\u4e4b\u95f4\u7684\u901a\u77e5\u4e0e\u534f\u8c03\uff0c\u4ece\u800c\u5bf9\u6570\u636e\u53d8\u66f4\u505a\u5230\u5b9e\u65f6\u5904\u7406\u3002\u5b9e\u73b0\u65b9\u5f0f\u901a\u5e38\u662f\u8fd9\u6837\uff1a\u4e0d\u540c\u7cfb\u7edf\u90fd\u5728etcd\u4e0a\u5bf9\u540c\u4e00\u4e2a\u76ee\u5f55\u8fdb\u884c\u6ce8\u518c\uff0c\u540c\u65f6\u8bbe\u7f6eWatcher\u89c2\u6d4b\u8be5\u76ee\u5f55\u7684\u53d8\u5316\uff08\u5982\u679c\u5bf9\u5b50\u76ee\u5f55\u7684\u53d8\u5316\u4e5f\u6709\u9700\u8981\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u9012\u5f52\u6a21\u5f0f\uff09\uff0c\u5f53\u67d0\u4e2a\u7cfb\u7edf\u66f4\u65b0\u4e86etcd\u7684\u76ee\u5f55\uff0c\u90a3\u4e48\u8bbe\u7f6e\u4e86Watcher\u7684\u7cfb\u7edf\u5c31\u4f1a\u6536\u5230\u901a\u77e5\uff0c\u5e76\u4f5c\u51fa\u76f8\u5e94\u5904\u7406\u3002 \u901a\u8fc7etcd\u8fdb\u884c\u4f4e\u8026\u5408\u7684\u5fc3\u8df3\u68c0\u6d4b\u3002\u68c0\u6d4b\u7cfb\u7edf\u548c\u88ab\u68c0\u6d4b\u7cfb\u7edf\u901a\u8fc7 etcd \u4e0a\u67d0\u4e2a\u76ee\u5f55\u5173\u8054\u800c\u975e\u76f4\u63a5\u5173\u8054\u8d77\u6765\uff0c\u8fd9\u6837\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u7cfb\u7edf\u7684\u8026\u5408\u6027\u3002 \u901a\u8fc7etcd\u5b8c\u6210\u7cfb\u7edf\u8c03\u5ea6\u3002\u67d0\u7cfb\u7edf\u6709\u63a7\u5236\u53f0\u548c\u63a8\u9001\u7cfb\u7edf\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u63a7\u5236\u53f0\u7684\u804c\u8d23\u662f\u63a7\u5236\u63a8\u9001\u7cfb\u7edf\u8fdb\u884c\u76f8\u5e94\u7684\u63a8\u9001\u5de5\u4f5c\u3002\u7ba1\u7406\u4eba\u5458\u5728\u63a7\u5236\u53f0\u4f5c\u7684\u4e00\u4e9b\u64cd\u4f5c\uff0c\u5b9e\u9645\u4e0a\u662f\u4fee\u6539\u4e86etcd\u4e0a\u67d0\u4e9b\u76ee\u5f55\u8282\u70b9\u7684\u72b6\u6001\uff0c\u800cetcd\u5c31\u628a\u8fd9\u4e9b\u53d8\u5316\u901a\u77e5\u7ed9\u6ce8\u518c\u4e86Watcher\u7684\u63a8\u9001\u7cfb\u7edf\u5ba2\u6237\u7aef\uff0c\u63a8\u9001\u7cfb\u7edf\u518d\u4f5c\u51fa\u76f8\u5e94\u7684\u63a8\u9001\u4efb\u52a1\u3002 \u901a\u8fc7etcd\u5b8c\u6210\u5de5\u4f5c\u6c47\u62a5\u3002\u5927\u90e8\u5206\u7c7b\u4f3c\u7684\u4efb\u52a1\u5206\u53d1\u7cfb\u7edf\uff0c\u5b50\u4efb\u52a1\u542f\u52a8\u540e\uff0c\u5230etcd\u6765\u6ce8\u518c\u4e00\u4e2a\u4e34\u65f6\u5de5\u4f5c\u76ee\u5f55\uff0c\u5e76\u4e14\u5b9a\u65f6\u5c06\u81ea\u5df1\u7684\u8fdb\u5ea6\u8fdb\u884c\u6c47\u62a5\uff08\u5c06\u8fdb\u5ea6\u5199\u5165\u5230\u8fd9\u4e2a\u4e34\u65f6\u76ee\u5f55\uff09\uff0c\u8fd9\u6837\u4efb\u52a1\u7ba1\u7406\u8005\u5c31\u80fd\u591f\u5b9e\u65f6\u77e5\u9053\u4efb\u52a1\u8fdb\u5ea6\u3002","title":"\u5206\u5e03\u5f0f\u901a\u77e5\u4e0e\u534f\u8c03"},{"location":"third_party/etcd/#_5","text":"\u56e0\u4e3aetcd\u4f7f\u7528Raft\u7b97\u6cd5\u4fdd\u6301\u4e86\u6570\u636e\u7684\u5f3a\u4e00\u81f4\u6027\uff0c\u67d0\u6b21\u64cd\u4f5c\u5b58\u50a8\u5230\u96c6\u7fa4\u4e2d\u7684\u503c\u5fc5\u7136\u662f\u5168\u5c40\u4e00\u81f4\u7684\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u3002\u9501\u670d\u52a1\u6709\u4e24\u79cd\u4f7f\u7528\u65b9\u5f0f\uff0c\u4e00\u662f\u4fdd\u6301\u72ec\u5360\uff0c\u4e8c\u662f\u63a7\u5236\u65f6\u5e8f\u3002 \u9996\u5148\uff0c\u6765\u770b\u4e00\u4e0b\u5206\u5e03\u5f0f\u9501\u5e94\u8be5\u5177\u5907\u54ea\u4e9b\u6761\u4ef6\u3002 \u4e92\u65a5\u6027\uff1a\u5728\u4efb\u610f\u65f6\u523b\uff0c\u5bf9\u4e8e\u540c\u4e00\u4e2a\u9501\uff0c\u53ea\u6709\u4e00\u4e2a\u5ba2\u6237\u7aef\u80fd\u6301\u6709\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e00\u4e2a\u5171\u4eab\u8d44\u6e90\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u88ab\u4e00\u4e2a\u5ba2\u6237\u7aef\u64cd\u4f5c\uff1b \u5b89\u5168\u6027\uff1a\u5373\u4e0d\u4f1a\u5f62\u6210\u6b7b\u9501\uff0c\u5f53\u4e00\u4e2a\u5ba2\u6237\u7aef\u5728\u6301\u6709\u9501\u7684\u671f\u95f4\u5d29\u6e83\u800c\u6ca1\u6709\u4e3b\u52a8\u89e3\u9501\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u6301\u6709\u7684\u9501\u4e5f\u80fd\u591f\u88ab\u6b63\u786e\u91ca\u653e\uff0c\u5e76\u4fdd\u8bc1\u540e\u7eed\u5176\u5b83\u5ba2\u6237\u7aef\u80fd\u52a0\u9501\uff1b \u53ef\u7528\u6027\uff1a\u5f53\u63d0\u4f9b\u9501\u670d\u52a1\u7684\u8282\u70b9\u53d1\u751f\u5b95\u673a\u7b49\u4e0d\u53ef\u6062\u590d\u6027\u6545\u969c\u65f6\uff0c\u201c\u70ed\u5907\u201d \u8282\u70b9\u80fd\u591f\u63a5\u66ff\u6545\u969c\u7684\u8282\u70b9\u7ee7\u7eed\u63d0\u4f9b\u670d\u52a1\uff0c\u5e76\u4fdd\u8bc1\u81ea\u8eab\u6301\u6709\u7684\u6570\u636e\u4e0e\u6545\u969c\u8282\u70b9\u4e00\u81f4\u3002 \u5bf9\u79f0\u6027\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u9501\uff0c\u5176\u52a0\u9501\u548c\u89e3\u9501\u5fc5\u987b\u662f\u540c\u4e00\u4e2a\u5ba2\u6237\u7aef\uff0c\u5373\u5ba2\u6237\u7aef A \u4e0d\u80fd\u628a\u5ba2\u6237\u7aef B \u52a0\u7684\u9501\u7ed9\u89e3\u4e86\u3002 etcd\u7684 Watch \u673a\u5236\u3001Lease \u673a\u5236\u3001Revision \u673a\u5236\u548c Prefix \u673a\u5236\uff0c\u8fd9\u4e9b\u673a\u5236\u8d4b\u4e88\u4e86 Etcd \u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u7684\u80fd\u529b\u3002 Lease \u673a\u5236 \u5373\u79df\u7ea6\u673a\u5236\uff08TTL\uff0cTime To Live\uff09\uff0cEtcd \u53ef\u4ee5\u4e3a\u5b58\u50a8\u7684 Key-Value \u5bf9\u8bbe\u7f6e\u79df\u7ea6\uff0c\u5f53\u79df\u7ea6\u5230\u671f\uff0cKey-Value \u5c06\u5931\u6548\u5220\u9664\uff1b\u540c\u65f6\u4e5f\u652f\u6301\u7eed\u7ea6\uff0c\u901a\u8fc7\u5ba2\u6237\u7aef\u53ef\u4ee5\u5728\u79df\u7ea6\u5230\u671f\u4e4b\u524d\u7eed\u7ea6\uff0c\u4ee5\u907f\u514d Key-Value \u5bf9\u8fc7\u671f\u5931\u6548\u3002Lease \u673a\u5236\u53ef\u4ee5\u4fdd\u8bc1\u5206\u5e03\u5f0f\u9501\u7684\u5b89\u5168\u6027\uff0c\u4e3a\u9501\u5bf9\u5e94\u7684 Key \u914d\u7f6e\u79df\u7ea6\uff0c\u5373\u4f7f\u9501\u7684\u6301\u6709\u8005\u56e0\u6545\u969c\u800c\u4e0d\u80fd\u4e3b\u52a8\u91ca\u653e\u9501\uff0c\u9501\u4e5f\u4f1a\u56e0\u79df\u7ea6\u5230\u671f\u800c\u81ea\u52a8\u91ca\u653e\u3002 Revision \u673a\u5236 \u6bcf\u4e2a Key \u5e26\u6709\u4e00\u4e2a Revision \u53f7\uff0c\u6bcf\u8fdb\u884c\u4e00\u6b21\u4e8b\u52a1\u4fbf\u52a0\u4e00\uff0c\u56e0\u6b64\u5b83\u662f\u5168\u5c40\u552f\u4e00\u7684\uff0c\u5982\u521d\u59cb\u503c\u4e3a 0\uff0c\u8fdb\u884c\u4e00\u6b21 put(key, value)\uff0cKey \u7684 Revision \u53d8\u4e3a 1\uff0c\u540c\u6837\u7684\u64cd\u4f5c\uff0c\u518d\u8fdb\u884c\u4e00\u6b21\uff0cRevision \u53d8\u4e3a 2\uff1b\u6362\u6210 key1 \u8fdb\u884cput(key1, value)\u64cd\u4f5c\uff0cRevision\u5c06\u53d8\u4e3a 3\uff1b\u8fd9\u79cd\u673a\u5236\u6709\u4e00\u4e2a\u4f5c\u7528\uff1a\u901a\u8fc7 Revision \u7684\u5927\u5c0f\u5c31\u53ef\u4ee5\u77e5\u9053\u5199\u64cd\u4f5c\u7684\u987a\u5e8f\u3002\u5728\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u65f6\uff0c\u591a\u4e2a\u5ba2\u6237\u7aef\u540c\u65f6\u62a2\u9501\uff0c\u6839\u636e Revision \u53f7\u5927\u5c0f\u4f9d\u6b21\u83b7\u5f97\u9501\uff0c\u53ef\u4ee5\u907f\u514d \u201c\u7f8a\u7fa4\u6548\u5e94\u201d \uff08\u4e5f\u79f0\u201c\u60ca\u7fa4\u6548\u5e94\u201d\uff09\uff0c\u5b9e\u73b0\u516c\u5e73\u9501\u3002 Prefix \u673a\u5236 \u5373\u524d\u7f00\u673a\u5236\uff0c\u4e5f\u79f0\u76ee\u5f55\u673a\u5236\uff0c\u4f8b\u5982\uff0c\u4e00\u4e2a\u540d\u4e3a /mylock \u7684\u9501\uff0c\u4e24\u4e2a\u4e89\u62a2\u5b83\u7684\u5ba2\u6237\u7aef\u8fdb\u884c\u5199\u64cd\u4f5c\uff0c\u5b9e\u9645\u5199\u5165\u7684Key\u5206\u522b\u4e3a\uff1akey1=\"/mylock/UUID1\",key2=\"/mylock/UUID2\"\uff0c\u5176\u4e2d\uff0cUUID\u8868\u793a\u5168\u5c40\u552f\u4e00\u7684ID\uff0c\u786e\u4fdd\u4e24\u4e2aKey\u7684\u552f\u4e00\u6027\u3002\u5f88\u663e\u7136\uff0c\u5199\u64cd\u4f5c\u90fd\u4f1a\u6210\u529f\uff0c\u4f46\u8fd4\u56de\u7684Revision\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\uff0c\u5982\u4f55\u5224\u65ad\u8c01\u83b7\u5f97\u4e86\u9501\u5462\uff1f\u901a\u8fc7\u524d\u7f00\u201c/mylock\u201d\u67e5\u8be2\uff0c\u8fd4\u56de\u5305\u542b\u4e24\u4e2aKey-Value\u5bf9\u7684Key-Value\u5217\u8868\uff0c\u540c\u65f6\u4e5f\u5305\u542b\u5b83\u4eec\u7684Revision\uff0c\u901a\u8fc7Revision\u5927\u5c0f\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u5224\u65ad\u81ea\u5df1\u662f\u5426\u83b7\u5f97\u9501\uff0c\u5982\u679c\u62a2\u9501\u5931\u8d25\uff0c\u5219\u7b49\u5f85\u9501\u91ca\u653e\uff08\u5bf9\u5e94\u7684 Key \u88ab\u5220\u9664\u6216\u8005\u79df\u7ea6\u8fc7\u671f\uff09\uff0c\u7136\u540e\u518d\u5224\u65ad\u81ea\u5df1\u662f\u5426\u53ef\u4ee5\u83b7\u5f97\u9501\u3002 Watch \u673a\u5236 \u5373\u76d1\u542c\u673a\u5236\uff0cWatch\u673a\u5236\u652f\u6301\u76d1\u542c\u67d0\u4e2a\u56fa\u5b9a\u7684Key\uff0c\u4e5f\u652f\u6301\u76d1\u542c\u4e00\u4e2a\u8303\u56f4\uff08\u524d\u7f00\u673a\u5236\uff09\uff0c\u5f53\u88ab\u76d1\u542c\u7684Key\u6216\u8303\u56f4\u53d1\u751f\u53d8\u5316\uff0c\u5ba2\u6237\u7aef\u5c06\u6536\u5230\u901a\u77e5\uff1b\u5728\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u65f6\uff0c\u5982\u679c\u62a2\u9501\u5931\u8d25\uff0c\u53ef\u901a\u8fc7Prefix\u673a\u5236\u8fd4\u56de\u7684Key-Value\u5217\u8868\u83b7\u5f97Revision\u6bd4\u81ea\u5df1\u5c0f\u4e14\u76f8\u5dee\u6700\u5c0f\u7684 Key\uff08\u79f0\u4e3a Pre-Key\uff09\uff0c\u5bf9Pre-Key\u8fdb\u884c\u76d1\u542c\uff0c\u56e0\u4e3a\u53ea\u6709\u5b83\u91ca\u653e\u9501\uff0c\u81ea\u5df1\u624d\u80fd\u83b7\u5f97\u9501\uff0c\u5982\u679c\u76d1\u542c\u5230Pre-Key\u7684DELETE\u4e8b\u4ef6\uff0c\u5219\u8bf4\u660ePre-Key\u5df2\u7ecf\u91ca\u653e\uff0c\u81ea\u5df1\u5df2\u7ecf\u6301\u6709\u9501\u3002 \u6765\u770b\u4e0betcd\u4e2d\u9501\u662f\u5982\u4f55\u5b9e\u73b0\u7684 // Mutex implements the sync Locker interface with etcd type Mutex struct { s *Session pfx string // \u524d\u7f00 myKey string // key myRev int64 // \u81ea\u589e\u7684Revision hdr *pb.ResponseHeader } // Lock \u4f7f\u7528\u53ef\u53d6\u6d88\u7684context\u9501\u5b9a\u4e92\u65a5\u9501\u3002\u5982\u679ccontext\u88ab\u53d6\u6d88 // \u5728\u5c1d\u8bd5\u83b7\u53d6\u9501\u65f6\uff0c\u4e92\u65a5\u9501\u4f1a\u5c1d\u8bd5\u6e05\u9664\u5176\u8fc7\u65f6\u7684\u9501\u6761\u76ee\u3002 func (m *Mutex) Lock(ctx context.Context) error { resp, err := m.tryAcquire(ctx) if err != nil { return err } // if no key on prefix / the minimum rev is key, already hold the lock ownerKey := resp.Responses[1].GetResponseRange().Kvs if len(ownerKey) == 0 || ownerKey[0].CreateRevision == m.myRev { m.hdr = resp.Header return nil } client := m.s.Client() // waitDeletes \u6709\u6548\u5730\u7b49\u5f85\uff0c\u76f4\u5230\u6240\u6709\u952e\u5339\u914d\u524d\u7f00\u4e14\u4e0d\u5927\u4e8e // \u521b\u5efa\u7684version\u3002 _, werr := waitDeletes(ctx, client, m.pfx, m.myRev-1) // release lock key if wait failed if werr != nil { m.Unlock(client.Ctx()) return werr } // make sure the session is not expired, and the owner key still exists. gresp, werr := client.Get(ctx, m.myKey) if werr != nil { m.Unlock(client.Ctx()) return werr } if len(gresp.Kvs) == 0 { // is the session key lost? return ErrSessionExpired } m.hdr = gresp.Header return nil } func (m *Mutex) tryAcquire(ctx context.Context) (*v3.TxnResponse, error) { s := m.s client := m.s.Client() // s.Lease()\u79df\u7ea6 m.myKey = fmt.Sprintf(\"%s%x\", m.pfx, s.Lease()) // \u6bd4\u8f83Revision, \u8fd9\u91cc\u6784\u5efa\u4e86\u4e00\u4e2a\u6bd4\u8f83\u8868\u8fbe\u5f0f // \u5177\u4f53\u7684\u6bd4\u8f83\u903b\u8f91\u5728\u4e0b\u9762\u7684client.Txn\u7528\u5230 // \u5982\u679c\u7b49\u4e8e0\uff0c\u5199\u5165\u5f53\u524d\u7684key\uff0c\u5e76\u8bbe\u7f6e\u79df\u7ea6\uff0c // \u5426\u5219\u83b7\u53d6\u8fd9\u4e2akey,\u91cd\u7528\u79df\u7ea6\u4e2d\u7684\u9501(\u8fd9\u91cc\u4e3b\u8981\u76ee\u7684\u662f\u5728\u4e8e\u91cd\u5165) // \u901a\u8fc7\u7b2c\u4e8c\u6b21\u83b7\u53d6\u9501,\u5224\u65ad\u9501\u662f\u5426\u5b58\u5728\u6765\u652f\u6301\u91cd\u5165 // \u6240\u4ee5\u53ea\u8981\u79df\u7ea6\u4e00\u81f4,\u90a3\u4e48\u662f\u53ef\u4ee5\u91cd\u5165\u7684. cmp := v3.Compare(v3.CreateRevision(m.myKey), \"=\", 0) // \u901a\u8fc7 myKey \u5c06\u81ea\u5df1\u9501\u5728waiters\uff1b\u6700\u65e9\u7684waiters\u5c06\u83b7\u5f97\u9501 put := v3.OpPut(m.myKey, \"\", v3.WithLease(s.Lease())) // \u83b7\u53d6\u5df2\u7ecf\u62ff\u5230\u9501\u7684key\u7684\u4fe1\u606f get := v3.OpGet(m.myKey) // \u4ec5\u4f7f\u7528\u4e00\u4e2a RPC \u83b7\u53d6\u5f53\u524d\u6301\u6709\u8005\u4ee5\u5b8c\u6210\u65e0\u7ade\u4e89\u8def\u5f84 getOwner := v3.OpGet(m.pfx, v3.WithFirstCreate()...) // \u8fd9\u91cc\u662f\u6bd4\u8f83\u7684\u903b\u8f91\uff0c\u5982\u679c\u7b49\u4e8e0\uff0c\u5199\u5165\u5f53\u524d\u7684key\uff0c\u5426\u5219\u5219\u8bfb\u53d6\u8fd9\u4e2akey // \u5927\u4f6c\u7684\u4ee3\u7801\u5199\u7684\u5c31\u662f\u5947\u5999 resp, err := client.Txn(ctx).If(cmp).Then(put, getOwner).Else(get, getOwner).Commit() if err != nil { return nil, err } // \u6839\u636e\u6bd4\u8f83\u64cd\u4f5c\u7684\u7ed3\u679c\u5199\u5165Revision\u5230m.myRev\u4e2d m.myRev = resp.Header.Revision if !resp.Succeeded { m.myRev = resp.Responses[0].GetResponseRange().Kvs[0].CreateRevision } return resp, nil } // \u62bd\u8c61\u51fa\u4e86\u4e00\u4e2asession\u5bf9\u8c61\u6765\u6301\u7eed\u4fdd\u6301\u79df\u7ea6\u4e0d\u8fc7\u671f func NewSession(client *v3.Client, opts ...SessionOption) (*Session, error) { ... ctx, cancel := context.WithCancel(ops.ctx) // \u4fdd\u8bc1\u9501\uff0c\u5728\u7ebf\u7a0b\u7684\u6d3b\u52a8\u671f\u95f4\uff0c\u5b9e\u73b0\u9501\u7684\u7684\u7eed\u79df keepAlive, err := client.KeepAlive(ctx, id) if err != nil || keepAlive == nil { cancel() return nil, err } ... return s, nil } \u8bbe\u8ba1\u601d\u8def\uff1a 1\u3001\u591a\u4e2a\u8bf7\u6c42\u6765\u524d\u62a2\u5360\u9501\uff0c\u901a\u8fc7Revision\u6765\u5224\u65ad\u9501\u7684\u5148\u540e\u987a\u5e8f\uff1b 2\u3001\u5982\u679c\u6709\u6bd4\u5f53\u524dkey\u7684Revision\u5c0f\u7684Revision\u5b58\u5728\uff0c\u8bf4\u660e\u6709key\u5df2\u7ecf\u83b7\u5f97\u4e86\u9501\uff1b 3\u3001\u7b49\u5f85\u76f4\u5230\u524d\u9762\u7684key\u88ab\u5220\u9664\uff0c\u7136\u540e\u81ea\u5df1\u5c31\u83b7\u5f97\u4e86\u9501\u3002 \u901a\u8fc7etcd\u5b9e\u73b0\u7684\u9501\uff0c\u76f4\u63a5\u5305\u542b\u4e86\u9501\u7684\u7eed\u79df\uff0c\u5982\u679c\u4f7f\u7528Redis\u8fd8\u8981\u81ea\u5df1\u53bb\u5b9e\u73b0\uff0c\u76f8\u6bd4\u8f83\u4f7f\u7528\u66f4\u7b80\u5355\u3002 \u6765\u5b9e\u73b0\u4e00\u4e2aetcd\u7684\u9501 package main import ( \"context\" \"fmt\" \"log\" \"time\" clientv3 \"go.etcd.io/etcd/client/v3\" \"go.etcd.io/etcd/client/v3/concurrency\" ) func main() { cli, err := clientv3.New(clientv3.Config{ Endpoints: []string{\"localhost:2379\"}, DialTimeout: 5 * time.Second, }) if err != nil { log.Fatal(err) } defer cli.Close() // m1\u6765\u62a2\u9501 go func() { s1, err := concurrency.NewSession(cli) if err != nil { log.Fatal(err) } defer s1.Close() m1 := concurrency.NewMutex(s1, \"/my-lock/\") // acquire lock for s1 if err := m1.Lock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\"m1---\u83b7\u5f97\u4e86\u9501\") time.Sleep(time.Second * 3) // \u91ca\u653e\u9501 if err := m1.Unlock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\"m1++\u91ca\u653e\u4e86\u9501\") }() // m2\u6765\u62a2\u9501 go func() { s2, err := concurrency.NewSession(cli) if err != nil { log.Fatal(err) } defer s2.Close() m2 := concurrency.NewMutex(s2, \"/my-lock/\") if err := m2.Lock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\"m2---\u83b7\u5f97\u4e86\u9501\") // mock\u4e1a\u52a1\u6267\u884c\u7684\u65f6\u95f4 time.Sleep(time.Second * 3) // \u91ca\u653e\u9501 if err := m2.Unlock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\"m2++\u91ca\u653e\u4e86\u9501\") }() time.Sleep(time.Second * 10) } \u6253\u5370\u4e0b\u8f93\u51fa m2---\u83b7\u5f97\u4e86\u9501 m2++\u91ca\u653e\u4e86\u9501 m1---\u83b7\u5f97\u4e86\u9501 m1++\u91ca\u653e\u4e86\u9501","title":"\u5206\u5e03\u5f0f\u9501"},{"location":"third_party/etcd/#_6","text":"\u5373\u521b\u5efa\u4e00\u4e2a\u5148\u8fdb\u5148\u51fa\u7684\u961f\u5217\u4fdd\u6301\u987a\u5e8f\u3002\u53e6\u4e00\u79cd\u6bd4\u8f83\u6709\u610f\u601d\u7684\u5b9e\u73b0\u662f\u5728\u4fdd\u8bc1\u961f\u5217\u8fbe\u5230\u67d0\u4e2a\u6761\u4ef6\u65f6\u518d\u7edf\u4e00\u6309\u987a\u5e8f\u6267\u884c\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u5b9e\u73b0\u53ef\u4ee5\u5728/queue\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u53e6\u5916\u5efa\u7acb\u4e00\u4e2a/queue/condition\u8282\u70b9\u3002 condition \u53ef\u4ee5\u8868\u793a\u961f\u5217\u5927\u5c0f\u3002\u6bd4\u5982\u4e00\u4e2a\u5927\u7684\u4efb\u52a1\u9700\u8981\u5f88\u591a\u5c0f\u4efb\u52a1\u5c31\u7eea\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u6267\u884c\uff0c\u6bcf\u6b21\u6709\u4e00\u4e2a\u5c0f\u4efb\u52a1\u5c31\u7eea\uff0c\u5c31\u7ed9\u8fd9\u4e2a condition \u6570\u5b57\u52a0 1\uff0c\u76f4\u5230\u8fbe\u5230\u5927\u4efb\u52a1\u89c4\u5b9a\u7684\u6570\u5b57\uff0c\u518d\u5f00\u59cb\u6267\u884c\u961f\u5217\u91cc\u7684\u4e00\u7cfb\u5217\u5c0f\u4efb\u52a1\uff0c\u6700\u7ec8\u6267\u884c\u5927\u4efb\u52a1\u3002 condition \u53ef\u4ee5\u8868\u793a\u67d0\u4e2a\u4efb\u52a1\u5728\u4e0d\u5728\u961f\u5217\u3002\u8fd9\u4e2a\u4efb\u52a1\u53ef\u4ee5\u662f\u6240\u6709\u6392\u5e8f\u4efb\u52a1\u7684\u9996\u4e2a\u6267\u884c\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u662f\u62d3\u6251\u7ed3\u6784\u4e2d\u6ca1\u6709\u4f9d\u8d56\u7684\u70b9\u3002\u901a\u5e38\uff0c\u5fc5\u987b\u6267\u884c\u8fd9\u4e9b\u4efb\u52a1\u540e\u624d\u80fd\u6267\u884c\u961f\u5217\u4e2d\u7684\u5176\u4ed6\u4efb\u52a1\u3002 condition \u8fd8\u53ef\u4ee5\u8868\u793a\u5176\u5b83\u7684\u4e00\u7c7b\u5f00\u59cb\u6267\u884c\u4efb\u52a1\u7684\u901a\u77e5\u3002\u53ef\u4ee5\u7531\u63a7\u5236\u7a0b\u5e8f\u6307\u5b9a\uff0c\u5f53 condition \u51fa\u73b0\u53d8\u5316\u65f6\uff0c\u5f00\u59cb\u6267\u884c\u961f\u5217\u4efb\u52a1\u3002 \u6765\u770b\u4e0b\u5b9e\u73b0 \u5165\u961f func newUniqueKV(kv v3.KV, prefix string, val string) (*RemoteKV, error) { for { newKey := fmt.Sprintf(\"%s/%v\", prefix, time.Now().UnixNano()) // \u521b\u5efa\u5bf9\u5e94\u7684key rev, err := putNewKV(kv, newKey, val, v3.NoLease) if err == nil { return &RemoteKV{kv, newKey, rev, val}, nil } // \u5982\u679c\u4e4b\u524d\u5df2\u7ecf\u521b\u5efa\u4e86\uff0c\u5c31\u8fd4\u56de if err != ErrKeyExists { return nil, err } } } // \u53ea\u6709\u5728\u6ca1\u6709\u521b\u5efa\u7684\u65f6\u5019\u624d\u80fd\u521b\u5efa\u6210\u529f func putNewKV(kv v3.KV, key, val string, leaseID v3.LeaseID) (int64, error) { cmp := v3.Compare(v3.Version(key), \"=\", 0) req := v3.OpPut(key, val, v3.WithLease(leaseID)) // \u8fd9\u91cc\u8fd8\u7528\u5230\u4e86\u8fd9\u79cd\u6bd4\u8f83\u7684\u903b\u8f91 txnresp, err := kv.Txn(context.TODO()).If(cmp).Then(req).Commit() if err != nil { return 0, err } // \u5df2\u7ecf\u5b58\u5728\u5219\u8fd4\u56de\u9519\u8bef if !txnresp.Succeeded { return 0, ErrKeyExists } return txnresp.Header.Revision, nil } \u51fa\u961f // Dequeue\u5904\u7406\u7684\u662f\u4e00\u4e2a\u5148\u8fdb\u65b0\u51fa\u7684\u961f\u5217 // \u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0cDequeue\u5c06\u4f1a\u963b\u585e\u76f4\u5230\u91cc\u9762\u6709\u503c\u585e\u5165 func (q *Queue) Dequeue() (string, error) { resp, err := q.client.Get(q.ctx, q.keyPrefix, v3.WithFirstRev()...) if err != nil { return \"\", err } kv, err := claimFirstKey(q.client, resp.Kvs) if err != nil { return \"\", err } else if kv != nil { return string(kv.Value), nil // more \u8868\u793a\u5728\u8bf7\u6c42\u7684\u8303\u56f4\u5185\u662f\u5426\u8fd8\u6709\u66f4\u591a\u7684\u952e\u8981\u8fd4\u56de\u3002 // \u5219\u8fdb\u884cDequeue\u91cd\u8bd5 } else if resp.More { // missed some items, retry to read in more return q.Dequeue() } // nothing yet; wait on elements ev, err := WaitPrefixEvents( q.client, q.keyPrefix, resp.Header.Revision, []mvccpb.Event_EventType{mvccpb.PUT}) if err != nil { return \"\", err } ok, err := deleteRevKey(q.client, string(ev.Kv.Key), ev.Kv.ModRevision) if err != nil { return \"\", err } else if !ok { // \u5982\u679c\u5220\u9664\u5931\u8d25\uff0c\u91cd\u8bd5 return q.Dequeue() } return string(ev.Kv.Value), err } \u603b\u7ed3 1\u3001\u8fd9\u91cc\u7684\u5165\u961f\u662f\u4e00\u4e2a\u5148\u8fdb\u65b0\u51fa\u7684\u961f\u5217\uff1b 2\u3001\u51fa\u961f\u7684\u5b9e\u73b0\u4e5f\u5f88\u7b80\u5355\uff0c\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0cDequeue\u5c06\u4f1a\u963b\u585e\u76f4\u5230\u91cc\u9762\u6709\u503c\u585e\u5165\uff1b \u6765\u4e2ademo package main import ( \"fmt\" \"log\" \"time\" clientv3 \"go.etcd.io/etcd/client/v3\" recipe \"go.etcd.io/etcd/client/v3/experimental/recipes\" ) func main() { cli, err := clientv3.New(clientv3.Config{ Endpoints: []string{\"localhost:2379\"}, }) if err != nil { log.Fatalf(\"error New (%v)\", err) } go func() { q := recipe.NewQueue(cli, \"testq\") for i := 0; i < 5; i++ { if err := q.Enqueue(fmt.Sprintf(\"%d\", i)); err != nil { log.Fatalf(\"error enqueuing (%v)\", err) } } }() go func() { q := recipe.NewQueue(cli, \"testq\") for i := 10; i < 100; i++ { if err := q.Enqueue(fmt.Sprintf(\"%d\", i)); err != nil { log.Fatalf(\"error enqueuing (%v)\", err) } } }() q := recipe.NewQueue(cli, \"testq\") for i := 0; i < 100; i++ { s, err := q.Dequeue() if err != nil { log.Fatalf(\"error dequeueing (%v)\", err) } fmt.Println(s) } time.Sleep(time.Second * 3) }","title":"\u5206\u5e03\u5f0f\u961f\u5217"},{"location":"third_party/etcd/#leader","text":"\u901a\u8fc7etcd\u6765\u8fdb\u884c\u76d1\u63a7\u5b9e\u73b0\u8d77\u6765\u975e\u5e38\u7b80\u5355\u5e76\u4e14\u5b9e\u65f6\u6027\u5f3a 1\u3001\u524d\u9762\u51e0\u4e2a\u573a\u666f\u5df2\u7ecf\u63d0\u5230Watcher\u673a\u5236\uff0c\u5f53\u67d0\u4e2a\u8282\u70b9\u6d88\u5931\u6216\u6709\u53d8\u52a8\u65f6\uff0cWatcher\u4f1a\u7b2c\u4e00\u65f6\u95f4\u53d1\u73b0\u5e76\u544a\u77e5\u7528\u6237\u3002 2\u3001\u8282\u70b9\u53ef\u4ee5\u8bbe\u7f6eTTL key\uff0c\u6bd4\u5982\u6bcf\u9694 30s \u53d1\u9001\u4e00\u6b21\u5fc3\u8df3\u4f7f\u4ee3\u8868\u8be5\u673a\u5668\u5b58\u6d3b\u7684\u8282\u70b9\u7ee7\u7eed\u5b58\u5728\uff0c\u5426\u5219\u8282\u70b9\u6d88\u5931\u3002 \u8fd9\u6837\u5c31\u53ef\u4ee5\u7b2c\u4e00\u65f6\u95f4\u68c0\u6d4b\u5230\u5404\u8282\u70b9\u7684\u5065\u5eb7\u72b6\u6001\uff0c\u4ee5\u5b8c\u6210\u96c6\u7fa4\u7684\u76d1\u63a7\u8981\u6c42 \u53e6\u5916\uff0c\u4f7f\u7528\u5206\u5e03\u5f0f\u9501\uff0c\u53ef\u4ee5\u5b8c\u6210Leader\u7ade\u9009\u3002\u8fd9\u79cd\u573a\u666f\u901a\u5e38\u662f\u4e00\u4e9b\u957f\u65f6\u95f4CPU\u8ba1\u7b97\u6216\u8005\u4f7f\u7528IO\u64cd\u4f5c\u7684\u673a\u5668\uff0c\u53ea\u9700\u8981\u7ade\u9009\u51fa\u7684Leader\u8ba1\u7b97\u6216\u5904\u7406\u4e00\u6b21\uff0c\u5c31\u53ef\u4ee5\u628a\u7ed3\u679c\u590d\u5236\u7ed9\u5176\u4ed6\u7684Follower\u3002\u4ece\u800c\u907f\u514d\u91cd\u590d\u52b3\u52a8\uff0c\u8282\u7701\u8ba1\u7b97\u8d44\u6e90\u3002 \u8fd9\u4e2a\u7684\u7ecf\u5178\u573a\u666f\u662f\u641c\u7d22\u7cfb\u7edf\u4e2d\u5efa\u7acb\u5168\u91cf\u7d22\u5f15\u3002\u5982\u679c\u6bcf\u4e2a\u673a\u5668\u90fd\u8fdb\u884c\u4e00\u904d\u7d22\u5f15\u7684\u5efa\u7acb\uff0c\u4e0d\u4f46\u8017\u65f6\u800c\u4e14\u5efa\u7acb\u7d22\u5f15\u7684\u4e00\u81f4\u6027\u4e0d\u80fd\u4fdd\u8bc1\u3002\u901a\u8fc7\u5728etcd\u7684CAS\u673a\u5236\u540c\u65f6\u521b\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u521b\u5efa\u6210\u529f\u7684\u673a\u5668\u4f5c\u4e3aLeader\uff0c\u8fdb\u884c\u7d22\u5f15\u8ba1\u7b97\uff0c\u7136\u540e\u628a\u8ba1\u7b97\u7ed3\u679c\u5206\u53d1\u5230\u5176\u5b83\u8282\u70b9\u3002","title":"\u96c6\u7fa4\u76d1\u63a7\u4e0eLeader\u7ade\u9009"},{"location":"third_party/etcd_zookeeper/","text":"Etcd \u548c Zookeeper \u66f4\u8f7b\u91cf\u7ea7(Etcd\u57fa\u4e8eGO\u8bed\u8a00\u5f00\u53d1,Zookeeper\u57fa\u4e8eJava\u5f00\u53d1) \u9ad8\u8d1f\u8f7d\u4e0b\u7684\u7a33\u5b9a\u8bfb\u5199 \u6570\u636e\u6a21\u578b\u7684\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236 \u7a33\u5b9a\u7684watcher\u529f\u80fd\uff0c\u901a\u77e5\u8ba2\u9605\u8005\u76d1\u542c\u503c\u7684\u53d8\u5316(Zookeeper\u57fa\u4e8e\u6570\u636e\u7684\u76d1\u542c\u662f\u4e00\u6b21\u6027\u7684\uff0c\u6bcf\u6b21\u76d1\u542c\u5b8c\u6210\u8fd8\u9700\u91cd\u65b0\u6ce8\u518c) \u5ba2\u6237\u7aef\u534f\u8bae\u4f7f\u7528GRPC\u534f\u8bae\uff0c\u652f\u6301\u8bed\u8a00\u66f4\u5e7f\u6cdb","title":"Etcd \u548c Zookeeper"},{"location":"third_party/etcd_zookeeper/#etcd-zookeeper","text":"\u66f4\u8f7b\u91cf\u7ea7(Etcd\u57fa\u4e8eGO\u8bed\u8a00\u5f00\u53d1,Zookeeper\u57fa\u4e8eJava\u5f00\u53d1) \u9ad8\u8d1f\u8f7d\u4e0b\u7684\u7a33\u5b9a\u8bfb\u5199 \u6570\u636e\u6a21\u578b\u7684\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236 \u7a33\u5b9a\u7684watcher\u529f\u80fd\uff0c\u901a\u77e5\u8ba2\u9605\u8005\u76d1\u542c\u503c\u7684\u53d8\u5316(Zookeeper\u57fa\u4e8e\u6570\u636e\u7684\u76d1\u542c\u662f\u4e00\u6b21\u6027\u7684\uff0c\u6bcf\u6b21\u76d1\u542c\u5b8c\u6210\u8fd8\u9700\u91cd\u65b0\u6ce8\u518c) \u5ba2\u6237\u7aef\u534f\u8bae\u4f7f\u7528GRPC\u534f\u8bae\uff0c\u652f\u6301\u8bed\u8a00\u66f4\u5e7f\u6cdb","title":"Etcd \u548c Zookeeper"},{"location":"third_party/monitor/","text":"Prometheus & Grafana","title":"Prometheus & Grafana"},{"location":"third_party/monitor/#prometheus-grafana","text":"","title":"Prometheus &amp; Grafana"},{"location":"third_party/mq/","text":"Kafka Topic 1\u4e2atopic \uff0c\u591a\u4e2apartition, \u800c\u4e14\u591a\u4e2apartition\u53ef\u4ee5\u5206\u5e03\u5728\u4e0d\u540c\u7684broker\u4e0a \u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u5b89\u5168\u6027\uff0cPartion \u6709\u591a\u526f\u672c\u673a\u5236\uff0c\u4e00\u4e2aLeader, \u591a\u4e2afollower, Procucer\u548cConsumer\u53ea\u548c leader \u901a\u4fe1 \u53ea\u4fdd\u8bc1Partition\u4e2d\u6d88\u606f\u6709\u5e8f\u6027\uff0c\u6240\u4ee5\u8981\u4fdd\u8bc1\u6d88\u606f\u6709\u5e8f\u6027\uff0c\u8981\u4e48\u6bcf\u4e2atopic\u53ea\u6709\u4e00\u4e2apartition(\u663e\u7136\u4e0d\u7b26\u5408\u4f7f\u7528kafka\u521d\u8877)\uff0c\u8981\u4e48\u5728\u53d1\u9001\u65f6\uff0c\u6307\u5b9akey/partiontion\uff08\u5408\u9002\u7684\u65b9\u6848) topic \u4e2d\u7684\u591a\u4e2apartion\u4ee5\u76ee\u5f55\u5f62\u5f0f\u4fdd\u5b58\u5728broker RabbitMq Nats \u5bf9\u6bd4 \u5728\u5b9e\u9645\u751f\u4ea7\u5e94\u7528\u4e2d\uff0c\u901a\u5e38\u4f1a\u4f7f\u7528kafka\u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u7684\u6570\u636e\u7ba1\u9053\uff0crabbitmq\u4f5c\u4e3a\u4ea4\u6613\u6570\u636e\u4f5c\u4e3a\u6570\u636e\u4f20\u8f93\u7ba1\u9053\uff0c\u4e3b\u8981\u7684\u53d6\u820d\u56e0\u7d20\u5219\u662f\u662f\u5426\u5b58\u5728\u4e22\u6570\u636e\u7684\u53ef\u80fd\uff1brabbitmq\u5728\u91d1\u878d\u573a\u666f\u4e2d\u7ecf\u5e38\u4f7f\u7528\uff0c\u5177\u6709\u8f83\u9ad8\u7684\u4e25\u8c28\u6027\uff0c\u6570\u636e\u4e22\u5931\u7684\u53ef\u80fd\u6027\u66f4\u5c0f\uff0c\u540c\u4e8b\u5177\u5907\u66f4\u9ad8\u7684\u5b9e\u65f6\u6027\uff1b\u800ckafka\u4f18\u52bf\u4e3b\u8981\u4f53\u73b0\u5728\u541e\u5410\u91cf\u4e0a\uff0c\u867d\u7136\u53ef\u4ee5\u901a\u8fc7\u7b56\u7565\u5b9e\u73b0\u6570\u636e\u4e0d\u4e22\u5931\uff0c\u4f46\u4ece\u4e25\u8c28\u6027\u89d2\u5ea6\u6765\u8bb2\uff0c\u5927\u4e0d\u5982rabbitmq\uff1b\u800c\u4e14\u7531\u4e8ekafka\u4fdd\u8bc1\u6bcf\u6761\u6d88\u606f\u6700\u5c11\u9001\u8fbe\u4e00\u6b21\uff0c\u6709\u8f83\u5c0f\u7684\u6982\u7387\u4f1a\u51fa\u73b0\u6570\u636e\u91cd\u590d\u53d1\u9001\u7684\u60c5\u51b5\uff1b RabbitMQ\uff1a\u652f\u6301\u6d88\u606f\u7684\u53ef\u9760\u7684\u4f20\u9012\uff0c\u652f\u6301\u4e8b\u52a1\uff0c\u4e0d\u652f\u6301\u6279\u91cf\u64cd\u4f5c\uff0c\u57fa\u4e8e\u5b58\u50a8\u7684\u53ef\u9760\u6027\u7684\u8981\u6c42\u5b58\u50a8\u53ef\u4ee5\u91c7\u7528\u5185\u5b58\u6216\u786c\u76d8\uff0c\u541e\u5410\u91cf\u5c0f\u3002 kafka\uff1a\u5185\u90e8\u91c7\u7528\u6d88\u606f\u7684\u6279\u91cf\u5904\u7406\uff0c\u6570\u636e\u7684\u5b58\u50a8\u548c\u83b7\u53d6\u662f\u672c\u5730\u78c1\u76d8\u987a\u5e8f\u6279\u91cf\u64cd\u4f5c\uff0c\u6d88\u606f\u5904\u7406\u7684\u6548\u7387\u9ad8\uff0c\u541e\u5410\u91cf\u9ad8\u3002 RabbitMQ\uff1a\u672c\u8eab\u4e0d\u652f\u6301\u8d1f\u8f7d\u5747\u8861\uff0c\u9700\u8981loadbalancer\u7684\u652f\u6301 kafka\uff1a\u91c7\u7528zookeeper\u5bf9\u96c6\u7fa4\u4e2d\u7684broker\uff0cconsumer\u8fdb\u884c\u7ba1\u7406\uff0c\u53ef\u4ee5\u6ce8\u518ctopic\u5230zookeeper\u4e0a\uff0c\u901a\u8fc7zookeeper\u7684\u534f\u8c03\u673a\u5236\uff0cproducer\u4fdd\u5b58\u5bf9\u5e94\u7684topic\u7684broker\u4fe1\u606f\uff0c\u53ef\u4ee5\u968f\u673a\u6216\u8005\u8f6e\u8be2\u53d1\u9001\u5230broker\u4e0a\uff0cproducer\u53ef\u4ee5\u57fa\u4e8e\u8bed\u4e49\u6307\u5b9a\u5206\u7247\uff0c\u6d88\u606f\u53d1\u9001\u5230broker\u7684\u67d0\u4e2a\u5206\u7247\u4e0a\u3002","title":"MessageQueue"},{"location":"third_party/mq/#kafka","text":"Topic 1\u4e2atopic \uff0c\u591a\u4e2apartition, \u800c\u4e14\u591a\u4e2apartition\u53ef\u4ee5\u5206\u5e03\u5728\u4e0d\u540c\u7684broker\u4e0a \u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u5b89\u5168\u6027\uff0cPartion \u6709\u591a\u526f\u672c\u673a\u5236\uff0c\u4e00\u4e2aLeader, \u591a\u4e2afollower, Procucer\u548cConsumer\u53ea\u548c leader \u901a\u4fe1 \u53ea\u4fdd\u8bc1Partition\u4e2d\u6d88\u606f\u6709\u5e8f\u6027\uff0c\u6240\u4ee5\u8981\u4fdd\u8bc1\u6d88\u606f\u6709\u5e8f\u6027\uff0c\u8981\u4e48\u6bcf\u4e2atopic\u53ea\u6709\u4e00\u4e2apartition(\u663e\u7136\u4e0d\u7b26\u5408\u4f7f\u7528kafka\u521d\u8877)\uff0c\u8981\u4e48\u5728\u53d1\u9001\u65f6\uff0c\u6307\u5b9akey/partiontion\uff08\u5408\u9002\u7684\u65b9\u6848) topic \u4e2d\u7684\u591a\u4e2apartion\u4ee5\u76ee\u5f55\u5f62\u5f0f\u4fdd\u5b58\u5728broker","title":"Kafka"},{"location":"third_party/mq/#rabbitmq","text":"","title":"RabbitMq"},{"location":"third_party/mq/#nats","text":"","title":"Nats"},{"location":"third_party/mq/#_1","text":"\u5728\u5b9e\u9645\u751f\u4ea7\u5e94\u7528\u4e2d\uff0c\u901a\u5e38\u4f1a\u4f7f\u7528kafka\u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u7684\u6570\u636e\u7ba1\u9053\uff0crabbitmq\u4f5c\u4e3a\u4ea4\u6613\u6570\u636e\u4f5c\u4e3a\u6570\u636e\u4f20\u8f93\u7ba1\u9053\uff0c\u4e3b\u8981\u7684\u53d6\u820d\u56e0\u7d20\u5219\u662f\u662f\u5426\u5b58\u5728\u4e22\u6570\u636e\u7684\u53ef\u80fd\uff1brabbitmq\u5728\u91d1\u878d\u573a\u666f\u4e2d\u7ecf\u5e38\u4f7f\u7528\uff0c\u5177\u6709\u8f83\u9ad8\u7684\u4e25\u8c28\u6027\uff0c\u6570\u636e\u4e22\u5931\u7684\u53ef\u80fd\u6027\u66f4\u5c0f\uff0c\u540c\u4e8b\u5177\u5907\u66f4\u9ad8\u7684\u5b9e\u65f6\u6027\uff1b\u800ckafka\u4f18\u52bf\u4e3b\u8981\u4f53\u73b0\u5728\u541e\u5410\u91cf\u4e0a\uff0c\u867d\u7136\u53ef\u4ee5\u901a\u8fc7\u7b56\u7565\u5b9e\u73b0\u6570\u636e\u4e0d\u4e22\u5931\uff0c\u4f46\u4ece\u4e25\u8c28\u6027\u89d2\u5ea6\u6765\u8bb2\uff0c\u5927\u4e0d\u5982rabbitmq\uff1b\u800c\u4e14\u7531\u4e8ekafka\u4fdd\u8bc1\u6bcf\u6761\u6d88\u606f\u6700\u5c11\u9001\u8fbe\u4e00\u6b21\uff0c\u6709\u8f83\u5c0f\u7684\u6982\u7387\u4f1a\u51fa\u73b0\u6570\u636e\u91cd\u590d\u53d1\u9001\u7684\u60c5\u51b5\uff1b RabbitMQ\uff1a\u652f\u6301\u6d88\u606f\u7684\u53ef\u9760\u7684\u4f20\u9012\uff0c\u652f\u6301\u4e8b\u52a1\uff0c\u4e0d\u652f\u6301\u6279\u91cf\u64cd\u4f5c\uff0c\u57fa\u4e8e\u5b58\u50a8\u7684\u53ef\u9760\u6027\u7684\u8981\u6c42\u5b58\u50a8\u53ef\u4ee5\u91c7\u7528\u5185\u5b58\u6216\u786c\u76d8\uff0c\u541e\u5410\u91cf\u5c0f\u3002 kafka\uff1a\u5185\u90e8\u91c7\u7528\u6d88\u606f\u7684\u6279\u91cf\u5904\u7406\uff0c\u6570\u636e\u7684\u5b58\u50a8\u548c\u83b7\u53d6\u662f\u672c\u5730\u78c1\u76d8\u987a\u5e8f\u6279\u91cf\u64cd\u4f5c\uff0c\u6d88\u606f\u5904\u7406\u7684\u6548\u7387\u9ad8\uff0c\u541e\u5410\u91cf\u9ad8\u3002 RabbitMQ\uff1a\u672c\u8eab\u4e0d\u652f\u6301\u8d1f\u8f7d\u5747\u8861\uff0c\u9700\u8981loadbalancer\u7684\u652f\u6301 kafka\uff1a\u91c7\u7528zookeeper\u5bf9\u96c6\u7fa4\u4e2d\u7684broker\uff0cconsumer\u8fdb\u884c\u7ba1\u7406\uff0c\u53ef\u4ee5\u6ce8\u518ctopic\u5230zookeeper\u4e0a\uff0c\u901a\u8fc7zookeeper\u7684\u534f\u8c03\u673a\u5236\uff0cproducer\u4fdd\u5b58\u5bf9\u5e94\u7684topic\u7684broker\u4fe1\u606f\uff0c\u53ef\u4ee5\u968f\u673a\u6216\u8005\u8f6e\u8be2\u53d1\u9001\u5230broker\u4e0a\uff0cproducer\u53ef\u4ee5\u57fa\u4e8e\u8bed\u4e49\u6307\u5b9a\u5206\u7247\uff0c\u6d88\u606f\u53d1\u9001\u5230broker\u7684\u67d0\u4e2a\u5206\u7247\u4e0a\u3002","title":"\u5bf9\u6bd4"},{"location":"third_party/tools/","text":"\u6027\u80fd\u5de5\u5177 cpp gperftools \u57fa\u4e8e\u91c7\u6837\u5de5\u5177\u7684\uff0c\u9700\u8981\u94fe\u63a5\u5230\u5de5\u7a0b\u91cc\uff0c \u6216\u8005\u5728\u6e90\u4ee3\u7801\u91cc\u63d2\u5165\u5f00\u59cb\u7ed3\u675f\u8ddf\u8e2a\u4ee3\u7801 perf \u7cfb\u7edf\u7ea7\u5de5\u5177\uff0c\u4f1a\u751f\u6210\u706b\u7130\u56fe\uff0c \u6bd4\u8f83\u5e95\u5c42 perf top -p [pid]","title":"Tools"},{"location":"third_party/tools/#_1","text":"","title":"\u6027\u80fd\u5de5\u5177"},{"location":"third_party/tools/#cpp","text":"","title":"cpp"},{"location":"third_party/tools/#gperftools","text":"\u57fa\u4e8e\u91c7\u6837\u5de5\u5177\u7684\uff0c\u9700\u8981\u94fe\u63a5\u5230\u5de5\u7a0b\u91cc\uff0c \u6216\u8005\u5728\u6e90\u4ee3\u7801\u91cc\u63d2\u5165\u5f00\u59cb\u7ed3\u675f\u8ddf\u8e2a\u4ee3\u7801","title":"gperftools"},{"location":"third_party/tools/#perf","text":"\u7cfb\u7edf\u7ea7\u5de5\u5177\uff0c\u4f1a\u751f\u6210\u706b\u7130\u56fe\uff0c \u6bd4\u8f83\u5e95\u5c42 perf top -p [pid]","title":"perf"}]}